<?xml version="1.0" encoding="utf-8"?>
<bpr:release xmlns:bpr="http://www.blueprism.co.uk/product/release">
    <bpr:name>All BluePrism Process and Objects - Release 1</bpr:name>
    <bpr:release-notes />
    <bpr:created>2025-06-21 18:06:27Z</bpr:created>
    <bpr:package-id>8</bpr:package-id>
    <bpr:package-name>All BluePrism Process and Objects</bpr:package-name>
    <bpr:user-created-by>admin</bpr:user-created-by>
    <bpr:contents count="35">
        <process id="a6c9106c-1964-4745-96c1-cb745ce0799b" name="experiments" xmlns="http://www.blueprism.co.uk/product/process"><process name="experiments" version="1.0" bpversion="7.4.1.15931" narrative="Experimenting with the skills" byrefcollection="true" processrunningmessage="" disableversioning="false"><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><stage stageid="c6902be9-9cda-4e39-a64b-409467e90299" name="Start" type="Start"><display x="15" y="-105" /><onsuccess>74b452ca-79b8-43f0-96b2-af44356673f9</onsuccess></stage><stage stageid="74b452ca-79b8-43f0-96b2-af44356673f9" name="End" type="End"><display x="15" y="90" /></stage><stage stageid="2ea04f2a-4930-44b6-985a-9ba47ff7da6c" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /></stage></process></process>
        <process id="6a8584b2-d33f-4fae-b772-ebe266911c92" name="python_scope_executions" xmlns="http://www.blueprism.co.uk/product/process"><process name="python_scope_executions" version="1.0" bpversion="7.4.1.15931" narrative="To Test running python script from blueprism" byrefcollection="true" processrunningmessage="" disableversioning="false"><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><stage stageid="e76a9035-5165-44df-b3fe-6b3da44bf043" name="Start" type="Start"><display x="15" y="-120" /><onsuccess>b494cce0-abe3-4a20-afcf-dcb289998137</onsuccess></stage><stage stageid="b494cce0-abe3-4a20-afcf-dcb289998137" name="End" type="End"><display x="15" y="90" /></stage><stage stageid="e4e86ddb-f710-44b6-a8bf-e7786761937c" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /></stage></process></process>
        <process id="dbb95f2d-6dad-4718-bf92-d1a24348ba72" name="understanding_processes" xmlns="http://www.blueprism.co.uk/product/process"><process name="understanding_processes" version="1.0" bpversion="7.4.1.15931" narrative="Understanding and practicing processess" byrefcollection="true" processrunningmessage="" disableversioning="false"><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><stage stageid="b7b47568-1ab0-4fe3-9683-8768e4874f4a" name="Start" type="Start"><display x="15" y="-105" /><onsuccess>ab304d4b-d8ab-4b0e-993f-82cf5a840710</onsuccess></stage><stage stageid="ab304d4b-d8ab-4b0e-993f-82cf5a840710" name="End" type="End"><display x="15" y="90" /></stage><stage stageid="763c6ab3-f921-4ea2-a97e-e74f8de095c3" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /></stage></process></process>
        <object id="9fc19dda-3610-454f-8713-a55af212d309" name="Data - OLEDB" xmlns="http://www.blueprism.co.uk/product/process"><process name="Data - OLEDB" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="A SQL interface for interacting with OLEDB data sources" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>ed09581b-7493-46ed-8dfa-8f00d46356b0</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>37</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="cfb6da91-518b-40a3-8e0e-115ff0252ea7" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>-161</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="90429413-7792-4513-8bc0-d6d079aa08b9" type="Normal" published="True"><name>Set Connection</name><view><camerax>20</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="459569f2-c792-4948-8884-5c2a0917cc16" type="Normal" published="True"><name>Open</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5" type="Normal" published="True"><name>Close</name><view><camerax>86</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="780529b8-393d-4d1d-bc5f-34f383fe53ec" type="Normal" published="True"><name>Get Collection</name><view><camerax>-42</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9ad00c3c-8615-4f62-9595-9081a2523133" type="Normal" published="True"><name>Execute</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="f3bf5e12-d2cf-4c5d-bda5-0deae3c26316" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d16cc64f-d5d1-4aaf-bea5-f814e1f2657b</onsuccess></stage><stage stageid="d16cc64f-d5d1-4aaf-bea5-f814e1f2657b" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0efcc61e-6916-4463-ae94-c24edb2adc75" name="Stage1" type="ProcessInfo"><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.XML.dll</reference></references><imports><import>System</import><import>System.Data</import><import>System.Data.OLEDB</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[

]]></globalcode><code><![CDATA[Private moConnection As OLEDBConnection]]></code></stage><stage stageid="fd95e8ae-614b-4bae-a0f9-cbd04cef37ce" name="Clean Up" type="SubSheetInfo"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e91da0c2-e60f-4eae-a108-bd99aaff046f" name="Start" type="Start"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>88b89098-8bb2-42fc-8e43-bad5b1e4f400</onsuccess></stage><stage stageid="91836284-14a0-4c0f-b9d5-8cd74b4d1632" name="End" type="End"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf7a7a0d-0c2b-4a9e-8a52-19bdf46ef4cc" name="Set Connection" type="SubSheetInfo"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><narrative>Sets the connection details for the database.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5395eb12-61a3-4005-88a3-ceda307cf9b1" name="Start" type="Start"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Database" narrative="Optional. The path to the oledb database file" stage="Database" /><input type="password" name="Password" narrative="Optional. The password if required to open the oledb database." stage="Password" /><input type="text" name="Provider" narrative="Optional. Allows the database provider to be overridden." stage="Provider" /><input type="text" name="Connection String" narrative="Optional. Allows the full connection string to be provided. If supplying this parameter no other parameters are required." stage="Connection String" /></inputs><onsuccess>935af892-73c5-4d1a-871f-536b70e44a8f</onsuccess></stage><stage stageid="823a5018-5ad8-483c-a6c1-8c527bf7bc00" name="End" type="End"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="78309214-2fb3-4bd9-8433-ca0f0fc31bd4" name="new" type="Note"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically by Automate immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7bb7dcd7-acf2-4a7a-a96d-756830b2e54f" name="new" type="Note"><loginhibit /><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically by Automate immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b9720411-39cf-4e79-8fe9-af8e7581970a" name="Database" type="Data"><loginhibit /><display x="180" y="-60" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="d1d97b89-18c2-40ab-8f43-0cd0ce45f5b7" name="User" type="Data"><loginhibit /><display x="180" y="-15" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="1c8bc019-fa8a-4593-b435-81216f908452" name="Password" type="Data"><loginhibit /><display x="180" y="30" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc></stage><stage stageid="c9568fbf-1fca-4ce7-aa27-2309731df7f5" name="Connection String" type="Data"><loginhibit /><display x="180" y="75" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="db11541e-1f1d-48f5-a64e-e1d44d23ecf6" name="Set connection" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="-30" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>823a5018-5ad8-483c-a6c1-8c527bf7bc00</onsuccess><calculation expression="&quot;Provider=&quot; &amp; [Provider] &amp; &quot;; Data Source=&quot; &amp; [Database] &amp; &quot;; Jet OLEDB:Database Password=&quot; &amp; [Password] &amp;&quot;;&quot;" stage="Connection String" /></stage><stage stageid="8ed153e9-383f-4acf-9e86-3d058f27a895" name="Open" type="SubSheetInfo"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><narrative>Opens a connection to the OLEDB database.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3c501978-f53e-419d-ab66-c3cbef5cf598" name="Start" type="Start"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c57babb2-f4b2-42dd-95c7-a8155b854975</onsuccess></stage><stage stageid="7295054b-4d97-4891-ab69-23416df80d09" name="End" type="End"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c57babb2-f4b2-42dd-95c7-a8155b854975" name="Open" type="Code"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="ConnectionString" expr="[Connection String]" /></inputs><onsuccess>7295054b-4d97-4891-ab69-23416df80d09</onsuccess><code><![CDATA[If moConnection Is Nothing Then
	moConnection = New OLEDBConnection(ConnectionString)
	moConnection.Open()
End If]]></code></stage><stage stageid="22e10c68-07d1-4cc4-9072-7c9b0b0c97cf" name="SQL" type="Data"><loginhibit /><display x="180" y="120" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="4a78a3ea-35e5-4496-bfe0-509900dc5137" name="Close" type="SubSheetInfo"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><narrative>Closes the connection to the OLEDB database.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6bd7feeb-d610-4f7b-9646-df99afade77a" name="Start" type="Start"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5aab680-3f4a-4cb2-9873-7c2aa718133f</onsuccess></stage><stage stageid="b9924b3b-5eea-41f5-9d73-8f4624ba22fe" name="End" type="End"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f5aab680-3f4a-4cb2-9873-7c2aa718133f" name="Close" type="Code"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b9924b3b-5eea-41f5-9d73-8f4624ba22fe</onsuccess><code><![CDATA[moConnection.Close()
moConnection.Dispose()
moConnection = Nothing]]></code></stage><stage stageid="88b89098-8bb2-42fc-8e43-bad5b1e4f400" name="Close" type="SubSheet"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>91836284-14a0-4c0f-b9d5-8cd74b4d1632</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="221cc4f2-f3b6-4a62-985a-350066ad7c79" name="Get Collection" type="SubSheetInfo"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="76ba8075-200c-47f3-a5b0-81d2a545b93b" name="Start" type="Start"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" narrative="An SQL query to fetch the data. In most cases this will be a 'select' query." stage="SQL" /></inputs><onsuccess>98267e1e-20b7-4ce9-a0b8-847c18c1976f</onsuccess></stage><stage stageid="469b68e3-523f-4723-ab11-b47348bbdf33" name="End" type="End"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Results" stage="Results" /></outputs></stage><stage stageid="897f736f-bc15-4938-9d97-b4c1065dd5e1" name="Get Data Table" type="Code"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><outputs><output type="collection" name="Results" stage="Results" /></outputs><onsuccess>469b68e3-523f-4723-ab11-b47348bbdf33</onsuccess><code><![CDATA[Dim oDataAdapter As New OLEDBDataAdapter(SQL,moConnection)

Dim oDataSet As New DataSet		
oDataAdapter.Fill(oDataset)

Results = oDataSet.Tables(0)]]></code></stage><stage stageid="98267e1e-20b7-4ce9-a0b8-847c18c1976f" name="Open" type="SubSheet"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>897f736f-bc15-4938-9d97-b4c1065dd5e1</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="71604ec6-dbf3-40c1-b400-8a5eea8eda3f" name="Results" type="Collection"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-180" y="30" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3f4ca0da-93ad-492e-af65-ff637c54b37a" name="Password Set?" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><narrative>If the password is set use password in connection string.</narrative><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[PasswordText]&lt;&gt;&quot;&quot;" /><ontrue>db11541e-1f1d-48f5-a64e-e1d44d23ecf6</ontrue><onfalse>fbf4d6d4-763b-41f2-926a-ce6745964763</onfalse></stage><stage stageid="fbf4d6d4-763b-41f2-926a-ce6745964763" name="Set connection" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="60" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>823a5018-5ad8-483c-a6c1-8c527bf7bc00</onsuccess><calculation expression="&quot;Provider=&quot; &amp; [Provider] &amp; &quot;; Data Source=&quot; &amp; [Database] &amp; &quot;;&quot;" stage="Connection String" /></stage><stage stageid="b0dbeba0-75c2-479b-9d5d-bde261b4db20" name="Provider" type="Data"><display x="180" y="165" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="16cd8677-ab9b-4269-9a0b-1e4956f4d103" name="Provider Set?" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Provider]&lt;&gt;&quot;&quot;" /><ontrue>35e769d9-71b0-43da-8bda-6e4cbd3d0e55</ontrue><onfalse>8b21c0e2-f0c8-4c89-8636-f648382b8c37</onfalse></stage><stage stageid="8b21c0e2-f0c8-4c89-8636-f648382b8c37" name="Set Provider" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="120" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4eb62611-4eee-4ad8-9ffd-bf789ac796ad</onsuccess><calculation expression="&quot;Microsoft.ACE.OLEDB.12.0&quot;" stage="Provider" /></stage><stage stageid="4eb62611-4eee-4ad8-9ffd-bf789ac796ad" name="anchor1" type="Anchor"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="120" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>35e769d9-71b0-43da-8bda-6e4cbd3d0e55</onsuccess></stage><stage stageid="35e769d9-71b0-43da-8bda-6e4cbd3d0e55" name="Get Password Text" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3f4ca0da-93ad-492e-af65-ff637c54b37a</onsuccess><calculation expression="[Password]" stage="PasswordText" /></stage><stage stageid="8cc8ad2a-2fa6-41ee-abc4-def727b8035c" name="PasswordText" type="Data"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><display x="-60" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="935af892-73c5-4d1a-871f-536b70e44a8f" name="Connection String Provided" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len([Connection String])&gt;0" /><ontrue>59f15fcb-a597-4b07-9bf2-27c46f27b6c6</ontrue><onfalse>16cd8677-ab9b-4269-9a0b-1e4956f4d103</onfalse></stage><stage stageid="59f15fcb-a597-4b07-9bf2-27c46f27b6c6" name="End1" type="End"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="-75" y="-60" /></stage><stage stageid="867d0e4f-77f9-4ce5-98fe-24936bd70fef" name="Execute" type="SubSheetInfo"><subsheetid>9ad00c3c-8615-4f62-9595-9081a2523133</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f3759797-b7e7-4c69-abe5-9eef2b589950" name="Start" type="Start"><subsheetid>9ad00c3c-8615-4f62-9595-9081a2523133</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="SQL" stage="SQL" /></inputs><onsuccess>e5eaf88d-54e6-4dc2-a219-327908c231f1</onsuccess></stage><stage stageid="39a5fcd1-fd83-4b7b-a7c1-988b88708eb6" name="End" type="End"><subsheetid>9ad00c3c-8615-4f62-9595-9081a2523133</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="e5eaf88d-54e6-4dc2-a219-327908c231f1" name="Execute" type="Code"><subsheetid>9ad00c3c-8615-4f62-9595-9081a2523133</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><onsuccess>39a5fcd1-fd83-4b7b-a7c1-988b88708eb6</onsuccess><code><![CDATA[Dim oCommand As New OleDbCommand(SQL,moConnection)
oCommand.ExecuteNonQuery()
]]></code></stage><stage stageid="9936a20d-f775-48eb-abf9-97b9ba2ee812" name="Note1" type="Note"><loginhibit /><narrative>Version 10.1</narrative><display x="15" y="-150" w="90" h="30" /><font family="Segoe UI" size="12" style="Bold" color="FF0000" /></stage><stage stageid="0a27ce91-c610-47d9-94de-0485f578cc0e" name="Note2" type="Note"><loginhibit /><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182
</narrative><display x="435" y="-15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage></process></object>
        <object id="29192c0f-d13c-4769-bed3-9c51217efab4" name="Data - SQL Server" xmlns="http://www.blueprism.co.uk/product/process"><process name="Data - SQL Server" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="SQL Server interaction object." byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>86c30a1c-12a4-44c4-9674-b287d0dfa70d</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>120</camerax><cameray>151</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="cfb6da91-518b-40a3-8e0e-115ff0252ea7" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>-49.5</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3eacbbb6-d03e-4df7-9904-a3b1ac67c882" type="Normal" published="True"><name>Configure</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="88d8d9e5-f97e-40d6-b049-bb643eb06852" type="Normal" published="False"><name>Raise Exception If Appropriate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="90429413-7792-4513-8bc0-d6d079aa08b9" type="Normal" published="True"><name>Set Connection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="459569f2-c792-4948-8884-5c2a0917cc16" type="Normal" published="True"><name>Open</name><view><camerax>-41</camerax><cameray>-57</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="109afac8-f6b2-467f-971c-c6141124b87a" type="Normal" published="True"><name>Close</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3842f7c4-4df2-4e6a-bedd-6dacf01a6db4" type="Normal" published="False"><name>Is Open</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5" type="Normal" published="False"><name>Internal Close</name><view><camerax>-40</camerax><cameray>-48</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3ee937ec-012f-445c-9b2b-ebbcb6d3614d" type="Normal" published="True"><name>Begin Transaction</name><view><camerax>50</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ba712d56-697c-48af-bc96-85e49eb968fc" type="Normal" published="True"><name>Commit Transaction</name><view><camerax>43</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4b6e35c6-8ec4-4fbe-b9d7-d43c48492695" type="Normal" published="True"><name>Rollback Transaction</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c07ae8a2-a04f-46f2-8919-ec4da73d5b25" type="Normal" published="True"><name>Execute</name><view><camerax>-26</camerax><cameray>12</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a45f6098-73e2-4639-a002-31592645bfa5" type="Normal" published="True"><name>Get Records Affected</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="12d7c91f-29ac-4711-9614-7ab992dc4b1f" type="Normal" published="True"><name>Get Number</name><view><camerax>26</camerax><cameray>48</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="18349d7d-79b1-4397-a8a0-490ab27f459f" type="Normal" published="True"><name>Get Text</name><view><camerax>0</camerax><cameray>45</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="780529b8-393d-4d1d-bc5f-34f383fe53ec" type="Normal" published="True"><name>Get Collection</name><view><camerax>-50</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="13b6c91d-68e8-46e9-bcab-9261446dc0af" type="Normal" published="True"><name>Get CSV File</name><view><camerax>-50</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e50a93aa-11fe-4457-a16d-0237560fff18" type="Normal" published="True"><name>Get CSV</name><view><camerax>20</camerax><cameray>-38</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="f3bf5e12-d2cf-4c5d-bda5-0deae3c26316" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d16cc64f-d5d1-4aaf-bea5-f814e1f2657b</onsuccess></stage><stage stageid="d16cc64f-d5d1-4aaf-bea5-f814e1f2657b" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0efcc61e-6916-4463-ae94-c24edb2adc75" name="Stage1" type="ProcessInfo"><loginhibit /><display x="-180" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.XML.dll</reference></references><imports><import>System</import><import>System.Data</import><import>System.Data.SqlClient</import><import>System.IO</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[

]]></globalcode><code><![CDATA[
Private moConnection As SqlConnection
Private moTransaction As SqlTransaction

Private Sub WriteCsv(ByVal sql As String, ByVal out As TextWriter, byval commandtimeout as Integer)

	' The target data set
	Dim ds As New DataSet()

	' Build and execute the command, dumping the data into the above set
    Using cmd As New SqlCommand()
        cmd.Connection = moConnection
        cmd.Transaction = moTransaction
        cmd.CommandText = sql
        cmd.CommandTimeout = commandtimeout
        Using da As New SqlDataAdapter()
            da.SelectCommand = cmd
            da.Fill(ds)
        End Using
	End Using

	' Go through the data, escaping and outputting to the writer
	Dim quotesRequiredChars() As Char = {","c, """"c}
	For Each tab As DataTable In ds.Tables
		' Column headers first
		Dim first As Boolean = True
		For Each col As DataColumn In tab.Columns
			If first Then first = False Else out.Write(",")
			Dim val As String = col.ColumnName
			If val.IndexOfAny(quotesRequiredChars) >= 0 Then _
			 val = """" & val.Replace("""", """""") & """"
			out.Write(val)
		Next
		out.WriteLine()
		' Then a line for each row
		For Each row As DataRow in tab.Rows
			first = True
			For Each col As DataColumn in tab.Columns
				If first Then first = False Else out.Write(",")
				If row.IsNull(col) Then Continue For
				Dim val As String = row(col).ToString()
				If val.IndexOfAny(quotesRequiredChars) >= 0 Then _
				 val = """" & val.Replace("""", """""") & """"
				out.Write(val)
			Next
			out.WriteLine()
		Next
		' Separate each table with a couple of blank lines
		out.WriteLine()
		out.WriteLine()                
	Next
	
	out.Flush()

End Sub

Private Function GetScalar(Of T)(ByVal sql As String, _
 ByRef success As Boolean, ByRef msg As String, byval commandtimeout as Integer) As T

	' Assume Success
	success = True
	msg = ""

	Try
		Using cmd As New SqlCommand()
			cmd.Connection = moConnection
			cmd.CommandText = SQL
			cmd.Transaction = moTransaction
			cmd.CommandTimeout = commandtimeout
			Return CType(cmd.ExecuteScalar(), T)
		End Using
	Catch ex As Exception
		success = False
		msg = ex.Message
		Return Nothing
	End Try

End Function]]></code></stage><stage stageid="fd95e8ae-614b-4bae-a0f9-cbd04cef37ce" name="Clean Up" type="SubSheetInfo"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e91da0c2-e60f-4eae-a108-bd99aaff046f" name="Start" type="Start"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>88b89098-8bb2-42fc-8e43-bad5b1e4f400</onsuccess></stage><stage stageid="91836284-14a0-4c0f-b9d5-8cd74b4d1632" name="End" type="End"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf7a7a0d-0c2b-4a9e-8a52-19bdf46ef4cc" name="Set Connection" type="SubSheetInfo"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><narrative>Use this action to configure the details required to connect to your SQL Server instance.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5395eb12-61a3-4005-88a3-ceda307cf9b1" name="Start" type="Start"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Server" narrative="The name of the server and, if necessary, instance name of the SQL Server instance to connect to" stage="Server" /><input type="text" name="Database" narrative="The name of the database to connect to" stage="Database" /><input type="text" name="User" narrative="If appropriate, the login name to use to connect to SQL Server. If left empty, windows authentication using the current user will be used instead of SQL Server authentication" stage="User" /><input type="password" name="Password" narrative="If appropriate, the password to use with the above login name to access SQL Server. Unused for windows authentication" stage="Password" /><input type="text" name="Connection String" narrative="If needed, you may supply your own custom connection string for configuring the connection to your SQL Server instance. Note: If you supply your own connection string, any values entered for Server, Database, Username, or Password will be ignored." stage="Local Connection String" /><input type="number" name="ConnectionTimeout" narrative="The connection timeout. Default to 15 seconds and 0 is wait forever (not advised)." stage="ConnectionTimeout" /></inputs><onsuccess>66c19ef6-3007-4fa0-af27-b52892a9671c</onsuccess></stage><stage stageid="823a5018-5ad8-483c-a6c1-8c527bf7bc00" name="End" type="End"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="78309214-2fb3-4bd9-8433-ca0f0fc31bd4" name="new" type="Note"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically by Automate immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7bb7dcd7-acf2-4a7a-a96d-756830b2e54f" name="new" type="Note"><loginhibit /><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically by Automate immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d666ce88-be59-4711-8698-025945395207" name="Server" type="Data"><loginhibit /><display x="180" y="-105" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="b9720411-39cf-4e79-8fe9-af8e7581970a" name="Database" type="Data"><loginhibit /><display x="180" y="-60" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="d1d97b89-18c2-40ab-8f43-0cd0ce45f5b7" name="User" type="Data"><loginhibit /><display x="180" y="-15" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="1c8bc019-fa8a-4593-b435-81216f908452" name="Password" type="Data"><loginhibit /><display x="180" y="30" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc></stage><stage stageid="c9568fbf-1fca-4ce7-aa27-2309731df7f5" name="Connection String" type="Data"><loginhibit /><display x="180" y="75" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="db11541e-1f1d-48f5-a64e-e1d44d23ecf6" name="Set connection" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="-30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>823a5018-5ad8-483c-a6c1-8c527bf7bc00</onsuccess><calculation expression="&quot;database=&quot; &amp; [Database] &amp; &quot;;data source=&quot; &amp; [Server] &amp; &quot;; user id=&quot; &amp; [User] &amp; &quot;;password=&quot; &amp; [Password] &amp; &quot;;Connect Timeout=&quot; &amp; [ConnectionTimeout]" stage="Connection String" /></stage><stage stageid="8ed153e9-383f-4acf-9e86-3d058f27a895" name="Open" type="SubSheetInfo"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3c501978-f53e-419d-ab66-c3cbef5cf598" name="Start" type="Start"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c57babb2-f4b2-42dd-95c7-a8155b854975</onsuccess></stage><stage stageid="7295054b-4d97-4891-ab69-23416df80d09" name="End" type="End"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-60" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="c57babb2-f4b2-42dd-95c7-a8155b854975" name="Open" type="Code"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="ConnectionString" expr="[Connection String]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1c7fc106-01f3-4a2a-aa7e-44c44875fb04</onsuccess><code><![CDATA[Success = True
Message = ""

If moConnection IsNot Nothing Then Return
Try
	moConnection = New SqlConnection(ConnectionString)
	moConnection.Open()

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try
]]></code></stage><stage stageid="24f2742e-2541-4680-a355-1783c4e2f2f2" name="Execute" type="SubSheetInfo"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><narrative>The command timeout value has a default to 30 seconds so it is set to that value.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="05448135-b8ce-4a88-9d5c-eb85fea9d352" name="Start" type="Start"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" narrative="The SQL query to use to perform this action" stage="SQL" /><input type="number" name="CommandTimeout" narrative="The timeout value for the command." stage="CommandTimeout" /></inputs><onsuccess>3753873b-7231-4b1f-947e-e6b87deac3d8</onsuccess></stage><stage stageid="3810933f-d93a-482c-a0d8-20796ecd3049" name="Execute" type="Code"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /><input type="number" name="CommandTimeout" expr="[CommandTimeout]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Records Affected" stage="Records Affected" /></outputs><onsuccess>2631d241-e7fb-4a03-87f8-846c6443206f</onsuccess><code><![CDATA[
Success = True
Message = ""

Try
	Using cmd As New SqlCommand()
		cmd.Connection = moConnection
		cmd.CommandText = SQL
		cmd.Transaction = moTransaction
		cmd.CommandTimeout = CommandTimeout
		Records_Affected = cmd.ExecuteNonQuery()
	End Using

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try
]]></code></stage><stage stageid="3753873b-7231-4b1f-947e-e6b87deac3d8" name="Open" type="SubSheet"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1ac9d798-c898-4a5a-8b07-f435dc0500d4</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="1ac9d798-c898-4a5a-8b07-f435dc0500d4" name="Success?" type="Decision"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="75" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>3810933f-d93a-482c-a0d8-20796ecd3049</ontrue><onfalse>dbe6faa5-9cd8-4ead-a98d-1880a84975af</onfalse></stage><stage stageid="4a78a3ea-35e5-4496-bfe0-509900dc5137" name="Internal Close" type="SubSheetInfo"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-195" y="-180" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f5aab680-3f4a-4cb2-9873-7c2aa718133f" name="Close" type="Code"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="clearPool" expr="[Clear Pool]" /><input type="text" name="connString" expr="[Connection String]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>274a1082-2d15-4bf8-84f2-043aae4e60e7</onsuccess><code><![CDATA[
Success = True
Message = ""

Try
	' If we're clearing the pool, we need a
	' connection so that we can specify the pool
	' we want to clear, so, somewhat obscenely,
	' we must create a connection if one does not
	' currently exist. Then close it immediately
	If clearPool Then
		If moConnection Is Nothing Then _
		 moConnection = New SqlConnection(connString)
		SqlConnection.ClearPool(moConnection)
	End If
	If moConnection IsNot Nothing Then
		moConnection.Close()
		moConnection.Dispose()
		moConnection = Nothing
	End If

Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="b0d71d51-0e09-4333-a7e8-e16c11d5cc2c" name="Internal Close" type="SubSheet"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="75" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>28719a2d-9d55-4414-8a91-4f3c8ce10cba</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="2f46d078-5aeb-4c4a-a493-e807b2c7a995" name="Get Number" type="SubSheetInfo"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f2d1ef6c-115c-4900-9a62-d8bac04b0b09" name="Start" type="Start"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" narrative="The SQL query to use to perform this action" stage="SQL" /><input type="number" name="CommandTimrout" narrative="The command timeout has a default value of 30 seconds." stage="CommandTimeout" /></inputs><onsuccess>05b0b107-7095-4e9d-bc37-924f6b11869d</onsuccess></stage><stage stageid="3098273a-9d5f-43bd-8f67-dd5fa306c621" name="End" type="End"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Result" narrative="The numeric result from the SQL query provided - if multiple results were generated, this will be the first result from the first result set" stage="Number Result" /><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="17da1b91-9f66-4fe1-b2e3-ff423f3f827a" name="Execute Return Number" type="Code"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /><input type="number" name="CommandTimeout" expr="[CommandTimeout]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Result" stage="Number Result" /></outputs><onsuccess>12f14b00-5eb3-4995-afa2-e3eeeadcb5c0</onsuccess><code><![CDATA[
Result = GetScalar(Of Decimal)( _
 SQL, Success, Message, CommandTimeout)
]]></code></stage><stage stageid="05b0b107-7095-4e9d-bc37-924f6b11869d" name="Open" type="SubSheet"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>4f04e547-353a-4b31-9d76-06f4a406e438</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="4f04e547-353a-4b31-9d76-06f4a406e438" name="Success?" type="Decision"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="90" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>17da1b91-9f66-4fe1-b2e3-ff423f3f827a</ontrue><onfalse>0da291c6-e906-4852-b112-79384aafeb77</onfalse></stage><stage stageid="06bce91a-1f23-4c23-acdf-19564c453382" name="Number Result" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /></stage><stage stageid="1e9d4de5-9638-4bec-a23c-dda3f743abd2" name="Get Records Affected" type="SubSheetInfo"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1bc1e722-9f5a-4ca8-becb-07c73ba5427b" name="Start" type="Start"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" narrative="The SQL query to use to perform this action" stage="SQL" /><input type="number" name="CommandTimeout" narrative="The timeout value for the command. Defaults to 30 seconds." stage="CommandTimeout" /></inputs><onsuccess>ec1e523c-2d7f-49ab-bdbf-97c9629d4f0b</onsuccess></stage><stage stageid="5c3b4cc9-288d-4fae-b9d3-dca1f01d452c" name="End" type="End"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="0" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Records Affected" narrative="The number of records which matched the constraints specified in the SQL provided" stage="Records Affected" /><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="98ced6bf-c219-4b6f-8788-428ae730dffa" name="Records Affected" type="Data"><loginhibit /><display x="180" y="165" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue></stage><stage stageid="ec1e523c-2d7f-49ab-bdbf-97c9629d4f0b" name="Execute" type="SubSheet"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="0" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" narrative="The SQL query to use to perform this action" expr="[SQL]" /><input type="number" name="CommandTimeout" friendlyname="CommandTimeout" narrative="The timeout value for the command." expr="[CommandTimeout]" /></inputs><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs><onsuccess>5c3b4cc9-288d-4fae-b9d3-dca1f01d452c</onsuccess><processid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</processid></stage><stage stageid="b302f1fb-5a49-4ea5-a4f3-1dadc0ab9051" name="Get Text" type="SubSheetInfo"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1841a582-8544-4daa-ace7-1e0e40837056" name="Start" type="Start"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" narrative="The SQL query to use to perform this action" stage="SQL" /><input type="number" name="CommandTimeout" narrative="The command timeout has a default of 30 seconds." stage="CommandTimeout" /></inputs><onsuccess>eb060128-54bc-417e-9d48-71beda3e0d4d</onsuccess></stage><stage stageid="281eca77-1f39-4ace-8815-a8145727a1e3" name="End" type="End"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="The text result from the SQL query provided - if multiple results were generated, this will be the first result from the first result set" stage="Text Result" /><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="9f94c434-d4c4-43a6-9393-df126ab0c0ca" name="Execute Return Text" type="Code"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /><input type="number" name="CommandTimeout" expr="[CommandTimeout]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="text" name="Result" stage="Text Result" /></outputs><onsuccess>d689a9ea-0ae1-4208-b0ca-ece39ddd838f</onsuccess><code><![CDATA[
Result = GetScalar(Of String)( _
 SQL, Success, Message, CommandTimeout)
]]></code></stage><stage stageid="eb060128-54bc-417e-9d48-71beda3e0d4d" name="Open" type="SubSheet"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9c17dfa7-6435-4b40-a7db-533bfe76902f</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="9c17dfa7-6435-4b40-a7db-533bfe76902f" name="Success?" type="Decision"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="75" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>9f94c434-d4c4-43a6-9393-df126ab0c0ca</ontrue><onfalse>8e6271bb-9473-4b6c-b90d-6832537a8075</onfalse></stage><stage stageid="8fa93518-b432-4252-bf80-0a9c96171faa" name="Text Result" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="210" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /></stage><stage stageid="88b89098-8bb2-42fc-8e43-bad5b1e4f400" name="Internal Close" type="SubSheet"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="-15" w="60" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="True" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>91836284-14a0-4c0f-b9d5-8cd74b4d1632</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="8eebcae5-eab4-4d0d-98ac-60bb9a4f645c" name="Begin Transaction" type="SubSheetInfo"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="110c04fd-0f65-422a-ad21-bdb7db8a4a96" name="Start" type="Start"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="A transaction will be started on the currently open connection" /></postconditions><display x="15" y="-180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6a763136-0514-4c6d-9dff-0a0c4a1d10e7</onsuccess></stage><stage stageid="eac4efa0-7168-4dee-a333-0923f422d458" name="Begin Transaction" type="Code"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>a0610c45-e0f3-48ce-86be-2d9fe00d5faf</onsuccess><code><![CDATA[' Assume Success
Success = True
Message = ""

Try
	moTransaction = moConnection.BeginTransaction()
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="faff14a4-e148-47ec-8e4d-fc4e4bc1519d" name="Commit Transaction" type="SubSheetInfo"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="-285" y="-120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="dcca40c4-f5b7-4875-b4b4-1c8c50a4be99" name="Start" type="Start"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>175695ba-0b55-4490-b99a-7c5fa1e95899</onsuccess></stage><stage stageid="01c9256c-c4e8-47d0-8bce-cbb4f916399d" name="Commit Transaction" type="Code"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>f26aaae6-36b1-4739-9465-1e208144a8bf</onsuccess><code><![CDATA[
' Assume success
Success = True
Message = ""

Try
	moTransaction.Commit()
	moTransaction = Nothing
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="e2cc64c2-12bd-4614-bca3-0650718ccfee" name="Rollback Transaction" type="SubSheetInfo"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="-225" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="245c9f37-0f51-4fd3-aaa9-480630d4ac3f" name="Start" type="Start"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>093c958e-ad24-4cb8-bfd6-e9f7dba49311</onsuccess></stage><stage stageid="921f479a-2714-4314-b394-c5c941b281e8" name="Rollback Transaction" type="Code"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7c11fab5-28c4-48fd-b752-cbeac0598534</onsuccess><code><![CDATA[
Success = True
Message = ""

Try
	moTransaction.Rollback()
	moTransaction = Nothing
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="2631d241-e7fb-4a03-87f8-846c6443206f" name="In Transaction?" type="Decision"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>ac70463c-d9f4-44cc-8427-004224405a91</ontrue><onfalse>b0d71d51-0e09-4333-a7e8-e16c11d5cc2c</onfalse></stage><stage stageid="f3d61e3c-3094-4c38-9370-3d142d7448c1" name="In Transaction" type="Data"><loginhibit /><display x="180" y="210" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue></stage><stage stageid="0441a51b-0a7c-49e6-8305-4a877c32cc8a" name="In Transaction" type="Calculation"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>5705d9af-28ea-4c05-832b-4f40d34a3511</onsuccess><calculation expression="True" stage="In Transaction" /></stage><stage stageid="f26aaae6-36b1-4739-9465-1e208144a8bf" name="Not In Transaction" type="Calculation"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6cc92a8f-1561-462a-8eaf-bbd32e32a936</onsuccess><calculation expression="False" stage="In Transaction" /></stage><stage stageid="7c11fab5-28c4-48fd-b752-cbeac0598534" name="Not In Transaction" type="Calculation"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>876d7128-a56d-4c53-8fde-3713a1c173f5</onsuccess><calculation expression="False" stage="In Transaction" /></stage><stage stageid="28719a2d-9d55-4414-8a91-4f3c8ce10cba" name="anchor1" type="Anchor"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="135" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>63e4c694-de67-4b39-a04c-5af3186af635</onsuccess></stage><stage stageid="269b8cc6-856b-426a-ba48-b362a98fc752" name="Internal Close" type="SubSheet"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="90" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>047bee83-bd7d-43b1-aeb3-6f4183c42c63</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="12f14b00-5eb3-4995-afa2-e3eeeadcb5c0" name="In Transaction?" type="Decision"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>8173e4d5-0932-4184-b3e8-01a761341966</ontrue><onfalse>269b8cc6-856b-426a-ba48-b362a98fc752</onfalse></stage><stage stageid="ffd23eb7-b1b9-4f82-ad2f-05d4db50bcd2" name="Internal Close" type="SubSheet"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="75" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>61bf908d-c640-41f1-921e-fbac0bc44b57</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="d689a9ea-0ae1-4208-b0ca-ece39ddd838f" name="In Transaction?" type="Decision"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>8ecc58ce-889b-4d69-8dbd-43f4c4cb11aa</ontrue><onfalse>ffd23eb7-b1b9-4f82-ad2f-05d4db50bcd2</onfalse></stage><stage stageid="221cc4f2-f3b6-4a62-985a-350066ad7c79" name="Get Collection" type="SubSheetInfo"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="76ba8075-200c-47f3-a5b0-81d2a545b93b" name="Start" type="Start"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tempus Sans ITC" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" narrative="The SQL query to use to perform this action" stage="SQL" /><input type="number" name="CommandTimeout" narrative="The command timeout has a default of 30 seconds." stage="CommandTimeout" /></inputs><onsuccess>98267e1e-20b7-4ce9-a0b8-847c18c1976f</onsuccess></stage><stage stageid="469b68e3-523f-4723-ab11-b47348bbdf33" name="End" type="End"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /><output type="collection" name="Results" narrative="The collection of results from the query" stage="Results" /></outputs></stage><stage stageid="897f736f-bc15-4938-9d97-b4c1065dd5e1" name="Get Data Table" type="Code"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /><input type="number" name="CommandTimeout" expr="[CommandTimeout]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Results" stage="Results" /></outputs><onsuccess>d5771181-59a5-4bfd-b8f1-01bd7b7dbb3d</onsuccess><code><![CDATA[
' Assume success
Success = True
Message = ""

Try
	Using cmd As New SqlCommand()
		cmd.Connection = moConnection
		cmd.Transaction = moTransaction
		cmd.CommandText = SQL
		cmd.CommandTimeout = CommandTimeout
		Using adapter As New SqlDataAdapter()
			adapter.SelectCommand = cmd
			Dim ds As New DataSet()
			adapter.Fill(ds)
			Results = ds.Tables(0)
		End Using
	End Using

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try]]></code></stage><stage stageid="98267e1e-20b7-4ce9-a0b8-847c18c1976f" name="Open" type="SubSheet"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1c0c847f-0d0a-4f0d-9c66-25a64b4c477f</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="1c0c847f-0d0a-4f0d-9c66-25a64b4c477f" name="Success?" type="Decision"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>897f736f-bc15-4938-9d97-b4c1065dd5e1</ontrue><onfalse>6247786f-c914-40c2-9acb-156178f5b62d</onfalse></stage><stage stageid="71604ec6-dbf3-40c1-b400-8a5eea8eda3f" name="Results" type="Collection"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6247786f-c914-40c2-9acb-156178f5b62d" name="anchor2" type="Anchor"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="30" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d5771181-59a5-4bfd-b8f1-01bd7b7dbb3d</onsuccess></stage><stage stageid="99f0a166-b905-44ab-ba9d-1fa79b71f6f6" name="Success" type="Data"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e981674b-56d4-4624-8c36-d156009e2a52" name="Message" type="Data"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f81f3fe8-65f8-4b08-928d-1e9b3a2d8db1" name="Success" type="Data"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-195" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="728d45f7-0717-4872-ab22-b9ae8a142957" name="Message" type="Data"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="67c3cea7-7915-4e88-9e86-a1355e251b7d" name="Success" type="Data"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="71de5830-7d23-4ba9-8354-30f54dacdff4" name="Message" type="Data"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="-195" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d5b51384-618c-4c4a-8510-baa7b99b6e20" name="Success" type="Data"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="-285" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="29a89d90-a1e6-4a7d-8586-d40cb4c63a97" name="Message" type="Data"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="-285" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="235b42fd-91d3-4351-bef7-4e7407a29ffe" name="Success" type="Data"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="-225" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="92878142-4175-4d93-90d4-7ea4dd84f1da" name="Message" type="Data"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="-225" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b50d625f-a5cd-464b-bc26-3a94288c485e" name="Success" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-195" y="75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8eeb44dd-6e76-4f9d-9988-c3638cc5916c" name="Message" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-195" y="135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1938177-269a-461e-b3fa-7cb2714659a8" name="Success" type="Data"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="-195" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="079adbce-1d95-4720-b83f-0567741a0749" name="Message" type="Data"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="-195" y="150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8ac84956-cd26-456e-a622-6b3426601f4a" name="Success" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c40edd8e-a34c-49ad-ad39-9025a0f9b946" name="Message" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34a8e2f0-1a6b-4bdc-b2d2-46fed237de50" name="Success" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f2ebc91f-7722-42d3-907c-6bf37b0cd1e7" name="Message" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="150" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20e595a2-0799-4731-b244-c3cf6be8d791" name="Success" type="Data"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="180" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="97efd2f3-8f58-454f-b7ef-db9e6bef8aea" name="Message" type="Data"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="240" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="95a4ec5c-e0ae-43f8-958e-c44907def3f0" name="Get CSV File" type="SubSheetInfo"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="518048a9-d28c-48bd-889f-30dab7f502e0" name="Start" type="Start"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" narrative="The SQL query to use to perform this action" stage="SQL" /><input type="text" name="File" narrative="The full path of the file to which the CSV result should be written" stage="File" /><input type="number" name="CommandTimeout" narrative="The command tmeout has a default value of 30 seconds." stage="CommandTimeout" /></inputs><onsuccess>8d11deee-1ae6-42be-8726-53fb6cc7e117</onsuccess></stage><stage stageid="f82dbcac-aaf6-4e85-ada7-e7f28d96bb97" name="End" type="End"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="9af3a6f4-53d9-4e14-9e1e-9c161160fec6" name="Get File" type="Code"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /><input type="text" name="File" expr="[File]" /><input type="number" name="CommandTimeout" expr="[CommandTimeout]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7dc1a88f-716e-4f2b-80dd-dd6306d6db07</onsuccess><code><![CDATA[
' Assume success
Success = True
Message = ""

Try
	' Write it out using the method in Global Code
	Using sw As New StreamWriter(File, False)
		WriteCsv(SQL, sw, CommandTimeout)
	End Using
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="8d11deee-1ae6-42be-8726-53fb6cc7e117" name="Open" type="SubSheet"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>be5bca8d-64c2-4521-a293-b1a736a543bf</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="be5bca8d-64c2-4521-a293-b1a736a543bf" name="Success?" type="Decision"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>9af3a6f4-53d9-4e14-9e1e-9c161160fec6</ontrue><onfalse>8ee4a00c-f248-4c89-8c4b-4b86cb50ad50</onfalse></stage><stage stageid="8ee4a00c-f248-4c89-8c4b-4b86cb50ad50" name="anchor2" type="Anchor"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="30" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7dc1a88f-716e-4f2b-80dd-dd6306d6db07</onsuccess></stage><stage stageid="47d47b05-34f0-49f6-b703-f594ecee8108" name="Success" type="Data"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-195" y="150" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c26f4e3a-832a-4e80-a4b5-cf864ee7abb4" name="Message" type="Data"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-195" y="210" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bb45052-f59c-4af2-866e-d7973096bc2a" name="File" type="Data"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><display x="-195" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d3515fc-4af8-451d-96e6-cc2d4c6808c7" name="Get CSV" type="SubSheetInfo"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="70f8039e-4af2-4364-b7d2-483c6d3260a4" name="Start" type="Start"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" narrative="The SQL query to use to perform this action" stage="SQL" /><input type="number" name="CommandTimeout" narrative="The command timeout has a default of 30 seconds." stage="CommandTimeout" /></inputs><onsuccess>e1bfc556-cb0c-49cf-8cfd-2767e9516e59</onsuccess></stage><stage stageid="029dc82b-e289-4579-8a43-d8b9c93158be" name="End" type="End"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /><output type="text" name="CSV" narrative="The CSV output from the query" stage="CSV" /></outputs></stage><stage stageid="584fab2b-6e03-4169-8b6f-2032ad3893b3" name="Get CSV" type="Code"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /><input type="number" name="CommandTimeout" expr="[CommandTimeout]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="text" name="CSV" stage="CSV" /></outputs><onsuccess>69fcc128-f010-4628-a2ca-291756ca05b9</onsuccess><code><![CDATA[
' Assume success
Success = True
Message = ""

Try
	' Write it out using the method in Global Code
	Using sw As New StringWriter()
		WriteCsv(SQL, sw, CommandTimeout)
		CSV = sw.ToString()
	End Using
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="e1bfc556-cb0c-49cf-8cfd-2767e9516e59" name="Open" type="SubSheet"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>0288c100-557c-4271-8753-82f7651c876c</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="0288c100-557c-4271-8753-82f7651c876c" name="Success?" type="Decision"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="90" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>584fab2b-6e03-4169-8b6f-2032ad3893b3</ontrue><onfalse>1303eb98-48c5-438c-aa5a-54fe90868c4f</onfalse></stage><stage stageid="1303eb98-48c5-438c-aa5a-54fe90868c4f" name="anchor2" type="Anchor"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="90" y="30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>69fcc128-f010-4628-a2ca-291756ca05b9</onsuccess></stage><stage stageid="233b888b-7601-4969-8205-7513d73f088d" name="Success" type="Data"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="-195" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5723f6bf-aa06-451d-a08a-e92cdfdf9013" name="Message" type="Data"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="-195" y="165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1458d90-c2cf-4c78-879a-d30165d35480" name="CSV" type="Data"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><display x="-195" y="225" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3f4ca0da-93ad-492e-af65-ff637c54b37a" name="User Set?" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><narrative>If the user is not set than this must be LAN connection</narrative><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[User]&lt;&gt;&quot;&quot;" /><ontrue>db11541e-1f1d-48f5-a64e-e1d44d23ecf6</ontrue><onfalse>fbf4d6d4-763b-41f2-926a-ce6745964763</onfalse></stage><stage stageid="fbf4d6d4-763b-41f2-926a-ce6745964763" name="Set connection" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="60" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>823a5018-5ad8-483c-a6c1-8c527bf7bc00</onsuccess><calculation expression="&quot;database=&quot; &amp; [Database] &amp; &quot;;data source=&quot; &amp; [Server] &amp; &quot;;Integrated Security=true&quot; &amp; &quot;;Connect Timeout=&quot; &amp; [ConnectionTimeout]&#xA;" stage="Connection String" /></stage><stage stageid="68cc3f0e-e762-450c-921f-2cfbccedfead" name="Close Success" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><display x="-165" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5b2f24bf-84b2-4292-8cb3-df7286ec6cee" name="Close Message" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><display x="-225" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8365b22c-f9dd-44ac-9bdf-968ef941b1b7" name="Close Success" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><display x="-195" y="270" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a546aa36-ad70-4a81-9648-1de977e52ea0" name="Close Message" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><display x="-195" y="330" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e75dc2f8-ea07-48f4-b2a7-245ca2da63bd" name="Close Success" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><display x="-195" y="270" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4049cd6d-bffc-4414-abba-d9c2c426354a" name="Close Message" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><display x="-195" y="330" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c16520e0-e8d3-41c0-ae96-6254e954bc1a" name="In A Transaction?" type="Decision"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>e52851c8-abcd-46d9-b76a-921773c5cbb4</ontrue><onfalse>f185afb3-9c52-4c13-81d3-55a11480cf64</onfalse></stage><stage stageid="e52851c8-abcd-46d9-b76a-921773c5cbb4" name="Rollback Transaction" type="SubSheet"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>f5aab680-3f4a-4cb2-9873-7c2aa718133f</onsuccess><processid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</processid></stage><stage stageid="f185afb3-9c52-4c13-81d3-55a11480cf64" name="anchor3" type="Anchor"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-75" y="-105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>384bb280-cd20-4a3c-b8b0-9a97e61f7010</onsuccess></stage><stage stageid="384bb280-cd20-4a3c-b8b0-9a97e61f7010" name="anchor4" type="Anchor"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-75" y="15" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5aab680-3f4a-4cb2-9873-7c2aa718133f</onsuccess></stage><stage stageid="20f109d0-a273-44a5-b964-b45248511186" name="Is Open" type="SubSheetInfo"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cc3b1970-2275-44bb-8cfd-176166531993" name="Start" type="Start"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>42ae3b51-badc-419e-9609-b0ce24dc7fe3</onsuccess></stage><stage stageid="8992da0e-f17e-401d-81a4-cf0dbeaf3af1" name="End" type="End"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Is Open" narrative="Flag indicating if a connection is currently open in this VBO" stage="IsOpen" /></outputs></stage><stage stageid="42ae3b51-badc-419e-9609-b0ce24dc7fe3" name="Check Connection" type="Code"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="IsOpen" stage="IsOpen" /></outputs><onsuccess>8992da0e-f17e-401d-81a4-cf0dbeaf3af1</onsuccess><code><![CDATA[IsOpen = ( _
  moConnection IsNot Nothing AndAlso _
  moConnection.State = ConnectionState.Open _
)]]></code></stage><stage stageid="aafe4270-a6b3-4607-878e-86975da9c5cf" name="IsOpen" type="Data"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0a7585ee-e2b5-4c76-893e-f1c483a97130" name="Is Open?" type="Decision"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Is Open]" /><ontrue>a06c1db3-79bd-492a-8c88-aca6b858c053</ontrue><onfalse>9eb59433-0a23-4cdd-bd25-7ae10e31947e</onfalse></stage><stage stageid="330a716e-6d2d-495c-9921-2660dfeb6210" name="Is Open" type="SubSheet"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Is Open" narrative="Flag indicating if a connection is currently open in this VBO" stage="Is Open" /></outputs><onsuccess>0a7585ee-e2b5-4c76-893e-f1c483a97130</onsuccess><processid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</processid></stage><stage stageid="2a427672-1805-4178-8c75-5c94c4b82f09" name="Is Open" type="Data"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a06c1db3-79bd-492a-8c88-aca6b858c053" name="anchor5" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="-60" y="-45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6ff75f66-de9a-4114-98e6-f985272a313b</onsuccess></stage><stage stageid="6ff75f66-de9a-4114-98e6-f985272a313b" name="anchor6" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="-60" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>eac4efa0-7168-4dee-a333-0923f422d458</onsuccess></stage><stage stageid="9eb59433-0a23-4cdd-bd25-7ae10e31947e" name="Open" type="SubSheet"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9a9f6e74-7cd8-4580-af73-041602ccba94</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="9a9f6e74-7cd8-4580-af73-041602ccba94" name="Success?" type="Decision"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="120" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>eac4efa0-7168-4dee-a333-0923f422d458</ontrue><onfalse>62fbd57b-30bc-4365-9fcb-62860030332f</onfalse></stage><stage stageid="62fbd57b-30bc-4365-9fcb-62860030332f" name="anchor5" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="180" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>52f9aedd-8666-495d-a007-ef3c02028ee7</onsuccess></stage><stage stageid="c0d90f91-927f-45e0-84a0-0d6b4e823f6c" name="anchor6" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="180" y="135" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>5705d9af-28ea-4c05-832b-4f40d34a3511</onsuccess></stage><stage stageid="175695ba-0b55-4490-b99a-7c5fa1e95899" name="In Transaction?" type="Decision"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>01c9256c-c4e8-47d0-8bce-cbb4f916399d</ontrue><onfalse>7b32c515-605e-41e1-ae0c-9ad7c7ee6dab</onfalse></stage><stage stageid="7b32c515-605e-41e1-ae0c-9ad7c7ee6dab" name="Error Message" type="Calculation"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="-105" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c20b6f48-8689-4164-9435-7d9f6f5f2aa7</onsuccess><calculation expression="&quot;There is no open transaction to commit&quot;" stage="Message" /></stage><stage stageid="c20b6f48-8689-4164-9435-7d9f6f5f2aa7" name="anchor7" type="Anchor"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="-105" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6cc92a8f-1561-462a-8eaf-bbd32e32a936</onsuccess></stage><stage stageid="093c958e-ad24-4cb8-bfd6-e9f7dba49311" name="In Transaction?" type="Decision"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>921f479a-2714-4314-b394-c5c941b281e8</ontrue><onfalse>d5c94e05-a642-4107-b7b6-15ce461428e7</onfalse></stage><stage stageid="d5c94e05-a642-4107-b7b6-15ce461428e7" name="Error Message" type="Calculation"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="-105" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ae90029d-81d2-4ae3-b27a-f7a302533401</onsuccess><calculation expression="&quot;There is no open transaction to rollback&quot;" stage="Message" /></stage><stage stageid="6cc92a8f-1561-462a-8eaf-bbd32e32a936" name="Internal Close" type="SubSheet"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>63aeb2d7-aeb8-41f2-9ea1-0fd0cea0da8d</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="10757947-9682-4dcb-b789-93777cb333b1" name="Close Success" type="Data"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><display x="-285" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18b41ab6-a52b-45ff-874e-ffece3292e4b" name="Close Message" type="Data"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><display x="-285" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae90029d-81d2-4ae3-b27a-f7a302533401" name="anchor7" type="Anchor"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="-105" y="30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>876d7128-a56d-4c53-8fde-3713a1c173f5</onsuccess></stage><stage stageid="876d7128-a56d-4c53-8fde-3713a1c173f5" name="Internal Close" type="SubSheet"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>375d6173-3de9-4f72-bee6-b4ff132e1287</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="2e2a27c5-d63d-44b0-b693-e673844e664e" name="Close Success" type="Data"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><display x="-225" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e5cc1d8-b2a7-45b7-a8eb-7dbedcfb4f2b" name="Close Message" type="Data"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><display x="-225" y="105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e652ce3f-f9fc-414a-9006-2616854cb925" name="Start" type="Start"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" stage="Clear Pool" /></inputs><onsuccess>8c118cde-3b9a-4ed9-861d-f48b007e1200</onsuccess></stage><stage stageid="382d3006-4861-4bfe-a57e-3f65fbce6c2c" name="Clear Pool" type="Data"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="96ed6cdf-d202-4b37-b3e4-ae598756fb96" name="Close" type="SubSheetInfo"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30b5ba60-22d3-4fe6-9e92-9269372d1a6c" name="Start" type="Start"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>25dfab67-8902-4f2a-8a18-a776aead1331</onsuccess></stage><stage stageid="25dfab67-8902-4f2a-8a18-a776aead1331" name="Internal Close" type="SubSheet"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><loginhibit /><display x="-45" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>042dd86c-3c68-4015-83b1-dcf5b036fc90</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="6c042b25-556f-4563-9663-c41aecc77a31" name="Success" type="Data"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><display x="-195" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1d7e2ef-771a-4001-922b-fd1f3881328f" name="Message" type="Data"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><display x="-195" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a763136-0514-4c6d-9dff-0a0c4a1d10e7" name="In Transaction?" type="Decision"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="-135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>32130444-6454-4780-80fd-2b005ed696a4</ontrue><onfalse>330a716e-6d2d-495c-9921-2660dfeb6210</onfalse></stage><stage stageid="32130444-6454-4780-80fd-2b005ed696a4" name="Transaction Already Open Error" type="Calculation"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="180" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>62fbd57b-30bc-4365-9fcb-62860030332f</onsuccess><calculation expression="&quot;A transaction is already open in this connection&quot;" stage="Message" /></stage><stage stageid="c8303f15-a646-4677-8a63-2f0904ef1815" name="Close Success" type="Data"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="165" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="17c8449f-6f6b-4cba-a705-ce95ef3e49e0" name="Close Message" type="Data"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="165" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba273a3e-4b65-4f6b-8ec6-6676a2bede70" name="Configure" type="SubSheetInfo"><subsheetid>3eacbbb6-d03e-4df7-9904-a3b1ac67c882</subsheetid><narrative>Configures this instance of the utility VBO. Calling it with no parameters will cause the configuration to be reset to default values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b1167043-5e4b-4cbf-bfdc-347fcdc34981" name="End" type="End"><subsheetid>3eacbbb6-d03e-4df7-9904-a3b1ac67c882</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ce5d2c13-15b8-4abc-99e1-0c32e44cc795" name="Raise exception on any failure" type="Data"><subsheetid>3eacbbb6-d03e-4df7-9904-a3b1ac67c882</subsheetid><display x="-195" y="-30" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="23fa0822-2b63-4407-87f4-9b37ce869e58" name="Start" type="Start"><subsheetid>3eacbbb6-d03e-4df7-9904-a3b1ac67c882</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Raise exception on any failure" narrative="Flag indicating if failure should cause an exception to be raised rather than a return of a success output value" stage="Raise exception on any failure" /></inputs><onsuccess>b1167043-5e4b-4cbf-bfdc-347fcdc34981</onsuccess></stage><stage stageid="0b2ebe92-b578-4aa3-b255-b75a73c135d8" name="Raise Exception If Appropriate" type="SubSheetInfo"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0ef42cb2-e5a9-47c2-9845-2471b9f41643" name="Start" type="Start"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" stage="Success" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" stage="Error Message" /></inputs><onsuccess>9a7620f2-75fe-4415-a778-45b839268e52</onsuccess></stage><stage stageid="5e8228c7-ac43-4b93-986b-e5fb23a3e572" name="End" type="End"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9a7620f2-75fe-4415-a778-45b839268e52" name="Should Raise Exception?" type="Decision"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><loginhibit /><display x="-45" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success] = False AND [Raise exception on any failure]" /><ontrue>c161d6a7-6f02-4f29-8c41-2d93471ae952</ontrue><onfalse>5e8228c7-ac43-4b93-986b-e5fb23a3e572</onfalse></stage><stage stageid="c161d6a7-6f02-4f29-8c41-2d93471ae952" name="FAIL" type="Exception"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><display x="30" y="-90" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Action Failed" detail="[Error Message]" /></stage><stage stageid="1c7fc106-01f3-4a2a-aa7e-44c44875fb04" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-60" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>7295054b-4d97-4891-ab69-23416df80d09</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="5705d9af-28ea-4c05-832b-4f40d34a3511" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>dd554ab9-61de-4d37-bee5-c25e1a5c74f1</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="a0610c45-e0f3-48ce-86be-2d9fe00d5faf" name="Success?" type="Decision"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>0441a51b-0a7c-49e6-8305-4a877c32cc8a</ontrue><onfalse>52f9aedd-8666-495d-a007-ef3c02028ee7</onfalse></stage><stage stageid="52f9aedd-8666-495d-a007-ef3c02028ee7" name="anchor5" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="180" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c0d90f91-927f-45e0-84a0-0d6b4e823f6c</onsuccess></stage><stage stageid="63aeb2d7-aeb8-41f2-9ea1-0fd0cea0da8d" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>9ccac2c0-2efd-4399-8d02-c71ac4d7e812</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="375d6173-3de9-4f72-bee6-b4ff132e1287" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>b17027f1-8559-430b-9f36-724b3097e487</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="dbe6faa5-9cd8-4ead-a98d-1880a84975af" name="anchor8" type="Anchor"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="135" y="-90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>28719a2d-9d55-4414-8a91-4f3c8ce10cba</onsuccess></stage><stage stageid="ac70463c-d9f4-44cc-8427-004224405a91" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>7906b7ac-88bd-4971-991d-46bf74ab7207</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="63e4c694-de67-4b39-a04c-5af3186af635" name="anchor9" type="Anchor"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="135" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ac70463c-d9f4-44cc-8427-004224405a91</onsuccess></stage><stage stageid="8173e4d5-0932-4184-b3e8-01a761341966" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>3098273a-9d5f-43bd-8f67-dd5fa306c621</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="0da291c6-e906-4852-b112-79384aafeb77" name="anchor10" type="Anchor"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="135" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>047bee83-bd7d-43b1-aeb3-6f4183c42c63</onsuccess></stage><stage stageid="047bee83-bd7d-43b1-aeb3-6f4183c42c63" name="anchor11" type="Anchor"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="135" y="60" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b565deea-e08d-4195-b081-ab4f2eaad4ad</onsuccess></stage><stage stageid="b565deea-e08d-4195-b081-ab4f2eaad4ad" name="anchor12" type="Anchor"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="135" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8173e4d5-0932-4184-b3e8-01a761341966</onsuccess></stage><stage stageid="8e6271bb-9473-4b6c-b90d-6832537a8075" name="anchor13" type="Anchor"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="120" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>61bf908d-c640-41f1-921e-fbac0bc44b57</onsuccess></stage><stage stageid="61bf908d-c640-41f1-921e-fbac0bc44b57" name="anchor14" type="Anchor"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="120" y="60" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>63cca0a5-90a1-4eb5-9daa-65633aa5c6d3</onsuccess></stage><stage stageid="63cca0a5-90a1-4eb5-9daa-65633aa5c6d3" name="anchor15" type="Anchor"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="120" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8ecc58ce-889b-4d69-8dbd-43f4c4cb11aa</onsuccess></stage><stage stageid="8ecc58ce-889b-4d69-8dbd-43f4c4cb11aa" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>281eca77-1f39-4ace-8815-a8145727a1e3</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="ab15b6c7-3e1d-417a-9750-8ca92fb7924e" name="Note1" type="Note"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><narrative>Note that we don't throw an exception here even if a failure is encountered - this is probably being called as part of a wider action, and the caller has the context with which to decide where the exception should be raised.</narrative><display x="-195" y="105" w="270" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8fcd4c90-9846-476a-a7f4-05a7edc6e62b</onsuccess></stage><stage stageid="d5771181-59a5-4bfd-b8f1-01bd7b7dbb3d" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>469b68e3-523f-4723-ab11-b47348bbdf33</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="7dc1a88f-716e-4f2b-80dd-dd6306d6db07" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>f82dbcac-aaf6-4e85-ada7-e7f28d96bb97</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="69fcc128-f010-4628-a2ca-291756ca05b9" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>029dc82b-e289-4579-8a43-d8b9c93158be</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="470e696c-742e-49d7-9421-f2a1544972f9" name="Success" type="Data"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4576bffa-323c-45f4-9233-9905d56e85ee" name="Error Message" type="Data"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><display x="-195" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="95b31d93-f94b-416b-84da-6fe8337d8feb" name="Closing" type="Data"><loginhibit /><narrative>Flag indicating that the connection wrapped by this VBO is currently in the process of closing</narrative><display x="180" y="255" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="e85c42a3-de4b-461c-8b38-c5f6f44cd4ce" name="Closing:=True" type="Calculation"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-150" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c16520e0-e8d3-41c0-ae96-6254e954bc1a</onsuccess><calculation expression="True" stage="Closing" /></stage><stage stageid="8c118cde-3b9a-4ed9-861d-f48b007e1200" name="Already Closing?" type="Decision"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-195" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Closing]" /><ontrue>34659a52-f242-427f-988d-763542f1f33f</ontrue><onfalse>e85c42a3-de4b-461c-8b38-c5f6f44cd4ce</onfalse></stage><stage stageid="34659a52-f242-427f-988d-763542f1f33f" name="Note2" type="Note"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><narrative>Ensure that we're not being called by 'Rollback' which was called by this action - infinite loops are bad.</narrative><display x="150" y="-195" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>adf47186-7a7b-4396-b1cb-e994400f72c9</onsuccess></stage><stage stageid="adf47186-7a7b-4396-b1cb-e994400f72c9" name="anchor16" type="Anchor"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="150" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8fcd4c90-9846-476a-a7f4-05a7edc6e62b</onsuccess></stage><stage stageid="274a1082-2d15-4bf8-84f2-043aae4e60e7" name="Closing:=False" type="Calculation"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8fcd4c90-9846-476a-a7f4-05a7edc6e62b</onsuccess><calculation expression="False" stage="Closing" /></stage><stage stageid="56def720-71ec-4d7b-9e58-17b4f23dc6fc" name=" " type="Block"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-60" y="-75" w="195" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="aa70afba-b9df-48a6-a0c2-beb7fa5cdc82" name="Ignore" type="Recover"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="90" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>92889732-12eb-4041-ac27-8a9a20af1cf5</onsuccess></stage><stage stageid="92889732-12eb-4041-ac27-8a9a20af1cf5" name=" " type="Resume"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="90" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5aab680-3f4a-4cb2-9873-7c2aa718133f</onsuccess></stage><stage stageid="22e10c68-07d1-4cc4-9072-7c9b0b0c97cf" name="SQL" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="47ca5361-bb0f-4f18-9c74-7d5d09f239dd" name="SQL" type="Data"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3616b67e-fe87-422b-b9ea-6180525fddc3" name="SQL" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="46a7daee-e5e4-441f-92fc-39a696518e79" name="SQL" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1d6948f-3783-4b3f-afa7-bef3378cafc3" name="SQL" type="Data"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae6e30b2-099e-4fd8-9481-75eeccea424a" name="SQL" type="Data"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="540222b0-7793-476e-a330-59f84b93108c" name="SQL" type="Data"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66c19ef6-3007-4fa0-af27-b52892a9671c" name="Connection String already set?" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="-120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Connection String] &lt;&gt; &quot;&quot;" /><ontrue>5d9aed4f-c61b-40dc-9104-e0720a324d22</ontrue><onfalse>cb1901f1-02a7-4e86-8618-cef7a98b283f</onfalse></stage><stage stageid="90d7c944-c618-41dd-bfe2-5da022f3353a" name="Internal Close" type="SubSheet"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="150" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="True" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>cb1901f1-02a7-4e86-8618-cef7a98b283f</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="5d9aed4f-c61b-40dc-9104-e0720a324d22" name="Note3" type="Note"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><narrative>Close and clear the connection pool</narrative><display x="150" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>90d7c944-c618-41dd-bfe2-5da022f3353a</onsuccess></stage><stage stageid="fbf49160-dd35-4922-a2f3-6b17985bfb74" name="Close Success" type="Data"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><display x="-195" y="105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f81af5a5-7d4a-4f5d-b914-0b008c1273ec" name="Close Message" type="Data"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><display x="-195" y="165" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb1901f1-02a7-4e86-8618-cef7a98b283f" name="anchor17" type="Anchor"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="-75" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f0a82ba2-d793-4b53-ac43-0b1e66c85092</onsuccess></stage><stage stageid="042dd86c-3c68-4015-83b1-dcf5b036fc90" name="End" type="End"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="8fcd4c90-9846-476a-a7f4-05a7edc6e62b" name="End" type="End"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="dd554ab9-61de-4d37-bee5-c25e1a5c74f1" name="End" type="End"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="9ccac2c0-2efd-4399-8d02-c71ac4d7e812" name="End" type="End"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="b17027f1-8559-430b-9f36-724b3097e487" name="End" type="End"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="7906b7ac-88bd-4971-991d-46bf74ab7207" name="End" type="End"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="7246d21e-c65c-4724-a7af-360d312f0fe3" name="Note4" type="Note"><loginhibit /><narrative>Version: 10.1.1</narrative><display x="15" y="-150" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="0b9557aa-d912-4503-a71f-fb16a53bd703" name="Note5" type="Note"><loginhibit /><narrative>© 2023 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182
</narrative><display x="435" y="-15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="8d8d82d2-44be-40e0-953e-4181b964a046" name="Local Connection String" type="Data"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><display x="-195" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f0a82ba2-d793-4b53-ac43-0b1e66c85092" name="Local Connection String?" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><narrative>If the user provides their own connection string, we ignore the other parameters.</narrative><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len(Trim([Local Connection String])) &gt; 0" /><ontrue>b53f40d1-bdc4-4834-8166-12365d69d392</ontrue><onfalse>3f4ca0da-93ad-492e-af65-ff637c54b37a</onfalse></stage><stage stageid="b53f40d1-bdc4-4834-8166-12365d69d392" name="Anchor1" type="Anchor"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="150" y="-30" w="10" h="10" /><onsuccess>c215963c-dafe-4c7c-931b-304b3300708c</onsuccess></stage><stage stageid="c215963c-dafe-4c7c-931b-304b3300708c" name="Set connection" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="150" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3b562b2c-bbf1-4658-85b9-20e56915e00d</onsuccess><calculation expression="[Local Connection String]" stage="Connection String" /></stage><stage stageid="3b562b2c-bbf1-4658-85b9-20e56915e00d" name="Anchor2" type="Anchor"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="150" y="150" w="10" h="10" /><onsuccess>823a5018-5ad8-483c-a6c1-8c527bf7bc00</onsuccess></stage><stage stageid="b66a4121-d0cb-4a51-83fb-150631e33b24" name="CommandTimeout" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="a50b2e2e-d858-4bb8-877d-b9d1fc15ef02" name="CommandTimeout" type="Data"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="8aab93df-08d9-4ea2-bc18-f16224ceb1d7" name="CommandTimeout" type="Data"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="af769449-0f1b-4fb3-8155-f45877439c06" name="CommandTimeout" type="Data"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1d072025-f5c1-4624-af72-34e3244fc3ba" name="CommandTimeout" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="7f5cbef4-1b3f-42f1-b614-ca0b89c18d47" name="CommandTimeout" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="720e1733-e450-4775-85eb-6bb64ace5688" name="CommandTimeout" type="Data"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09ebeddf-d90d-40a0-bf4d-8007adfd55a4" name="ConnectionTimeout" type="Data"><display x="180" y="120" w="180" h="30" /><datatype>number</datatype><initialvalue>15</initialvalue><alwaysinit /></stage></process></object>
        <object id="b99d5b9f-f5b7-45a4-b7b2-17a2cce2ac4c" name="Email - POP3/SMTP/IMAP" xmlns="http://www.blueprism.co.uk/product/process"><process name="Email - POP3/SMTP/IMAP" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="Retrieve email via POP3/IMAP protocols and send using SMTP protocol" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>011d2f54-1ac9-4681-a6e7-993aa460851d</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>40</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="544abb24-e623-4adb-a24d-3a5dba6164ba" type="Normal" published="True"><name>Configure</name><view><camerax>-3</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67bff276-3cf2-4985-a957-e462b800ac3b" type="Normal" published="True"><name>Get Message</name><view><camerax>0</camerax><cameray>-26</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e" type="Normal" published="True"><name>Delete Message</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="849d1a37-179b-40ae-9683-4ebb0d951576" type="Normal" published="True"><name>Delete Messages</name><view><camerax>0</camerax><cameray>139</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0ae82e81-b9d3-47b5-be33-66f709a7d660" type="Normal" published="True"><name>Disconnect</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f" type="Normal" published="True"><name>List Messages</name><view><camerax>0</camerax><cameray>85</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f8794d1c-cd56-4a78-935e-8a9c64944776" type="Normal" published="True"><name>Load Message from File</name><view><camerax>0</camerax><cameray>16</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="803f1a2c-38f9-4614-97aa-5ca66d454d2d" type="Normal" published="True"><name>Save Attachments</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece" type="Normal" published="True"><name>Save Message to File</name><view><camerax>0</camerax><cameray>-26</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cc1b4ba2-0510-4980-92bd-d6312072c5bf" type="Normal" published="True"><name>Send Message</name><view><camerax>0</camerax><cameray>-14</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="954d358e-45d9-44b3-b56a-87e1c21f9d0f" type="Normal" published="False"><name>INTERNAL - Connect POP3</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c8b9e601-7444-4385-b2aa-6709658ad472" type="Normal" published="False"><name>INTERNAL - Disconnect POP3</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4688b112-6575-4f8a-980c-713566729518" type="Normal" published="False"><name>INTERNAL - Number From ID</name><view><camerax>0</camerax><cameray>1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="23b79bcf-348d-4ffc-9522-b1454e0fbfc8" type="Normal" published="False"><name>INTERNAL - Connect IMAP</name><view><camerax>0</camerax><cameray>147</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0b2219a7-69f8-41be-8b95-a22606e38b09" type="Normal" published="False"><name>INTERNAL - Disconnect IMAP</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f6308726-19e2-47eb-a4ba-fa021b7f48fa" type="Normal" published="True"><name>IMAP List Messages</name><view><camerax>0</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d8554674-fbba-4027-a4fc-e97d9ae4f7ee" type="Normal" published="True"><name>IMAP Move Message</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a940b2a6-c5cd-499f-99f5-e88c0fdc2445" type="Normal" published="True"><name>IMAP Create Folder - Personal Namespace</name><view><camerax>0</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2596c3be-a122-4e8d-ae0a-a45cc17abc75" type="Normal" published="True"><name>IMAP Rename Folder - Personal Namespace</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5242c3a8-5560-46ca-a805-6f5d3e5cf0f8" type="Normal" published="True"><name>IMAP Get Folder - Personal Namespace</name><view><camerax>-53</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9eeb197f-322e-45d5-b510-caac9eadc939" type="Normal" published="True"><name>IMAP Get Folders - Personal Namespace</name><view><camerax>-51</camerax><cameray>147</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="93beb7f6-a73f-48ab-97b7-db223fb5f081" type="Normal" published="True"><name>IMAP Move MailItem By Subject</name><view><camerax>-51</camerax><cameray>147</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="f87d36b8-5544-47f1-bd36-115a2493fdcd" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>a378f6c1-35f0-4954-9186-e304278d369e</onsuccess></stage><stage stageid="a378f6c1-35f0-4954-9186-e304278d369e" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="65d9a6b9-33b9-4e6b-8211-7aa840ca5eee" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>MimeKit.dll</reference><reference>MailKit.dll</reference><reference>System.Linq.dll</reference><reference>System.Core.dll</reference></references><imports><import>System</import><import>System.IO</import><import>System.Net</import><import>System.Net.Mail</import><import>System.Net.Mime</import><import>System.Net.Sockets</import><import>System.Net.Security</import><import>System.Collections.Generic</import><import>System.Collections.Specialized</import><import>System.Text</import><import>System.Security.Cryptography</import><import>System.Globalization</import><import>System.Text.RegularExpressions</import><import>System.Data</import><import>MailKit.Net.Pop3</import><import>MailKit.Security</import><import>MailKit.Net.Imap</import><import>MailKit.Search</import><import>System.Linq</import><import>MailKit</import></imports><language>csharp</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[SaslMechanismOAuth2 _oAuth2;
MailKit.Net.Pop3.Pop3Client _mkClient;
Pop3Client _rclient;
ImapClient _imapClient;


/// <summary>
/// This interface describes a MessageTraverser which is able to traverse a Message structure
/// and deliver some answer given some question.
/// </summary>
/// <typeparam name="TAnswer">This is the type of the answer you want to have delivered.</typeparam>
/// <typeparam name="TQuestion">This is the type of the question you want to have answered.</typeparam>
public interface IQuestionAnswerMessageTraverser<TQuestion, TAnswer>
{
    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="Message"/>.
    /// </summary>
    /// <param name="message">The <see cref="Message"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <param name="question">The question</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessage(Message message, TQuestion question);

    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <param name="question">The question</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessagePart(MessagePart messagePart, TQuestion question);
}

///<summary>
/// Finds all the <see cref="MessagePart"/>s which have a given MediaType using a depth first traversal.
///</summary>
internal class FindAllMessagePartsWithMediaType : IQuestionAnswerMessageTraverser<string, List<MessagePart>>
{
    /// <summary>
    /// Finds all the <see cref="MessagePart"/>s with the given MediaType
    /// </summary>
    /// <param name="message">The <see cref="Message"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>
    /// A List of <see cref="MessagePart"/>s with the given MediaType.<br/>
    /// <br/>
    /// The List might be empty if no such <see cref="MessagePart"/>s were found.<br/>
    /// The order of the elements in the list is the order which they are found using
    /// a depth first traversal of the <see cref="Message"/> hierarchy.
    /// </returns>
    public List<MessagePart> VisitMessage(Message message, string question)
    {
        if (message == null)
            throw new ArgumentNullException("message");

        return VisitMessagePart(message.MessagePart, question);
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>s with the given MediaType
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>
    /// A List of <see cref="MessagePart"/>s with the given MediaType.<br/>
    /// <br/>
    /// The List might be empty if no such <see cref="MessagePart"/>s were found.<br/>
    /// The order of the elements in the list is the order which they are found using
    /// a depth first traversal of the <see cref="Message"/> hierarchy.
    /// </returns>
    public List<MessagePart> VisitMessagePart(MessagePart messagePart, string question)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        List<MessagePart> results = new List<MessagePart>();

        if (messagePart.ContentType.MediaType.Equals(question, StringComparison.OrdinalIgnoreCase))
            results.Add(messagePart);

        if (messagePart.IsMultiPart)
        {
            foreach (MessagePart part in messagePart.MessageParts)
            {
                List<MessagePart> result = VisitMessagePart(part, question);
                results.AddRange(result);
            }
        }

        return results;
    }
}

///<summary>
/// Finds the first <see cref="MessagePart"/> which have a given MediaType in a depth first traversal.
///</summary>
internal class FindFirstMessagePartWithMediaType : IQuestionAnswerMessageTraverser<string, MessagePart>
{
    /// <summary>
    /// Finds the first <see cref="MessagePart"/> with the given MediaType
    /// </summary>
    /// <param name="message">The <see cref="Message"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>A <see cref="MessagePart"/> with the given MediaType or <see langword="null"/> if no such <see cref="MessagePart"/> was found</returns>
    public MessagePart VisitMessage(Message message, string question)
    {
        if (message == null)
            throw new ArgumentNullException("message");

        return VisitMessagePart(message.MessagePart, question);
    }

    /// <summary>
    /// Finds the first <see cref="MessagePart"/> with the given MediaType
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> to start looking in</param>
    /// <param name="question">The MediaType to look for. Case is ignored.</param>
    /// <returns>A <see cref="MessagePart"/> with the given MediaType or <see langword="null"/> if no such <see cref="MessagePart"/> was found</returns>
    public MessagePart VisitMessagePart(MessagePart messagePart, string question)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        if (messagePart.ContentType.MediaType.Equals(question, StringComparison.OrdinalIgnoreCase))
            return messagePart;

        if (messagePart.IsMultiPart)
        {
            foreach (MessagePart part in messagePart.MessageParts)
            {
                MessagePart result = VisitMessagePart(part, question);
                if (result != null)
                    return result;
            }
        }

        return null;
    }
}

/// <summary>
/// Finds all <see cref="MessagePart"/>s which are considered to be attachments
/// </summary>
internal class AttachmentFinder : MultipleMessagePartFinder
{
    protected override List<MessagePart> CaseLeaf(MessagePart messagePart)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        // Maximum space needed is one
        List<MessagePart> leafAnswer = new List<MessagePart>(1);

        if (messagePart.IsAttachment)
            leafAnswer.Add(messagePart);

        return leafAnswer;
    }
}

/// <summary>
/// This interface describes a MessageTraverser which is able to traverse a Message hierarchy structure
/// and deliver some answer.
/// </summary>
/// <typeparam name="TAnswer">This is the type of the answer you want to have delivered.</typeparam>
public interface IAnswerMessageTraverser<TAnswer>
{
    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="Message"/>.
    /// </summary>
    /// <param name="message">The <see cref="Message"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessage(Message message);

    /// <summary>
    /// Call this when you want to apply this traverser on a <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> which you want to traverse. Must not be <see langword="null"/>.</param>
    /// <returns>An answer</returns>
    TAnswer VisitMessagePart(MessagePart messagePart);
}

/// <summary>
/// This is an abstract class which handles traversing of a <see cref="Message"/> tree structure.<br/>
/// It runs through the message structure using a depth-first traversal.
/// </summary>
/// <typeparam name="TAnswer">The answer you want from traversing the message tree structure</typeparam>
public abstract class AnswerMessageTraverser<TAnswer> : IAnswerMessageTraverser<TAnswer>
{
    /// <summary>
    /// Call this when you want an answer for a full message.
    /// </summary>
    /// <param name="message">The message you want to traverse</param>
    /// <returns>An answer</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="message"/> is <see langword="null"/></exception>
    public TAnswer VisitMessage(Message message)
    {
        if (message == null)
            throw new ArgumentNullException("message");

        return VisitMessagePart(message.MessagePart);
    }

    /// <summary>
    /// Call this method when you want to find an answer for a <see cref="MessagePart"/>
    /// </summary>
    /// <param name="messagePart">The <see cref="MessagePart"/> part you want an answer from.</param>
    /// <returns>An answer</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="messagePart"/> is <see langword="null"/></exception>
    public TAnswer VisitMessagePart(MessagePart messagePart)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        if (messagePart.IsMultiPart)
        {
            List<TAnswer> leafAnswers = new List<TAnswer>(messagePart.MessageParts.Count);
            foreach (MessagePart part in messagePart.MessageParts)
            {
                leafAnswers.Add(VisitMessagePart(part));
            }
            return MergeLeafAnswers(leafAnswers);
        }

        return CaseLeaf(messagePart);
    }

    /// <summary>
    /// For a concrete implementation an answer must be returned for a leaf <see cref="MessagePart"/>, which are
    /// MessageParts that are not <see cref="MessagePart.IsMultiPart">MultiParts.</see>
    /// </summary>
    /// <param name="messagePart">The message part which is a leaf and thereby not a MultiPart</param>
    /// <returns>An answer</returns>
    protected abstract TAnswer CaseLeaf(MessagePart messagePart);

    /// <summary>
    /// For a concrete implementation, when a MultiPart <see cref="MessagePart"/> has fetched it's answers from it's children, these
    /// answers needs to be merged. This is the responsibility of this method.
    /// </summary>
    /// <param name="leafAnswers">The answer that the leafs gave</param>
    /// <returns>A merged answer</returns>
    protected abstract TAnswer MergeLeafAnswers(List<TAnswer> leafAnswers);
}

///<summary>
/// An abstract class that implements the MergeLeafAnswers method.<br/>
/// The method simply returns the union of all answers from the leaves.
///</summary>
public abstract class MultipleMessagePartFinder : AnswerMessageTraverser<List<MessagePart>>
{
    /// <summary>
    /// Adds all the <paramref name="leafAnswers"/> in one big answer
    /// </summary>
    /// <param name="leafAnswers">The answers to merge</param>
    /// <returns>A list with has all the elements in the <paramref name="leafAnswers"/> lists</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="leafAnswers"/> is <see langword="null"/></exception>
    protected override List<MessagePart> MergeLeafAnswers(List<List<MessagePart>> leafAnswers)
    {
        if (leafAnswers == null)
            throw new ArgumentNullException("leafAnswers");

        // We simply create a list with all the answer generated from the leaves
        List<MessagePart> mergedResults = new List<MessagePart>();

        foreach (List<MessagePart> leafAnswer in leafAnswers)
        {
            mergedResults.AddRange(leafAnswer);
        }

        return mergedResults;
    }
}

/// <summary>
/// Finds all text/[something] versions in a Message hierarchy
/// </summary>
internal class TextVersionFinder : MultipleMessagePartFinder
{
    protected override List<MessagePart> CaseLeaf(MessagePart messagePart)
    {
        if (messagePart == null)
            throw new ArgumentNullException("messagePart");

        // Maximum space needed is one
        List<MessagePart> leafAnswer = new List<MessagePart>(1);

        if (messagePart.IsText)
            leafAnswer.Add(messagePart);

        return leafAnswer;
    }
}

/// <summary>
/// This class is responsible for decoding parameters that has been encoded with:<br/>
/// <list type="bullet">
/// <item>
///    <b>Continuation</b><br/>
///    This is where a single parameter has such a long value that it could
///    be wrapped while in transit. Instead multiple parameters is used on each line.<br/>
///    <br/>
///    <b>Example</b><br/>
///    From: <c>Content-Type: text/html; boundary="someVeryLongStringHereWhichCouldBeWrappedInTransit"</c><br/>
///    To: <c>Content-Type: text/html; boundary*0="someVeryLongStringHere" boundary*1="WhichCouldBeWrappedInTransit"</c><br/>
/// </item>
/// <item>
///    <b>Encoding</b><br/>
///    Sometimes other characters then ASCII characters are needed in parameters.<br/>
///    The parameter is then given a different name to specify that it is encoded.<br/>
///    <br/>
///    <b>Example</b><br/>
///    From: <c>Content-Disposition attachment; filename="specialCharsÆØÅ"</c><br/>
///    To: <c>Content-Disposition attachment; filename*="ISO-8859-1'en-us'specialCharsC6D8C0"</c><br/>
///    This encoding is almost the same as <see cref="EncodedWord"/> encoding, and is used to decode the value.<br/>
/// </item>
/// <item>
///    <b>Continuation and Encoding</b><br/>
///    Both Continuation and Encoding can be used on the same time.<br/>
///    <br/>
///    <b>Example</b><br/>
///    From: <c>Content-Disposition attachment; filename="specialCharsÆØÅWhichIsSoLong"</c><br/>
///    To: <c>Content-Disposition attachment; filename*0*="ISO-8859-1'en-us'specialCharsC6D8C0"; filename*1*="WhichIsSoLong"</c><br/>
///    This could also be encoded as:<br/>
///    To: <c>Content-Disposition attachment; filename*0*="ISO-8859-1'en-us'specialCharsC6D8C0"; filename*1="WhichIsSoLong"</c><br/>
///    Notice that <c>filename*1</c> does not have an <c>*</c> after it - denoting it IS NOT encoded.<br/>
///    There are some rules about this:<br/>
///    <list type="number">
///      <item>The encoding must be mentioned in the first part (filename*0*), which has to be encoded.</item>
///      <item>No other part must specify an encoding, but if encoded it uses the encoding mentioned in the first part.</item>
///      <item>Parts may be encoded or not in any order.</item>
///    </list>
///    <br/>
/// </item>
/// </list>
/// More information and the specification is available in <see href="http://tools.ietf.org/html/rfc2231">RFC 2231</see>.
/// </summary>
internal static class Rfc2231Decoder
{
    /// <summary>
    /// Decodes a string of the form:<br/>
    /// <c>value0; key1=value1; key2=value2; key3=value3</c><br/>
    /// The returned List of key value pairs will have the key as key and the decoded value as value.<br/>
    /// The first value0 will have a key of <see cref="string.Empty"/>.<br/>
    /// <br/>
    /// If continuation is used, then multiple keys will be merged into one key with the different values
    /// decoded into on big value for that key.<br/>
    /// Example:<br/>
    /// <code>
    /// title*0=part1
    /// title*1=part2
    /// </code>
    /// will have key and value of:<br></br>
    /// <c>title=decode(part1)decode(part2)</c>
    /// </summary>
    /// <param name="toDecode">The string to decode.</param>
    /// <returns>A list of decoded key value pairs.</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    public static List<KeyValuePair<string, string>> Decode(string toDecode)
		{
			if(toDecode == null)
				throw new ArgumentNullException("toDecode");

			// Normalize the input to take account for missing semicolons after parameters.
			// Example
			// text/plain; charset=\"iso-8859-1\" name=\"somefile.txt\" or
            // text/plain;\tcharset=\"iso-8859-1\"\tname=\"somefile.txt\"
			// is normalized to
			// text/plain; charset=\"iso-8859-1\"; name=\"somefile.txt\"
			// Only works for parameters inside quotes
			// \s = matches whitespace
			toDecode = Regex.Replace(toDecode, "=\\s*\"(?<value>[^\"]*)\"\\s", "=\"${value}\"; ");

			// Normalize 
			// Since the above only works for parameters inside quotes, we need to normalize
			// the special case with the first parameter.
			// Example:
			// attachment filename="foo"
			// is normalized to
			// attachment; filename="foo"
			// ^ = matches start of line (when not inside square bracets [])
			toDecode = Regex.Replace(toDecode, @"^(?<first>[^;\s]+)\s(?<second>[^;\s]+)", "${first}; ${second}");

			// Split by semicolon, but only if not inside quotes
			List<string> splitted = Utility.SplitStringWithCharNotInsideQuotes(toDecode.Trim(), ';');

			List<KeyValuePair<string, string>> collection = new List<KeyValuePair<string, string>>(splitted.Count);

			foreach (string part in splitted)
			{
				// Empty strings should not be processed
				if (part.Trim().Length == 0)
					continue;

				string[] keyValue = part.Trim().Split(new char[] {'='}, 2);
				if(keyValue.Length == 1)
				{
					collection.Add(new KeyValuePair<string, string>("", keyValue[0]));
				} else if (keyValue.Length == 2)
				{
					collection.Add(new KeyValuePair<string, string>(keyValue[0], keyValue[1]));
				} else
				{
					throw new ArgumentException("When splitting the part \"" + part + "\" by = there was " + keyValue.Length + " parts. Only 1 and 2 are supported");
				}
			}

			return DecodePairs(collection);
		}

    /// <summary>
    /// Decodes the list of key value pairs into a decoded list of key value pairs.<br/>
    /// There may be less keys in the decoded list, but then the values for the lost keys will have been appended
    /// to the new key.
    /// </summary>
    /// <param name="pairs">The pairs to decode</param>
    /// <returns>A decoded list of pairs</returns>
    private static List<KeyValuePair<string, string>> DecodePairs(List<KeyValuePair<string, string>> pairs)
    {
        if (pairs == null)
            throw new ArgumentNullException("pairs");

        List<KeyValuePair<string, string>> resultPairs = new List<KeyValuePair<string, string>>(pairs.Count);

        int pairsCount = pairs.Count;
        for (int i = 0; i < pairsCount; i++)
        {
            KeyValuePair<string, string> currentPair = pairs[i];
            string key = currentPair.Key;
            string value = Utility.RemoveQuotesIfAny(currentPair.Value);

            // Is it a continuation parameter? (encoded or not)
            if (key.EndsWith("*0", StringComparison.OrdinalIgnoreCase) || key.EndsWith("*0*", StringComparison.OrdinalIgnoreCase))
            {
                // This encoding will not be used if we get into the if which tells us
                // that the whole continuation is not encoded

                string encoding = "notEncoded - Value here is never used";

                // Now lets find out if it is encoded too.
                if (key.EndsWith("*0*", StringComparison.OrdinalIgnoreCase))
                {
                    // It is encoded.

                    // Fetch out the encoding for later use and decode the value
                    // If the value was not encoded as the email specified
                    // encoding will be set to null. This will be used later.
                    value = DecodeSingleValue(value, out encoding);

                    // Find the right key to use to store the full value
                    // Remove the start *0 which tells is it is a continuation, and the first one
                    // And remove the * afterwards which tells us it is encoded
                    key = key.Replace("*0*", "");
                }
                else
                {
                    // It is not encoded, and no parts of the continuation is encoded either

                    // Find the right key to use to store the full value
                    // Remove the start *0 which tells is it is a continuation, and the first one
                    key = key.Replace("*0", "");
                }

                // The StringBuilder will hold the full decoded value from all continuation parts
                StringBuilder builder = new StringBuilder();

                // Append the decoded value
                builder.Append(value);

                // Now go trough the next keys to see if they are part of the continuation
                for (int j = i + 1, continuationCount = 1; j < pairsCount; j++, continuationCount++)
                {
                    string jKey = pairs[j].Key;
                    string valueJKey = Utility.RemoveQuotesIfAny(pairs[j].Value);

                    if (jKey.Equals(key + "*" + continuationCount))
                    {
                        // This value part of the continuation is not encoded
                        // Therefore remove qoutes if any and add to our stringbuilder
                        builder.Append(valueJKey);

                        // Remember to increment i, as we have now treated one more KeyValuePair
                        i++;
                    }
                    else if (jKey.Equals(key + "*" + continuationCount + "*"))
                    {
                        // We will not get into this part if the first part was not encoded
                        // Therefore the encoding will only be used if and only if the
                        // first part was encoded, in which case we have remembered the encoding used

                        // Sometimes an email creator says that a string was encoded, but it really
                        // `was not. This is to catch that problem.
                        if (encoding != null)
                        {
                            // This value part of the continuation is encoded
                            // the encoding is not given in the current value,
                            // but was given in the first continuation, which we remembered for use here
                            valueJKey = DecodeSingleValue(valueJKey, encoding);
                        }
                        builder.Append(valueJKey);

                        // Remember to increment i, as we have now treated one more KeyValuePair
                        i++;
                    }
                    else
                    {
                        // No more keys for this continuation
                        break;
                    }
                }

                // Add the key and the full value as a pair
                value = builder.ToString();
                resultPairs.Add(new KeyValuePair<string, string>(key, value));
            }
            else if (key.EndsWith("*", StringComparison.OrdinalIgnoreCase))
            {
                // This parameter is only encoded - it is not part of a continuation
                // We need to change the key from "<key>*" to "<key>" and decode the value

                // To get the key we want, we remove the last * that denotes
                // that the value hold by the key was encoded
                key = key.Replace("*", "");

                // Decode the value
                string throwAway;
                value = DecodeSingleValue(value, out throwAway);

                // Now input the new value with the new key
                resultPairs.Add(new KeyValuePair<string, string>(key, value));
            }
            else
            {
                // Fully normal key - the value is not encoded
                // Therefore nothing to do, and we can simply pass the pair
                // as being decoded now
                resultPairs.Add(currentPair);
            }
        }

        return resultPairs;
    }

    /// <summary>
    /// This will decode a single value of the form: <c>ISO-8859-1'en-us'%3D%3DIamHere</c><br/>
    /// Which is basically a <see cref="EncodedWord"/> form just using % instead of =<br/>
    /// Notice that 'en-us' part is not used for anything.<br/>
    /// <br/>
    /// If the single value given is not on the correct form, it will be returned without 
    /// being decoded and <paramref name="encodingUsed"/> will be set to <see langword="null"/>.
    /// </summary>
    /// <param name="encodingUsed">
    /// The encoding used to decode with - it is given back for later use.<br/>
    /// <see langword="null"/> if input was not in the correct form.
    /// </param>
    /// <param name="toDecode">The value to decode</param>
    /// <returns>
    /// The decoded value that corresponds to <paramref name="toDecode"/> or if
    /// <paramref name="toDecode"/> is not on the correct form, it will be non-decoded.
    /// </returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    private static string DecodeSingleValue(string toDecode, out string encodingUsed)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        // Check if input has a part describing the encoding
        if (toDecode.IndexOf('\'') == -1)
        {
            // The input was not encoded (at least not valid) and it is returned as is
            //DefaultLogger.Log.LogDebug("Rfc2231Decoder: Someone asked me to decode a string which was not encoded - returning raw string. Input: " + toDecode);
            encodingUsed = null;
            return toDecode;
        }
        encodingUsed = toDecode.Substring(0, toDecode.IndexOf('\''));
        toDecode = toDecode.Substring(toDecode.LastIndexOf('\'') + 1);
        return DecodeSingleValue(toDecode, encodingUsed);
    }

    /// <summary>
    /// This will decode a single value of the form: %3D%3DIamHere
    /// Which is basically a <see cref="EncodedWord"/> form just using % instead of =
    /// </summary>
    /// <param name="valueToDecode">The value to decode</param>
    /// <param name="encoding">The encoding used to decode with</param>
    /// <returns>The decoded value that corresponds to <paramref name="valueToDecode"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="valueToDecode"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentNullException">If <paramref name="encoding"/> is <see langword="null"/></exception>
    private static string DecodeSingleValue(string valueToDecode, string encoding)
    {
        if (valueToDecode == null)
            throw new ArgumentNullException("valueToDecode");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        // The encoding used is the same as QuotedPrintable, we only
        // need to change % to =
        // And otherwise make it look like the correct EncodedWord encoding
        valueToDecode = "=?" + encoding + "?Q?" + valueToDecode.Replace("%", "=") + "?=";
        return EncodedWord.Decode(valueToDecode);
    }
}

/// <summary>
/// Class that can parse different fields in the header sections of a MIME message.
/// </summary>
internal static class HeaderFieldParser
{
    /// <summary>
    /// Parses the Content-Transfer-Encoding header.
    /// </summary>
    /// <param name="headerValue">The value for the header to be parsed</param>
    /// <returns>A <see cref="ContentTransferEncoding"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">If the <paramref name="headerValue"/> could not be parsed to a <see cref="ContentTransferEncoding"/></exception>
    public static ContentTransferEncoding ParseContentTransferEncoding(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        switch (headerValue.Trim().ToUpperInvariant())
        {
            case "7BIT":
                return ContentTransferEncoding.SevenBit;

            case "8BIT":
                return ContentTransferEncoding.EightBit;

            case "QUOTED-PRINTABLE":
                return ContentTransferEncoding.QuotedPrintable;

            case "BASE64":
                return ContentTransferEncoding.Base64;

            case "BINARY":
                return ContentTransferEncoding.Binary;

            // If a wrong argument is passed to this parser method, then we assume
            // default encoding, which is SevenBit.
            // This is to ensure that we do not throw exceptions, even if the email not MIME valid.
            default:
                //DefaultLogger.Log.LogDebug("Wrong ContentTransferEncoding was used. It was: " + headerValue);
                return ContentTransferEncoding.SevenBit;
        }
    }

    /// <summary>
    /// Parses an ImportanceType from a given Importance header value.
    /// </summary>
    /// <param name="headerValue">The value to be parsed</param>
    /// <returns>A <see cref="MailPriority"/>. If the <paramref name="headerValue"/> is not recognized, Normal is returned.</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    public static MailPriority ParseImportance(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        switch (headerValue.ToUpperInvariant())
        {
            case "5":
            case "HIGH":
                return MailPriority.High;

            case "3":
            case "NORMAL":
                return MailPriority.Normal;

            case "1":
            case "LOW":
                return MailPriority.Low;

            default:
                //DefaultLogger.Log.LogDebug("HeaderFieldParser: Unknown importance value: \"" + headerValue + "\". Using default of normal importance.");
                return MailPriority.Normal;
        }
    }

    /// <summary>
    /// Parses a the value for the header Content-Type to 
    /// a <see cref="ContentType"/> object.
    /// </summary>
    /// <param name="headerValue">The value to be parsed</param>
    /// <returns>A <see cref="ContentType"/> object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    public static ContentType ParseContentType(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        // We create an empty Content-Type which we will fill in when we see the values
        ContentType contentType = new ContentType();

        // Now decode the parameters
        List<KeyValuePair<string, string>> parameters = Rfc2231Decoder.Decode(headerValue);

        foreach (KeyValuePair<string, string> keyValuePair in parameters)
        {
            string key = keyValuePair.Key.ToUpperInvariant().Trim();
            string value = Utility.RemoveQuotesIfAny(keyValuePair.Value.Trim());
            switch (key)
            {
                case "":
                    // This is the MediaType - it has no key since it is the first one mentioned in the
                    // headerValue and has no = in it.

                    // Check for illegal content-type
                    if (value.ToUpperInvariant().Equals("TEXT"))
                        value = "text/plain";

                    contentType.MediaType = value;
                    break;

                case "BOUNDARY":
                    contentType.Boundary = value;
                    break;

                case "CHARSET":
                    contentType.CharSet = value;
                    break;

                case "NAME":
                    contentType.Name = EncodedWord.Decode(value);
                    break;

                default:
                    // This is to shut up the code help that is saying that contentType.Parameters
                    // can be null - which it cant!
                    if (contentType.Parameters == null)
                        throw new Exception("The ContentType parameters property is null. This will never be thrown.");

                    // We add the unknown value to our parameters list
                    // "Known" unknown values are:
                    // - title
                    // - report-type
                    contentType.Parameters.Add(key, value);
                    break;
            }
        }

        return contentType;
    }

    /// <summary>
    /// Parses a the value for the header Content-Disposition to a <see cref="ContentDisposition"/> object.
    /// </summary>
    /// <param name="headerValue">The value to be parsed</param>
    /// <returns>A <see cref="ContentDisposition"/> object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception>
    public static ContentDisposition ParseContentDisposition(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        // See http://www.ietf.org/rfc/rfc2183.txt for RFC definition

        // Create empty ContentDisposition - we will fill in details as we read them
        ContentDisposition contentDisposition = new ContentDisposition();

        // Now decode the parameters
        List<KeyValuePair<string, string>> parameters = Rfc2231Decoder.Decode(headerValue);

        foreach (KeyValuePair<string, string> keyValuePair in parameters)
        {
            string key = keyValuePair.Key.ToUpperInvariant().Trim();
            string value = keyValuePair.Value;
            switch (key)
            {
                case "":
                    // This is the DispisitionType - it has no key since it is the first one
                    // and has no = in it.
                    contentDisposition.DispositionType = value;
                    break;

                // The correct name of the parameter is filename, but some emails also contains the parameter
                // name, which also holds the name of the file. Therefore we use both names for the same field.
                case "NAME":
                case "FILENAME":
                    // The filename might be in qoutes, and it might be encoded-word encoded
                    contentDisposition.FileName = EncodedWord.Decode(Utility.RemoveQuotesIfAny(value));
                    break;

                case "CREATION-DATE":
                    // Notice that we need to create a new DateTime because of a failure in .NET 2.0.
                    // The failure is: you cannot give contentDisposition a DateTime with a Kind of UTC
                    // It will set the CreationDate correctly, but when trying to read it out it will throw an exception.
                    // It is the same with ModificationDate and ReadDate.
                    // This is fixed in 4.0 - maybe in 3.0 too.
                    // Therefore we create a new DateTime which have a DateTimeKind set to unspecified
                    DateTime creationDate = new DateTime(Rfc2822DateTime.StringToDate(Utility.RemoveQuotesIfAny(value)).Ticks);
                    contentDisposition.CreationDate = creationDate;
                    break;

                case "MODIFICATION-DATE":
                    DateTime midificationDate = new DateTime(Rfc2822DateTime.StringToDate(Utility.RemoveQuotesIfAny(value)).Ticks);
                    contentDisposition.ModificationDate = midificationDate;
                    break;

                case "READ-DATE":
                    DateTime readDate = new DateTime(Rfc2822DateTime.StringToDate(Utility.RemoveQuotesIfAny(value)).Ticks);
                    contentDisposition.ReadDate = readDate;
                    break;

                case "SIZE":
                    contentDisposition.Size = int.Parse(Utility.RemoveQuotesIfAny(value), CultureInfo.InvariantCulture);
                    break;

                default:
                    if (key.StartsWith("X-"))
                    {
                        contentDisposition.Parameters.Add(key, Utility.RemoveQuotesIfAny(value));
                        break;
                    }

                    throw new ArgumentException("Unknown parameter in Content-Disposition. Ask developer to fix! Parameter: " + key);
            }
        }

        return contentDisposition;
    }

    /// <summary>
    /// Parses an ID like Message-Id and Content-Id.<br/>
    /// Example:<br/>
    /// <c>&lt;test@test.com&gt;</c><br/>
    /// into<br/>
    /// <c>test@test.com</c>
    /// </summary>
    /// <param name="headerValue">The id to parse</param>
    /// <returns>A parsed ID</returns>
    public static string ParseId(string headerValue)
    {
        // Remove whitespace in front and behind since
        // whitespace is allowed there
        // Remove the last > and the first <
        return headerValue.Trim().TrimEnd('>').TrimStart('<');
    }

    /// <summary>
    /// Parses multiple IDs from a single string like In-Reply-To.
    /// </summary>
    /// <param name="headerValue">The value to parse</param>
    /// <returns>A list of IDs</returns>
    public static List<string> ParseMultipleIDs(string headerValue)
		{
			List<string> returner = new List<string>();

			// Split the string by >
			// We cannot use ' ' (space) here since this is a possible value:
			// <test@test.com><test2@test.com>
			string[] ids = headerValue.Trim().Split(new char[]{ '>' }, StringSplitOptions.RemoveEmptyEntries);
			foreach (string id in ids)
			{
				returner.Add(ParseId(id));
			}

			return returner;
		}
}

/// <summary>
/// Utility class for dealing with encoded word strings<br/>
/// <br/>
/// EncodedWord encoded strings are only in ASCII, but can embed information
/// about characters in other character sets.<br/>
/// <br/>
/// It is done by specifying the character set, an encoding that maps from ASCII to
/// the correct bytes and the actual encoded string.<br/>
/// <br/>
/// It is specified in a format that is best summarized by a BNF:<br/>
/// <c>"=?" character_set "?" encoding "?" encoded-text "?="</c><br/>
/// </summary>
/// <example>
/// <c>=?ISO-8859-1?Q?=2D?=</c>
/// Here <c>ISO-8859-1</c> is the character set.<br/>
/// <c>Q</c> is the encoding method (quoted-printable). <c>B</c> is also supported (Base 64).<br/>
/// The encoded text is the <c>=2D</c> part which is decoded to a space.
/// </example>
internal static class EncodedWord
{
    /// <summary>
    /// Decode text that is encoded with the <see cref="EncodedWord"/> encoding.<br/>
    ///<br/>
    /// This method will decode any encoded-word found in the string.<br/>
    /// All parts which is not encoded will not be touched.<br/>
    /// <br/>
    /// From <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>:<br/>
    /// <code>
    /// Generally, an "encoded-word" is a sequence of printable ASCII
    /// characters that begins with "=?", ends with "?=", and has two "?"s in
    /// between.  It specifies a character set and an encoding method, and
    /// also includes the original text encoded as graphic ASCII characters,
    /// according to the rules for that encoding method.
    /// </code>
    /// Example:<br/>
    /// <c>=?ISO-8859-1?q?this=20is=20some=20text?= other text here</c>
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2047#section-2">RFC 2047 section 2</a> "Syntax of encoded-words" for more details</remarks>
    /// <param name="encodedWords">Source text. May be content which is not encoded.</param>
    /// <returns>Decoded text</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="encodedWords"/> is <see langword="null"/></exception>
    public static string Decode(string encodedWords)
    {
        if (encodedWords == null)
            throw new ArgumentNullException("encodedWords");

        // Notice that RFC2231 redefines the BNF to
        // encoded-word := "=?" charset ["*" language] "?" encoded-text "?="
        // but no usage of this BNF have been spotted yet. It is here to
        // ease debugging if such a case is discovered.

        // This is the regex that should fit the BNF
        // RFC Says that NO WHITESPACE is allowed in this encoding, but there are examples
        // where whitespace is there, and therefore this regex allows for such.
        const string encodedWordRegex = @"\=\?(?<Charset>\S+?)\?(?<Encoding>\w)\?(?<Content>.+?)\?\=";
        // \w	Matches any word character including underscore. Equivalent to "[A-Za-z0-9_]".
        // \S	Matches any nonwhite space character. Equivalent to "[^ \f\n\r\t\v]".
        // +?   non-gready equivalent to +
        // (?<NAME>REGEX) is a named group with name NAME and regular expression REGEX

        // Any amount of linear-space-white between 'encoded-word's,
        // even if it includes a CRLF followed by one or more SPACEs,
        // is ignored for the purposes of display.
        // http://tools.ietf.org/html/rfc2047#page-12
        // Define a regular expression that captures two encoded words with some whitespace between them
        const string replaceRegex = @"(?<first>" + encodedWordRegex + @")\s+(?<second>" + encodedWordRegex + ")";

        // Then, find an occourance of such an expression, but remove the whitespace inbetween when found
        encodedWords = Regex.Replace(encodedWords, replaceRegex, "${first}${second}");

        string decodedWords = encodedWords;

        MatchCollection matches = Regex.Matches(encodedWords, encodedWordRegex);
        foreach (Match match in matches)
        {
            // If this match was not a success, we should not use it
            if (!match.Success) continue;

            string fullMatchValue = match.Value;

            string encodedText = match.Groups["Content"].Value;
            string encoding = match.Groups["Encoding"].Value;
            string charset = match.Groups["Charset"].Value;

            // Get the encoding which corrosponds to the character set
            Encoding charsetEncoding = EncodingFinder.FindEncoding(charset);

            // Store decoded text here when done
            string decodedText;

            // Encoding may also be written in lowercase
            switch (encoding.ToUpperInvariant())
            {
                // RFC:
                // The "B" encoding is identical to the "BASE64" 
                // encoding defined by RFC 2045.
                // http://tools.ietf.org/html/rfc2045#section-6.8
                case "B":
                    decodedText = Base64.Decode(encodedText, charsetEncoding);
                    break;

                // RFC:
                // The "Q" encoding is similar to the "Quoted-Printable" content-
                // transfer-encoding defined in RFC 2045.
                // There are more details to this. Please check
                // http://tools.ietf.org/html/rfc2047#section-4.2
                // 
                case "Q":
                    decodedText = QuotedPrintable.DecodeEncodedWord(encodedText, charsetEncoding);
                    break;

                default:
                    throw new ArgumentException("The encoding " + encoding + " was not recognized");
            }

            // Repalce our encoded value with our decoded value
            decodedWords = decodedWords.Replace(fullMatchValue, decodedText);
        }

        return decodedWords;
    }
}

/// <summary>
/// Contains common operations needed while decoding.
/// </summary>
internal static class Utility
{
    /// <summary>
    /// Remove quotes, if found, around the string.
    /// </summary>
    /// <param name="text">Text with quotes or without quotes</param>
    /// <returns>Text without quotes</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="text"/> is <see langword="null"/></exception>
    public static string RemoveQuotesIfAny(string text)
    {
        if (text == null)
            throw new ArgumentNullException("text");

        // Check if there are qoutes at both ends
        if (text[0] == '"' && text[text.Length - 1] == '"')
        {
            // Remove quotes at both ends
            return text.Substring(1, text.Length - 2);
        }

        // If no quotes were found, the text is just returned
        return text;
    }

    /// <summary>
    /// Split a string into a list of strings using a specified character.<br/>
    /// Everything inside quotes are ignored.
    /// </summary>
    /// <param name="input">A string to split</param>
    /// <param name="toSplitAt">The character to use to split with</param>
    /// <returns>A List of strings that was delimited by the <paramref name="toSplitAt"/> character</returns>
    public static List<string> SplitStringWithCharNotInsideQuotes(string input, char toSplitAt)
    {
        List<string> elements = new List<string>();

        int lastSplitLocation = 0;
        bool insideQuote = false;

        char[] characters = input.ToCharArray();

        for (int i = 0; i < characters.Length; i++)
        {
            char character = characters[i];
            if (character == '\"')
                insideQuote = !insideQuote;

            // Only split if we are not inside quotes
            if (character == toSplitAt && !insideQuote)
            {
                // We need to split
                int length = i - lastSplitLocation;
                elements.Add(input.Substring(lastSplitLocation, length));

                // Update last split location
                // + 1 so that we do not include the character used to split with next time
                lastSplitLocation = i + 1;
            }
        }

        // Add the last part
        elements.Add(input.Substring(lastSplitLocation, input.Length - lastSplitLocation));

        return elements;
    }
}

/// <summary>
/// Class used to decode RFC 2822 Date header fields.
/// </summary>
internal static class Rfc2822DateTime
{
    /// <summary>
    /// Converts a string in RFC 2822 format into a <see cref="DateTime"/> object
    /// </summary>
    /// <param name="inputDate">The date to convert</param>
    /// <returns>
    /// A valid <see cref="DateTime"/> object, which represents the same time as the string that was converted. 
    /// If <paramref name="inputDate"/> is not a valid date representation, then <see cref="DateTime.MinValue"/> is returned.
    /// </returns>
    /// <exception cref="ArgumentNullException"><exception cref="ArgumentNullException">If <paramref name="inputDate"/> is <see langword="null"/></exception></exception>
    /// <exception cref="ArgumentException">If the <paramref name="inputDate"/> could not be parsed into a <see cref="DateTime"/> object</exception>
    public static DateTime StringToDate(string inputDate)
    {
        if (inputDate == null)
            throw new ArgumentNullException("inputDate");

        // Old date specification allows comments and a lot of whitespace
        inputDate = StripCommentsAndExcessWhitespace(inputDate);

        try
        {
            // Extract the DateTime
            DateTime dateTime = ExtractDateTime(inputDate);

            // If a day-name is specified in the inputDate string, check if it fits with the date
            ValidateDayNameIfAny(dateTime, inputDate);

            // Convert the date into UTC
            dateTime = new DateTime(dateTime.Ticks, DateTimeKind.Utc);

            // Adjust according to the time zone
            dateTime = AdjustTimezone(dateTime, inputDate);

            // Return the parsed date
            return dateTime;
        }
        catch (FormatException e)	// Convert.ToDateTime() Failure
        {
            throw new ArgumentException("Could not parse date: " + e.Message + ". Input was: \"" + inputDate + "\"", e);
        }
        catch (ArgumentException e)
        {
            throw new ArgumentException("Could not parse date: " + e.Message + ". Input was: \"" + inputDate + "\"", e);
        }
    }

    /// <summary>
    /// Adjust the <paramref name="dateTime"/> object given according to the timezone specified in the <paramref name="dateInput"/>.
    /// </summary>
    /// <param name="dateTime">The date to alter</param>
    /// <param name="dateInput">The input date, in which the timezone can be found</param>
    /// <returns>An date altered according to the timezone</returns>
    /// <exception cref="ArgumentException">If no timezone was found in <paramref name="dateInput"/></exception>
    private static DateTime AdjustTimezone(DateTime dateTime, string dateInput)
    {
        // We know that the timezones are always in the last part of the date input
        string[] parts = dateInput.Split(' ');
        string lastPart = parts[parts.Length - 1];

        // Convert timezones in older formats to [+-]dddd format.
        lastPart = Regex.Replace(lastPart, @"UT|GMT|EST|EDT|CST|CDT|MST|MDT|PST|PDT|[A-I]|[K-Y]|Z", MatchEvaluator);

        // Find the timezone specification
        // Example: Fri, 21 Nov 1997 09:55:06 -0600
        // finds -0600
        Match match = Regex.Match(lastPart, @"[\+-](?<hours>\d\d)(?<minutes>\d\d)");
        if (match.Success)
        {
            // We have found that the timezone is in +dddd or -dddd format
            // Add the number of hours and minutes to our found date
            int hours = int.Parse(match.Groups["hours"].Value);
            int minutes = int.Parse(match.Groups["minutes"].Value);

            int factor = match.Value[0] == '+' ? -1 : 1;

            dateTime = dateTime.AddHours(factor * hours);
            dateTime = dateTime.AddMinutes(factor * minutes);

            return dateTime;
        }

        //DefaultLogger.Log.LogDebug("No timezone found in date: " + dateInput + ". Using -0000 as default.");

        // A timezone of -0000 is the same as doing nothing
        return dateTime;
    }

    /// <summary>
    /// Convert timezones in older formats to [+-]dddd format.
    /// </summary>
    /// <param name="match">The match that was found</param>
    /// <returns>The string to replace the matched string with</returns>
    private static string MatchEvaluator(Match match)
    {
        if (!match.Success)
        {
            throw new ArgumentException("Match success are always true");
        }

        switch (match.Value)
        {
            // "A" through "I"
            // are equivalent to "+0100" through "+0900" respectively
            case "A": return "+0100";
            case "B": return "+0200";
            case "C": return "+0300";
            case "D": return "+0400";
            case "E": return "+0500";
            case "F": return "+0600";
            case "G": return "+0700";
            case "H": return "+0800";
            case "I": return "+0900";

            // "K", "L", and "M"
            // are equivalent to "+1000", "+1100", and "+1200" respectively
            case "K": return "+1000";
            case "L": return "+1100";
            case "M": return "+1200";

            // "N" through "Y"
            // are equivalent to "-0100" through "-1200" respectively
            case "N": return "-0100";
            case "O": return "-0200";
            case "P": return "-0300";
            case "Q": return "-0400";
            case "R": return "-0500";
            case "S": return "-0600";
            case "T": return "-0700";
            case "U": return "-0800";
            case "V": return "-0900";
            case "W": return "-1000";
            case "X": return "-1100";
            case "Y": return "-1200";

            // "Z", "UT" and "GMT"
            // is equivalent to "+0000"
            case "Z":
            case "UT":
            case "GMT":
                return "+0000";

            // US time zones
            case "EDT": return "-0400"; // EDT is semantically equivalent to -0400
            case "EST": return "-0500"; // EST is semantically equivalent to -0500
            case "CDT": return "-0500"; // CDT is semantically equivalent to -0500
            case "CST": return "-0600"; // CST is semantically equivalent to -0600
            case "MDT": return "-0600"; // MDT is semantically equivalent to -0600
            case "MST": return "-0700"; // MST is semantically equivalent to -0700
            case "PDT": return "-0700"; // PDT is semantically equivalent to -0700
            case "PST": return "-0800"; // PST is semantically equivalent to -0800

            default:
                throw new ArgumentException("Unexpected input");
        }
    }

    /// <summary>
    /// Extracts the date and time parts from the <paramref name="dateInput"/>
    /// </summary>
    /// <param name="dateInput">The date input string, from which to extract the date and time parts</param>
    /// <returns>The extracted date part or <see langword="DateTime.MinValue"/> if <paramref name="dateInput"/> is not recognized as a valid date.</returns>
    private static DateTime ExtractDateTime(string dateInput)
    {
        // Matches the date and time part of a string
        // Example: Fri, 21 Nov 1997 09:55:06 -0600
        // Finds: 21 Nov 1997 09:55:06
        // Seconds does not need to be specified
        // Even though it is illigal, sometimes hours, minutes or seconds are only specified with one digit
        Match match = Regex.Match(dateInput, @"\d\d? .+ (\d\d\d\d|\d\d) \d?\d:\d?\d(:\d?\d)?");
        if (match.Success)
        {
            return Convert.ToDateTime(match.Value, CultureInfo.InvariantCulture);
        }

        //DefaultLogger.Log.LogError("The given date does not appear to be in a valid format: " + dateInput);
        return DateTime.MinValue;
    }

    /// <summary>
    /// Validates that the given <paramref name="dateTime"/> agrees with a day-name specified
    /// in <paramref name="dateInput"/>.
    /// </summary>
    /// <param name="dateTime">The time to check</param>
    /// <param name="dateInput">The date input to extract the day-name from</param>
    /// <exception cref="ArgumentException">If <paramref name="dateTime"/> and <paramref name="dateInput"/> does not agree on the day</exception>
    private static void ValidateDayNameIfAny(DateTime dateTime, string dateInput)
    {
        // Check if there is a day name in front of the date
        // Example: Fri, 21 Nov 1997 09:55:06 -0600
        if (dateInput.Length >= 4 && dateInput[3] == ',')
        {
            string dayName = dateInput.Substring(0, 3);

            // If a dayName was specified. Check that the dateTime and the dayName
            // agrees on which day it is
            // This is just a failure-check and could be left out
            if ((dateTime.DayOfWeek == DayOfWeek.Monday && !dayName.Equals("Mon")) ||
                (dateTime.DayOfWeek == DayOfWeek.Tuesday && !dayName.Equals("Tue")) ||
                (dateTime.DayOfWeek == DayOfWeek.Wednesday && !dayName.Equals("Wed")) ||
                (dateTime.DayOfWeek == DayOfWeek.Thursday && !dayName.Equals("Thu")) ||
                (dateTime.DayOfWeek == DayOfWeek.Friday && !dayName.Equals("Fri")) ||
                (dateTime.DayOfWeek == DayOfWeek.Saturday && !dayName.Equals("Sat")) ||
                (dateTime.DayOfWeek == DayOfWeek.Sunday && !dayName.Equals("Sun")))
            {
                //DefaultLogger.Log.LogDebug("Day-name does not correspond to the weekday of the date: " + dateInput);
            }
        }

        // If no day name was found no checks can be made
    }

    /// <summary>
    /// Strips and removes all comments and excessive whitespace from the string
    /// </summary>
    /// <param name="input">The input to strip from</param>
    /// <returns>The stripped string</returns>
    private static string StripCommentsAndExcessWhitespace(string input)
    {
        // Strip out comments
        // Also strips out nested comments
        input = Regex.Replace(input, @"(\((?>\((?<C>)|\)(?<-C>)|.?)*(?(C)(?!))\))", "");

        // Reduce any whitespace character to one space only
        input = Regex.Replace(input, @"\s+", " ");

        // Remove all initial whitespace
        input = Regex.Replace(input, @"^\s+", "");

        // Remove all ending whitespace
        input = Regex.Replace(input, @"\s+$", "");

        // Remove spaces at colons
        // Example: 22: 33 : 44 => 22:33:44
        input = Regex.Replace(input, @" ?: ?", ":");

        return input;
    }
}

/// <summary>
/// Utility class for dealing with Base64 encoded strings
/// </summary>
internal static class Base64
{
    /// <summary>
    /// Decodes a base64 encoded string into the bytes it describes
    /// </summary>
    /// <param name="base64Encoded">The string to decode</param>
    /// <returns>A byte array that the base64 string described</returns>
    public static byte[] Decode(string base64Encoded)
    {
        try
        {
            return Convert.FromBase64String(base64Encoded);
        }
        catch //(FormatException e)
        {
            //DefaultLogger.Log.LogError("Base64: (FormatException) " + e.Message + "\r\nOn string: " + base64Encoded);
            throw;
        }
    }

    /// <summary>
    /// Decodes a Base64 encoded string using a specified <see cref="System.Text.Encoding"/> 
    /// </summary>
    /// <param name="base64Encoded">Source string to decode</param>
    /// <param name="encoding">The encoding to use for the decoded byte array that <paramref name="base64Encoded"/> describes</param>
    /// <returns>A decoded string</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="base64Encoded"/> or <paramref name="encoding"/> is <see langword="null"/></exception>
    /// <exception cref="FormatException">If <paramref name="base64Encoded"/> is not a valid base64 encoded string</exception>
    public static string Decode(string base64Encoded, Encoding encoding)
    {
        if (base64Encoded == null)
            throw new ArgumentNullException("base64Encoded");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        return encoding.GetString(Decode(base64Encoded));
    }
}

/// <summary>
/// Used for decoding Quoted-Printable text.<br/>
/// This is a robust implementation of a Quoted-Printable decoder defined in <a href="http://tools.ietf.org/html/rfc2045">RFC 2045</a> and <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.<br/>
/// Every measurement has been taken to conform to the RFC.
/// </summary>
internal static class QuotedPrintable
{
    /// <summary>
    /// Decodes a Quoted-Printable string according to <a href="http://tools.ietf.org/html/rfc2047">RFC 2047</a>.<br/>
    /// RFC 2047 is used for decoding Encoded-Word encoded strings.
    /// </summary>
    /// <param name="toDecode">Quoted-Printable encoded string</param>
    /// <param name="encoding">Specifies which encoding the returned string will be in</param>
    /// <returns>A decoded string in the correct encoding</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> or <paramref name="encoding"/> is <see langword="null"/></exception>
    public static string DecodeEncodedWord(string toDecode, Encoding encoding)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        // Decode the QuotedPrintable string and return it
        return encoding.GetString(Rfc2047QuotedPrintableDecode(toDecode, true));
    }

    /// <summary>
    /// Decodes a Quoted-Printable string according to <a href="http://tools.ietf.org/html/rfc2045">RFC 2045</a>.<br/>
    /// RFC 2045 specifies the decoding of a body encoded with Content-Transfer-Encoding of quoted-printable.
    /// </summary>
    /// <param name="toDecode">Quoted-Printable encoded string</param>
    /// <returns>A decoded byte array that the Quoted-Printable encoded string described</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    public static byte[] DecodeContentTransferEncoding(string toDecode)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        // Decode the QuotedPrintable string and return it
        return Rfc2047QuotedPrintableDecode(toDecode, false);
    }

    /// <summary>
    /// This is the actual decoder.
    /// </summary>
    /// <param name="toDecode">The string to be decoded from Quoted-Printable</param>
    /// <param name="encodedWordVariant">
    /// If <see langword="true"/>, specifies that RFC 2047 quoted printable decoding is used.<br/>
    /// This is for quoted-printable encoded words<br/>
    /// <br/>
    /// If <see langword="false"/>, specifies that RFC 2045 quoted printable decoding is used.<br/>
    /// This is for quoted-printable Content-Transfer-Encoding
    /// </param>
    /// <returns>A decoded byte array that was described by <paramref name="toDecode"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toDecode"/> is <see langword="null"/></exception>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2047#section-4.2">RFC 2047 section 4.2</a> for RFC details</remarks>
    private static byte[] Rfc2047QuotedPrintableDecode(string toDecode, bool encodedWordVariant)
    {
        if (toDecode == null)
            throw new ArgumentNullException("toDecode");

        // Create a byte array builder which is roughly equivalent to a StringBuilder
        using (MemoryStream byteArrayBuilder = new MemoryStream())
        {
            // Remove illegal control characters
            toDecode = RemoveIllegalControlCharacters(toDecode);

            // Run through the whole string that needs to be decoded
            for (int i = 0; i < toDecode.Length; i++)
            {
                char currentChar = toDecode[i];
                if (currentChar == '=')
                {
                    // Check that there is at least two characters behind the equal sign
                    if (toDecode.Length - i < 3)
                    {
                        // We are at the end of the toDecode string, but something is missing. Handle it the way RFC 2045 states
                        WriteAllBytesToStream(byteArrayBuilder, DecodeEqualSignNotLongEnough(toDecode.Substring(i)));

                        // Since it was the last part, we should stop parsing anymore
                        break;
                    }

                    // Decode the Quoted-Printable part
                    string quotedPrintablePart = toDecode.Substring(i, 3);
                    WriteAllBytesToStream(byteArrayBuilder, DecodeEqualSign(quotedPrintablePart));

                    // We now consumed two extra characters. Go forward two extra characters
                    i += 2;
                }
                else
                {
                    // This character is not quoted printable hex encoded.

                    // Could it be the _ character, which represents space
                    // and are we using the encoded word variant of QuotedPrintable
                    if (currentChar == '_' && encodedWordVariant)
                    {
                        // The RFC specifies that the "_" always represents hexadecimal 20 even if the
                        // SPACE character occupies a different code position in the character set in use.
                        byteArrayBuilder.WriteByte(0x20);
                    }
                    else
                    {
                        // This is not encoded at all. This is a literal which should just be included into the output.
                        byteArrayBuilder.WriteByte((byte)currentChar);
                    }
                }
            }

            return byteArrayBuilder.ToArray();
        }
    }

    /// <summary>
    /// Writes all bytes in a byte array to a stream
    /// </summary>
    /// <param name="stream">The stream to write to</param>
    /// <param name="toWrite">The bytes to write to the <paramref name="stream"/></param>
    private static void WriteAllBytesToStream(Stream stream, byte[] toWrite)
    {
        stream.Write(toWrite, 0, toWrite.Length);
    }

    /// <summary>
    /// RFC 2045 states about robustness:<br/>
    /// <code>
    /// Control characters other than TAB, or CR and LF as parts of CRLF pairs,
    /// must not appear. The same is true for octets with decimal values greater
    /// than 126.  If found in incoming quoted-printable data by a decoder, a
    /// robust implementation might exclude them from the decoded data and warn
    /// the user that illegal characters were discovered.
    /// </code>
    /// Control characters are defined in RFC 2396 as<br/>
    /// <c>control = US-ASCII coded characters 00-1F and 7F hexadecimal</c>
    /// </summary>
    /// <param name="input">String to be stripped from illegal control characters</param>
    /// <returns>A string with no illegal control characters</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    private static string RemoveIllegalControlCharacters(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        // First we remove any \r or \n which is not part of a \r\n pair
        input = RemoveCarriageReturnAndNewLinewIfNotInPair(input);

        // Here only legal \r\n is left over
        // We now simply keep them, and the \t which is also allowed
        // \x0A = \n
        // \x0D = \r
        // \x09 = \t)
        return Regex.Replace(input, "[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]", "");
    }

    /// <summary>
    /// This method will remove any \r and \n which is not paired as \r\n
    /// </summary>
    /// <param name="input">String to remove lonely \r and \n's from</param>
    /// <returns>A string without lonely \r and \n's</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    private static string RemoveCarriageReturnAndNewLinewIfNotInPair(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        // Use this for building up the new string. This is used for performance instead
        // of altering the input string each time a illegal token is found
        StringBuilder newString = new StringBuilder(input.Length);

        for (int i = 0; i < input.Length; i++)
        {
            // There is a character after it
            // Check for lonely \r
            // There is a lonely \r if it is the last character in the input or if there
            // is no \n following it
            if (input[i] == '\r' && (i + 1 >= input.Length || input[i + 1] != '\n'))
            {
                // Illegal token \r found. Do not add it to the new string

                // Check for lonely \n
                // There is a lonely \n if \n is the first character or if there
                // is no \r in front of it
            }
            else if (input[i] == '\n' && (i - 1 < 0 || input[i - 1] != '\r'))
            {
                // Illegal token \n found. Do not add it to the new string
            }
            else
            {
                // No illegal tokens found. Simply insert the character we are at
                // in our new string
                newString.Append(input[i]);
            }
        }

        return newString.ToString();
    }

    /// <summary>
    /// RFC 2045 says that a robust implementation should handle:<br/>
    /// <code>
    /// An "=" cannot be the ultimate or penultimate character in an encoded
    /// object. This could be handled as in case (2) above.
    /// </code>
    /// Case (2) is:<br/>
    /// <code>
    /// An "=" followed by a character that is neither a
    /// hexadecimal digit (including "abcdef") nor the CR character of a CRLF pair
    /// is illegal.  This case can be the result of US-ASCII text having been
    /// included in a quoted-printable part of a message without itself having
    /// been subjected to quoted-printable encoding.  A reasonable approach by a
    /// robust implementation might be to include the "=" character and the
    /// following character in the decoded data without any transformation and, if
    /// possible, indicate to the user that proper decoding was not possible at
    /// this point in the data.
    /// </code>
    /// </summary>
    /// <param name="decode">
    /// The string to decode which cannot have length above or equal to 3
    /// and must start with an equal sign.
    /// </param>
    /// <returns>A decoded byte array</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="decode"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">Thrown if a the <paramref name="decode"/> parameter has length above 2 or does not start with an equal sign.</exception>
    private static byte[] DecodeEqualSignNotLongEnough(string decode)
    {
        if (decode == null)
            throw new ArgumentNullException("decode");

        // We can only decode wrong length equal signs
        if (decode.Length >= 3)
            throw new ArgumentException("decode must have length lower than 3", "decode");

        // First char must be =
        if (decode[0] != '=')
            throw new ArgumentException("First part of decode must be an equal sign", "decode");

        // We will now believe that the string sent to us, was actually not encoded
        // Therefore it must be in US-ASCII and we will return the bytes it corrosponds to
        return Encoding.ASCII.GetBytes(decode);
    }

    /// <summary>
    /// This helper method will decode a string of the form "=XX" where X is any character.<br/>
    /// This method will never fail, unless an argument of length not equal to three is passed.
    /// </summary>
    /// <param name="decode">The length 3 character that needs to be decoded</param>
    /// <returns>A decoded byte array</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="decode"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">Thrown if a the <paramref name="decode"/> parameter does not have length 3 or does not start with an equal sign.</exception>
    private static byte[] DecodeEqualSign(string decode)
		{
			if (decode == null)
				throw new ArgumentNullException("decode");

			// We can only decode the string if it has length 3 - other calls to this function is invalid
			if (decode.Length != 3)
				throw new ArgumentException("decode must have length 3", "decode");

			// First char must be =
			if (decode[0] != '=')
				throw new ArgumentException("decode must start with an equal sign", "decode");

			// There are two cases where an equal sign might appear
			// It might be a
			//   - hex-string like =3D, denoting the character with hex value 3D
			//   - it might be the last character on the line before a CRLF
			//     pair, denoting a soft linebreak, which simply
			//     splits the text up, because of the 76 chars per line restriction
			if (decode.Contains("\r\n"))
			{
				// Soft break detected
				// We want to return string.Empty which is equivalent to a zero-length byte array
				return new byte[0]; 
			}

			// Hex string detected. Convertion needed.
			// It might be that the string located after the equal sign is not hex characters
			// An example: =JU
			// In that case we would like to catch the FormatException and do something else
			try
			{
				// The number part of the string is the last two digits. Here we simply remove the equal sign
				string numberString = decode.Substring(1);

				// Now we create a byte array with the converted number encoded in the string as a hex value (base 16)
				// This will also handle illegal encodings like =3d where the hex digits are not uppercase,
				// which is a robustness requirement from RFC 2045.
				byte[] oneByte = { Convert.ToByte(numberString, 16) };

				// Simply return our one byte byte array
				return oneByte;
			} catch (FormatException)
			{
				// RFC 2045 says about robust implementation:
				// An "=" followed by a character that is neither a
				// hexadecimal digit (including "abcdef") nor the CR
				// character of a CRLF pair is illegal.  This case can be
				// the result of US-ASCII text having been included in a
				// quoted-printable part of a message without itself
				// having been subjected to quoted-printable encoding.  A
				// reasonable approach by a robust implementation might be
				// to include the "=" character and the following
				// character in the decoded data without any
				// transformation and, if possible, indicate to the user
				// that proper decoding was not possible at this point in
				// the data.

				// So we choose to believe this is actually an un-encoded string
				// Therefore it must be in US-ASCII and we will return the bytes it corrosponds to
				return Encoding.ASCII.GetBytes(decode);
			}
		}
}

///<summary>
/// Utility class that divides a message into a body and a header.<br/>
/// The header is then parsed to a strongly typed <see cref="MessageHeader"/> object.
///</summary>
internal static class HeaderExtractor
{
    /// <summary>
    /// Find the end of the header section in a byte array.<br/>
    /// The headers have ended when a blank line is found
    /// </summary>
    /// <param name="messageContent">The full message stored as a byte array</param>
    /// <returns>The position of the line just after the header end blank line</returns>
    private static int FindHeaderEndPosition(byte[] messageContent)
    {
        // Convert the byte array into a stream
        using (Stream stream = new MemoryStream(messageContent))
        {
            while (true)
            {
                // Read a line from the stream. We know headers are in US-ASCII
                // therefore it is not problem to read them as such
                string line = StreamUtility.ReadLineAsAscii(stream);

                // The end of headers is signaled when a blank line is found
                // or if the line is null - in which case the email is actually an email with
                // only headers but no body
                if (string.IsNullOrEmpty(line))
                    return (int)stream.Position;
            }
        }
    }

    /// <summary>
    /// Extract the header part and body part of a message.<br/>
    /// The headers are then parsed to a strongly typed <see cref="MessageHeader"/> object.
    /// </summary>
    /// <param name="fullRawMessage">The full message in bytes where header and body needs to be extracted from</param>
    /// <param name="headers">The extracted header parts of the message</param>
    /// <param name="body">The body part of the message</param>
    /// <exception cref="ArgumentNullException">If <paramref name="fullRawMessage"/> is <see langword="null"/></exception>
    public static void ExtractHeadersAndBody(byte[] fullRawMessage, out MessageHeader headers, out byte[] body)
    {
        if (fullRawMessage == null)
            throw new ArgumentNullException("fullRawMessage");

        // Find the end location of the headers
        int endOfHeaderLocation = FindHeaderEndPosition(fullRawMessage);

        // The headers are always in ASCII - therefore we can convert the header part into a string
        // using US-ASCII encoding
        string headersString = Encoding.ASCII.GetString(fullRawMessage, 0, endOfHeaderLocation);

        // Now parse the headers to a NameValueCollection
        NameValueCollection headersUnparsedCollection = ExtractHeaders(headersString);

        // Use the NameValueCollection to parse it into a strongly-typed MessageHeader header
        headers = new MessageHeader(headersUnparsedCollection);

        // Since we know where the headers end, we also know where the body is
        // Copy the body part into the body parameter
        body = new byte[fullRawMessage.Length - endOfHeaderLocation];
        Array.Copy(fullRawMessage, endOfHeaderLocation, body, 0, body.Length);
    }

    /// <summary>
    /// Method that takes a full message and extract the headers from it.
    /// </summary>
    /// <param name="messageContent">The message to extract headers from. Does not need the body part. Needs the empty headers end line.</param>
    /// <returns>A collection of Name and Value pairs of headers</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="messageContent"/> is <see langword="null"/></exception>
    private static NameValueCollection ExtractHeaders(string messageContent)
    {
        if (messageContent == null)
            throw new ArgumentNullException("messageContent");

        NameValueCollection headers = new NameValueCollection();

        using (StringReader messageReader = new StringReader(messageContent))
        {
            // Read until all headers have ended.
            // The headers ends when an empty line is encountered
            // An empty message might actually not have an empty line, in which
            // case the headers end with null value.
            string line;
            while (!string.IsNullOrEmpty(line = messageReader.ReadLine()))
            {
                // Split into name and value
                KeyValuePair<string, string> header = SeparateHeaderNameAndValue(line);

                // First index is header name
                string headerName = header.Key;

                // Second index is the header value.
                // Use a StringBuilder since the header value may be continued on the next line
                StringBuilder headerValue = new StringBuilder(header.Value);

                // Keep reading until we would hit next header
                // This if for handling multi line headers
                while (IsMoreLinesInHeaderValue(messageReader))
                {
                    // Unfolding is accomplished by simply removing any CRLF
                    // that is immediately followed by WSP
                    // This was done using ReadLine (it discards CRLF)
                    // See http://tools.ietf.org/html/rfc822#section-3.1.1 for more information
                    string moreHeaderValue = messageReader.ReadLine();

                    // If this exception is ever raised, there is an serious algorithm failure
                    // IsMoreLinesInHeaderValue does not return true if the next line does not exist
                    // This check is only included to stop the nagging "possibly null" code analysis hint
                    if (moreHeaderValue == null)
                        throw new ArgumentException("This will never happen");

                    // Simply append the line just read to the header value
                    headerValue.Append(moreHeaderValue);
                }

                // Now we have the name and full value. Add it
                headers.Add(headerName, headerValue.ToString());
            }
        }

        return headers;
    }

    /// <summary>
    /// Check if the next line is part of the current header value we are parsing by
    /// peeking on the next character of the <see cref="TextReader"/>.<br/>
    /// This should only be called while parsing headers.
    /// </summary>
    /// <param name="reader">The reader from which the header is read from</param>
    /// <returns><see langword="true"/> if multi-line header. <see langword="false"/> otherwise</returns>
    private static bool IsMoreLinesInHeaderValue(TextReader reader)
    {
        int peek = reader.Peek();
        if (peek == -1)
            return false;

        char peekChar = (char)peek;

        // A multi line header must have a whitespace character
        // on the next line if it is to be continued
        return peekChar == ' ' || peekChar == '\t';
    }

    /// <summary>
    /// Separate a full header line into a header name and a header value.
    /// </summary>
    /// <param name="rawHeader">The raw header line to be separated</param>
    /// <exception cref="ArgumentNullException">If <paramref name="rawHeader"/> is <see langword="null"/></exception>
    internal static KeyValuePair<string, string> SeparateHeaderNameAndValue(string rawHeader)
    {
        if (rawHeader == null)
            throw new ArgumentNullException("rawHeader");

        string key = string.Empty;
        string value = string.Empty;

        int indexOfColon = rawHeader.IndexOf(':');

        // Check if it is allowed to make substring calls
        if (indexOfColon >= 0 && rawHeader.Length >= indexOfColon + 1)
        {
            key = rawHeader.Substring(0, indexOfColon).Trim();
            value = rawHeader.Substring(indexOfColon + 1).Trim();
        }

        return new KeyValuePair<string, string>(key, value);
    }
}

/// <summary>
/// Utility class used by OpenPop for mapping from a characterSet to an <see cref="Encoding"/>.<br/>
/// <br/>
/// The functionality of the class can be altered by adding mappings
/// using <see cref="AddMapping"/> and by adding a <see cref="FallbackDecoder"/>.<br/>
/// <br/>
/// Given a characterSet, it will try to find the Encoding as follows:
/// <list type="number">
///     <item>
///         <description>If a mapping for the characterSet was added, use the specified Encoding from there. Mappings can be added using <see cref="AddMapping"/>.</description>
///     </item>
///     <item>
///         <description>Try to parse the characterSet and look it up using <see cref="Encoding.GetEncoding(int)"/> for codepages or <see cref="Encoding.GetEncoding(string)"/> for named encodings.</description>
///     </item>
///     <item>
///         <description>If an encoding is not found yet, use the <see cref="FallbackDecoder"/> if defined. The <see cref="FallbackDecoder"/> is user defined.</description>
///     </item>
/// </list>
/// </summary>
public static class EncodingFinder
{
    /// <summary>
    /// Delegate that is used when the EncodingFinder is unable to find an encoding by
    /// using the <see cref="EncodingFinder.EncodingMap"/> or general code.<br/>
    /// This is used as a last resort and can be used for setting a default encoding or
    /// for finding an encoding on runtime for some <paramref name="characterSet"/>.
    /// </summary>
    /// <param name="characterSet">The character set to find an encoding for.</param>
    /// <returns>An encoding for the <paramref name="characterSet"/> or <see langword="null"/> if none could be found.</returns>
    public delegate Encoding FallbackDecoderDelegate(string characterSet);

    /// <summary>
    /// Last resort decoder. <seealso cref="FallbackDecoderDelegate"/>.
    /// </summary>
    public static FallbackDecoderDelegate FallbackDecoder { private get { return _fallbackDecoder; } set { _fallbackDecoder = value; } }
    private static FallbackDecoderDelegate _fallbackDecoder;

    /// <summary>
    /// Mapping from charactersets to encodings.
    /// </summary>
    private static Dictionary<string, Encoding> EncodingMap { get { return _encodingMap; } set { _encodingMap = value; } }
    private static Dictionary<string, Encoding> _encodingMap;

    /// <summary>
    /// Initialize the EncodingFinder
    /// </summary>
    static EncodingFinder()
    {
        Reset();
    }

    /// <summary>
    /// Used to reset this static class to facilite isolated unit testing.
    /// </summary>
    internal static void Reset()
    {
        EncodingMap = new Dictionary<string, Encoding>();
        FallbackDecoder = null;

        // Some emails incorrectly specify the encoding as utf8, but it should have been utf-8.
        AddMapping("utf8", Encoding.UTF8);
    }

    /// <summary>
    /// Parses a character set into an encoding.
    /// </summary>
    /// <param name="characterSet">The character set to parse</param>
    /// <returns>An encoding which corresponds to the character set</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="characterSet"/> is <see langword="null"/></exception>
    internal static Encoding FindEncoding(string characterSet)
    {
        if (characterSet == null)
            throw new ArgumentNullException("characterSet");

        string charSetUpper = characterSet.ToUpperInvariant();

        // Check if the characterSet is explicitly mapped to an encoding
        if (EncodingMap.ContainsKey(charSetUpper))
            return EncodingMap[charSetUpper];

        // Try to find the generally find the encoding
        try
        {
            if (charSetUpper.Contains("WINDOWS") || charSetUpper.Contains("CP"))
            {
                // It seems the characterSet contains an codepage value, which we should use to parse the encoding
                charSetUpper = charSetUpper.Replace("CP", ""); // Remove cp
                charSetUpper = charSetUpper.Replace("WINDOWS", ""); // Remove windows
                charSetUpper = charSetUpper.Replace("-", ""); // Remove - which could be used as cp-1554

                // Now we hope the only thing left in the characterSet is numbers.
                int codepageNumber = int.Parse(charSetUpper, CultureInfo.InvariantCulture);

                return Encoding.GetEncoding(codepageNumber);
            }

            // It seems there is no codepage value in the characterSet. It must be a named encoding
            return Encoding.GetEncoding(characterSet);
        }
        catch (ArgumentException)
        {
            // The encoding could not be found generally. 
            // Try to use the FallbackDecoder if it is defined.

            // Check if it is defined
            if (FallbackDecoder == null)
                throw; // It was not defined - throw catched exception

            // Use the FallbackDecoder
            Encoding fallbackDecoderResult = FallbackDecoder(characterSet);

            // Check if the FallbackDecoder had a solution
            if (fallbackDecoderResult != null)
                return fallbackDecoderResult;

            // If no solution was found, throw catched exception
            throw;
        }
    }

    /// <summary>
    /// Puts a mapping from <paramref name="characterSet"/> to <paramref name="encoding"/>
    /// into the <see cref="EncodingFinder"/>'s internal mapping Dictionary.
    /// </summary>
    /// <param name="characterSet">The string that maps to the <paramref name="encoding"/></param>
    /// <param name="encoding">The <see cref="Encoding"/> that should be mapped from <paramref name="characterSet"/></param>
    /// <exception cref="ArgumentNullException">If <paramref name="characterSet"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentNullException">If <paramref name="encoding"/> is <see langword="null"/></exception>
    public static void AddMapping(string characterSet, Encoding encoding)
    {
        if (characterSet == null)
            throw new ArgumentNullException("characterSet");

        if (encoding == null)
            throw new ArgumentNullException("encoding");

        // Add the mapping using uppercase
        EncodingMap.Add(characterSet.ToUpperInvariant(), encoding);
    }
}

/// <summary>
/// A MessagePart is a part of an email message used to describe the whole email parse tree.<br/>
/// <br/>
/// <b>Email messages are tree structures</b>:<br/>
/// Email messages may contain large tree structures, and the MessagePart are the nodes of the this structure.<br/>
/// A MessagePart may either be a leaf in the structure or a internal node with links to other MessageParts.<br/>
/// The root of the message tree is the <see cref="Message"/> class.<br/>
/// <br/>
/// <b>Leafs</b>:<br/>
/// If a MessagePart is a leaf, the part is not a <see cref="IsMultiPart">MultiPart</see> message.<br/>
/// Leafs are where the contents of an email are placed.<br/>
/// This includes, but is not limited to: attachments, text or images referenced from HTML.<br/>
/// The content of an attachment can be fetched by using the <see cref="Body"/> property.<br/>
/// If you want to have the text version of a MessagePart, use the <see cref="GetBodyAsText"/> method which will<br/>
/// convert the <see cref="Body"/> into a string using the encoding the message was sent with.<br/>
/// <br/>
/// <b>Internal nodes</b>:<br/>
/// If a MessagePart is an internal node in the email tree structure, then the part is a <see cref="IsMultiPart">MultiPart</see> message.<br/>
/// The <see cref="MessageParts"/> property will then contain links to the parts it contain.<br/>
/// The <see cref="Body"/> property of the MessagePart will not be set.<br/>
/// <br/>
/// See the example for a parsing example.<br/>
/// This class cannot be instantiated from outside the library.
/// </summary>
/// <example>
/// This example illustrates how the message parse tree looks like given a specific message<br/>
/// <br/>
/// The message source in this example is:<br/>
/// <code>
/// MIME-Version: 1.0
///	Content-Type: multipart/mixed; boundary="frontier"
///	
///	This is a message with multiple parts in MIME format.
///	--frontier
/// Content-Type: text/plain
///	
///	This is the body of the message.
///	--frontier
///	Content-Type: application/octet-stream
///	Content-Transfer-Encoding: base64
///	
///	PGh0bWw+CiAgPGHLYWQ+CiAgPC9oZWFkPgogIDxib2R5PgogICAgPHA+VGhpcyBpcyB0aGUg
///	Ym9keSBvZiB0aGUgbWVzc2FnZS48L3A+CiAgPC9ib2R5Pgo8L2h0bWw+Cg==
///	--frontier--
/// </code>
/// The tree will look as follows, where the content-type media type of the message is listed<br/>
/// <code>
/// - Message root
///   - multipart/mixed MessagePart
///     - text/plain MessagePart
///     - application/octet-stream MessagePart
/// </code>
/// It is possible to have more complex message trees like the following:<br/>
/// <code>
/// - Message root
///   - multipart/mixed MessagePart
///     - text/plain MessagePart
///     - text/plain MessagePart
///     - multipart/parallel
///       - audio/basic
///       - image/tiff
///     - text/enriched
///     - message/rfc822
/// </code>
/// But it is also possible to have very simple message trees like:<br/>
/// <code>
/// - Message root
///   - text/plain
/// </code>
/// </example>
public class MessagePart
{
    #region Public properties
    /// <summary>
    /// The Content-Type header field.<br/>
    /// <br/>
    /// If not set, the ContentType is created by the default "text/plain; charset=us-ascii" which is
    /// defined in <a href="http://tools.ietf.org/html/rfc2045#section-5.2">RFC 2045 section 5.2</a>.<br/>
    /// <br/>
    /// If set, the default is overridden.
    /// </summary>
    public ContentType ContentType { get { return _contentType; } private set { _contentType = value; } }
    private ContentType _contentType;

    /// <summary>
    /// A human readable description of the body<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Description header was present in the message.<br/>
    /// </summary>
    public string ContentDescription { get { return _contentDescription; } private set { _contentDescription = value; } }
    private string _contentDescription;

    /// <summary>
    /// This header describes the Content encoding during transfer.<br/>
    /// <br/>
    /// If no Content-Transfer-Encoding header was present in the message, it is set
    /// to the default of <see cref="Header.ContentTransferEncoding.SevenBit">SevenBit</see> in accordance to the RFC.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2045#section-6">RFC 2045 section 6</a> for details</remarks>
    public ContentTransferEncoding ContentTransferEncoding { get { return _contentTransferEncoding; } private set { _contentTransferEncoding = value; } }
    private ContentTransferEncoding _contentTransferEncoding;

    /// <summary>
    /// ID of the content part (like an attached image). Used with MultiPart messages.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-ID header field was present in the message.
    /// </summary>
    public string ContentId { get { return _contentId; } private set { _contentId = value; } }
    private string _contentId;

    /// <summary>
    /// Used to describe if a <see cref="MessagePart"/> is to be displayed or to be though of as an attachment.<br/>
    /// Also contains information about filename if such was sent.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Disposition header field was present in the message
    /// </summary>
    public ContentDisposition ContentDisposition { get { return _contentDisposition; } private set { _contentDisposition = value; } }
    private ContentDisposition _contentDisposition;

    /// <summary>
    /// This is the encoding used to parse the message body if the <see cref="MessagePart"/><br/>
    /// is not a MultiPart message. It is derived from the <see cref="ContentType"/> character set property.
    /// </summary>
    public Encoding BodyEncoding { get { return _bodyEncoding; } private set { _bodyEncoding = value; } }
    private Encoding _bodyEncoding;

    /// <summary>
    /// This is the parsed body of this <see cref="MessagePart"/>.<br/>
    /// It is parsed in that way, if the body was ContentTransferEncoded, it has been decoded to the
    /// correct bytes.<br/>
    /// <br/>
    /// It will be <see langword="null"/> if this <see cref="MessagePart"/> is a MultiPart message.<br/>
    /// Use <see cref="IsMultiPart"/> to check if this <see cref="MessagePart"/> is a MultiPart message.
    /// </summary>
    public byte[] Body { get { return _body; } private set { _body = value; } }
    private byte[] _body;

    /// <summary>
    /// Describes if this <see cref="MessagePart"/> is a MultiPart message<br/>
    /// <br/>
    /// The <see cref="MessagePart"/> is a MultiPart message if the <see cref="ContentType"/> media type property starts with "multipart/"
    /// </summary>
    public bool IsMultiPart
    {
        get
        {
            return ContentType.MediaType.StartsWith("multipart/", StringComparison.OrdinalIgnoreCase);
        }
    }

    /// <summary>
    /// A <see cref="MessagePart"/> is considered to be holding text in it's body if the MediaType
    /// starts either "text/" or is equal to "message/rfc822"
    /// </summary>
    public bool IsText
    {
        get
        {
            string mediaType = ContentType.MediaType;
            return mediaType.StartsWith("text/", StringComparison.OrdinalIgnoreCase) || mediaType.Equals("message/rfc822", StringComparison.OrdinalIgnoreCase);
        }
    }

    /// <summary>
    /// A <see cref="MessagePart"/> is considered to be an attachment, if<br/>
    /// - it is not holding <see cref="IsText">text</see> and is not a <see cref="IsMultiPart">MultiPart</see> message<br/>
    /// or<br/>
    /// - it has a Content-Disposition header that says it is an attachment
    /// </summary>
    public bool IsAttachment
    {
        get
        {
            // Inline is the opposite of attachment
            return (!IsText && !IsMultiPart) || (ContentDisposition != null && !ContentDisposition.Inline);
        }
    }

    /// <summary>
    /// This is a convenient-property for figuring out a FileName for this <see cref="MessagePart"/>.<br/>
    /// If the <see cref="MessagePart"/> is a MultiPart message, then it makes no sense to try to find a FileName.<br/>
    /// <br/>
    /// The FileName can be specified in the <see cref="ContentDisposition"/> or in the <see cref="ContentType"/> properties.<br/>
    /// If none of these places two places tells about the FileName, a default "(no name)" is returned.
    /// </summary>
    public string FileName { get { return _fileName; } private set { _fileName = value; } }
    private string _fileName;

    /// <summary>
    /// If this <see cref="MessagePart"/> is a MultiPart message, then this property
    /// has a list of each of the Multiple parts that the message consists of.<br/>
    /// <br/>
    /// It is <see langword="null"/> if it is not a MultiPart message.<br/>
    /// Use <see cref="IsMultiPart"/> to check if this <see cref="MessagePart"/> is a MultiPart message.
    /// </summary>
    public List<MessagePart> MessageParts { get { return _messageParts; } private set { _messageParts = value; } }
    private List<MessagePart> _messageParts;
    #endregion

    #region Constructors
    /// <summary>
    /// Used to construct the topmost message part
    /// </summary>
    /// <param name="rawBody">The body that needs to be parsed</param>
    /// <param name="headers">The headers that should be used from the message</param>
    /// <exception cref="ArgumentNullException">If <paramref name="rawBody"/> or <paramref name="headers"/> is <see langword="null"/></exception>
    internal MessagePart(byte[] rawBody, MessageHeader headers)
    {
        if (rawBody == null)
            throw new ArgumentNullException("rawBody");

        if (headers == null)
            throw new ArgumentNullException("headers");

        ContentType = headers.ContentType;
        ContentDescription = headers.ContentDescription;
        ContentTransferEncoding = headers.ContentTransferEncoding;
        ContentId = headers.ContentId;
        ContentDisposition = headers.ContentDisposition;

        FileName = FindFileName(ContentType, ContentDisposition, "(no name)");
        BodyEncoding = ParseBodyEncoding(ContentType.CharSet);

        ParseBody(rawBody);
    }
    #endregion

    #region Parsing
    /// <summary>
    /// Parses a character set into an encoding
    /// </summary>
    /// <param name="characterSet">The character set that needs to be parsed. <see langword="null"/> is allowed.</param>
    /// <returns>The encoding specified by the <paramref name="characterSet"/> parameter, or ASCII if the character set was <see langword="null"/> or empty</returns>
    private static Encoding ParseBodyEncoding(string characterSet)
    {
        // Default encoding in Mime messages is US-ASCII
        Encoding encoding = Encoding.ASCII;

        // If the character set was specified, find the encoding that the character
        // set describes, and use that one instead
        if (!string.IsNullOrEmpty(characterSet))
            encoding = EncodingFinder.FindEncoding(characterSet);

        return encoding;
    }

    /// <summary>
    /// Figures out the filename of this message part from some headers.
    /// <see cref="FileName"/> property.
    /// </summary>
    /// <param name="contentType">The Content-Type header</param>
    /// <param name="contentDisposition">The Content-Disposition header</param>
    /// <param name="defaultName">The default filename to use, if no other could be found</param>
    /// <returns>The filename found, or the default one if not such filename could be found in the headers</returns>
    /// <exception cref="ArgumentNullException">if <paramref name="contentType"/> is <see langword="null"/></exception>
    private static string FindFileName(ContentType contentType, ContentDisposition contentDisposition, string defaultName)
    {
        if (contentType == null)
            throw new ArgumentNullException("contentType");

        if (contentDisposition != null && contentDisposition.FileName != null)
            return contentDisposition.FileName;

        if (contentType.Name != null)
            return contentType.Name;

        return defaultName;
    }

    /// <summary>
    /// Parses a byte array as a body of an email message.
    /// </summary>
    /// <param name="rawBody">The byte array to parse as body of an email message. This array may not contain headers.</param>
    private void ParseBody(byte[] rawBody)
    {
        if (IsMultiPart)
        {
            // Parses a MultiPart message
            ParseMultiPartBody(rawBody);
        }
        else
        {
            // Parses a non MultiPart message
            // Decode the body accodingly and set the Body property
            Body = DecodeBody(rawBody, ContentTransferEncoding);
        }
    }

    /// <summary>
    /// Parses the <paramref name="rawBody"/> byte array as a MultiPart message.<br/>
    /// It is not valid to call this method if <see cref="IsMultiPart"/> returned <see langword="false"/>.<br/>
    /// Fills the <see cref="MessageParts"/> property of this <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="rawBody">The byte array which is to be parsed as a MultiPart message</param>
    private void ParseMultiPartBody(byte[] rawBody)
    {
        // Fetch out the boundary used to delimit the messages within the body
        string multipartBoundary = ContentType.Boundary;

        // Fetch the individual MultiPart message parts using the MultiPart boundary
        List<byte[]> bodyParts = GetMultiPartParts(rawBody, multipartBoundary);

        // Initialize the MessageParts property, with room to as many bodies as we have found
        MessageParts = new List<MessagePart>(bodyParts.Count);

        // Now parse each byte array as a message body and add it the the MessageParts property
        foreach (byte[] bodyPart in bodyParts)
        {
            MessagePart messagePart = GetMessagePart(bodyPart);
            MessageParts.Add(messagePart);
        }
    }

    /// <summary>
    /// Given a byte array describing a full message.<br/>
    /// Parses the byte array into a <see cref="MessagePart"/>.
    /// </summary>
    /// <param name="rawMessageContent">The byte array containing both headers and body of a message</param>
    /// <returns>A <see cref="MessagePart"/> which was described by the <paramref name="rawMessageContent"/> byte array</returns>
    private static MessagePart GetMessagePart(byte[] rawMessageContent)
    {
        // Find the headers and the body parts of the byte array
        MessageHeader headers;
        byte[] body;
        HeaderExtractor.ExtractHeadersAndBody(rawMessageContent, out headers, out body);

        // Create a new MessagePart from the headers and the body
        return new MessagePart(body, headers);
    }

    /// <summary>
    /// Gets a list of byte arrays where each entry in the list is a full message of a message part
    /// </summary>
    /// <param name="rawBody">The raw byte array describing the body of a message which is a MultiPart message</param>
    /// <param name="multipPartBoundary">The delimiter that splits the different MultiPart bodies from each other</param>
    /// <returns>A list of byte arrays, each a full message of a <see cref="MessagePart"/></returns>
    private static List<byte[]> GetMultiPartParts(byte[] rawBody, string multipPartBoundary)
    {
        // This is the list we want to return
        List<byte[]> messageBodies = new List<byte[]>();

        // Create a stream from which we can find MultiPart boundaries
        using (MemoryStream stream = new MemoryStream(rawBody))
        {
            bool lastMultipartBoundaryEncountered;

            // Find the start of the first message in this multipart
            // Since the method returns the first character on a the line containing the MultiPart boundary, we
            // need to add the MultiPart boundary with prepended "--" and appended CRLF pair to the position returned.
            int startLocation = FindPositionOfNextMultiPartBoundary(stream, multipPartBoundary, out lastMultipartBoundaryEncountered) + ("--" + multipPartBoundary + "\r\n").Length;
            while (true)
            {
                // When we have just parsed the last multipart entry, stop parsing on
                if (lastMultipartBoundaryEncountered)
                    break;

                // Find the end location of the current multipart
                // Since the method returns the first character on a the line containing the MultiPart boundary, we
                // need to go a CRLF pair back, so that we do not get that into the body of the message part
                int stopLocation = FindPositionOfNextMultiPartBoundary(stream, multipPartBoundary, out lastMultipartBoundaryEncountered) - "\r\n".Length;

                // If we could not find the next multipart boundary, but we had not yet discovered the last boundary, then
                // we will consider the rest of the bytes as contained in a last message part.
                if (stopLocation <= -1)
                {
                    // Include everything except the last CRLF.
                    stopLocation = (int)stream.Length - "\r\n".Length;

                    // We consider this as the last part
                    lastMultipartBoundaryEncountered = true;

                    // Special case: when the last multipart delimiter is not ending with "--", but is indeed the last
                    // one, then the next multipart would contain nothing, and we should not include such one.
                    if (startLocation >= stopLocation)
                        break;
                }

                // We have now found the start and end of a message part
                // Now we create a byte array with the correct length and put the message part's bytes into
                // it and add it to our list we want to return
                int length = stopLocation - startLocation;
                byte[] messageBody = new byte[length];
                Array.Copy(rawBody, startLocation, messageBody, 0, length);
                messageBodies.Add(messageBody);

                // We want to advance to the next message parts start.
                // We can find this by jumping forward the MultiPart boundary from the last
                // message parts end position
                startLocation = stopLocation + ("\r\n" + "--" + multipPartBoundary + "\r\n").Length;
            }
        }

        // We are done
        return messageBodies;
    }

    /// <summary>
    /// Method that is able to find a specific MultiPart boundary in a Stream.<br/>
    /// The Stream passed should not be used for anything else then for looking for MultiPart boundaries
    /// <param name="stream">The stream to find the next MultiPart boundary in. Do not use it for anything else then with this method.</param>
    /// <param name="multiPartBoundary">The MultiPart boundary to look for. This should be found in the <see cref="ContentType"/> header</param>
    /// <param name="lastMultipartBoundaryFound">Is set to <see langword="true"/> if the next MultiPart boundary was indicated to be the last one, by having -- appended to it. Otherwise set to <see langword="false"/></param>
    /// </summary>
    /// <returns>The position of the first character of the line that contained MultiPartBoundary or -1 if no (more) MultiPart boundaries was found</returns>
    private static int FindPositionOfNextMultiPartBoundary(Stream stream, string multiPartBoundary, out bool lastMultipartBoundaryFound)
    {
        lastMultipartBoundaryFound = false;
        while (true)
        {
            // Get the current position. This is the first position on the line - no characters of the line will
            // have been read yet
            int currentPos = (int)stream.Position;

            // Read the line
            string line = StreamUtility.ReadLineAsAscii(stream);

            // If we kept reading until there was no more lines, we did not meet
            // the MultiPart boundary. -1 is then returned to describe this.
            if (line == null)
                return -1;

            // The MultiPart boundary is the MultiPartBoundary with "--" in front of it
            // which is to be at the very start of a line
            if (line.StartsWith("--" + multiPartBoundary, StringComparison.Ordinal))
            {
                // Check if the found boundary was also the last one
                lastMultipartBoundaryFound = line.StartsWith("--" + multiPartBoundary + "--", StringComparison.OrdinalIgnoreCase);
                return currentPos;
            }
        }
    }

    /// <summary>
    /// Decodes a byte array into another byte array based upon the Content Transfer encoding
    /// </summary>
    /// <param name="messageBody">The byte array to decode into another byte array</param>
    /// <param name="contentTransferEncoding">The <see cref="ContentTransferEncoding"/> of the byte array</param>
    /// <returns>A byte array which comes from the <paramref name="contentTransferEncoding"/> being used on the <paramref name="messageBody"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="messageBody"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentOutOfRangeException">Thrown if the <paramref name="contentTransferEncoding"/> is unsupported</exception>
    private static byte[] DecodeBody(byte[] messageBody, ContentTransferEncoding contentTransferEncoding)
    {
        if (messageBody == null)
            throw new ArgumentNullException("messageBody");

        switch (contentTransferEncoding)
        {
            case ContentTransferEncoding.QuotedPrintable:
                // If encoded in QuotedPrintable, everything in the body is in US-ASCII
                return QuotedPrintable.DecodeContentTransferEncoding(Encoding.ASCII.GetString(messageBody));

            case ContentTransferEncoding.Base64:
                // If encoded in Base64, everything in the body is in US-ASCII
                return Base64.Decode(Encoding.ASCII.GetString(messageBody));

            case ContentTransferEncoding.SevenBit:
            case ContentTransferEncoding.Binary:
            case ContentTransferEncoding.EightBit:
                // We do not have to do anything
                return messageBody;

            default:
                throw new ArgumentOutOfRangeException("contentTransferEncoding");
        }
    }
    #endregion

    #region Public methods
    /// <summary>
    /// Gets this MessagePart's <see cref="Body"/> as text.<br/>
    /// This is simply the <see cref="BodyEncoding"/> being used on the raw bytes of the <see cref="Body"/> property.<br/>
    /// This method is only valid to call if it is not a MultiPart message and therefore contains a body.<br/>
    /// </summary>
    /// <returns>The <see cref="Body"/> property as a string</returns>
    public string GetBodyAsText()
    {
        return BodyEncoding.GetString(Body);
    }

    /// <summary>
    /// Save this <see cref="MessagePart"/>'s contents to a file.<br/>
    /// There are no methods to reload the file.
    /// </summary>
    /// <param name="file">The File location to save the <see cref="MessagePart"/> to. Existent files will be overwritten.</param>
    /// <exception cref="ArgumentNullException">If <paramref name="file"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to using a <see cref="FileStream"/> might be thrown as well</exception>
    public void Save(FileInfo file)
    {
        if (file == null)
            throw new ArgumentNullException("file");

        using (FileStream stream = new FileStream(file.FullName, FileMode.OpenOrCreate))
        {
            Save(stream);
        }
    }

    /// <summary>
    /// Save this <see cref="MessagePart"/>'s contents to a stream.<br/>
    /// </summary>
    /// <param name="messageStream">The stream to write to</param>
    /// <exception cref="ArgumentNullException">If <paramref name="messageStream"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to <see cref="Stream.Write"/> might be thrown as well</exception>
    public void Save(Stream messageStream)
    {
        if (messageStream == null)
            throw new ArgumentNullException("messageStream");

        messageStream.Write(Body, 0, Body.Length);
    }
    #endregion
}

/// <summary>
/// <see cref="Enum"/> that describes the ContentTransferEncoding header field
/// </summary>
/// <remarks>See <a href="http://tools.ietf.org/html/rfc2045#section-6">RFC 2045 section 6</a> for more details</remarks>
public enum ContentTransferEncoding
{
    /// <summary>
    /// 7 bit Encoding
    /// </summary>
    SevenBit,

    /// <summary>
    /// 8 bit Encoding
    /// </summary>
    EightBit,

    /// <summary>
    /// Quoted Printable Encoding
    /// </summary>
    QuotedPrintable,

    /// <summary>
    /// Base64 Encoding
    /// </summary>
    Base64,

    /// <summary>
    /// Binary Encoding
    /// </summary>
    Binary
}

/// <summary>
/// Class that hold information about one "Received:" header line.
/// 
/// Visit these RFCs for more information:
/// <see href="http://tools.ietf.org/html/rfc5321#section-4.4">RFC 5321 section 4.4</see>
/// <see href="http://tools.ietf.org/html/rfc4021#section-3.6.7">RFC 4021 section 3.6.7</see>
/// <see href="http://tools.ietf.org/html/rfc2822#section-3.6.7">RFC 2822 section 3.6.7</see>
/// <see href="http://tools.ietf.org/html/rfc2821#section-4.4">RFC 2821 section 4.4</see>
/// </summary>
public class Received
{
    /// <summary>
    /// The date of this received line.
    /// Is <see cref="DateTime.MinValue"/> if not present in the received header line.
    /// </summary>
    public DateTime Date { get { return _date; } private set { _date = value; } }
    private DateTime _date;

    /// <summary>
    /// A dictionary that contains the names and values of the
    /// received header line.
    /// If the received header is invalid and contained one name
    /// multiple times, the first one is used and the rest is ignored.
    /// </summary>
    /// <example>
    /// If the header lines looks like:
    /// <code>
    /// from sending.com (localMachine [127.0.0.1]) by test.net (Postfix)
    /// </code>
    /// then the dictionary will contain two keys: "from" and "by" with the values
    /// "sending.com (localMachine [127.0.0.1])" and "test.net (Postfix)".
    /// </example>
    public Dictionary<string, string> Names { get { return _names; } private set { _names = value; } }
    private Dictionary<string, string> _names; 

    /// <summary>
    /// The raw input string that was parsed into this class.
    /// </summary>
    public string Raw { get { return _raw; } private set { _raw = value; } }
    private string _raw;

    /// <summary>
    /// Parses a Received header value.
    /// </summary>
    /// <param name="headerValue">The value for the header to be parsed</param>
    /// <exception cref="ArgumentNullException"><exception cref="ArgumentNullException">If <paramref name="headerValue"/> is <see langword="null"/></exception></exception>
    public Received(string headerValue)
    {
        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        // Remember the raw input if someone whishes to use it
        Raw = headerValue;

        // Default Date value
        Date = DateTime.MinValue;

        // The date part is the last part of the string, and is preceeded by a semicolon
        // Some emails forgets to specify the date, therefore we need to check if it is there
        if (headerValue.Contains(";"))
        {
            string datePart = headerValue.Substring(headerValue.LastIndexOf(";") + 1);
            Date = Rfc2822DateTime.StringToDate(datePart);
        }

        Names = ParseDictionary(headerValue);
    }

    /// <summary>
    /// Parses the Received header name-value-list into a dictionary.
    /// </summary>
    /// <param name="headerValue">The full header value for the Received header</param>
    /// <returns>A dictionary where the name-value-list has been parsed into</returns>
    private static Dictionary<string, string> ParseDictionary(string headerValue)
    {
        Dictionary<string, string> dictionary = new Dictionary<string, string>();

        // Remove the date part from the full headerValue if it is present
        string headerValueWithoutDate = headerValue;
        if (headerValue.Contains(";"))
        {
            headerValueWithoutDate = headerValue.Substring(0, headerValue.LastIndexOf(";"));
        }

        // Reduce any whitespace character to one space only
        headerValueWithoutDate = Regex.Replace(headerValueWithoutDate, @"\s+", " ");

        // The regex below should capture the following:
        // The name consists of non-whitespace characters followed by a whitespace and then the value follows.
        // There are multiple cases for the value part:
        //   1: Value is just some characters not including any whitespace
        //   2: Value is some characters, a whitespace followed by an unlimited number of
        //      parenthesized values which can contain whitespaces, each delimited by whitespace
        //
        // Cheat sheet for regex:
        // \s means every whitespace character
        // [^\s] means every character except whitespace characters
        // +? is a non-greedy equivalent of +
        const string pattern = @"(?<name>[^\s]+)\s(?<value>[^\s]+(\s\(.+?\))*)";

        // Find each match in the string
        MatchCollection matches = Regex.Matches(headerValueWithoutDate, pattern);
        foreach (Match match in matches)
        {
            // Add the name and value part found in the matched result to the dictionary
            string name = match.Groups["name"].Value;
            string value = match.Groups["value"].Value;

            // Check if the name is really a comment.
            // In this case, the first entry in the header value
            // is a comment
            if (name.StartsWith("("))
            {
                continue;
            }

            // Only add the first name pair
            // All subsequent pairs are ignored, as they are invalid anyway
            if (!dictionary.ContainsKey(name))
                dictionary.Add(name, value);
        }

        return dictionary;
    }
}

/// <summary>
/// This class is used for RFC compliant email addresses.<br/>
/// <br/>
/// The class cannot be instantiated from outside the library.
/// </summary>
/// <remarks>
/// The <seealso cref="MailAddress"/> does not cover all the possible formats 
/// for <a href="http://tools.ietf.org/html/rfc5322#section-3.4">RFC 5322 section 3.4</a> compliant email addresses.
/// This class is used as an address wrapper to account for that deficiency.
/// </remarks>
public class RfcMailAddress
{
    #region Properties
    ///<summary>
    /// The email address of this <see cref="RfcMailAddress"/><br/>
    /// It is possibly string.Empty since RFC mail addresses does not require an email address specified.
    ///</summary>
    ///<example>
    /// Example header with email address:<br/>
    /// To: <c>Test test@mail.com</c><br/>
    /// Address will be <c>test@mail.com</c><br/>
    ///</example>
    ///<example>
    /// Example header without email address:<br/>
    /// To: <c>Test</c><br/>
    /// Address will be <see cref="string.Empty"/>.
    ///</example>
    public string Address { get { return _address; } private set { _address = value; } }
    private string _address;

    ///<summary>
    /// The display name of this <see cref="RfcMailAddress"/><br/>
    /// It is possibly <see cref="string.Empty"/> since RFC mail addresses does not require a display name to be specified.
    ///</summary>
    ///<example>
    /// Example header with display name:<br/>
    /// To: <c>Test test@mail.com</c><br/>
    /// DisplayName will be <c>Test</c>
    ///</example>
    ///<example>
    /// Example header without display name:<br/>
    /// To: <c>test@test.com</c><br/>
    /// DisplayName will be <see cref="string.Empty"/>
    ///</example>
    public string DisplayName { get { return _displayName; } private set { _displayName = value; } }
    private string _displayName;

    /// <summary>
    /// This is the Raw string used to describe the <see cref="RfcMailAddress"/>.
    /// </summary>
    public string Raw { get { return _raw; } private set { _raw = value; } }
    private string _raw;

    /// <summary>
    /// The <see cref="MailAddress"/> associated with the <see cref="RfcMailAddress"/>. 
    /// </summary>
    /// <remarks>
    /// The value of this property can be <see lanword="null"/> in instances where the <see cref="MailAddress"/> cannot represent the address properly.<br/>
    /// Use <see cref="HasValidMailAddress"/> property to see if this property is valid.
    /// </remarks>
    public MailAddress MailAddress { get { return _mailAddress; } private set { _mailAddress = value; } }
    private MailAddress _mailAddress;

    /// <summary>
    /// Specifies if the object contains a valid <see cref="MailAddress"/> reference.
    /// </summary>
    public bool HasValidMailAddress
    {
        get { return MailAddress != null; }
    }
    #endregion

    #region Constructors
    /// <summary>
    /// Constructs an <see cref="RfcMailAddress"/> object from a <see cref="MailAddress"/> object.<br/>
    /// This constructor is used when we were able to construct a <see cref="MailAddress"/> from a string.
    /// </summary>
    /// <param name="mailAddress">The address that <paramref name="raw"/> was parsed into</param>
    /// <param name="raw">The raw unparsed input which was parsed into the <paramref name="mailAddress"/></param>
    /// <exception cref="ArgumentNullException">If <paramref name="mailAddress"/> or <paramref name="raw"/> is <see langword="null"/></exception>
    private RfcMailAddress(MailAddress mailAddress, string raw)
    {
        if (mailAddress == null)
            throw new ArgumentNullException("mailAddress");

        if (raw == null)
            throw new ArgumentNullException("raw");

        MailAddress = mailAddress;
        Address = mailAddress.Address;
        DisplayName = mailAddress.DisplayName;
        Raw = raw;
    }

    /// <summary>
    /// When we were unable to parse a string into a <see cref="MailAddress"/>, this constructor can be
    /// used. The Raw string is then used as the <see cref="DisplayName"/>.
    /// </summary>
    /// <param name="raw">The raw unparsed input which could not be parsed</param>
    /// <exception cref="ArgumentNullException">If <paramref name="raw"/> is <see langword="null"/></exception>
    private RfcMailAddress(string raw)
    {
        if (raw == null)
            throw new ArgumentNullException("raw");

        MailAddress = null;
        Address = string.Empty;
        DisplayName = raw;
        Raw = raw;
    }
    #endregion

    /// <summary>
    /// A string representation of the <see cref="RfcMailAddress"/> object
    /// </summary>
    /// <returns>Returns the string representation for the object</returns>
    public override string ToString()
    {
        if (HasValidMailAddress)
            return MailAddress.ToString();

        return Raw;
    }

    #region Parsing
    /// <summary>
    /// Parses an email address from a MIME header<br/>
    /// <br/>
    /// Examples of input:
    /// <c>Eksperten mailrobot &lt;noreply@mail.eksperten.dk&gt;</c><br/>
    /// <c>"Eksperten mailrobot" &lt;noreply@mail.eksperten.dk&gt;</c><br/>
    /// <c>&lt;noreply@mail.eksperten.dk&gt;</c><br/>
    /// <c>noreply@mail.eksperten.dk</c><br/>
    /// <br/>
    /// It might also contain encoded text, which will then be decoded.
    /// </summary>
    /// <param name="input">The value to parse out and email and/or a username</param>
    /// <returns>A <see cref="RfcMailAddress"/></returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    /// <remarks>
    /// <see href="http://tools.ietf.org/html/rfc5322#section-3.4">RFC 5322 section 3.4</see> for more details on email syntax.<br/>
    /// <see cref="EncodedWord.Decode">For more information about encoded text</see>.
    /// </remarks>
    internal static RfcMailAddress ParseMailAddress(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        // Decode the value, if it was encoded
        input = EncodedWord.Decode(input.Trim());

        // Find the location of the email address
        int indexStartEmail = input.LastIndexOf('<');
        int indexEndEmail = input.LastIndexOf('>');

        try
        {
            if (indexStartEmail >= 0 && indexEndEmail >= 0)
            {
                string username;
                // Check if there is a username in front of the email address
                if (indexStartEmail > 0)
                {
                    // Parse out the user
                    username = input.Substring(0, indexStartEmail).Trim();
                }
                else
                {
                    // There was no user
                    username = string.Empty;
                }

                // Parse out the email address without the "<"  and ">"
                indexStartEmail = indexStartEmail + 1;
                int emailLength = indexEndEmail - indexStartEmail;
                string emailAddress = input.Substring(indexStartEmail, emailLength).Trim();

                // There has been cases where there was no emailaddress between the < and >
                if (!string.IsNullOrEmpty(emailAddress))
                {
                    // If the username is quoted, MailAddress' constructor will remove them for us
                    return new RfcMailAddress(new MailAddress(emailAddress, username), input);
                }
            }

            // This might be on the form noreply@mail.eksperten.dk
            // Check if there is an email, if notm there is no need to try
            if (input.Contains("@"))
                return new RfcMailAddress(new MailAddress(input), input);
        }
        catch (FormatException)
        {
            // Sometimes invalid emails are sent, like sqlmap-user@sourceforge.net. (last period is illigal)
            //DefaultLogger.Log.LogError("RfcMailAddress: Improper mail address: \"" + input + "\"");
        }

        // It could be that the format used was simply a name
        // which is indeed valid according to the RFC
        // Example:
        // Eksperten mailrobot
        return new RfcMailAddress(input);
    }

    /// <summary>
    /// Parses input of the form<br/>
    /// <c>Eksperten mailrobot &lt;noreply@mail.eksperten.dk&gt;, ...</c><br/>
    /// to a list of RFCMailAddresses
    /// </summary>
    /// <param name="input">The input that is a comma-separated list of EmailAddresses to parse</param>
    /// <returns>A List of <seealso cref="RfcMailAddress"/> objects extracted from the <paramref name="input"/> parameter.</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="input"/> is <see langword="null"/></exception>
    internal static List<RfcMailAddress> ParseMailAddresses(string input)
    {
        if (input == null)
            throw new ArgumentNullException("input");

        List<RfcMailAddress> returner = new List<RfcMailAddress>();

        // MailAddresses are split by commas
        IEnumerable<string> mailAddresses = Utility.SplitStringWithCharNotInsideQuotes(input, ',');

        // Parse each of these
        foreach (string mailAddress in mailAddresses)
        {
            returner.Add(ParseMailAddress(mailAddress));
        }

        return returner;
    }
    #endregion
}

/// <summary>
/// Class that holds all headers for a message<br/>
/// Headers which are unknown the the parser will be held in the <see cref="UnknownHeaders"/> collection.<br/>
/// <br/>
/// This class cannot be instantiated from outside the library.
/// </summary>
/// <remarks>
/// See <a href="http://tools.ietf.org/html/rfc4021">RFC 4021</a> for a large list of headers.<br/>
/// </remarks>
public sealed class MessageHeader
{
    #region Properties
    /// <summary>
    /// All headers which were not recognized and explicitly dealt with.<br/>
    /// This should mostly be custom headers, which are marked as X-[name].<br/>
    /// <br/>
    /// This list will be empty if all headers were recognized and parsed.
    /// </summary>
    /// <remarks>
    /// If you as a user, feels that a header in this collection should
    /// be parsed, feel free to notify the developers.
    /// </remarks>
    public NameValueCollection UnknownHeaders { get { return _unknownHeaders; } private set { _unknownHeaders = value; } }
    private NameValueCollection _unknownHeaders;

    /// <summary>
    /// A human readable description of the body<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Description header was present in the message.
    /// </summary>
    public string ContentDescription { get { return _contentDescription; } private set { _contentDescription = value; } }
    private string _contentDescription;

    /// <summary>
    /// ID of the content part (like an attached image). Used with MultiPart messages.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-ID header field was present in the message.
    /// </summary>
    /// <see cref="MessageId">For an ID of the message</see>
    public string ContentId { get { return _contentId; } private set { _contentId = value; } }
    private string _contentId;

    /// <summary>
    /// Message keywords<br/>
    /// <br/>
    /// The list will be empty if no Keywords header was present in the message
    /// </summary>
    public List<string> Keywords { get { return _keywords; } private set { _keywords = value; } }
    private List<string> _keywords;

    /// <summary>
    /// A List of emails to people who wishes to be notified when some event happens.<br/>
    /// These events could be email:
    /// <list type="bullet">
    ///   <item>deletion</item>
    ///   <item>printing</item>
    ///   <item>received</item>
    ///   <item>...</item>
    /// </list>
    /// The list will be empty if no Disposition-Notification-To header was present in the message
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc3798">RFC 3798</a> for details</remarks>
    public List<RfcMailAddress> DispositionNotificationTo { get { return _dispositionNotificationTo; } private set { _dispositionNotificationTo = value; } }
    private List<RfcMailAddress> _dispositionNotificationTo;

    /// <summary>
    /// This is the Received headers. This tells the path that the email went.<br/>
    /// <br/>
    /// The list will be empty if no Received header was present in the message
    /// </summary>
    public List<Received> Received { get { return _recieved; } private set { _recieved = value; } }
    private List<Received> _recieved;

    /// <summary>
    /// Importance of this email.<br/>
    /// <br/>
    /// The importance level is set to normal, if no Importance header field was mentioned or it contained
    /// unknown information. This is the expected behavior according to the RFC.
    /// </summary>
    public MailPriority Importance { get { return _importance; } private set { _importance = value; } }
    private MailPriority _importance; 

    /// <summary>
    /// This header describes the Content encoding during transfer.<br/>
    /// <br/>
    /// If no Content-Transfer-Encoding header was present in the message, it is set
    /// to the default of <see cref="Header.ContentTransferEncoding.SevenBit">SevenBit</see> in accordance to the RFC.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc2045#section-6">RFC 2045 section 6</a> for details</remarks>
    public ContentTransferEncoding ContentTransferEncoding { get { return _contentTransferEncoding; } private set { _contentTransferEncoding = value; } }
    private ContentTransferEncoding _contentTransferEncoding;

    /// <summary>
    /// Carbon Copy. This specifies who got a copy of the message.<br/>
    /// <br/>
    /// The list will be empty if no Cc header was present in the message
    /// </summary>
    public List<RfcMailAddress> Cc { get { return _cc; } private set { _cc = value; } }
    private List<RfcMailAddress> _cc;

    /// <summary>
    /// Blind Carbon Copy. This specifies who got a copy of the message, but others
    /// cannot see who these persons are.<br/>
    /// <br/>
    /// The list will be empty if no Received Bcc was present in the message
    /// </summary>
    public List<RfcMailAddress> Bcc { get { return _bcc; } private set { _bcc = value; } }
    private List<RfcMailAddress> _bcc;

    /// <summary>
    /// Specifies who this mail was for<br/>
    /// <br/>
    /// The list will be empty if no To header was present in the message
    /// </summary>
    public List<RfcMailAddress> To { get { return _to; } private set { _to = value; } }
    private List<RfcMailAddress> _to;

    /// <summary>
    /// Specifies who sent the email<br/>
    /// <br/>
    /// <see langword="null"/> if no From header field was present in the message
    /// </summary>
    public RfcMailAddress From { get { return _from; } private set { _from = value; } }
    private RfcMailAddress _from;

    /// <summary>
    /// Specifies who a reply to the message should be sent to<br/>
    /// <br/>
    /// <see langword="null"/> if no Reply-To header field was present in the message
    /// </summary>
    public RfcMailAddress ReplyTo { get { return _replyTo; } private set { _replyTo = value; } }
    private RfcMailAddress _replyTo;

    /// <summary>
    /// The message identifier(s) of the original message(s) to which the
    /// current message is a reply.<br/>
    /// <br/>
    /// The list will be empty if no In-Reply-To header was present in the message
    /// </summary>
    public List<string> InReplyTo { get { return _inReplyTo; } private set { _inReplyTo = value; } }
    private List<string> _inReplyTo;

    /// <summary>
    /// The message identifier(s) of other message(s) to which the current
    /// message is related to.<br/>
    /// <br/>
    /// The list will be empty if no References header was present in the message
    /// </summary>
    public List<string> References { get { return _references; } private set { _references = value; } }
    private List<string> _references;

    /// <summary>
    /// This is the sender of the email address.<br/>
    /// <br/>
    /// <see langword="null"/> if no Sender header field was present in the message
    /// </summary>
    /// <remarks>
    /// The RFC states that this field can be used if a secretary
    /// is sending an email for someone she is working for.
    /// The email here will then be the secretary's email, and
    /// the Reply-To field would hold the address of the person she works for.<br/>
    /// RFC states that if the Sender is the same as the From field,
    /// sender should not be included in the message.
    /// </remarks>
    public RfcMailAddress Sender { get { return _sender; } private set { _sender = value; } }
    private RfcMailAddress _sender;

    /// <summary>
    /// The Content-Type header field.<br/>
    /// <br/>
    /// If not set, the ContentType is created by the default "text/plain; charset=us-ascii" which is
    /// defined in <a href="http://tools.ietf.org/html/rfc2045#section-5.2">RFC 2045 section 5.2</a>.<br/>
    /// If set, the default is overridden.
    /// </summary>
    public ContentType ContentType { get { return _contentType; } private set { _contentType = value; } }
    private ContentType _contentType;

    /// <summary>
    /// Used to describe if a <see cref="MessagePart"/> is to be displayed or to be though of as an attachment.<br/>
    /// Also contains information about filename if such was sent.<br/>
    /// <br/>
    /// <see langword="null"/> if no Content-Disposition header field was present in the message
    /// </summary>
    public ContentDisposition ContentDisposition { get { return _contentDispisition; } private set { _contentDispisition = value; } }
    private ContentDisposition _contentDispisition;

    /// <summary>
    /// The Date when the email was sent.<br/>
    /// This is the raw value. <see cref="DateSent"/> for a parsed up <see cref="DateTime"/> value of this field.<br/>
    /// <br/>
    /// <see langword="DateTime.MinValue"/> if no Date header field was present in the message or if the date could not be parsed.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc5322#section-3.6.1">RFC 5322 section 3.6.1</a> for more details</remarks>
    public string Date { get { return _date; } private set { _date = value; } }
    private string _date;

    /// <summary>
    /// The Date when the email was sent.<br/>
    /// This is the parsed equivalent of <see cref="Date"/>.<br/>
    /// Notice that the <see cref="TimeZone"/> of the <see cref="DateTime"/> object is in UTC and has NOT been converted
    /// to local <see cref="TimeZone"/>.
    /// </summary>
    /// <remarks>See <a href="http://tools.ietf.org/html/rfc5322#section-3.6.1">RFC 5322 section 3.6.1</a> for more details</remarks>
    public DateTime DateSent { get { return _dateSent; } private set { _dateSent = value; } }
    private DateTime _dateSent;

    /// <summary>
    /// An ID of the message that is SUPPOSED to be in every message according to the RFC.<br/>
    /// The ID is unique.<br/>
    /// <br/>
    /// <see langword="null"/> if no Message-ID header field was present in the message
    /// </summary>
    public string MessageId { get { return _messageId; } private set { _messageId = value; } }
    private string _messageId;

    /// <summary>
    /// The Mime Version.<br/>
    /// This field will almost always show 1.0<br/>
    /// <br/>
    /// <see langword="null"/> if no Mime-Version header field was present in the message
    /// </summary>
    public string MimeVersion { get { return _mimeVersion; } private set { _mimeVersion = value; } }
    private string _mimeVersion;

    /// <summary>
    /// A single <see cref="RfcMailAddress"/> with no username inside.<br/>
    /// This is a trace header field, that should be in all messages.<br/>
    /// Replies should be sent to this address.<br/>
    /// <br/>
    /// <see langword="null"/> if no Return-Path header field was present in the message
    /// </summary>
    public RfcMailAddress ReturnPath { get { return _returnPath; } private set { _returnPath = value; } }
    public RfcMailAddress _returnPath;

    /// <summary>
    /// The subject line of the message in decoded, one line state.<br/>
    /// This should be in all messages.<br/>
    /// <br/>
    /// <see langword="null"/> if no Subject header field was present in the message
    /// </summary>
    public string Subject { get { return _subject; } private set { _subject = value; } }
    private string _subject;
    #endregion

    /// <summary>
    /// Parses a <see cref="NameValueCollection"/> to a MessageHeader
    /// </summary>
    /// <param name="headers">The collection that should be traversed and parsed</param>
    /// <returns>A valid MessageHeader object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headers"/> is <see langword="null"/></exception>
    internal MessageHeader(NameValueCollection headers)
    {
        if (headers == null)
            throw new ArgumentNullException("headers");

        // Create empty lists as defaults. We do not like null values
        // List with an initial capacity set to zero will be replaced
        // when a corrosponding header is found
        To = new List<RfcMailAddress>(0);
        Cc = new List<RfcMailAddress>(0);
        Bcc = new List<RfcMailAddress>(0);
        Received = new List<Received>();
        Keywords = new List<string>();
        InReplyTo = new List<string>(0);
        References = new List<string>(0);
        DispositionNotificationTo = new List<RfcMailAddress>();
        UnknownHeaders = new NameValueCollection();

        // Default importancetype is Normal (assumed if not set)
        Importance = MailPriority.Normal;

        // 7BIT is the default ContentTransferEncoding (assumed if not set)
        ContentTransferEncoding = ContentTransferEncoding.SevenBit;

        // text/plain; charset=us-ascii is the default ContentType
        ContentType = new ContentType("text/plain; charset=us-ascii");

        // Now parse the actual headers
        ParseHeaders(headers);
    }

    /// <summary>
    /// Parses a <see cref="NameValueCollection"/> to a <see cref="MessageHeader"/>
    /// </summary>
    /// <param name="headers">The collection that should be traversed and parsed</param>
    /// <returns>A valid <see cref="MessageHeader"/> object</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="headers"/> is <see langword="null"/></exception>
    private void ParseHeaders(NameValueCollection headers)
    {
        if (headers == null)
            throw new ArgumentNullException("headers");

        // Now begin to parse the header values
        foreach (string headerName in headers.Keys)
        {
            string[] headerValues = headers.GetValues(headerName);
            if (headerValues != null)
            {
                foreach (string headerValue in headerValues)
                {
                    ParseHeader(headerName, headerValue);
                }
            }
        }
    }

    #region Header fields parsing
    /// <summary>
    /// Parses a single header and sets member variables according to it.
    /// </summary>
    /// <param name="headerName">The name of the header</param>
    /// <param name="headerValue">The value of the header in unfolded state (only one line)</param>
    /// <exception cref="ArgumentNullException">If <paramref name="headerName"/> or <paramref name="headerValue"/> is <see langword="null"/></exception>
    private void ParseHeader(string headerName, string headerValue)
    {
        if (headerName == null)
            throw new ArgumentNullException("headerName");

        if (headerValue == null)
            throw new ArgumentNullException("headerValue");

        switch (headerName.ToUpperInvariant())
        {
            // See http://tools.ietf.org/html/rfc5322#section-3.6.3
            case "TO":
                To = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.3
            case "CC":
                Cc = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.3
            case "BCC":
                Bcc = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.2
            case "FROM":
                // There is only one MailAddress in the from field
                From = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // http://tools.ietf.org/html/rfc5322#section-3.6.2
            // The implementation here might be wrong
            case "REPLY-TO":
                // This field may actually be a list of addresses, but no
                // such case has been encountered
                ReplyTo = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // http://tools.ietf.org/html/rfc5322#section-3.6.2
            case "SENDER":
                Sender = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.5
            // RFC 5322:
            // The "Keywords:" field contains a comma-separated list of one or more
            // words or quoted-strings.
            // The field are intended to have only human-readable content
            // with information about the message
            case "KEYWORDS":
                string[] keywordsTemp = headerValue.Split(',');
                foreach (string keyword in keywordsTemp)
                {
                    // Remove the quotes if there is any
                    Keywords.Add(Utility.RemoveQuotesIfAny(keyword.Trim()));
                }
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.7
            case "RECEIVED":
                // Simply add the value to the list
                Received.Add(new Received(headerValue.Trim()));
                break;

            case "IMPORTANCE":
                Importance = HeaderFieldParser.ParseImportance(headerValue.Trim());
                break;

            // See http://tools.ietf.org/html/rfc3798#section-2.1
            case "DISPOSITION-NOTIFICATION-TO":
                DispositionNotificationTo = RfcMailAddress.ParseMailAddresses(headerValue);
                break;

            case "MIME-VERSION":
                MimeVersion = headerValue.Trim();
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.5
            case "SUBJECT":
                Subject = EncodedWord.Decode(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.7
            case "RETURN-PATH":
                // Return-paths does not include a username, but we 
                // may still use the address parser 
                ReturnPath = RfcMailAddress.ParseMailAddress(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.4
            // Example Message-ID
            // <33cdd74d6b89ab2250ecd75b40a41405@nfs.eksperten.dk>
            case "MESSAGE-ID":
                MessageId = HeaderFieldParser.ParseId(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.4
            case "IN-REPLY-TO":
                InReplyTo = HeaderFieldParser.ParseMultipleIDs(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.4
            case "REFERENCES":
                References = HeaderFieldParser.ParseMultipleIDs(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc5322#section-3.6.1))
            case "DATE":
                Date = headerValue.Trim();
                DateSent = Rfc2822DateTime.StringToDate(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc2045#section-6
            // See ContentTransferEncoding class for more details
            case "CONTENT-TRANSFER-ENCODING":
                ContentTransferEncoding = HeaderFieldParser.ParseContentTransferEncoding(headerValue.Trim());
                break;

            // See http://tools.ietf.org/html/rfc2045#section-8
            case "CONTENT-DESCRIPTION":
                // Human description of for example a file. Can be encoded
                ContentDescription = EncodedWord.Decode(headerValue.Trim());
                break;

            // See http://tools.ietf.org/html/rfc2045#section-5.1
            // Example: Content-type: text/plain; charset="us-ascii"
            case "CONTENT-TYPE":
                ContentType = HeaderFieldParser.ParseContentType(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc2183
            case "CONTENT-DISPOSITION":
                ContentDisposition = HeaderFieldParser.ParseContentDisposition(headerValue);
                break;

            // See http://tools.ietf.org/html/rfc2045#section-7
            // Example: <foo4*foo1@bar.net>
            case "CONTENT-ID":
                ContentId = HeaderFieldParser.ParseId(headerValue);
                break;

            default:
                // This is an unknown header

                // Custom headers are allowed. That means headers
                // that are not mentionen in the RFC.
                // Such headers start with the letter "X"
                // We do not have any special parsing of such

                // Add it to unknown headers
                UnknownHeaders.Add(headerName, headerValue);
                break;
        }
    }
    #endregion
}

/// <summary>
/// This is the root of the email tree structure.<br/>
/// <see cref="Mime.MessagePart"/> for a description about the structure.<br/>
/// <br/>
/// A Message (this class) contains the headers of an email message such as:
/// <code>
///  - To
///  - From
///  - Subject
///  - Content-Type
///  - Message-ID
/// </code>
/// which are located in the <see cref="Headers"/> property.<br/>
/// <br/>
/// Use the <see cref="Message.MessagePart"/> property to find the actual content of the email message.
/// </summary>
/// <example>
/// Examples are available on the <a href="http://hpop.sourceforge.net/">project homepage</a>.
/// </example>
public class Message
{
    #region Public properties
    /// <summary>
    /// Headers of the Message.
    /// </summary>
    public MessageHeader Headers { get { return _headers; } private set { _headers = value; } }
    private MessageHeader _headers;

    /// <summary>
    /// This is the body of the email Message.<br/>
    /// <br/>
    /// If the body was parsed for this Message, this property will never be <see langword="null"/>.
    /// </summary>
    public MessagePart MessagePart { get { return _messagePart; } private set { _messagePart = value; } }
    private MessagePart _messagePart;

    /// <summary>
    /// The raw content from which this message has been constructed.<br/>
    /// These bytes can be persisted and later used to recreate the Message.
    /// </summary>
    public byte[] RawMessage { get { return _rawMessage; } private set { _rawMessage = value; } }
    private byte[] _rawMessage;
    #endregion

    #region Constructors
    /// <summary>
    /// Convenience constructor for <see cref="Mime.Message(byte[], bool)"/>.<br/>
    /// <br/>
    /// Creates a message from a byte array. The full message including its body is parsed.
    /// </summary>
    /// <param name="rawMessageContent">The byte array which is the message contents to parse</param>
    public Message(byte[] rawMessageContent)
        : this(rawMessageContent, true)
    {
    }

    /// <summary>
    /// Constructs a message from a byte array.<br/>
    /// <br/>
    /// The headers are always parsed, but if <paramref name="parseBody"/> is <see langword="false"/>, the body is not parsed.
    /// </summary>
    /// <param name="rawMessageContent">The byte array which is the message contents to parse</param>
    /// <param name="parseBody">
    /// <see langword="true"/> if the body should be parsed,
    /// <see langword="false"/> if only headers should be parsed out of the <paramref name="rawMessageContent"/> byte array
    /// </param>
    public Message(byte[] rawMessageContent, bool parseBody)
    {
        RawMessage = rawMessageContent;

        // Find the headers and the body parts of the byte array
        MessageHeader headersTemp;
        byte[] body;
        HeaderExtractor.ExtractHeadersAndBody(rawMessageContent, out headersTemp, out body);

        // Set the Headers property
        Headers = headersTemp;

        // Should we also parse the body?
        if (parseBody)
        {
            // Parse the body into a MessagePart
            MessagePart = new MessagePart(body, Headers);
        }
    }
    #endregion


    #region MessagePart Searching Methods

    /// <summary>
    /// Finds the first text/plain <see cref="MessagePart"/> in this message.<br/>
    /// This is a convenience method - it simply propagates the call to <see cref="FindFirstMessagePartWithMediaType"/>.<br/>
    /// <br/>
    /// If no text/plain version is found, <see langword="null"/> is returned.
    /// </summary>
    /// <returns>
    /// <see cref="MessagePart"/> which has a MediaType of text/plain or <see langword="null"/>
    /// if such <see cref="MessagePart"/> could not be found.
    /// </returns>
    public MessagePart FindFirstPlainTextVersion()
    {
        return FindFirstMessagePartWithMediaType("text/plain");
    }

    /// <summary>
    /// Finds the first text/html <see cref="MessagePart"/> in this message.<br/>
    /// This is a convenience method - it simply propagates the call to <see cref="FindFirstMessagePartWithMediaType"/>.<br/>
    /// <br/>
    /// If no text/html version is found, <see langword="null"/> is returned.
    /// </summary>
    /// <returns>
    /// <see cref="MessagePart"/> which has a MediaType of text/html or <see langword="null"/>
    /// if such <see cref="MessagePart"/> could not be found.
    /// </returns>
    public MessagePart FindFirstHtmlVersion()
    {
        return FindFirstMessagePartWithMediaType("text/html");
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>'s which contains a text version.<br/>
    /// <br/>
    /// <see cref="Mime.MessagePart.IsText"/> for MessageParts which are considered to be text versions.<br/>
    /// <br/>
    /// Examples of MessageParts media types are:
    /// <list type="bullet">
    ///    <item>text/plain</item>
    ///    <item>text/html</item>
    ///    <item>text/xml</item>
    /// </list>
    /// </summary>
    /// <returns>A List of MessageParts where each part is a text version</returns>
    public List<MessagePart> FindAllTextVersions()
    {
        return new TextVersionFinder().VisitMessage(this);
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>'s which are attachments to this message.<br/>
    /// <br/>
    /// <see cref="Mime.MessagePart.IsAttachment"/> for MessageParts which are considered to be attachments.
    /// </summary>
    /// <returns>A List of MessageParts where each is considered an attachment</returns>
    public List<MessagePart> FindAllAttachments()
    {
        return new AttachmentFinder().VisitMessage(this);
    }

    /// <summary>
    /// Finds the first <see cref="MessagePart"/> in the <see cref="Message"/> hierarchy with the given MediaType.<br/>
    /// <br/>
    /// The search in the hierarchy is a depth-first traversal.
    /// </summary>
    /// <param name="mediaType">The MediaType to search for. Case is ignored.</param>
    /// <returns>
    /// A <see cref="MessagePart"/> with the given MediaType or <see langword="null"/> if no such <see cref="MessagePart"/> was found
    /// </returns>
    public MessagePart FindFirstMessagePartWithMediaType(string mediaType)
    {
        return new FindFirstMessagePartWithMediaType().VisitMessage(this, mediaType);
    }

    /// <summary>
    /// Finds all the <see cref="MessagePart"/>s in the <see cref="Message"/> hierarchy with the given MediaType.
    /// </summary>
    /// <param name="mediaType">The MediaType to search for. Case is ignored.</param>
    /// <returns>
    /// A List of <see cref="MessagePart"/>s with the given MediaType.<br/>
    /// The List might be empty if no such <see cref="MessagePart"/>s were found.<br/>
    /// The order of the elements in the list is the order which they are found using
    /// a depth first traversal of the <see cref="Message"/> hierarchy.
    /// </returns>
    public List<MessagePart> FindAllMessagePartsWithMediaType(string mediaType)
    {
        return new FindAllMessagePartsWithMediaType().VisitMessage(this, mediaType);
    }

    #endregion

    #region Message Persistence

    /// <summary>
    /// Save this <see cref="Message"/> to a file.<br/>
    /// <br/>
    /// Can be loaded at a later time using the <see cref="Load(FileInfo)"/> method.
    /// </summary>
    /// <param name="file">The File location to save the <see cref="Message"/> to. Existent files will be overwritten.</param>
    /// <exception cref="ArgumentNullException">If <paramref name="file"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to using a <see cref="FileStream"/> might be thrown as well</exception>
    public void Save(FileInfo file)
    {
        if (file == null)
            throw new ArgumentNullException("file");

        using (FileStream stream = new FileStream(file.FullName, FileMode.OpenOrCreate))
        {
            Save(stream);
        }
    }

    /// <summary>
    /// Save this <see cref="Message"/> to a stream.<br/>
    /// </summary>
    /// <param name="messageStream">The stream to write to</param>
    /// <exception cref="ArgumentNullException">If <paramref name="messageStream"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to <see cref="Stream.Write"/> might be thrown as well</exception>
    public void Save(Stream messageStream)
    {
        if (messageStream == null)
            throw new ArgumentNullException("messageStream");

        messageStream.Write(RawMessage, 0, RawMessage.Length);
    }

    /// <summary>
    /// Loads a <see cref="Message"/> from a file containing a raw email.
    /// </summary>
    /// <param name="file">The File location to load the <see cref="Message"/> from. The file must exist.</param>
    /// <exception cref="ArgumentNullException">If <paramref name="file"/> is <see langword="null"/></exception>
    /// <exception cref="FileNotFoundException">If <paramref name="file"/> does not exist</exception>
    /// <exception>Other exceptions relevant to a <see cref="FileStream"/> might be thrown as well</exception>
    /// <returns>A <see cref="Message"/> with the content loaded from the <paramref name="file"/></returns>
    public static Message Load(FileInfo file)
    {
        if (file == null)
            throw new ArgumentNullException("file");

        if (!file.Exists)
            throw new FileNotFoundException("Cannot load message from non-existent file", file.FullName);

        using (FileStream stream = new FileStream(file.FullName, FileMode.Open))
        {
            return Load(stream);
        }
    }


    /// <summary>
    /// Loads a <see cref="Message"/> from a <see cref="Stream"/> containing a raw email.
    /// </summary>
    /// <param name="messageStream">The <see cref="Stream"/> from which to load the raw <see cref="Message"/></param>
    /// <exception cref="ArgumentNullException">If <paramref name="messageStream"/> is <see langword="null"/></exception>
    /// <exception>Other exceptions relevant to <see cref="Stream.Read"/> might be thrown as well</exception>
    /// <returns>A <see cref="Message"/> with the content loaded from the <paramref name="messageStream"/></returns>
    public static Message Load(Stream messageStream)
    {
        if (messageStream == null)
            throw new ArgumentNullException("messageStream");

        using (MemoryStream outStream = new MemoryStream())
        {
#if DOTNET4
				// TODO: Enable using native v4 framework methods when support is formally added.
				messageStream.CopyTo(outStream);
#else
            int bytesRead;
            byte[] buffer = new byte[4096];

            while ((bytesRead = messageStream.Read(buffer, 0, 4096)) > 0)
            {
                outStream.Write(buffer, 0, bytesRead);
            }
#endif
            byte[] content = outStream.ToArray();

            return new Message(content);
        }
    }
    #endregion
}

/// <summary>
/// Implements the CRAM-MD5 algorithm as specified in <a href="http://tools.ietf.org/html/rfc2195">RFC 2195</a>.
/// </summary>
internal static class CramMd5
{
    /// <summary>
    /// Defined by <a href="http://tools.ietf.org/html/rfc2104#section-2">RFC 2104</a>
    /// Is a 64 byte array with all entries set to 0x36.
    /// </summary>
    private static readonly byte[] ipad;

    /// <summary>
    /// Defined by <a href="http://tools.ietf.org/html/rfc2104#section-2">RFC 2104</a>
    /// Is a 64 byte array with all entries set to 0x5C.
    /// </summary>
    private static readonly byte[] opad;

    /// <summary>
    /// Initializes the static fields
    /// </summary>
    static CramMd5()
    {
        ipad = new byte[64];
        opad = new byte[64];
        for (int i = 0; i < ipad.Length; i++)
        {
            ipad[i] = 0x36;
            opad[i] = 0x5C;
        }
    }

    /// <summary>
    /// Computes the digest needed to login to a server using CRAM-MD5.<br/>
    /// <br/>
    /// This computes:<br/>
    /// MD5((password XOR opad), MD5((password XOR ipad), challenge))
    /// </summary>
    /// <param name="username">The username of the user who wants to log in</param>
    /// <param name="password">The password for the <paramref name="username"/></param>
    /// <param name="challenge">
    /// The challenge received from the server when telling it CRAM-MD5 authenticated is wanted.
    /// Is a base64 encoded string.
    /// </param>
    /// <returns>The response to the challenge, which the server can validate and log in the user if correct</returns>
    /// <exception cref="ArgumentNullException">
    /// If <paramref name="username"/>, 
    /// <paramref name="password"/> or 
    /// <paramref name="challenge"/> is <see langword="null"/>
    /// </exception>
    internal static string ComputeDigest(string username, string password, string challenge)
    {
        if (username == null)
            throw new ArgumentNullException("username");

        if (password == null)
            throw new ArgumentNullException("password");

        if (challenge == null)
            throw new ArgumentNullException("challenge");

        // Get the password bytes
        byte[] passwordBytes = GetSharedSecretInBytes(password);

        // The challenge is encoded in base64
        byte[] challengeBytes = Convert.FromBase64String(challenge);

        // Now XOR the password with the opad and ipad magic bytes
        byte[] passwordOpad = Xor(passwordBytes, opad);
        byte[] passwordIpad = Xor(passwordBytes, ipad);

        // Now do the computation: MD5((password XOR opad), MD5((password XOR ipad), challenge))
        byte[] digestValue = Hash(Concatenate(passwordOpad, Hash(Concatenate(passwordIpad, challengeBytes))));

        // Convert the bytes to a hex string
        // BitConverter writes the output as AF-B3-...
        // We need lower-case output without "-"
        string hex = BitConverter.ToString(digestValue).Replace("-", "").ToLowerInvariant();

        // Include the username in the resulting base64 encoded response
        return Convert.ToBase64String(Encoding.ASCII.GetBytes(username + " " + hex));
    }

    /// <summary>
    /// Hashes a byte array using the MD5 algorithm.
    /// </summary>
    /// <param name="toHash">The byte array to hash</param>
    /// <returns>The result of hashing the <paramref name="toHash"/> bytes with the MD5 algorithm</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toHash"/> is <see langword="null"/></exception>
    private static byte[] Hash(byte[] toHash)
    {
        if (toHash == null)
            throw new ArgumentNullException("toHash");

        using (MD5 md5 = new MD5CryptoServiceProvider())
        {
            return md5.ComputeHash(toHash);
        }
    }

    /// <summary>
    /// Concatenates two byte arrays into one
    /// </summary>
    /// <param name="one">The first byte array</param>
    /// <param name="two">The second byte array</param>
    /// <returns>A concatenated byte array</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="one"/> or <paramref name="two"/> is <see langword="null"/></exception>
    private static byte[] Concatenate(byte[] one, byte[] two)
    {
        if (one == null)
            throw new ArgumentNullException("one");

        if (two == null)
            throw new ArgumentNullException("two");

        // Create space for both byte arrays in one
        byte[] concatenated = new byte[one.Length + two.Length];

        // Copy the first one over
        Buffer.BlockCopy(one, 0, concatenated, 0, one.Length);

        // Copy the second one over
        Buffer.BlockCopy(two, 0, concatenated, one.Length, two.Length);

        // Return result
        return concatenated;
    }

    /// <summary>
    /// XORs a byte array with another.<br/>
    /// Each byte in <paramref name="toXor"/> is XORed with the corresponding byte
    /// in <paramref name="toXorWith"/> until the end of <paramref name="toXor"/> is encountered.
    /// </summary>
    /// <param name="toXor">The byte array to XOR</param>
    /// <param name="toXorWith">The byte array to XOR with</param>
    /// <returns>A new byte array with the XORed results</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="toXor"/> or <paramref name="toXorWith"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentException">If the lengths of the arrays are not equal</exception>
    private static byte[] Xor(byte[] toXor, byte[] toXorWith)
    {
        if (toXor == null)
            throw new ArgumentNullException("toXor");

        if (toXorWith == null)
            throw new ArgumentNullException("toXorWith");

        if (toXor.Length != toXorWith.Length)
            throw new ArgumentException("The lengths of the arrays must be equal");

        // Create a new array to store results in
        byte[] xored = new byte[toXor.Length];

        // XOR each individual byte.
        for (int i = 0; i < toXor.Length; i++)
        {
            xored[i] = toXor[i];
            xored[i] ^= toXorWith[i];
        }

        // Return result
        return xored;
    }
    /// <summary>
    /// This method is responsible to generate the byte array needed
    /// from the shared secret - the password.<br/>
    /// 
    /// RFC 2195 says:<br/>
    /// The shared secret is null-padded to a length of 64 bytes. If the
    /// shared secret is longer than 64 bytes, the MD5 digest of the
    /// shared secret is used as a 16 byte input to the keyed MD5
    /// calculation.
    /// </summary>
    /// <param name="password">This is the shared secret</param>
    /// <returns>The 64 bytes that is to be used from the shared secret</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="password"/> is <see langword="null"/></exception>
    private static byte[] GetSharedSecretInBytes(string password)
    {
        if (password == null)
            throw new ArgumentNullException("password");

        // Get the password in bytes
        byte[] passwordBytes = Encoding.ASCII.GetBytes(password);

        // If the length is larger than 64, we need to
        if (passwordBytes.Length > 64)
        {
            passwordBytes = new MD5CryptoServiceProvider().ComputeHash(passwordBytes);
        }

        if (passwordBytes.Length != 64)
        {
            byte[] returner = new byte[64];
            for (int i = 0; i < passwordBytes.Length; i++)
            {
                returner[i] = passwordBytes[i];
            }
            return returner;
        }

        return passwordBytes;
    }
}

/// <summary>
/// Class for computing the digest needed when issuing the APOP command to a POP3 server.
/// </summary>
internal static class Apop
{
    /// <summary>
    /// Create the digest for the APOP command so that the server can validate
    /// we know the password for some user.
    /// </summary>
    /// <param name="password">The password for the user</param>
    /// <param name="serverTimestamp">The timestamp advertised in the server greeting to the POP3 client</param>
    /// <returns>The password and timestamp hashed with the MD5 algorithm outputted as a HEX string</returns>
    public static string ComputeDigest(string password, string serverTimestamp)
    {
        if (password == null)
            throw new ArgumentNullException("password");

        if (serverTimestamp == null)
            throw new ArgumentNullException("serverTimestamp");

        // The APOP command authorizes itself by using the password together
        // with the server timestamp. This way the password is not transmitted
        // in clear text, and the server can still verify we have the password.
        byte[] digestToHash = Encoding.ASCII.GetBytes(serverTimestamp + password);

        using (MD5 md5 = new MD5CryptoServiceProvider())
        {
            // MD5 hash the digest
            byte[] result = md5.ComputeHash(digestToHash);

            // Convert the bytes to a hex string
            // BitConverter writes the output as AF-B3-...
            // We need lower-case output without "-"
            return BitConverter.ToString(result).Replace("-", "").ToLowerInvariant();
        }
    }
}

internal static class StreamUtility
{
    /// <summary>
    /// Read a line from the stream.
    /// A line is interpreted as all the bytes read until a CRLF or LF is encountered.<br/>
    /// CRLF pair or LF is not included in the string.
    /// </summary>
    /// <param name="stream">The stream from which the line is to be read</param>
    /// <returns>A line read from the stream returned as a byte array or <see langword="null"/> if no bytes were readable from the stream</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="stream"/> is <see langword="null"/></exception>
    public static byte[] ReadLineAsBytes(Stream stream)
    {
        if (stream == null)
            throw new ArgumentNullException("stream");

        using (MemoryStream memoryStream = new MemoryStream())
        {
            while (true)
            {
                int justRead = stream.ReadByte();
                if (justRead == -1 && memoryStream.Length > 0)
                    break;

                // Check if we started at the end of the stream we read from
                // and we have not read anything from it yet
                if (justRead == -1 && memoryStream.Length == 0)
                    return null;

                char readChar = (char)justRead;

                // Do not write \r or \n
                if (readChar != '\r' && readChar != '\n')
                    memoryStream.WriteByte((byte)justRead);

                // Last point in CRLF pair
                if (readChar == '\n')
                    break;
            }

            return memoryStream.ToArray();
        }
    }

    /// <summary>
    /// Read a line from the stream. <see cref="ReadLineAsBytes"/> for more documentation.
    /// </summary>
    /// <param name="stream">The stream to read from</param>
    /// <returns>A line read from the stream or <see langword="null"/> if nothing could be read from the stream</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="stream"/> is <see langword="null"/></exception>
    public static string ReadLineAsAscii(Stream stream)
    {
        byte[] readFromStream = ReadLineAsBytes(stream);
        return readFromStream != null ? Encoding.ASCII.GetString(readFromStream) : null;
    }
}

/// <summary>
/// Some of these states are defined by <a href="http://tools.ietf.org/html/rfc1939">RFC 1939</a>.<br/>
/// Which commands that are allowed in which state can be seen in the same RFC.<br/>
/// <br/>
/// Used to keep track of which state the <see cref="Pop3Client"/> is in.
/// </summary>
internal enum ConnectionState
{
    /// <summary>
    /// This is when the Pop3Client is not even connected to the server
    /// </summary>
    Disconnected,

    /// <summary>
    /// This is when the server is awaiting user credentials
    /// </summary>
    Authorization,

    /// <summary>
    /// This is when the server has been given the user credentials, and we are allowed
    /// to use commands specific to this users mail drop
    /// </summary>
    Transaction
}

/// <summary>
/// Describes the authentication method to use when authenticating towards a POP3 server.
/// </summary>
public enum AuthenticationMethod
{
    /// <summary>
    /// Authenticate using the UsernameAndPassword method.<br/>
    /// This will pass the username and password to the server in cleartext.<br/>
    /// <see cref="Apop"/> is more secure but might not be supported on a server.<br/>
    /// This method is not recommended. Use <see cref="Auto"/> instead.
    /// <br/>
    /// If SSL is used, there is no loss of security by using this authentication method.
    /// </summary>
    UsernameAndPassword,

    /// <summary>
    /// Authenticate using the Authenticated Post Office Protocol method, which is more secure then
    /// <see cref="UsernameAndPassword"/> since it is a request-response protocol where server checks if the
    ///  client knows a shared secret, which is the password, without the password itself being transmitted.<br/>
    /// This authentication method uses MD5 under its hood.<br/>
    /// <br/>
    /// This authentication method is not supported by many servers.<br/>
    /// Choose this option if you want maximum security.
    /// </summary>
    Apop,

    /// <summary>
    /// This is the recomended method to authenticate with.<br/>
    /// If <see cref="Apop"/> is supported by the server, <see cref="Apop"/> is used for authentication.<br/>
    /// If <see cref="Apop"/> is not supported, Auto will fall back to <see cref="UsernameAndPassword"/> authentication.
    /// </summary>
    Auto,

    /// <summary>
    /// Logs in the the POP3 server using CRAM-MD5 authentication scheme.<br/>
    /// This in essence uses the MD5 hashing algorithm on the user password and a server challenge.
    /// </summary>
    CramMd5
}

/// <summary>
/// POP3 compliant POP Client<br/>
/// <br/>	
/// If you want to override where logging is sent, look at <see cref="DefaultLogger"/>
/// </summary>
/// <example>
/// Examples are available on the <a href="http://hpop.sourceforge.net/">project homepage</a>.
/// </example>
public class Pop3Client : IDisposable
{
    #region Private member properties
    /// <summary>
    /// The stream used to communicate with the server
    /// </summary>
    private Stream Stream { get { return _stream; } set { _stream = value; } }
    private Stream _stream;

    /// <summary>
    /// This is the last response the server sent back when a command was issued to it
    /// </summary>
    private string LastServerResponse { get { return _lastServerResponse; } set { _lastServerResponse = value; } }
    private string _lastServerResponse;

    /// <summary>
    /// The APOP time stamp sent by the server in it's welcome message if APOP is supported.
    /// </summary>
    private string ApopTimeStamp { get { return _apopTimeStamp; } set { _apopTimeStamp = value; } }
    private string _apopTimeStamp;

    /// <summary>
    /// Describes what state the <see cref="Pop3Client"/> is in
    /// </summary>
    private ConnectionState State { get { return _state; } set { _state = value; } }
    private ConnectionState _state;
    #endregion

    #region Public member properties
    /// <summary>
    /// Tells whether the <see cref="Pop3Client"/> is connected to a POP server or not
    /// </summary>
    public bool Connected { get { return _connected; } private set { _connected = value; } }
    private bool _connected;

    /// <summary>
    /// Allows you to check if the server supports
    /// the <see cref="AuthenticationMethod.Apop"/> authentication method.<br/>
    /// <br/>
    /// This value is filled when the connect method has returned,
    /// as the server tells in its welcome message if APOP is supported.
    /// </summary>
    public bool ApopSupported { get { return _apopSupported; } private set { _apopSupported = value; } }
    private bool _apopSupported;
    #endregion

    #region Constructors
    /// <summary>
    /// Constructs a new Pop3Client for you to use.
    /// </summary>
    public Pop3Client()
    {
        SetInitialValues();
    }
    #endregion

    #region IDisposable implementation
    
    public void Dispose()
    {
        if (!_isDisposed)
        {
            try
            {
                Dispose(true);
            }
            finally
            {
                _isDisposed = true;
                GC.SuppressFinalize(this);
            }
        }
    }
    private bool _isDisposed=false;

    /// <summary>
    /// Disposes the <see cref="Pop3Client"/>.<br/>
    /// This is the implementation of the <see cref="IDisposable"/> interface.<br/>
    /// Sends the QUIT command to the server before closing the streams.
    /// </summary>
    /// <param name="disposing"><see langword="true"/> if managed and unmanaged code should be disposed, <see langword="false"/> if only managed code should be disposed</param>
    protected  void Dispose(bool disposing)
    {
        if (disposing && !_isDisposed)
        {
            if (Connected)
            {
                Disconnect();
            }
        }
    }
    
    protected void AssertDisposed()
    {
        if (_isDisposed)
        {
            string typeName = GetType().FullName;
            throw new ObjectDisposedException(typeName, String.Format(System.Globalization.CultureInfo.InvariantCulture, "Cannot access a disposed {0}.", typeName));
        }
    }

    #endregion

    #region Connection managing methods
    /// <summary>
    /// Connect to the server using user supplied stream
    /// </summary>
    /// <param name="stream">The stream used to communicate with the server</param>
    /// <exception cref="ArgumentNullException">If <paramref name="stream"/> is <see langword="null"/></exception>
    public void Connect(Stream stream)
    {
        AssertDisposed();

        if (State != ConnectionState.Disconnected)
            throw new Exception("You cannot ask to connect to a POP3 server, when we are already connected to one. Disconnect first.");

        if (stream == null)
            throw new ArgumentNullException("stream");

        Stream = stream;

        // Fetch the server one-line welcome greeting
        string response = StreamUtility.ReadLineAsAscii(Stream);

        // Check if the response was an OK response
        try
        {
            // Assume we now need the user to supply credentials
            // If we do not connect correctly, Disconnect will set the
            // state to Disconnected
            // If this is not set, Disconnect will throw an exception
            State = ConnectionState.Authorization;

            IsOkResponse(response);
            ExtractApopTimestamp(response);
            Connected = true;
        }
        catch (Exception e)
        {
            // If not close down the connection and abort
            DisconnectStreams();

            //DefaultLogger.Log.LogError("Connect(): " + "Error with connection, maybe POP3 server not exist");
            //DefaultLogger.Log.LogDebug("Last response from server was: " + LastServerResponse);
            throw new Exception("Server is not available", e);
        }
    }

    /// <summary>
    /// Connects to a remote POP3 server using default timeouts of 60.000 milliseconds
    /// </summary>
    /// <param name="hostname">The <paramref name="hostname"/> of the POP3 server</param>
    /// <param name="port">The port of the POP3 server</param>
    /// <param name="useSsl"><see langword="true"/> if SSL should be used. <see langword="false"/> if plain TCP should be used.</param>
    /// <exception cref="PopServerNotAvailableException">If the server did not send an OK message when a connection was established</exception>
    /// <exception cref="PopServerNotFoundException">If it was not possible to connect to the server</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="hostname"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentOutOfRangeException">If port is not in the range [<see cref="IPEndPoint.MinPort"/>, <see cref="IPEndPoint.MaxPort"/></exception>
    public void Connect(string hostname, int port, bool useSsl)
    {
        const int defaultTimeOut = 60000;
        Connect(hostname, port, useSsl, defaultTimeOut, defaultTimeOut, null);
    }

    /// <summary>
    /// Connects to a remote POP3 server
    /// </summary>
    /// <param name="hostname">The <paramref name="hostname"/> of the POP3 server</param>
    /// <param name="port">The port of the POP3 server</param>
    /// <param name="useSsl"><see langword="true"/> if SSL should be used. <see langword="false"/> if plain TCP should be used.</param>
    /// <param name="receiveTimeout">Timeout in milliseconds before a socket should time out from reading. Set to 0 or -1 to specify infinite timeout.</param>
    /// <param name="sendTimeout">Timeout in milliseconds before a socket should time out from sending. Set to 0 or -1 to specify infinite timeout.</param>
    /// <param name="certificateValidator">If you want to validate the certificate in a SSL connection, pass a reference to your validator. Supply <see langword="null"/> if default should be used.</param>
    /// <exception cref="PopServerNotAvailableException">If the server did not send an OK message when a connection was established</exception>
    /// <exception cref="PopServerNotFoundException">If it was not possible to connect to the server</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="hostname"/> is <see langword="null"/></exception>
    /// <exception cref="ArgumentOutOfRangeException">If port is not in the range [<see cref="IPEndPoint.MinPort"/>, <see cref="IPEndPoint.MaxPort"/> or if any of the timeouts is less than -1.</exception>
    public void Connect(string hostname, int port, bool useSsl, int receiveTimeout, int sendTimeout, RemoteCertificateValidationCallback certificateValidator)
    {
        AssertDisposed();

        if (hostname == null)
            throw new ArgumentNullException("hostname");

        if (hostname.Length == 0)
            throw new ArgumentException("hostname cannot be empty", "hostname");

        if (port > IPEndPoint.MaxPort || port < IPEndPoint.MinPort)
            throw new ArgumentOutOfRangeException("port");

        if (receiveTimeout < -1)
            throw new ArgumentOutOfRangeException("receiveTimeout");

        if (sendTimeout < -1)
            throw new ArgumentOutOfRangeException("sendTimeout");

        if (State != ConnectionState.Disconnected)
            throw new Exception("You cannot ask to connect to a POP3 server, when we are already connected to one. Disconnect first.");

        TcpClient clientSocket = new TcpClient();
        clientSocket.ReceiveTimeout = receiveTimeout;
        clientSocket.SendTimeout = sendTimeout;

        try
        {
            clientSocket.Connect(hostname, port);
        }
        catch (SocketException e)
        {
            // Close the socket - we are not connected, so no need to close stream underneath
            clientSocket.Close();

            //DefaultLogger.Log.LogError("Connect(): " + e.Message);
            throw new Exception("Server not found", e);
        }

        Stream stream;
        if (useSsl)
        {
            // If we want to use SSL, open a new SSLStream on top of the open TCP stream.
            // We also want to close the TCP stream when the SSL stream is closed
            // If a validator was passed to us, use it.
            SslStream sslStream;
            if (certificateValidator == null)
            {
                sslStream = new SslStream(clientSocket.GetStream(), false);
            }
            else
            {
                sslStream = new SslStream(clientSocket.GetStream(), false, certificateValidator);
            }
            sslStream.ReadTimeout = receiveTimeout;
            sslStream.WriteTimeout = sendTimeout;

            // Authenticate the server
            sslStream.AuthenticateAsClient(hostname);

            stream = sslStream;
        }
        else
        {
            // If we do not want to use SSL, use plain TCP
            stream = clientSocket.GetStream();
        }

        // Now do the connect with the same stream being used to read and write to
        Connect(stream);
    }

    /// <summary>
    /// Disconnects from POP3 server.
    /// Sends the QUIT command before closing the connection, which deletes all the messages that was marked as such.
    /// </summary>
    public void Disconnect()
    {
        AssertDisposed();

        if (State == ConnectionState.Disconnected)
            throw new Exception("You cannot disconnect a connection which is already disconnected");

        try
        {
            SendCommand("QUIT");
        }
        finally
        {
            DisconnectStreams();
        }
    }
    #endregion

    #region Authentication methods
    /// <summary>
    /// Authenticates a user towards the POP server using <see cref="AuthenticationMethod.Auto"/>.<br/>
    /// If this authentication fails but you are sure that the username and password is correct, it might
    /// be that that the POP3 server is wrongly telling the client it supports <see cref="AuthenticationMethod.Apop"/>.
    /// You should try using <see cref="Authenticate(string, string, AuthenticationMethod)"/> while passing <see cref="AuthenticationMethod.UsernameAndPassword"/> to the method.
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="InvalidLoginException">If the user credentials was not accepted</exception>
    /// <exception cref="PopServerLockedException">If the server said the the mailbox was locked</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="username"/> or <paramref name="password"/> is <see langword="null"/></exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    public void Authenticate(string username, string password)
    {
        AssertDisposed();
        Authenticate(username, password, AuthenticationMethod.Auto);
    }

    /// <summary>
    /// Authenticates a user towards the POP server using some <see cref="AuthenticationMethod"/>.
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <param name="authenticationMethod">The way that the client should authenticate towards the server</param>
    /// <exception cref="NotSupportedException">If <see cref="AuthenticationMethod.Apop"/> is used, but not supported by the server</exception>
    /// <exception cref="InvalidLoginException">If the user credentials was not accepted</exception>
    /// <exception cref="PopServerLockedException">If the server said the the mailbox was locked</exception>
    /// <exception cref="ArgumentNullException">If <paramref name="username"/> or <paramref name="password"/> is <see langword="null"/></exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    public void Authenticate(string username, string password, AuthenticationMethod authenticationMethod)
    {
        AssertDisposed();

        if (username == null)
            throw new ArgumentNullException("username");

        if (password == null)
            throw new ArgumentNullException("password");

        if (State != ConnectionState.Authorization)
            throw new Exception("You have to be connected and not authorized when trying to authorize yourself");

        try
        {
            switch (authenticationMethod)
            {
                case AuthenticationMethod.UsernameAndPassword:
                    AuthenticateUsingUserAndPassword(username, password);
                    break;

                case AuthenticationMethod.Apop:
                    AuthenticateUsingApop(username, password);
                    break;

                case AuthenticationMethod.Auto:
                    if (ApopSupported)
                        AuthenticateUsingApop(username, password);
                    else
                        AuthenticateUsingUserAndPassword(username, password);
                    break;

                case AuthenticationMethod.CramMd5:
                    AuthenticateUsingCramMd5(username, password);
                    break;
            }
        }
        catch (Exception e)
        {
            //DefaultLogger.Log.LogError("Problem logging in using method " + authenticationMethod + ". Server response was: " + LastServerResponse);

            // Throw a more specific exception if special cases of failure is detected
            // using the response the server generated when the last command was sent
            CheckFailedLoginServerResponse(LastServerResponse, e);

            // If no special failure is detected, tell that the login credentials were wrong
            throw e;
        }

        // We are now authenticated and therefore we enter the transaction state
        State = ConnectionState.Transaction;
    }

    /// <summary>
    /// Authenticates a user towards the POP server using the USER and PASSWORD commands
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="PopServerException">If the server responded with -ERR</exception>
    private void AuthenticateUsingUserAndPassword(string username, string password)
    {
        SendCommand("USER " + username);
        SendCommand("PASS " + password);

        // Authentication was successful if no exceptions thrown before getting here
    }

    /// <summary>
    /// Authenticates a user towards the POP server using APOP
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="NotSupportedException">Thrown when the server does not support APOP</exception>
    /// <exception cref="PopServerException">If the server responded with -ERR</exception>
    private void AuthenticateUsingApop(string username, string password)
    {
        if (!ApopSupported)
            throw new NotSupportedException("APOP is not supported on this server");

        SendCommand("APOP " + username + " " + Apop.ComputeDigest(password, ApopTimeStamp));

        // Authentication was successful if no exceptions thrown before getting here
    }

    /// <summary>
    /// Authenticates using the CRAM-MD5 authentication method
    /// </summary>
    /// <param name="username">The username</param>
    /// <param name="password">The user password</param>
    /// <exception cref="NotSupportedException">Thrown when the server does not support AUTH CRAM-MD5</exception>
    /// <exception cref="InvalidLoginException">If the user credentials was not accepted</exception>
    /// <exception cref="PopServerLockedException">If the server said the the mailbox was locked</exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    private void AuthenticateUsingCramMd5(string username, string password)
    {
        // Example of communication:
        // C: AUTH CRAM-MD5
        // S: + PDE4OTYuNjk3MTcwOTUyQHBvc3RvZmZpY2UucmVzdG9uLm1jaS5uZXQ+
        // C: dGltIGI5MTNhNjAyYzdlZGE3YTQ5NWI0ZTZlNzMzNGQzODkw
        // S: +OK CRAM authentication successful

        // Other example, where AUTH CRAM-MD5 is not supported
        // C: AUTH CRAM-MD5
        // S: -ERR Authentication method CRAM-MD5 not supported

        try
        {
            SendCommand("AUTH CRAM-MD5");
        }
        catch (Exception e)
        {
            // A PopServerException will be thrown if the server responds with a -ERR not supported
            throw new NotSupportedException("CRAM-MD5 authentication not supported", e);
        }

        // Fetch out the challenge from the server response
        string challenge = LastServerResponse.Substring(2);

        // Compute the challenge response
        string response = CramMd5.ComputeDigest(username, password, challenge);

        // Send the response to the server
        SendCommand(response);

        // Authentication was successful if no exceptions thrown before getting here
    }
    #endregion

    #region Public POP3 commands
    /// <summary>
    /// Get the number of messages on the server using a STAT command
    /// </summary>
    /// <returns>The message count on the server</returns>
    /// <exception cref="PopServerException">If the server did not accept the STAT command</exception>
    public int GetMessageCount()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot get the message count without authenticating yourself towards the server first");

        return SendCommandIntResponse("STAT", 1);
    }

    /// <summary>
    /// Marks the message with the given message number as deleted.<br/>
    /// <br/>
    /// The message will not be deleted until a QUIT command is sent to the server.<br/>
    /// This is done when you call <see cref="Disconnect()"/> or when the Pop3Client is <see cref="Dispose">Disposed</see>.
    /// </summary>
    /// <param name="messageNumber">
    /// The number of the message to be deleted. This message may not already have been deleted.<br/>
    /// The <paramref name="messageNumber"/> must be inside the range [1, messageCount]
    /// </param>
    /// <exception cref="PopServerException">If the server did not accept the delete command</exception>
    public void DeleteMessage(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot delete any messages without authenticating yourself towards the server first");

        SendCommand("DELE " + messageNumber);
    }

    /// <summary>
    /// Marks all messages as deleted.<br/>
    /// <br/>
    /// The messages will not be deleted until a QUIT command is sent to the server.<br/>
    /// This is done when you call <see cref="Disconnect()"/> or when the Pop3Client is <see cref="Dispose">Disposed</see>.<br/>
    /// The method assumes that no prior message has been marked as deleted, and is not valid to call if this is wrong.
    /// </summary>
    /// <exception cref="PopServerException">If the server did not accept one of the delete commands. All prior marked messages will still be marked.</exception>
    public void DeleteAllMessages()
    {
        AssertDisposed();

        int messageCount = GetMessageCount();

        for (int messageItem = messageCount; messageItem > 0; messageItem--)
        {
            DeleteMessage(messageItem);
        }
    }

    /// <summary>
    /// Keep server active by sending a NOOP command.<br/>
    /// This might keep the server from closing the connection due to inactivity.<br/>
    /// <br/>
    /// RFC:<br/>
    /// The POP3 server does nothing, it merely replies with a positive response.
    /// </summary>
    /// <exception cref="PopServerException">If the server did not accept the NOOP command</exception>
    public void NoOperation()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot use the NOOP command unless you are authenticated to the server");

        SendCommand("NOOP");
    }

    /// <summary>
    /// Send a reset command to the server.<br/>
    /// <br/>
    /// RFC:<br/>
    /// If any messages have been marked as deleted by the POP3
    /// server, they are unmarked. The POP3 server then replies
    /// with a positive response.
    /// </summary>
    /// <exception cref="PopServerException">If the server did not accept the RSET command</exception>
    public void Reset()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("You cannot use the RSET command unless you are authenticated to the server");

        SendCommand("RSET");
    }

    /// <summary>
    /// Get a unique ID for a single message.<br/>
    /// </summary>
    /// <param name="messageNumber">
    /// Message number, which may not be marked as deleted.<br/>
    /// The <paramref name="messageNumber"/> must be inside the range [1, messageCount]
    /// </param>
    /// <returns>The unique ID for the message</returns>
    /// <exception cref="PopServerException">If the server did not accept the UIDL command. This could happen if the <paramref name="messageNumber"/> does not exist</exception>
    public string GetMessageUid(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message ID, when the user has not been authenticated yet");

        // Example from RFC:
        //C: UIDL 2
        //S: +OK 2 QhdPYR:00WBw1Ph7x7

        SendCommand("UIDL " + messageNumber);

        // Parse out the unique ID
        return LastServerResponse.Split(' ')[2];
    }

    /// <summary>
    /// Gets a list of unique IDs for all messages.<br/>
    /// Messages marked as deleted are not listed.
    /// </summary>
    /// <returns>
    /// A list containing the unique IDs in sorted order from message number 1 and upwards.
    /// </returns>
    /// <exception cref="PopServerException">If the server did not accept the UIDL command</exception>
    public List<string> GetMessageUids()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message IDs, when the user has not been authenticated yet");

        // RFC Example:
        // C: UIDL
        // S: +OK
        // S: 1 whqtswO00WBw418f9t5JxYwZ
        // S: 2 QhdPYR:00WBw1Ph7x7
        // S: .      // this is the end

        SendCommand("UIDL");

        List<string> uids = new List<string>();

        string response;
        // Keep reading until multi-line ends with a "."
        while (!IsLastLineInMultiLineResponse(response = StreamUtility.ReadLineAsAscii(Stream)))
        {
            // Add the unique ID to the list
            uids.Add(response.Split(' ')[1]);
        }

        return uids;
    }

    /// <summary>
    /// Gets the size in bytes of a single message
    /// </summary>
    /// <param name="messageNumber">
    /// The number of a message which may not be a message marked as deleted.<br/>
    /// The <paramref name="messageNumber"/> must be inside the range [1, messageCount]
    /// </param>
    /// <returns>Size of the message</returns>
    /// <exception cref="PopServerException">If the server did not accept the LIST command</exception>
    public int GetMessageSize(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message size, when the user has not been authenticated yet");

        // RFC Example:
        // C: LIST 2
        // S: +OK 2 200
        return SendCommandIntResponse("LIST " + messageNumber, 2);
    }

    /// <summary>
    /// Get the sizes in bytes of all the messages.<br/>
    /// Messages marked as deleted are not listed.
    /// </summary>
    /// <returns>Size of each message excluding deleted ones</returns>
    /// <exception cref="PopServerException">If the server did not accept the LIST command</exception>
    public List<int> GetMessageSizes()
    {
        AssertDisposed();

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot get message sizes, when the user has not been authenticated yet");

        // RFC Example:
        // C: LIST
        // S: +OK 2 messages (320 octets)
        // S: 1 120
        // S: 2 200
        // S: .       // End of multi-line

        SendCommand("LIST");

        List<int> sizes = new List<int>();

        string response;
        // Read until end of multi-line
        while (!".".Equals(response = StreamUtility.ReadLineAsAscii(Stream)))
        {
            sizes.Add(int.Parse(response.Split(' ')[1], CultureInfo.InvariantCulture));
        }

        return sizes;
    }

    /// <summary>
    /// Fetches a message from the server and parses it
    /// </summary>
    /// <param name="messageNumber">
    /// Message number on server, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <returns>The message, containing the email message</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    public Message GetMessage(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        byte[] messageContent = GetMessageAsBytes(messageNumber);

        return new Message(messageContent);
    }

    /// <summary>
    /// Fetches a message in raw form from the server
    /// </summary>
    /// <param name="messageNumber">
    /// Message number on server, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <returns>The raw bytes of the message</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    public byte[] GetMessageAsBytes(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        // Get the full message
        return GetMessageAsBytes(messageNumber, false);
    }

    /// <summary>
    /// Get all the headers for a message.<br/>
    /// The server will not need to send the body of the message.
    /// </summary>
    /// <param name="messageNumber">
    /// Message number, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <returns>MessageHeaders object</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    public MessageHeader GetMessageHeaders(int messageNumber)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        // Only fetch the header part of the message
        byte[] messageContent = GetMessageAsBytes(messageNumber, true);

        // Do not parse the body - as it is not in the byte array
        return new Message(messageContent, false).Headers;
    }

    /// <summary>
    /// Asks the server to return it's capability listing.<br/>
    /// This is an optional command, which a server is not enforced to accept.
    /// </summary>
    /// <returns>
    /// The returned Dictionary keys are the capability names.<br/>
    /// The Lists pointed to are the capability parameters fitting that certain capability name.
    /// See <a href="http://tools.ietf.org/html/rfc2449#section-6">RFC section 6</a> for explanation for some of the capabilities.
    /// </returns>
    /// <remarks>
    /// Capabilities are case-insensitive.<br/>
    /// The dictionary uses case-insensitive searching, but the Lists inside
    /// does not. Therefore you will have to use something like the code below
    /// to search for a capability parameter.<br/>
    /// foo is the capability name and bar is the capability parameter.
    /// <code>
    /// List&lt;string&gt; arguments = capabilities["foo"];
    ///	bool contains = null != arguments.Find(delegate(string str)
    ///				{
    ///					return String.Compare(str, "bar", true) == 0;
    ///				});
    /// </code>
    /// If we were running on .NET framework >= 3.5, a HashSet could have been used.
    /// </remarks>
    /// <exception cref="PopServerException">If the server did not accept the capability command</exception>
    public Dictionary<string, List<string>> Capabilities()
    {
        AssertDisposed();

        if (State != ConnectionState.Authorization && State != ConnectionState.Transaction)
            throw new Exception("Capability command only available while connected or authenticated");

        // RFC Example
        // Examples:
        // C: CAPA
        // S: +OK Capability list follows
        // S: TOP
        // S: USER
        // S: SASL CRAM-MD5 KERBEROS_V4
        // S: RESP-CODES
        // S: LOGIN-DELAY 900
        // S: PIPELINING
        // S: EXPIRE 60
        // S: UIDL
        // S: IMPLEMENTATION Shlemazle-Plotz-v302
        // S: .
        SendCommand("CAPA");

        // Capablities are case-insensitive
        Dictionary<string, List<string>> capabilities = new Dictionary<string, List<string>>(StringComparer.OrdinalIgnoreCase);

        string lineRead;
        // Keep reading until we are at the end of the multi line response
        while (!IsLastLineInMultiLineResponse(lineRead = StreamUtility.ReadLineAsAscii(Stream)))
        {
            // Example of read line
            // SASL CRAM-MD5 KERBEROS_V4
            // SASL is the name of the capability while
            // CRAM-MD5 and KERBEROS_V4 are arguments to SASL
            string[] splitted = lineRead.Split(' ');

            // There should always be a capability name
            string capabilityName = splitted[0];

            // Find all the arguments
            List<string> capabilityArguments = new List<string>();
            for (int i = 1; i < splitted.Length; i++)
            {
                capabilityArguments.Add(splitted[i]);
            }

            // Add the capability found to the dictionary
            capabilities.Add(capabilityName, capabilityArguments);
        }

        return capabilities;
    }
    #endregion

    #region Private helper methods
    /// <summary>
    /// Examines string to see if it contains a time stamp to use with the APOP command.<br/>
    /// If it does, sets the <see cref="ApopTimeStamp"/> property to this value.
    /// </summary>
    /// <param name="response">The string to examine</param>
    private void ExtractApopTimestamp(string response)
    {
        // RFC Example:
        // +OK POP3 server ready <1896.697170952@dbc.mtview.ca.us>
        Match match = Regex.Match(response, "<.+>");
        if (match.Success)
        {
            ApopTimeStamp = match.Value;
            ApopSupported = true;
        }
    }

    /// <summary>
    /// Tests a string to see if it is a "+" string.<br/>
    /// An "+" string should be returned by a compliant POP3
    /// server if the request could be served.<br/>
    /// <br/>
    /// The method does only check if it starts with "+".
    /// </summary>
    /// <param name="response">The string to examine</param>
    /// <exception cref="PopServerException">Thrown if server did not respond with "+" message</exception>
    private static void IsOkResponse(string response)
    {
        if (response == null)
            throw new Exception("The stream used to retrieve responses from was closed");

        if (response.StartsWith("+", StringComparison.OrdinalIgnoreCase))
            return;

        throw new Exception("The server did not respond with a + response. The response was: \"" + response + "\"");
    }

    /// <summary>
    /// Sends a command to the POP server.<br/>
    /// If this fails, an exception is thrown.
    /// </summary>
    /// <param name="command">The command to send to server</param>
    /// <exception cref="PopServerException">If the server did not send an OK message to the command</exception>
    private void SendCommand(string command)
    {
        // Convert the command with CRLF afterwards as per RFC to a byte array which we can write
        byte[] commandBytes = Encoding.ASCII.GetBytes(command + "\r\n");

        // Write the command to the server
        Stream.Write(commandBytes, 0, commandBytes.Length);
        Stream.Flush(); // Flush the content as we now wait for a response

        // Read the response from the server. The response should be in ASCII
        LastServerResponse = StreamUtility.ReadLineAsAscii(Stream);

        IsOkResponse(LastServerResponse);
    }

    /// <summary>
    /// Sends a command to the POP server, expects an integer reply in the response
    /// </summary>
    /// <param name="command">command to send to server</param>
    /// <param name="location">
    /// The location of the int to return.<br/>
    /// Example:<br/>
    /// <c>S: +OK 2 200</c><br/>
    /// Set <paramref name="location"/>=1 to get 2<br/>
    /// Set <paramref name="location"/>=2 to get 200<br/>
    /// </param>
    /// <returns>Integer value in the reply</returns>
    /// <exception cref="PopServerException">If the server did not accept the command</exception>
    private int SendCommandIntResponse(string command, int location)
    {
        SendCommand(command);

        return int.Parse(LastServerResponse.Split(' ')[location], CultureInfo.InvariantCulture);
    }

    /// <summary>
    /// Asks the server for a message and returns the message response as a byte array.
    /// </summary>
    /// <param name="messageNumber">
    /// Message number on server, which may not be marked as deleted.<br/>
    /// Must be inside the range [1, messageCount]
    /// </param>
    /// <param name="askOnlyForHeaders">If <see langword="true"/> only the header part of the message is requested from the server. If <see langword="false"/> the full message is requested</param>
    /// <returns>A byte array that the message requested consists of</returns>
    /// <exception cref="PopServerException">If the server did not accept the command sent to fetch the message</exception>
    private byte[] GetMessageAsBytes(int messageNumber, bool askOnlyForHeaders)
    {
        AssertDisposed();

        ValidateMessageNumber(messageNumber);

        if (State != ConnectionState.Transaction)
            throw new Exception("Cannot fetch a message, when the user has not been authenticated yet");

        if (askOnlyForHeaders)
        {
            // 0 is the number of lines of the message body to fetch, therefore it is set to zero to fetch only headers
            SendCommand("TOP " + messageNumber + " 0");
        }
        else
        {
            // Ask for the full message
            SendCommand("RETR " + messageNumber);
        }

        // RFC 1939 Example
        // C: RETR 1
        // S: +OK 120 octets
        // S: <the POP3 server sends the entire message here>
        // S: .

        // Create a byte array builder which we use to write the bytes too
        // When done, we can get the byte array out
        using (MemoryStream byteArrayBuilder = new MemoryStream())
        {
            bool first = true;
            byte[] lineRead;

            // Keep reading until we are at the end of the multi line response
            while (!IsLastLineInMultiLineResponse(lineRead = StreamUtility.ReadLineAsBytes(Stream)))
            {
                // We should not write CRLF on the very last line, therefore we do this
                if (!first)
                {
                    // Write CRLF which was not included in the lineRead bytes of last line
                    byte[] crlfPair = Encoding.ASCII.GetBytes("\r\n");
                    byteArrayBuilder.Write(crlfPair, 0, crlfPair.Length);
                }
                else
                {
                    // We are now not the first anymore
                    first = false;
                }

                // This is a multi-line. See http://tools.ietf.org/html/rfc1939#section-3
                // It says that a line starting with "." and not having CRLF after it
                // is a multi line, and the "." should be stripped
                if (lineRead.Length > 0 && lineRead[0] == '.')
                {
                    // Do not write the first period
                    byteArrayBuilder.Write(lineRead, 1, lineRead.Length - 1);
                }
                else
                {
                    // Write everything
                    byteArrayBuilder.Write(lineRead, 0, lineRead.Length);
                }
            }

            // If we are fetching a header - add an extra line to denote the headers ended
            if (askOnlyForHeaders)
            {
                byte[] crlfPair = Encoding.ASCII.GetBytes("\r\n");
                byteArrayBuilder.Write(crlfPair, 0, crlfPair.Length);
            }

            // Get out the bytes we have written to byteArrayBuilder
            byte[] receivedBytes = byteArrayBuilder.ToArray();

            return receivedBytes;
        }
    }

    /// <summary>
    /// Check if the bytes received is the last line in a multi line response
    /// from the pop3 server. It is the last line if the line contains only a "."
    /// </summary>
    /// <param name="bytesReceived">The last line received from the server, which could be the last response line</param>
    /// <returns><see langword="true"/> if last line in a multi line response, <see langword="false"/> otherwise</returns>
    /// <exception cref="ArgumentNullException">If <paramref name="bytesReceived"/> is <see langword="null"/></exception>
    private static bool IsLastLineInMultiLineResponse(byte[] bytesReceived)
    {
        if (bytesReceived == null)
            throw new ArgumentNullException("bytesReceived");

        return bytesReceived.Length == 1 && bytesReceived[0] == '.';
    }

    /// <see cref="IsLastLineInMultiLineResponse(byte[])"> for documentation</see>
    private static bool IsLastLineInMultiLineResponse(string lineReceived)
    {
        if (lineReceived == null)
            throw new ArgumentNullException("lineReceived");

        // If the string is indeed the last line, then it is okay to do ASCII encoding
        // on it. For performance reasons we check if the length is equal to 1
        // so that we do not need to decode a long message string just to see if
        // it is the last line
        return lineReceived.Length == 1 && IsLastLineInMultiLineResponse(Encoding.ASCII.GetBytes(lineReceived));
    }

    /// <summary>
    /// Method for checking that a <paramref name="messageNumber"/> argument given to some method
    /// is indeed valid. If not, <see cref="InvalidUseException"/> will be thrown.
    /// </summary>
    /// <param name="messageNumber">The message number to validate</param>
    private static void ValidateMessageNumber(int messageNumber)
    {
        if (messageNumber <= 0)
            throw new Exception("The messageNumber argument cannot have a value of zero or less. Valid messageNumber is in the range [1, messageCount]");
    }

    /// <summary>
    /// Closes down the streams and sets the Pop3Client into the initial configuration
    /// </summary>
    private void DisconnectStreams()
    {
        try
        {
            Stream.Close();
        }
        finally
        {
            // Reset values to initial state
            SetInitialValues();
        }
    }

    /// <summary>
    /// Sets the initial values on the public properties of this Pop3Client.
    /// </summary>
    private void SetInitialValues()
    {
        // We have not seen the APOPTimestamp yet
        ApopTimeStamp = null;

        // We are not connected
        Connected = false;
        State = ConnectionState.Disconnected;

        // APOP is not supported before we check on login
        ApopSupported = false;
    }

    /// <summary>
    /// Checks for extra response codes when an authentication has failed and throws
    /// the correct exception.
    /// If no such response codes is found, nothing happens.
    /// </summary>
    /// <param name="serverErrorResponse">The server response string</param>
    /// <param name="e">The exception thrown because the server responded with -ERR</param>
    /// <exception cref="PopServerLockedException">If the account is locked or in use</exception>
    /// <exception cref="LoginDelayException">If the server rejects the login because of too recent logins</exception>
    private static void CheckFailedLoginServerResponse(string serverErrorResponse, Exception e)
    {
        string upper = serverErrorResponse.ToUpperInvariant();

        // Bracketed strings are extra response codes addded
        // in RFC http://tools.ietf.org/html/rfc2449
        // together with the CAPA command.

        // Specifies the account is in use
        if (upper.Contains("[IN-USE]") || upper.Contains("LOCK"))
        {
            //DefaultLogger.Log.LogError("Authentication: maildrop is locked or in-use");
            throw e;
        }

        // Specifies that there must go some time between logins
        if (upper.Contains("[LOGIN-DELAY]"))
        {
            throw e;
        }
    }
    #endregion
}

public DataTable CreateFolderDataTable()
{
	DataTable dt = new DataTable("IMAP Folders");
    dt.Columns.Add("Folder Name", typeof(string));
    dt.Columns.Add("Message Count", typeof(int));
    dt.Columns.Add("Full Name", typeof(string));
    dt.Columns.Add("Id", typeof(string));
    dt.Columns.Add("Is Namespace", typeof(bool));
    dt.Columns.Add("Is Open", typeof(bool));
    dt.Columns.Add("Is Subscribed", typeof(bool));
    dt.Columns.Add("Parent Folder Name", typeof(string));
    dt.Columns.Add("Unread Message Count", typeof(int));
	
	return dt;
}

private DataTable AddFolderToDataTable(IMailFolder folder, DataTable dt)
{
	DataRow dr;
	dr = dt.NewRow();
	dr["Folder Name"] = folder.Name;
	dr["Id"] = folder.Id; // Server dependent. requires support of OBJECTID extension at server level.
	dr["Message Count"] = folder.Count;
	dr["Full Name"] = folder.FullName;
	dr["Is Namespace Folder"] = folder.IsNamespace;
	dr["Is Open"] = folder.IsOpen;
	dr["Is Subscribed"] = folder.IsSubscribed;
	dr["Parent Folder Name"] = folder.ParentFolder.Name;
	dr["Unread Message Count"] = folder.Unread;
	dt.Rows.Add(dr);

	return dt;
}

public ImapClient InitializeIMAPClient(string imapserver, int port, string username, string password, bool checkCert)
{
	_imapClient = new ImapClient();
	_imapClient.CheckCertificateRevocation = checkCert;
	_imapClient.Connect(imapserver, port, SecureSocketOptions.Auto);
	_imapClient.Authenticate(username, password);
	
	return _imapClient;
}

public void ReSubscribe()
{
	FolderNamespace fn = _imapClient.PersonalNamespaces[0];
	
	var topLevel = _imapClient.GetFolder(fn);
	if (topLevel.IsSubscribed)
	{
		topLevel.Unsubscribe();
        topLevel.Subscribe();
    }
    else
    {
		topLevel.Subscribe();
    }
}

public Dictionary<UniqueId, MimeKit.MimeMessage> DownloadIMAPMessages(string foldername, SearchQuery sq)
{
	Dictionary<UniqueId, MimeKit.MimeMessage> messageStore = new Dictionary<UniqueId, MimeKit.MimeMessage>();

	IMailFolder folder = GetFolder(foldername);
	
	folder.Open(FolderAccess.ReadWrite);
	
    var uids = folder.Search(sq);

    foreach (var uid in uids)
    {
		var mimeMessage = folder.GetMessage(uid);
        messageStore.Add(uid, mimeMessage);
    }
            
    return messageStore;
}

public IMailFolder GetFolder(string foldername)
{
	IMailFolder folder = null;
    FolderNamespace fn = _imapClient.PersonalNamespaces[0];

    var folders = _imapClient.GetFolders(fn);

    folder = folders.FirstOrDefault(f => f.Name == foldername); // could be null!!!

    return folder;
}

public DataTable GetFolderInfo(string foldername)
{
	DataTable dt = CreateFolderDataTable();
    
    IMailFolder folder = null;
    FolderNamespace fn = _imapClient.PersonalNamespaces[0];

    var folders = _imapClient.GetFolders(fn);
    folder = folders.FirstOrDefault(f => f.Name == foldername);

    if (folder != null)
    {
		folder.Open(FolderAccess.ReadOnly);
        folder.Search(SearchQuery.All);
        dt = AddFolderToDataTable(folder, dt);
        folder.Close(false);
    }

    return dt;
}

public DataTable GetFolders()
{
	DataTable folders = CreateFolderDataTable();
            	
	FolderNamespace fn = _imapClient.PersonalNamespaces[0];

    var imapfolders = _imapClient.GetFolders(fn);
    if (imapfolders != null)
    {
		foreach (var fldr in imapfolders)
        {
			fldr.Open(FolderAccess.ReadOnly);
			fldr.Search(SearchQuery.All);
			
			folders = AddFolderToDataTable(fldr, folders);
			
			fldr.Close(false);
        }
    }
	
	return folders;
}

public string CreateNewPersonalFolder( string newfoldername)
{
	FolderNamespace fn = _imapClient.PersonalNamespaces[0];
	string CreatedFolderName = string.Empty;

     var toplevel = _imapClient.GetFolder(fn);

     var newfolder = toplevel.Create(newfoldername, true);
	 
	 if (newfolder != null)
	 {
		 CreatedFolderName = newfolder.Name;
	 }
	 
	 return CreatedFolderName;
}

public string RenameFolder(string oldname, string newname)
{
	string RenamedFolderName = "Rename Failed";
	FolderNamespace fn = _imapClient.PersonalNamespaces[0];

	var toplevel = _imapClient.GetFolder(fn);

    var folder = _imapClient.GetFolders(fn).FirstOrDefault(f => f.Name == oldname);
    if (folder != null)
    {
		folder.Rename(toplevel, newname);
		RenamedFolderName = folder.Name;
    }
	
	return RenamedFolderName;
	
}

private UniqueId MoveMailItemToFolder(IMailFolder fromFolder, IMailFolder toFolder, UniqueId messageid)
{
	var newMailId = fromFolder.MoveTo(messageid, toFolder);
	return newMailId.Value;
	
}

public bool MoveMailItemBySubject(string subject, string fromFolderName,  string ToFolderName)
{
	string returnMessage = string.Empty;
	var messages = DownloadIMAPMessages(fromFolderName, SearchQuery.All);
	var fromFolder = GetFolder( fromFolderName);
	fromFolder.Open(FolderAccess.ReadWrite);
	var toFolder = GetFolder( ToFolderName);
	UniqueId id = UniqueId.MinValue;	
	
	var mailmessages = messages.Where(m => m.Value.Subject == subject);
		
	foreach (var message in mailmessages)
	{
		id = fromFolder.MoveTo(message.Key, toFolder).Value;
	}
		
	fromFolder.Close();
	
	return id != UniqueId.MinValue;
}

]]></code></stage><stage stageid="e74c516a-5c0f-4539-88d1-4af07d49b311" name="Clean Up" type="SubSheetInfo"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="453e6ca1-71dc-4ce2-8a1c-d6512bd6b502" name="Start" type="Start"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>98566d14-9c68-423f-a446-0c63a9d56369</onsuccess></stage><stage stageid="98566d14-9c68-423f-a446-0c63a9d56369" name="End" type="End"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="dfd23e65-5e00-48c2-9222-b028de2d5425" name="new" type="Note"><subsheetid>ad30cfbe-8a8c-44e4-8a26-6ca67f058f7d</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="9ffa7f6a-6f1a-4b3a-800b-c5b3d02f1053" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="3d27a452-2516-48ee-a57b-363989e0a677" name="Delete Message" type="SubSheetInfo"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><narrative>Deletes a message from the POP3 server.</narrative><display x="-225" y="-150" w="270" h="60" /></stage><stage stageid="f7d6db43-bdda-4cf0-bee9-37c1bfaadd6c" name="Configure" type="SubSheetInfo"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><narrative>Configures POP3 and SMTP settings for the Business Object</narrative><display x="-225" y="-120" w="270" h="60" /></stage><stage stageid="c92379ab-616d-4e9f-bbdf-76d8f4a464de" name="INTERNAL - Disconnect POP3" type="SubSheetInfo"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><display x="-240" y="-120" w="270" h="60" /></stage><stage stageid="e691cdbf-68a7-46c5-9469-911182bc8475" name="INTERNAL - Connect POP3" type="SubSheetInfo"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><display x="-225" y="-105" w="270" h="60" /></stage><stage stageid="943a7e4b-9dbd-427b-a3a1-4f2810050f82" name="Send Message" type="SubSheetInfo"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><narrative>Sends a message using the SMTP protocol.</narrative><display x="-285" y="-150" w="270" h="60" /></stage><stage stageid="5c4dcdf6-a371-4878-9c4c-3fd08aa568f4" name="List Messages" type="SubSheetInfo"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><narrative>Retrieves a collection of basic information about the available messages (i.e. Message-Id, Subject, From Name, From Address, and Sent Date)</narrative><display x="-255" y="-105" w="270" h="60" /></stage><stage stageid="9879be0d-2188-4595-91b6-ac07d1e348dc" name="Get Message" type="SubSheetInfo"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><narrative>Gets a message using the POP3 protocol. By default, for multipart messages the plain text part is returned in preference to HTML (with the Content-Type output parameter indicating what was actually returned), however the HTMLPreferred flag can be used to reverse this logic. If the message contains no plain text or HTML parts then an empty string is returned.</narrative><display x="-210" y="-120" w="270" h="90" /></stage><stage stageid="d64e2310-ca59-4f22-8594-a0cd08d3d78f" name="INTERNAL - Number From ID" type="SubSheetInfo"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><display x="-255" y="-120" w="270" h="60" /></stage><stage stageid="f06ff7dc-dee1-4319-8fb8-e7324bbeda46" name="Delete Messages" type="SubSheetInfo"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><narrative>Deletes a collection identifying messages from the POP3 server.</narrative><display x="-240" y="-105" w="270" h="60" /></stage><stage stageid="4c85d0ab-d738-40a4-b0b2-d59986be4091" name="Save Attachments" type="SubSheetInfo"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><narrative>Gets a message attachment and saves it to a given folder.</narrative><display x="-240" y="-120" w="270" h="60" /></stage><stage stageid="ed4cd6f4-e48a-4555-add8-01da6154274d" name="Global" type="Block"><loginhibit /><display x="105" y="-45" w="270" h="195" /><font family="Segoe UI" size="10" style="Regular" color="999999" /></stage><stage stageid="d47fe78b-09df-4839-9a68-abceea13db3e" name="POP3 Connected" type="Data"><display x="630" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue></stage><stage stageid="ce53c45e-161e-4102-8984-0446efbdcae8" name="Use OAuth2" type="Data"><loginhibit /><display x="180" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue></stage><stage stageid="3ec15690-1215-4dcf-901f-894d4d140811" name="Configured" type="Data"><loginhibit /><display x="240" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="3b8cdd69-728f-4eb2-8f83-71d58c13fbdb" name="Username" type="Data"><display x="180" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="4b76f8c3-c2c9-4f5f-a537-056bf47b3ea4" name="Password" type="Data"><display x="300" y="-15" w="120" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><alwaysinit /></stage><stage stageid="a06af005-606e-48da-ab03-c3f5e7fb230a" name="POP3 Server" type="Data"><display x="630" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="7e81143f-a979-41e4-b5ed-74ecb1f83188" name="SMTP Server" type="Data"><display x="465" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="371e3ba4-5232-4ffc-8ebf-1db1a71cf619" name="SMTP Port" type="Data"><display x="465" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="a070a2f5-6714-4757-86c5-cea54b00becc" name="POP3 Port" type="Data"><display x="630" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="793638b4-7880-4d64-b79d-313ca7918512" name="SMTP UseSSL" type="Data"><display x="465" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="d3a06826-ea89-4d76-94ab-9d778fbbbee3" name="POP3 UseSSL" type="Data"><display x="630" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="e2ba0935-fc7e-4168-8fb9-9c0f8bed396f" name="OAuth2 Access Token" type="Data"><display x="300" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="2c9b2c46-923a-47d6-aa4c-8906285cbd4d" name="Note3" type="Note"><loginhibit /><narrative>Version: 10.4.4</narrative><display x="15" y="-195" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="5e948a26-13b7-49f2-9489-261d9c64dd5f" name="End" type="End"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><display x="15" y="15" /></stage><stage stageid="93261a11-5343-43f4-a78c-e08ccca182a2" name="Start" type="Start"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Username" narrative="The POP3 and SMTP Username" stage="Username" /><input type="password" name="Password" narrative="The POP3 and SMTP Password" stage="Password" /><input type="text" name="POP3 Server" narrative="The POP3 Server address e.g. pop.domain.com" stage="POP3 Server" /><input type="number" name="POP3 Port" narrative="The POP3 Port, e.g. 110 or 995" stage="POP3 Port" /><input type="flag" name="POP3 UseSSL" narrative="Whether to use SSL for POP3" stage="POP3 UseSSL" /><input type="text" name="SMTP Server" narrative="The SMTP Server address e.g. smtp.domain.com" stage="SMTP Server" /><input type="number" name="SMTP Port" narrative="The SMTP Port, e.g 25 or 465" stage="SMTP Port" /><input type="flag" name="SMTP UseSSL" narrative="Whether to use SSL for SMTP" stage="SMTP UseSSL" /><input type="flag" name="Use OAuth2" narrative="Optional: Flag that indicates OAuth2 authentication should be used when connecting to the POP3 server." stage="Use OAuth2" /><input type="text" name="OAuth2 Access Token" narrative="Optional: A valid, non-expired OAuth2 access token for the target platform (ex. Exchange Online, Google Mail, etc). Note: Use of OAuth only applies to POP3. SMTP AUTH is still used for SMTP connections." stage="OAuth2 Access Token" /><input type="text" name="IMAP Server" narrative="The IMAP Server. Supplied by your IT dept or ISP" stage="IMAP Server" /><input type="number" name="IMAP Port" narrative="The IMAP Port 993 or in some cases 143" stage="IMAP Port" /><input type="flag" name="UseStartTLS" narrative="Use StartTLS for IMAP Server" stage="IMAP Use StartTLS" /></inputs><onsuccess>4b429c97-7d88-4438-a926-0c22b9c191bc</onsuccess></stage><stage stageid="4b429c97-7d88-4438-a926-0c22b9c191bc" name="Set Configured" type="Calculation"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>5e948a26-13b7-49f2-9489-261d9c64dd5f</onsuccess><calculation expression="True" stage="Configured" /></stage><stage stageid="9fde563b-59a9-433b-aeba-d96b7be5a5eb" name="Input" type="Block"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><display x="-360" y="-75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5e0346bb-d7a2-4ab3-8298-5407408e0261" name="Output" type="Block"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><display x="-360" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="d0cec645-7456-45b3-96d9-de00ae1863e2" name="Local" type="Block"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><display x="-360" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="6405d37a-bf67-452d-8839-8b2074eae2be" name="Start" type="Start"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="MessageID" narrative="The ID of the message to retrieve." stage="MessageID" /><input type="flag" name="HTMLPreferred" narrative="Return HTML content in preference to plain text (multipart messages only)" stage="HTMLPreferred" /></inputs><onsuccess>e944588f-c53b-4a78-99dd-2bce8e86bf20</onsuccess></stage><stage stageid="72cefa85-811d-436b-8de7-9ab3a90e5756" name="MessageID" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><display x="-270" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27248240-96b9-4ec9-8cd0-22d4f05d96c1" name="End" type="End"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="15" y="135" /><outputs><output type="text" name="Body" narrative="The email body" stage="Body" /><output type="text" name="Content-Type" narrative="The content type of the returned body (e.g. text/plain)" stage="Content-Type" /></outputs></stage><stage stageid="e944588f-c53b-4a78-99dd-2bce8e86bf20" name="INTERNAL - Connect POP3" type="SubSheet"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>bf3bffee-63fb-4d74-933c-fb73c60e0976</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="f587beab-bf67-4cd8-ab15-ff038c6a80cc" name="Code1" type="Code"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="15" y="75" /><inputs><input type="number" name="MessageNumber" expr="[Message Number]" /><input type="flag" name="HTMLPreferred" expr="[HTMLPreferred]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><outputs><output type="text" name="Body" stage="Body" /><output type="text" name="Content-Type" stage="Content-Type" /></outputs><onsuccess>27248240-96b9-4ec9-8cd0-22d4f05d96c1</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	MimeKit.MimeMessage m = _mkClient.GetMessage(((int)MessageNumber) - 1);
	if ((HTMLPreferred) && (m.HtmlBody != null))
	{
		Body = m.HtmlBody;
		Content_Type = "text/html";
	}
	else if (m.TextBody != null)
	{
		Body = m.TextBody;
		Content_Type = "text/plain";
	}
	else
	{
		Body = "";
		Content_Type = "";
	}
}
else
{
	Message m =_rclient.GetMessage((int)MessageNumber);
	MessagePart p;
	if (HTMLPreferred) {
		p = m.FindFirstHtmlVersion();
		if (p == null) p = m.FindFirstPlainTextVersion();
	} else {
		p = m.FindFirstPlainTextVersion();
		if (p == null) p = m.FindFirstHtmlVersion();
	}
	if (p != null) {
		Body = p.GetBodyAsText();
		Content_Type = p.ContentType.ToString();
	} else {
		Body = "";
		Content_Type = "";
	}
}]]></code></stage><stage stageid="0f502590-720c-4ed5-93e9-0c387bc54d2c" name="Body" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><display x="-270" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bf3bffee-63fb-4d74-933c-fb73c60e0976" name="INTERNAL - Number From ID" type="SubSheet"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="15" y="15" w="90" h="30" /><inputs><input type="text" name="MessageID" expr="[MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="Message Number" /></outputs><onsuccess>f587beab-bf67-4cd8-ab15-ff038c6a80cc</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="a428f558-b3c9-4d1a-af6a-a6971f45ac79" name="Message Number" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><display x="-270" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fe4a1457-ffd4-4c7d-8d29-6a80e18cb089" name="HTMLPreferred" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><display x="-150" y="-30" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="05a3a1b3-2205-4ad2-a740-5a01c86f0fdf" name="Content-Type" type="Data"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><display x="-150" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0ebd49c9-6d51-41ea-9ac5-b258e743b781" name="Input" type="Block"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="-345" y="-60" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="cc460292-8282-475b-bdbf-ef1daa2ad23a" name="Output" type="Block"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="-345" y="15" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="8af7307e-d060-481d-b5df-6764d3759f5c" name="Local" type="Block"><subsheetid>67bff276-3cf2-4985-a957-e462b800ac3b</subsheetid><loginhibit /><display x="-345" y="90" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="35245b56-61e6-4ef2-b3af-c5e35d1e44a5" name="Start" type="Start"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="text" name="MessageID" narrative="The ID of the message to delete." stage="MessageID" /></inputs><onsuccess>5e3c81bb-309c-4cc3-a192-60281c198492</onsuccess></stage><stage stageid="9aeb4704-dc5f-4c71-af9c-39ddc7fe7f95" name="MessageID" type="Data"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><display x="-285" y="-75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4f4148f-d714-4d51-8f0e-2091c86b1934" name="Code2" type="Code"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="15" y="45" /><inputs><input type="number" name="MessageNumber" expr="[Message Number]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><onsuccess>ea7e0586-ffa1-46b5-b950-1c23b279efd4</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	int msgNumber = (int)(MessageNumber - 1);
	_mkClient.DeleteMessage(msgNumber);
}
else
	_rclient.DeleteMessage((int)MessageNumber);]]></code></stage><stage stageid="c391af43-4f1e-45ca-9b44-6f65d9e4936f" name="End" type="End"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="15" y="165" /></stage><stage stageid="ea7e0586-ffa1-46b5-b950-1c23b279efd4" name="INTERNAL - Disconnect POP3" type="SubSheet"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="15" y="105" w="90" h="30" /><onsuccess>c391af43-4f1e-45ca-9b44-6f65d9e4936f</onsuccess><processid>c8b9e601-7444-4385-b2aa-6709658ad472</processid></stage><stage stageid="5e3c81bb-309c-4cc3-a192-60281c198492" name="INTERNAL - Connect POP3" type="SubSheet"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="15" y="-75" w="90" h="30" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>f4cf9abe-121c-4e4a-9d94-795352338173</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="f4cf9abe-121c-4e4a-9d94-795352338173" name="INTERNAL - Number From ID" type="SubSheet"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="MessageID" expr="[MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="Message Number" /></outputs><onsuccess>c4f4148f-d714-4d51-8f0e-2091c86b1934</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="e9844bd6-5749-4369-910e-895cb4b25c0f" name="Message Number" type="Data"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><display x="-285" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cf8346bf-2027-4bd0-b129-0b8672a374ab" name="Input" type="Block"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="-360" y="-105" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="acda4afd-f54b-43b2-ab78-cd3f0a581328" name="Output" type="Block"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="-360" y="-30" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="81f1d4c7-44fb-461f-8dda-e4b519cf2c5d" name="Local" type="Block"><subsheetid>8279ef2e-ecb1-434b-a10d-cc7c6d1a5e8e</subsheetid><loginhibit /><display x="-360" y="45" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="097db50f-bb98-4916-8818-79bb3279a066" name="Start" type="Start"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="MessageIDs" narrative="A collection containing the IDs of the messages to delete." stage="MessageIDs" /></inputs><onsuccess>51fe7981-1cc5-4e28-8dbf-bfed8a18e383</onsuccess></stage><stage stageid="f3741b83-17eb-423a-874a-f0f1e1da09d0" name="Delete Message1" type="Code"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="210" /><inputs><input type="number" name="MessageNumber" expr="[MessageNumbers.MessageNumber]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><onsuccess>d0c399c3-3429-4a08-846f-1a9253fef310</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	int msgNumber = (int)(MessageNumber - 1);
	_mkClient.DeleteMessage(msgNumber);
}
else
	_rclient.DeleteMessage((int)MessageNumber);]]></code></stage><stage stageid="7a63cb28-0870-4f87-94af-0fed574d0d9d" name="End" type="End"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="345" /></stage><stage stageid="1798a81a-f49d-46fe-b931-f8f6400d12e8" name="INTERNAL - Disconnect POP3" type="SubSheet"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="300" w="90" h="30" /><onsuccess>7a63cb28-0870-4f87-94af-0fed574d0d9d</onsuccess><processid>c8b9e601-7444-4385-b2aa-6709658ad472</processid></stage><stage stageid="51fe7981-1cc5-4e28-8dbf-bfed8a18e383" name="INTERNAL - Connect POP3" type="SubSheet"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>0e731d7d-87f8-49d0-8903-db0a533f1fa4</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="6619b3e1-ecde-462e-b8f8-5b6dcd7d1248" name="INTERNAL - Number From ID" type="SubSheet"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="75" w="90" h="30" /><inputs><input type="text" name="MessageID" expr="[MessageIDs.MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="MessageNumbers.MessageNumber" /></outputs><onsuccess>e7998f05-c2e0-492d-bf9f-4a5cd824bde5</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="0e731d7d-87f8-49d0-8903-db0a533f1fa4" name="For Each MessageID" type="LoopStart"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="-15" /><onsuccess>bbb733ba-36d7-4a59-842a-7564227056d2</onsuccess><groupid>978357e5-038e-44c9-8771-290084c89053</groupid><looptype>ForEach</looptype><loopdata>MessageIDs</loopdata></stage><stage stageid="e7998f05-c2e0-492d-bf9f-4a5cd824bde5" name="Next" type="LoopEnd"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="120" /><onsuccess>4e83d0d7-794a-45ed-84ef-d16a800a1629</onsuccess><groupid>978357e5-038e-44c9-8771-290084c89053</groupid></stage><stage stageid="bbb733ba-36d7-4a59-842a-7564227056d2" name="Add Row" type="Action"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="30" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;MessageNumbers&quot;" /></inputs><onsuccess>6619b3e1-ecde-462e-b8f8-5b6dcd7d1248</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="20aa5338-aaf5-4673-a3d6-b52cd1cad970" name="MessageNumbers" type="Collection"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><display x="-300" y="120" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="MessageNumber" type="number" /></collectioninfo></stage><stage stageid="4e83d0d7-794a-45ed-84ef-d16a800a1629" name="For Each Message Number" type="LoopStart"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="165" /><onsuccess>f3741b83-17eb-423a-874a-f0f1e1da09d0</onsuccess><groupid>a8da96ad-c391-4567-948a-fb283d323764</groupid><looptype>ForEach</looptype><loopdata>MessageNumbers</loopdata></stage><stage stageid="d0c399c3-3429-4a08-846f-1a9253fef310" name="Next" type="LoopEnd"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="15" y="255" /><onsuccess>1798a81a-f49d-46fe-b931-f8f6400d12e8</onsuccess><groupid>a8da96ad-c391-4567-948a-fb283d323764</groupid></stage><stage stageid="c28ff5d7-6a63-49ba-87fc-a6320bb66694" name="MessageIDs" type="Collection"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="-300" y="-30" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject" type="text" description="The subject of the email." /><field name="From Name" type="text" description="The name of the sender." /><field name="From Address" type="text" description="The email address of the sender." /><field name="Date Sent" type="datetime" description="The date and time at which the email was sent." /><field name="MessageID" type="text" description="The ID of the email message." /></collectioninfo></stage><stage stageid="b59e888a-94ed-4044-8d6f-fb7e9d171097" name="Input" type="Block"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="-375" y="-60" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8a6f8309-7d8a-4283-a88c-a138c9a9256a" name="Output" type="Block"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="-375" y="15" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="1965d5bd-a556-4c32-bb1c-f95765a208b3" name="Local" type="Block"><subsheetid>849d1a37-179b-40ae-9683-4ebb0d951576</subsheetid><loginhibit /><display x="-375" y="90" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="6f5a696e-fa45-4cc6-af3c-e2ec8388648b" name="Start" type="Start"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>1caf32c3-760e-4dff-a902-96ef0e2bf621</onsuccess></stage><stage stageid="05fc14c9-9037-4174-955f-768a1bd58111" name="End" type="End"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="120" y="75" /><outputs><output type="collection" name="Emails" stage="Emails" /></outputs></stage><stage stageid="1ad29f31-1280-4752-8d95-c0361213c5fb" name="MessageCount" type="Data"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><display x="-315" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2c0fb611-4146-4a08-989e-88585d1cbb1f" name="Messages Left?" type="Decision"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="15" y="75" /><decision expression="[MessageCount] &gt; 0" /><ontrue>98d0d6a1-18e9-4129-85f7-eb80a14e081f</ontrue><onfalse>05fc14c9-9037-4174-955f-768a1bd58111</onfalse></stage><stage stageid="dd31764b-2e5a-4507-bc14-d5bb264f4c72" name="Decrement" type="Calculation"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="15" y="255" /><onsuccess>cb2927fa-cfb2-471c-95db-45446a1833e4</onsuccess><calculation expression="[MessageCount] - 1" stage="MessageCount" /></stage><stage stageid="5776f51b-14c7-4daf-9983-6b116cb5d241" name="Get Message Headers1" type="Code"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="15" y="195" /><inputs><input type="number" name="MessageNumber" expr="[MessageCount]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><outputs><output type="text" name="Subject" stage="Emails.Subject" /><output type="text" name="From Name" stage="Emails.From Name" /><output type="text" name="From Email" stage="Emails.From Address" /><output type="datetime" name="Date Sent" stage="Emails.Date Sent" /><output type="text" name="MessageID" stage="Emails.MessageID" /></outputs><onsuccess>dd31764b-2e5a-4507-bc14-d5bb264f4c72</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	string fromInfo;
	int msgNumber = (int)(MessageNumber - 1); // This is a necessary evil as MailKit uses 0-based indexing while the legacy Pop3Client appears to use 1-based.
	
	var result =_mkClient.GetMessageHeaders(msgNumber);

	Subject = result["Subject"];
	Date_Sent = Convert.ToDateTime(result["Date"]);
	MessageID = result["Message-Id"].Substring(1, (result["Message-Id"].LastIndexOf('>') - 1));
	fromInfo = result["From"];
	
	// Check to see if we have a compound email address (i.e. name and address together).
	Regex emailRegex = new Regex(@"\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*", RegexOptions.IgnoreCase);
	MatchCollection emailMatches = emailRegex.Matches(fromInfo);
	if (emailMatches.Count > 0)
	{
		From_Email = emailMatches[0].ToString();
		From_Name = fromInfo.Substring(0, fromInfo.IndexOf("<")).Trim();
	}
	else
	{
		From_Email = fromInfo;
		From_Name = "";
	}
}
else
{
	MessageHeader result =_rclient.GetMessageHeaders((int)MessageNumber);
	Subject = result.Subject;
	From_Name = result.From.DisplayName;
	From_Email = result.From.Address;
	Date_Sent = result.DateSent;
	MessageID = result.MessageId;
}
]]></code></stage><stage stageid="cb2927fa-cfb2-471c-95db-45446a1833e4" name="anchor1" type="Anchor"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="-60" y="255" w="10" h="10" /><onsuccess>065e96eb-4dc6-45f1-8e7c-a839c25a0ec5</onsuccess></stage><stage stageid="065e96eb-4dc6-45f1-8e7c-a839c25a0ec5" name="anchor2" type="Anchor"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="-60" y="75" w="10" h="10" /><onsuccess>2c0fb611-4146-4a08-989e-88585d1cbb1f</onsuccess></stage><stage stageid="98d0d6a1-18e9-4129-85f7-eb80a14e081f" name="Add Row" type="Action"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="15" y="135" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Emails&quot;" /></inputs><onsuccess>5776f51b-14c7-4daf-9983-6b116cb5d241</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="46a93a64-6a9c-4266-9c46-6973a471ecd8" name="Emails" type="Collection"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="-315" y="45" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject" type="text" description="The subject of the email." /><field name="From Name" type="text" description="The name of the sender." /><field name="From Address" type="text" description="The email address of the sender." /><field name="Date Sent" type="datetime" description="The date and time at which the email was sent." /><field name="MessageID" type="text" description="The ID of the email message." /></collectioninfo></stage><stage stageid="1b62280c-7792-4ac9-8c23-0cccf16657ec" name="Get Message Count2" type="Code"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="15" y="15" /><inputs><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><outputs><output type="number" name="MessageCount" stage="MessageCount" /></outputs><onsuccess>2c0fb611-4146-4a08-989e-88585d1cbb1f</onsuccess><code><![CDATA[if (Use_OAuth2)
	MessageCount = _mkClient.GetMessageCount();
else
	MessageCount = _rclient.GetMessageCount();
	]]></code></stage><stage stageid="1caf32c3-760e-4dff-a902-96ef0e2bf621" name="INTERNAL - Connect POP3" type="SubSheet"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>1b62280c-7792-4ac9-8c23-0cccf16657ec</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="ec259e7a-1aeb-4806-a842-8507b3fb0688" name="Input" type="Block"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="-390" y="-60" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="65eeb4f7-19ac-43d9-af68-7f515539414a" name="Output" type="Block"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="-390" y="15" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="cf4fb99b-b2bf-4a57-9008-70b12eb6cee1" name="Local" type="Block"><subsheetid>e0fb4432-bf1a-4bdf-856a-a52d9acb4d9f</subsheetid><loginhibit /><display x="-390" y="90" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="7ddcaa95-0650-4553-8630-ac05c39a9767" name="End" type="End"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="15" y="135" /></stage><stage stageid="7d8c87e1-844a-4bec-ba16-2d5e7fb5b205" name="Start" type="Start"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="MessageID" narrative="The ID of the email message." stage="MessageID" /><input type="text" name="Folder" narrative="A Folder in which to save all the attachments." stage="Folder" /></inputs><onsuccess>04fbcce7-ad18-47e0-ba32-588f2a61786d</onsuccess></stage><stage stageid="de627520-6a1c-49ff-a329-71a2c2c759b9" name="MessageID" type="Data"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><display x="-300" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04fbcce7-ad18-47e0-ba32-588f2a61786d" name="INTERNAL - Connect POP3" type="SubSheet"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>31bfe2bd-55bd-4022-ab9e-6f68d4fdf2d8</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="31bfe2bd-55bd-4022-ab9e-6f68d4fdf2d8" name="INTERNAL - Number From ID" type="SubSheet"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="15" y="15" w="90" h="30" /><inputs><input type="text" name="MessageID" expr="[MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="Message Number" /></outputs><onsuccess>8b2404a9-98b7-4d7c-99df-96ec4d5a9419</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="def6a29e-5061-44a2-b726-4af7a9b5a0ae" name="Message Number" type="Data"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><display x="-300" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8f82cb86-007c-4370-9ac7-c1da946232b6" name="Folder" type="Data"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><display x="-180" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b2404a9-98b7-4d7c-99df-96ec4d5a9419" name="Code3" type="Code"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="15" y="75" w="90" h="30" /><inputs><input type="number" name="MessageNumber" expr="[Message Number]" /><input type="text" name="Folder" expr="[Folder]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><onsuccess>7ddcaa95-0650-4553-8630-ac05c39a9767</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	int msgNumber = (int)(MessageNumber - 1);
	MimeKit.MimeMessage message = _mkClient.GetMessage(msgNumber);
	foreach (var attachment in message.Attachments) {
		if (attachment is MimeKit.MessagePart) {
			var fileName = (attachment.ContentDisposition != null) ? attachment.ContentDisposition.FileName : null;
			var rfc822 = (MimeKit.MessagePart) attachment;

			if (string.IsNullOrEmpty (fileName))
				fileName = "attached-message.eml";

			var path = System.IO.Path.Combine(Folder, fileName);
			using (var stream = File.Create (path))
				rfc822.Message.WriteTo (stream);
		} else {
			var part = (MimeKit.MimePart) attachment;
			var fileName = part.FileName;
			var path = System.IO.Path.Combine(Folder, fileName);

			using (var stream = File.Create (path))
				part.Content.DecodeTo (stream);
		}
	}
}
else
{
	Message m = _rclient.GetMessage((int)MessageNumber);
	foreach(MessagePart a in m.FindAllAttachments())
	{
		string path=System.IO.Path.Combine(Folder,a.FileName);
		a.Save(new FileInfo(path));
	}
}
]]></code></stage><stage stageid="a191e02d-97d8-4d56-b989-e77ca30a9b8e" name="Input" type="Block"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="-375" y="-75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f1f619a2-a4cf-447f-a8b4-485158fa2a21" name="Output" type="Block"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="-375" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="cf5d0473-650c-4d75-83d6-264f2cb0dcf8" name="Local" type="Block"><subsheetid>803f1a2c-38f9-4614-97aa-5ca66d454d2d</subsheetid><loginhibit /><display x="-375" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="fc1c863e-0585-440c-a320-5119239833f7" name="Start" type="Start"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-45" y="-135" /><inputs><input type="text" name="From" narrative="The email address of the sender." stage="From" /><input type="text" name="To" narrative="The email address of the recipient. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." stage="To" /><input type="text" name="CC" narrative="The email address of the recipient in CC. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." stage="CC" /><input type="text" name="BCC" narrative="The email address of the recipient in BCC. To address multiple recipients use the format &quot;john.smith@example.com, henry.jones@example.com&quot; OR &quot;John Smith &lt;john.smith@example.com&gt;, Henry Jones &lt;henry.jones@example.com&gt;&quot;." stage="BCC" /><input type="text" name="Subject" narrative="The subject of the email." stage="Subject" /><input type="text" name="Body" narrative="The body of the email." stage="Body" /><input type="collection" name="Attachments" narrative="A Collection containing a list of files to add to the email as attachments." stage="Attachments" /><input type="flag" name="BodyIsHTML" narrative="Indicates if the body should be sent as HTML" stage="BodyIsHTML" /></inputs><onsuccess>47c9d916-ec6e-46b5-aaeb-dbf83c4f4765</onsuccess></stage><stage stageid="7e82d447-a532-4618-8aec-c071b3cb69a9" name="End" type="End"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-45" y="45" /></stage><stage stageid="5b7a0877-49c1-4a94-9ae2-511732b05827" name="From" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="-345" y="-75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e38a8b7-c3c6-4812-8755-a05efa4ab5e3" name="To" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="-225" y="-75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e12922b0-f0bd-46da-9598-88df1b7bddbf" name="Subject" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="-345" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f193fe07-dc64-435e-b5d8-be1db96c17cc" name="Body" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="-225" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2f73b77b-d83f-4744-b9bd-3c97bc429d04" name="Send Message" type="Code"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-45" y="-15" /><inputs><input type="text" name="Server" expr="[SMTP Server]" /><input type="number" name="Port" expr="[SMTP Port]" /><input type="text" name="Username" expr="[Username]" /><input type="password" name="Password" expr="[Password]" /><input type="flag" name="UseSSL" expr="[SMTP UseSSL]" /><input type="text" name="From" expr="[From]" /><input type="text" name="To" expr="[To]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Body" expr="[Body]" /><input type="collection" name="Attachments" expr="[Attachments]" /><input type="flag" name="BodyIsHTML" expr="[BodyIsHTML]" /></inputs><onsuccess>7e82d447-a532-4618-8aec-c071b3cb69a9</onsuccess><code><![CDATA[try
{
	// See if we have multiple recipients.
	string[] recipients = To.Split(',');
	string[] CC_recipients = CC.Split(',');
	string[] BCC_recipients = BCC.Split(',');
	
	using (var message = new MimeKit.MimeMessage())
	{
		message.Subject = Subject;
		message.From.Add(MimeKit.MailboxAddress.Parse(From));
		
		foreach (string recipient in recipients)
		{
			if (recipient!="")
			{
				message.To.Add(MimeKit.MailboxAddress.Parse(recipient));
			}
		}

		foreach (string CC_recipient in CC_recipients)
		{
			if (CC_recipient!="")
			{
				message.Cc.Add(MimeKit.MailboxAddress.Parse(CC_recipient));
			}
		}
		
		foreach (string BCC_recipient in BCC_recipients)
		{
			if (BCC_recipient!="")
			{
				message.Bcc.Add(MimeKit.MailboxAddress.Parse(BCC_recipient));
			}
		}

		// Create the BodyBuilder instance and set the body content.
		var bodyBuilder = new MimeKit.BodyBuilder();
		if (BodyIsHTML)
			bodyBuilder.HtmlBody = Body;
		else
			bodyBuilder.TextBody = Body;

		// Add attachments.
		foreach(DataRow dr in Attachments.Rows)
		{
			string file = dr["Path"].ToString();
			bodyBuilder.Attachments.Add(Path.GetFileName(file), System.IO.File.ReadAllBytes(file));		
		}
		
		message.Body = bodyBuilder.ToMessageBody();
		
		using (var client = new MailKit.Net.Smtp.SmtpClient())
		{
			if (UseSSL) 
				client.Connect(Server, Convert.ToInt32(Port), MailKit.Security.SecureSocketOptions.Auto);
			else
				client.Connect(Server, Convert.ToInt32(Port), MailKit.Security.SecureSocketOptions.None);

			if (Username.Trim().Length > 0)
				client.Authenticate(Username, Password);
				
			client.Send(message);
			client.Disconnect(true);
		}
	}
}
catch(Exception ex)
{
	string msg = ex.Message;
	if(ex.InnerException != null) {
		msg += " - " + ex.InnerException.Message;
	}
	msg += "\nStack Trace: " + ex.StackTrace;
	throw new Exception(msg);
}
]]></code></stage><stage stageid="9007d048-8be4-4d49-89ad-2643460e49c9" name="Attachments" type="Collection"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="-345" y="-15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Path" type="text" description="The path to a file to include as an attachment in the email." /></collectioninfo></stage><stage stageid="47c9d916-ec6e-46b5-aaeb-dbf83c4f4765" name="Configured" type="Decision"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-45" y="-75" /><decision expression="[Configured]" /><ontrue>2f73b77b-d83f-4744-b9bd-3c97bc429d04</ontrue><onfalse>46b33428-c278-45bb-9d3b-5f69d7887110</onfalse></stage><stage stageid="46b33428-c278-45bb-9d3b-5f69d7887110" name="FAIL" type="Exception"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="45" y="-75" /><exception type="ConfigurationException" detail="&quot;Cannot connect to Server you must use Configure first&quot; " /></stage><stage stageid="17e50457-5277-40f2-ab10-1cf33defde41" name="BodyIsHTML" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="-225" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="409af419-1fdf-4fee-bffc-ce6c53c5a02d" name="Input" type="Block"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-420" y="-105" w="270" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ee8b994b-7636-4477-a290-c76a500a2345" name="Output" type="Block"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-420" y="60" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="edea0574-f15c-41dc-a239-bd4ca2edb487" name="Local" type="Block"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-420" y="135" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="1f5a3d6c-6334-4161-84ff-d0c5ed507346" name="Start" type="Start"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="text" name="Action" stage="Action" /></inputs><onsuccess>ee06c9a7-13cb-4944-b8eb-10ada4271332</onsuccess></stage><stage stageid="4378e546-18e5-4740-aa2e-5e24f8af074e" name="End" type="End"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="15" y="210" /></stage><stage stageid="a4dfa543-8697-46c0-9bd7-8581bc7528cb" name="Configured" type="Decision"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="15" y="30" /><decision expression="[Configured]" /><ontrue>c628b5e3-149c-4984-b318-015fc15236c0</ontrue><onfalse>7ce03596-a454-477d-bae0-dc8d31d31c8b</onfalse></stage><stage stageid="c628b5e3-149c-4984-b318-015fc15236c0" name="Connect and Authenticate" type="Code"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="15" y="90" w="90" h="30" /><inputs><input type="text" name="Username" expr="[Username]" /><input type="text" name="Password" expr="[Password]" /><input type="text" name="Server" expr="[POP3 Server]" /><input type="number" name="Port" expr="[POP3 Port]" /><input type="flag" name="Use SSL" expr="[POP3 UseSSL]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /><input type="text" name="AccessToken" expr="[OAuth2 Access Token]" /></inputs><onsuccess>8b66d9b8-526b-43e3-a2d7-f214f9fe76fd</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	_oAuth2 = new SaslMechanismOAuth2(Username, AccessToken);

	_mkClient = new MailKit.Net.Pop3.Pop3Client();
	_mkClient.CheckCertificateRevocation = false;
	_mkClient.Connect(Server, (int)Port, (Use_SSL == true) ? SecureSocketOptions.SslOnConnect : SecureSocketOptions.None);
	_mkClient.Authenticate(_oAuth2);	
}
else
{
	_rclient = new Pop3Client();
	_rclient.Connect(Server,(int)Port,Use_SSL);
	_rclient.Authenticate(Username,Password);
}]]></code></stage><stage stageid="7ce03596-a454-477d-bae0-dc8d31d31c8b" name="Exception1" type="Exception"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><display x="105" y="30" /><exception type="" detail="&quot;Cannot connect to Server you must use Configure first&quot; " /></stage><stage stageid="bf9174ed-46b4-43c2-8a2f-4b92be6feb3b" name="Action" type="Data"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><display x="-285" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b66d9b8-526b-43e3-a2d7-f214f9fe76fd" name="Set Connected" type="Calculation"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="15" y="150" /><onsuccess>4378e546-18e5-4740-aa2e-5e24f8af074e</onsuccess><calculation expression="True" stage="POP3 Connected" /></stage><stage stageid="ee06c9a7-13cb-4944-b8eb-10ada4271332" name="Connected" type="Decision"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="15" y="-30" /><decision expression="[POP3 Connected]" /><ontrue>f3039f40-81c7-4c8c-8b7e-0b55e47cbc13</ontrue><onfalse>a4dfa543-8697-46c0-9bd7-8581bc7528cb</onfalse></stage><stage stageid="f3039f40-81c7-4c8c-8b7e-0b55e47cbc13" name="End" type="End"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="105" y="-30" /></stage><stage stageid="da8fefff-a1d5-4a9c-a3b5-2d6a30ac10c1" name="Input" type="Block"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="-360" y="-60" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="81abbb3f-6dfd-40f9-911e-7b7d5c7e1218" name="Output" type="Block"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="-360" y="15" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="78193a07-d335-43ad-80e9-87b7b93a6e1b" name="Local" type="Block"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><display x="-360" y="90" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="39008f7d-9798-4d81-8100-deb374b77021" name="Note1" type="Note"><subsheetid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</subsheetid><loginhibit /><narrative>INTERNAL ACTION</narrative><display x="15" y="-165" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="b1a6d3dc-33f5-4d59-8b5f-1cbbee1204a0" name="Start" type="Start"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>2eecbb92-b3ff-4695-99ab-97c99dab1645</onsuccess></stage><stage stageid="4590dda2-d456-44a8-baaf-2e48f7355f84" name="End" type="End"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><display x="15" y="75" /></stage><stage stageid="2eecbb92-b3ff-4695-99ab-97c99dab1645" name="Disconnect" type="Code"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><onsuccess>d0684f41-224d-4ad9-9bac-f58a700e7c29</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	_mkClient.Disconnect(true);
	_mkClient = null;
}
else
{
	_rclient.Disconnect();
	_rclient = null;
}	]]></code></stage><stage stageid="d0684f41-224d-4ad9-9bac-f58a700e7c29" name="Set Connected" type="Calculation"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><display x="15" y="15" /><onsuccess>4590dda2-d456-44a8-baaf-2e48f7355f84</onsuccess><calculation expression="False" stage="POP3 Connected" /></stage><stage stageid="cdc51251-3994-4ca7-8cfe-0dcb7ef8f4ff" name="Input" type="Block"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><display x="-375" y="-75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2c680ec1-dc53-4cce-87e8-e6f88d3425d3" name="Output" type="Block"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><display x="-375" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="590e61af-4453-4ce3-bd0d-ad42494e086b" name="Local" type="Block"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><display x="-375" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="e585ab72-e2b4-48fe-9f9b-a1575715506a" name="Note1" type="Note"><subsheetid>c8b9e601-7444-4385-b2aa-6709658ad472</subsheetid><loginhibit /><narrative>INTERNAL ACTION</narrative><display x="15" y="-180" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="3c2e56a5-d3ae-474f-aa30-617b6be68d37" name="Start" type="Start"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="MessageID" stage="MessageID" /></inputs><onsuccess>9cf0d415-53db-4952-a6d5-d8528bfd19bf</onsuccess></stage><stage stageid="8f12cd61-36f7-40d6-aec1-0338b2b66e0f" name="MessageID" type="Data"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><display x="-315" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="355b9abb-abe4-4c19-bc3d-aa26c8acba71" name="End" type="End"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="120" y="15" /><outputs><output type="number" name="Message Number" stage="MessageCount" /></outputs></stage><stage stageid="9cf0d415-53db-4952-a6d5-d8528bfd19bf" name="Get Message Count" type="Code"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><outputs><output type="number" name="MessageCount" stage="MessageCount" /></outputs><onsuccess>ca05774a-16ab-4f43-bfbe-c48fb91fa64b</onsuccess><code><![CDATA[if (Use_OAuth2)
	MessageCount = _mkClient.GetMessageCount();
else
	MessageCount = _rclient.GetMessageCount();]]></code></stage><stage stageid="06ec71fd-35c5-4a0f-a2bd-2515842487d4" name="MessageCount" type="Data"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><display x="-315" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ca05774a-16ab-4f43-bfbe-c48fb91fa64b" name="Messages Left?" type="Decision"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="15" y="15" /><decision expression="[MessageCount] &gt; 0" /><ontrue>aff84136-c0cd-4c3d-b1c2-a25947c2424c</ontrue><onfalse>355b9abb-abe4-4c19-bc3d-aa26c8acba71</onfalse></stage><stage stageid="4da95205-d7ec-4904-82bf-8534d73f507e" name="Decrement" type="Calculation"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="15" y="195" /><onsuccess>4496e5c7-5107-40a8-9a19-d5bad6900774</onsuccess><calculation expression="[MessageCount]-1" stage="MessageCount" /></stage><stage stageid="aff84136-c0cd-4c3d-b1c2-a25947c2424c" name="Get Message Headers" type="Code"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="15" y="75" /><inputs><input type="number" name="MessageNumber" expr="[MessageCount]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><outputs><output type="text" name="MessageID" stage="FoundMessageID" /></outputs><onsuccess>f7b0a635-9fdc-4c91-b203-3a8219576b7c</onsuccess><code><![CDATA[if (Use_OAuth2)
{
	int msgNumber = (int)(MessageNumber - 1); // Have to account for difference in 0-based vs 1-based indexing.
	MimeKit.HeaderList result =_mkClient.GetMessageHeaders(msgNumber);
	MessageID = result["Message-Id"].Substring(1, (result["Message-Id"].LastIndexOf('>') - 1));
}
else
{
	MessageHeader result =_rclient.GetMessageHeaders((int)MessageNumber);
	MessageID = result.MessageId;
}]]></code></stage><stage stageid="4496e5c7-5107-40a8-9a19-d5bad6900774" name="anchor1" type="Anchor"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="-45" y="195" w="10" h="10" /><onsuccess>faec8c0f-d217-4b01-b036-ca9671cae0b8</onsuccess></stage><stage stageid="faec8c0f-d217-4b01-b036-ca9671cae0b8" name="anchor2" type="Anchor"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="-45" y="15" w="10" h="10" /><onsuccess>ca05774a-16ab-4f43-bfbe-c48fb91fa64b</onsuccess></stage><stage stageid="3ec2a7b6-a47a-499f-8687-42d282bf8c2f" name="FoundMessageID" type="Data"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><display x="-315" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f7b0a635-9fdc-4c91-b203-3a8219576b7c" name="Message Match" type="Decision"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="15" y="135" /><decision expression="[MessageID]=[FoundMessageID]" /><ontrue>f4949e5f-da38-45ce-8ff3-d0c0edda4e00</ontrue><onfalse>4da95205-d7ec-4904-82bf-8534d73f507e</onfalse></stage><stage stageid="f4949e5f-da38-45ce-8ff3-d0c0edda4e00" name="End" type="End"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="120" y="135" /><outputs><output type="number" name="Message Number" stage="MessageCount" /></outputs></stage><stage stageid="89658983-a559-4660-9589-fb53a580a301" name="Input" type="Block"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="-390" y="-75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8a5433df-b123-4234-a634-bed0ebd1d746" name="Output" type="Block"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="-390" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="4fe76b84-7f4a-412a-96c0-78a32d549a59" name="Local" type="Block"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><display x="-390" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="e7e86362-a80e-4840-b6dd-eab3d702b11c" name="Note1" type="Note"><subsheetid>4688b112-6575-4f8a-980c-713566729518</subsheetid><loginhibit /><narrative>INTERNAL ACTION</narrative><display x="15" y="-180" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="094d9adf-ec05-453e-822e-9216e671e087" name="Note4" type="Note"><subsheetid>544abb24-e623-4adb-a24d-3a5dba6164ba</subsheetid><loginhibit /><narrative>NOTE: See the global data items on the Initialise tab.</narrative><display x="165" y="-45" w="150" h="60" /><font family="Segoe UI" size="12" style="Bold" color="FF0000" /></stage><stage stageid="be3eb6ce-b6c2-4b6a-8076-c82fa210000c" name="Disconnect" type="SubSheetInfo"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><narrative>DIsconnects from the POP3 server.</narrative><display x="-240" y="-120" w="270" h="60" /></stage><stage stageid="da38556c-acc5-4710-86fe-f0324805efd3" name="Start" type="Start"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>c1f1d6d4-5bcf-4ee2-aa07-3a3d4f9557ab</onsuccess></stage><stage stageid="80ea11bb-2f0c-46e4-ac45-1fa9232ed4b1" name="End" type="End"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="105" y="15" /></stage><stage stageid="3c33036c-f37f-4fc8-a12a-a4d9c51e721a" name="Input" type="Block"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="-375" y="-75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5c4a074d-e9ab-45a9-bffc-9e784aab6713" name="Output" type="Block"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="-375" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="ca1ec2c8-2661-4a3f-bbfd-ac5c14dcf444" name="Local" type="Block"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="-375" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="c1f1d6d4-5bcf-4ee2-aa07-3a3d4f9557ab" name="Connected?" type="Decision"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="15" y="-45" /><decision expression="[POP3 Connected]" /><ontrue>90978361-8353-46d6-af3f-42de2d285751</ontrue><onfalse>cdb4cf79-a615-4fc0-ba92-43728b1cc699</onfalse></stage><stage stageid="90978361-8353-46d6-af3f-42de2d285751" name="INTERNAL - Disconnect POP3" type="SubSheet"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="15" y="15" /><onsuccess>80ea11bb-2f0c-46e4-ac45-1fa9232ed4b1</onsuccess><processid>c8b9e601-7444-4385-b2aa-6709658ad472</processid></stage><stage stageid="cdb4cf79-a615-4fc0-ba92-43728b1cc699" name="Anchor1" type="Anchor"><subsheetid>0ae82e81-b9d3-47b5-be33-66f709a7d660</subsheetid><loginhibit /><display x="105" y="-45" w="10" h="10" /><onsuccess>80ea11bb-2f0c-46e4-ac45-1fa9232ed4b1</onsuccess></stage><stage stageid="6afc43bb-146a-40b2-96cd-883b670d6d64" name="Save Message to File" type="SubSheetInfo"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><narrative>Use this action to save a specific message to a file.</narrative><display x="-210" y="-120" w="270" h="90" /></stage><stage stageid="b212dc77-e58a-4298-9806-27312c287c47" name="Start" type="Start"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><preconditions><condition narrative="Must provide the message ID." /></preconditions><display x="15" y="-105" /><inputs><input type="text" name="MessageID" narrative="The ID of the message to retrieve." stage="MessageID" /><input type="text" name="File Name" narrative="The fully qualified path and name of the message file. " stage="File Name" /></inputs><onsuccess>960b291c-aee8-4d56-b1ad-68a1e904941f</onsuccess></stage><stage stageid="f356eefb-8548-4e0f-914a-57521ef4a37e" name="MessageID" type="Data"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><display x="-270" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a5a9ca89-9ea1-4eba-a9b3-024523535589" name="End" type="End"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="15" y="135" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this should contain additional information." stage="Error Message" /></outputs></stage><stage stageid="960b291c-aee8-4d56-b1ad-68a1e904941f" name="INTERNAL - Connect POP3" type="SubSheet"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="text" name="Action" expr="&quot;Get All Messages&quot;" /></inputs><onsuccess>34b27899-b406-480d-88df-5954dc059b8b</onsuccess><processid>954d358e-45d9-44b3-b56a-87e1c21f9d0f</processid></stage><stage stageid="dfcccb17-06fc-405b-aa92-ee0439c6929a" name="Save Message to File" type="Code"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="15" y="75" /><inputs><input type="number" name="MessageNumber" expr="[Message Number]" /><input type="text" name="File Name" expr="[File Name]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>a5a9ca89-9ea1-4eba-a9b3-024523535589</onsuccess><code><![CDATA[Success = true;
Error_Message = "";

if (Use_OAuth2)
{
	try
	{
		MimeKit.MimeMessage m = _mkClient.GetMessage(((int)MessageNumber) - 1);
		m.WriteTo(File_Name);
	}
	catch (Exception ex)
	{
		Success = false;
		Error_Message = ex.Message;
	}
}
else
{
	try
	{
		FileInfo fi = new FileInfo(File_Name);
		
		Message m =_rclient.GetMessage((int)MessageNumber);
		m.Save(fi);
	} 
	catch (Exception ex)
	{
		Success = false;
		Error_Message = ex.Message;
	}	
}]]></code></stage><stage stageid="34b27899-b406-480d-88df-5954dc059b8b" name="INTERNAL - Number From ID" type="SubSheet"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="15" y="15" w="90" h="30" /><inputs><input type="text" name="MessageID" expr="[MessageID]" /></inputs><outputs><output type="number" name="Message Number" stage="Message Number" /></outputs><onsuccess>dfcccb17-06fc-405b-aa92-ee0439c6929a</onsuccess><processid>4688b112-6575-4f8a-980c-713566729518</processid></stage><stage stageid="d93b3900-d72f-428c-a126-7006770dea95" name="Message Number" type="Data"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><display x="-270" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5d7cc423-d74e-4110-ab8a-3b0a9374e3dc" name="Input" type="Block"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="-345" y="-60" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c350ab59-79c3-4cf5-81e5-92a0cdba9a57" name="Output" type="Block"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="-345" y="15" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="867fd567-7d5f-40c6-b80e-ab60362d87f4" name="Local" type="Block"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="-345" y="90" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="9cdea989-3272-4180-a589-0c9b653a6250" name="Success" type="Data"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><loginhibit /><display x="-270" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ec7d7e8b-c2d1-40da-8ce1-0240dbee3745" name="File Name" type="Data"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><display x="-150" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="45b50c68-d199-458e-bc36-bc4ce9922af4" name="Error Message" type="Data"><subsheetid>ed2c0c0f-1f28-4de5-9f19-964a4b9e6ece</subsheetid><display x="-150" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9f306a2f-a8ad-47fa-b8f2-9dd8abb4e108" name="Load Message from File" type="SubSheetInfo"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><narrative>Use this action to load a message from the specified file and return the details.</narrative><display x="-210" y="-120" w="270" h="90" /></stage><stage stageid="83d57807-f17d-4538-a8cb-36830e0ccb2b" name="Start" type="Start"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="File Name" narrative="The fully qualified path and file name of the message file." stage="File Name" /><input type="flag" name="HTMLPreferred" narrative="Return the HTML content in preference to plain text (multipart messages only). Default value is False." stage="HTMLPreferred" /></inputs><onsuccess>d3445083-cce2-4dd8-9500-a2e00db99eb4</onsuccess></stage><stage stageid="854c4e65-2140-41f8-b80c-391e0a9c1432" name="End" type="End"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><loginhibit /><display x="15" y="15" /><outputs><output type="text" name="MessageID" narrative="The unique identifier of the message as read from the message headers." stage="MessageID" /><output type="text" name="Subject" narrative="The subject of the email." stage="Subject" /><output type="datetime" name="Date Sent" narrative="The timestamp of when the message was sent." stage="Date Sent" /><output type="text" name="From Name" narrative="The name of the sender of the message." stage="From Name" /><output type="text" name="From Email" narrative="The email address of the message sender." stage="From Email" /><output type="text" name="Body" narrative="The email body" stage="Body" /><output type="text" name="Content-Type" narrative="The content type of the returned body (e.g. text/plain)" stage="Content-Type" /></outputs></stage><stage stageid="d3445083-cce2-4dd8-9500-a2e00db99eb4" name="Load Message from File" type="Code"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="flag" name="HTMLPreferred" expr="[HTMLPreferred]" /></inputs><outputs><output type="text" name="MessageID" stage="MessageID" /><output type="datetime" name="Date Sent" stage="Date Sent" /><output type="text" name="Subject" stage="Subject" /><output type="text" name="From Name" stage="From Name" /><output type="text" name="From Email" stage="From Email" /><output type="text" name="Body" stage="Body" /><output type="text" name="Content-Type" stage="Content-Type" /></outputs><onsuccess>854c4e65-2140-41f8-b80c-391e0a9c1432</onsuccess><code><![CDATA[FileInfo fi = new FileInfo(File_Name);
Message m = Message.Load(fi);
MessageHeader h = m.Headers;

Subject = h.Subject;
From_Name = h.From.DisplayName;
From_Email = h.From.Address;
Date_Sent = h.DateSent;
MessageID = h.MessageId;
Body = "";
Content_Type = "";

MessagePart p;
if (HTMLPreferred) {
	p = m.FindFirstHtmlVersion();
	if (p == null) p = m.FindFirstPlainTextVersion();
} else {
	p = m.FindFirstPlainTextVersion();
	if (p == null) p = m.FindFirstHtmlVersion();
}

if (p != null) {
	Body = p.GetBodyAsText();
	Content_Type = p.ContentType.ToString();
}
]]></code></stage><stage stageid="3f2d0bb9-fcc1-4d2d-a135-3135a97067cb" name="Body" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-270" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a23b457f-e633-483d-ad5e-f5174950c6a6" name="HTMLPreferred" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-150" y="-30" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="114c6b00-c630-407b-be7f-7f1bb7848534" name="Content-Type" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-150" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8ae60700-4153-4d8e-ab1d-784ce072b341" name="Input" type="Block"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><loginhibit /><display x="-345" y="-60" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f1d20129-65f0-4d18-a019-7233a4b83657" name="Output" type="Block"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><loginhibit /><display x="-345" y="15" w="270" h="150" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="f7838e60-34ec-4a91-a43d-262395790d39" name="Local" type="Block"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><loginhibit /><display x="-345" y="180" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="2348e9b4-9a21-488f-ac42-fdb2be7d4040" name="File Name" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-270" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2576ad0a-6bcb-4d5b-8dc3-5ab731e36dd8" name="Date Sent" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-270" y="135" w="120" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="84b29396-b10e-482f-8641-0e8056daf9a6" name="Subject" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-150" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ece8995d-eb47-4c72-8a6c-bf01cac2aab0" name="From Name" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-270" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f5acdf0-4f21-465b-a28c-316f0a7e8ed4" name="From Email" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-150" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b64acfe1-35b3-4d88-9adb-0d9a0b7337c1" name="MessageID" type="Data"><subsheetid>f8794d1c-cd56-4a78-935e-8a9c64944776</subsheetid><display x="-270" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="61183113-d214-4f9e-915a-57644200420f" name="INTERNAL - Connect IMAP" type="SubSheetInfo"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e271d58f-6f15-4049-8e03-3607eba7cd02" name="Start" type="Start"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="120" y="-60" /><onsuccess>3b05d6e2-06f4-481f-bcac-d79cb834a9be</onsuccess></stage><stage stageid="b2166c2d-d9ff-47cd-a3e9-0842f8867a6e" name="End" type="End"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="120" y="240" /></stage><stage stageid="05a1e22f-c180-4000-8d60-9b056fe66474" name="Configured" type="Decision"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="120" y="60" /><decision expression="[Configured]" /><ontrue>545a2359-8b6a-4fdc-b064-89f148fc86b6</ontrue><onfalse>273a641a-8445-4f37-8930-1d8f88669ba4</onfalse></stage><stage stageid="545a2359-8b6a-4fdc-b064-89f148fc86b6" name="IMAP Connect" type="Code"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="120" y="120" w="90" h="30" /><inputs><input type="text" name="Username" expr="[Username]" /><input type="text" name="Password" expr="[Password]" /><input type="text" name="Server" expr="[IMAP Server]" /><input type="number" name="Port" expr="[IMAP Port]" /><input type="flag" name="Use StartTLS" expr="[IMAP Use StartTLS]" /><input type="flag" name="Use OAuth2" expr="[Use OAuth2]" /><input type="flag" name="CheckCertificateRevocation" expr="[CheckCertificateRevocation]" /></inputs><onsuccess>dd7f9f7c-85e3-4a17-b9a9-b27e10cb011e</onsuccess><code><![CDATA[	_imapClient = new ImapClient();
	_imapClient.CheckCertificateRevocation = false; // This may require attention depending on your requirements and support of your mail server.
	_imapClient.Connect(Server,(int)Port,SecureSocketOptions.Auto);// this will use whatever security is supported by the mail server.
	_imapClient.Authenticate(Username,Password);
]]></code></stage><stage stageid="273a641a-8445-4f37-8930-1d8f88669ba4" name="Exception1" type="Exception"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><display x="210" y="60" /><exception type="" detail="&quot;Cannot connect to Server you must use Configure first&quot; " /></stage><stage stageid="dd7f9f7c-85e3-4a17-b9a9-b27e10cb011e" name="Set Connected" type="Calculation"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="120" y="180" /><onsuccess>b2166c2d-d9ff-47cd-a3e9-0842f8867a6e</onsuccess><calculation expression="True" stage="IMAP Connected" /></stage><stage stageid="3b05d6e2-06f4-481f-bcac-d79cb834a9be" name="Connected" type="Decision"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="120" y="0" /><decision expression="[IMAP Connected]" /><ontrue>e625eb37-43c0-4a4b-a243-11b20b9b8cc8</ontrue><onfalse>05a1e22f-c180-4000-8d60-9b056fe66474</onfalse></stage><stage stageid="e625eb37-43c0-4a4b-a243-11b20b9b8cc8" name="End" type="End"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="210" y="0" /></stage><stage stageid="6bd57eee-aa2e-4676-a9fa-8322892c2fef" name="Input" type="Block"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="-255" y="-30" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bb9e6418-6c12-4948-bf01-0d663a2d7394" name="Output" type="Block"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="-255" y="45" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="3ee9cf6c-9324-4478-8403-94b23ad7f489" name="Local" type="Block"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><display x="-255" y="120" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="fa89d6c2-1b31-4911-8509-1772bef73a88" name="Note1" type="Note"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><narrative>INTERNAL ACTION</narrative><display x="120" y="-135" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="ad8954b1-491c-44af-a603-8b96ebd71983" name="Note5" type="Note"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><loginhibit /><narrative>The connection is using whatever security that the mail server supports. It also defaults the certificate revocation check to false and this may need to be reviewed as per your needs.</narrative><display x="300" y="-120" w="180" h="90" /><font family="Segoe UI" size="12" style="Regular" color="3366FF" /></stage><stage stageid="fe6e18de-d2c0-485e-af9f-7d40bfd02cb3" name="INTERNAL - Disconnect IMAP" type="SubSheetInfo"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><display x="-180" y="-105" w="240" h="30" /></stage><stage stageid="003e6cca-f736-46be-8b83-d7de63df2429" name="Start" type="Start"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><display x="75" y="-105" /><onsuccess>7f53772d-6e8c-4c41-b169-1098a316ad84</onsuccess></stage><stage stageid="9972e1e8-a8f9-4450-be39-23ba1d431a21" name="End" type="End"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><display x="75" y="75" /></stage><stage stageid="7f53772d-6e8c-4c41-b169-1098a316ad84" name="Disconnect IMAP" type="Code"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><display x="75" y="-45" /><onsuccess>5e24070e-97a6-4ba0-89f5-1dea30b7d0f5</onsuccess><code><![CDATA[_imapClient.Disconnect(true);
_imapClient = null;
	]]></code></stage><stage stageid="5e24070e-97a6-4ba0-89f5-1dea30b7d0f5" name="Set Connected" type="Calculation"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><display x="75" y="15" /><onsuccess>9972e1e8-a8f9-4450-be39-23ba1d431a21</onsuccess><calculation expression="False" stage="IMAP Connected" /></stage><stage stageid="bedd9f05-9a75-4dac-bbb6-16e780404660" name="Input" type="Block"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><display x="-315" y="-75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7d1598d0-076b-4763-87d3-a7b0ec10ee8a" name="Output" type="Block"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="291e3895-c66f-4a00-a93f-57bd37fdcc1b" name="Local" type="Block"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="8fdc88b0-fce3-4181-87d8-82d9c0c20fda" name="Note1" type="Note"><subsheetid>0b2219a7-69f8-41be-8b95-a22606e38b09</subsheetid><loginhibit /><narrative>INTERNAL ACTION</narrative><display x="75" y="-180" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="00ffae1c-b2b6-4dc1-8749-510f25bc6ef8" name="IMAP List Messages" type="SubSheetInfo"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c35dc310-20a3-41ae-89f6-0dce40541a00" name="IMAPFolderRW" type="Data"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><display x="-180" y="30" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ebb06ff6-5478-40c8-ba50-a5d962f05f4b" name="Start" type="Start"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="90" y="-120" /><onsuccess>e46d771a-1f6a-4604-836d-bf1352e581b7</onsuccess></stage><stage stageid="a6811437-628a-4a91-ba29-230c0a29db21" name="End" type="End"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="195" y="60" /><outputs><output type="collection" name="Emails" stage="Emails" /></outputs></stage><stage stageid="a6da6de7-8586-405c-bd86-c5521765b404" name="MessageCount" type="Data"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><display x="-180" y="180" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1b1c7000-3d47-4695-a5a1-a6cf80654ce7" name="Messages Left?" type="Decision"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="90" y="60" /><decision expression="[MessageCount] &gt; 0" /><ontrue>2c68e78c-5c63-423f-9836-b643290d50ba</ontrue><onfalse>a6811437-628a-4a91-ba29-230c0a29db21</onfalse></stage><stage stageid="6b3fd43b-ac11-4f1e-8c2a-c79bc4a5300a" name="Decrement" type="Calculation"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="90" y="240" /><onsuccess>551251a7-dd3f-4e54-a1c5-84a63315b7ed</onsuccess><calculation expression="[MessageCount] - 1" stage="MessageCount" /></stage><stage stageid="2d0f63f5-5166-4399-88f4-851192d426a6" name="Code5" type="Code"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="90" y="180" /><inputs><input type="number" name="MessageNumber" expr="[MessageCount]" /></inputs><outputs><output type="text" name="Subject" stage="Emails.Subject" /><output type="text" name="From Name" stage="Emails.From Name" /><output type="text" name="From Email" stage="Emails.From Address" /><output type="datetime" name="Date Sent" stage="Emails.Date Sent" /><output type="text" name="MessageID" stage="Emails.MessageID" /></outputs><onsuccess>6b3fd43b-ac11-4f1e-8c2a-c79bc4a5300a</onsuccess><code><![CDATA[
MimeKit.MimeMessage result =_imapClient.Inbox.GetMessage((int)MessageNumber - 1);
Subject = result.Subject;

From_Name = result.From.Mailboxes.First().Name;
From_Email = result.From.Mailboxes.First().Address;
Date_Sent = result.Date.Date;
MessageID = result.MessageId;

]]></code></stage><stage stageid="551251a7-dd3f-4e54-a1c5-84a63315b7ed" name="anchor1" type="Anchor"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="15" y="240" w="10" h="10" /><onsuccess>b90a17bc-7d55-48a3-a21f-9dedea3b796b</onsuccess></stage><stage stageid="b90a17bc-7d55-48a3-a21f-9dedea3b796b" name="anchor2" type="Anchor"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="15" y="60" w="10" h="10" /><onsuccess>1b1c7000-3d47-4695-a5a1-a6cf80654ce7</onsuccess></stage><stage stageid="2c68e78c-5c63-423f-9836-b643290d50ba" name="Add Row" type="Action"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="90" y="120" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Emails&quot;" /></inputs><onsuccess>2d0f63f5-5166-4399-88f4-851192d426a6</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="527ffe25-46aa-4901-bbac-7c413b0eddb4" name="Emails" type="Collection"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="-180" y="105" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject" type="text" description="The subject of the email." /><field name="From Name" type="text" description="The name of the sender." /><field name="From Address" type="text" description="The email address of the sender." /><field name="Date Sent" type="datetime" description="The date and time at which the email was sent." /><field name="MessageID" type="text" description="The ID of the email message." /></collectioninfo></stage><stage stageid="51b4c3e9-0abf-4497-9aac-6bc9ff1cf469" name="Code6" type="Code"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="90" y="0" /><inputs><input type="flag" name="Use StartTLS" expr="[IMAP Use StartTLS]" /></inputs><outputs><output type="number" name="MessageCount" stage="MessageCount" /></outputs><onsuccess>1b1c7000-3d47-4695-a5a1-a6cf80654ce7</onsuccess><code><![CDATA[_imapClient.Inbox.Open(MailKit.FolderAccess.ReadOnly);
MessageCount = _imapClient.Inbox.Search(SearchQuery.All).Count;
]]></code></stage><stage stageid="e46d771a-1f6a-4604-836d-bf1352e581b7" name="INTERNAL - Connect IMAP" type="SubSheet"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="90" y="-60" w="90" h="30" /><onsuccess>51b4c3e9-0abf-4497-9aac-6bc9ff1cf469</onsuccess><processid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</processid></stage><stage stageid="a774618b-a572-4af4-9bfe-9dd16383b78d" name="Input" type="Block"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="174d1389-047c-4aca-9f62-41fc9a550a0c" name="Output" type="Block"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="8210aee4-4fe6-4973-829b-d39cec998edc" name="Local" type="Block"><subsheetid>f6308726-19e2-47eb-a4ba-fa021b7f48fa</subsheetid><loginhibit /><display x="-315" y="150" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="da17b08c-b5a4-4d2a-9f26-d06a1207b20a" name="SMTP" type="Block"><loginhibit /><display x="390" y="-45" w="150" h="195" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="dfdfcd7d-1932-46e2-8705-06c3a8f84935" name="POP3" type="Block"><loginhibit /><display x="555" y="-45" w="150" h="195" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="08665ff3-515b-4dc7-a820-d9c11f763bed" name="IMAP" type="Block"><loginhibit /><display x="720" y="-45" w="150" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2442b1b4-2565-4a16-aa50-56be71debf97" name="IMAP Connected" type="Data"><display x="795" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue></stage><stage stageid="22aba22d-c5bb-4c61-a111-4dddd9d98714" name="IMAP Server" type="Data"><display x="795" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="d7e5a590-d321-40f1-a1a8-b16b9238d90b" name="IMAP Port" type="Data"><display x="795" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue /><alwaysinit /></stage><stage stageid="7b7070af-46d1-4150-acb6-07c80b082aba" name="IMAP Use StartTLS" type="Data"><display x="795" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue></stage><stage stageid="30e5b587-bdb0-4f00-874a-94074be680aa" name="IMAP Move Message" type="SubSheetInfo"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><narrative>Move a message to another folder.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="55e2c659-f8b0-4db4-a5b1-155a9e84d628" name="IMAPFolderRW" type="Data"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><display x="-180" y="30" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1db97be8-60b3-4dce-9005-e933ab879b6f" name="Start" type="Start"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="90" y="-120" /><onsuccess>682000a2-e500-49e1-9e0d-f3ef1acf2bf9</onsuccess></stage><stage stageid="6b022b18-4d21-496f-9378-a2ca7e7ca8f0" name="End" type="End"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="195" y="60" /><outputs><output type="collection" name="Emails" stage="Emails" /></outputs></stage><stage stageid="ce597e75-e4f6-49bc-aed4-d607b9ae46d2" name="MessageCount" type="Data"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><display x="-180" y="180" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="89809ee7-92cd-41cb-b136-e9fe151f83ae" name="Messages Left?" type="Decision"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="90" y="60" /><decision expression="[MessageCount] &gt; 0" /><ontrue>89ac092d-f99d-4223-a4b9-ef6705d88168</ontrue><onfalse>6b022b18-4d21-496f-9378-a2ca7e7ca8f0</onfalse></stage><stage stageid="bb7e0c73-9355-4f01-8801-e16afa85830b" name="Decrement" type="Calculation"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="90" y="240" /><onsuccess>8b3fea45-44e6-4725-b5ac-64697c0d83dc</onsuccess><calculation expression="[MessageCount] - 1" stage="MessageCount" /></stage><stage stageid="fb396091-2396-4ebf-8bf1-a2c5da5efd9a" name="IMAP Move Message" type="Code"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="90" y="180" /><inputs><input type="number" name="MessageNumber" expr="[MessageCount]" /></inputs><outputs><output type="text" name="Subject" stage="Emails.Subject" /><output type="text" name="From Name" stage="Emails.From Name" /><output type="text" name="From Email" stage="Emails.From Address" /><output type="datetime" name="Date Sent" stage="Emails.Date Sent" /><output type="text" name="MessageID" stage="Emails.MessageID" /></outputs><onsuccess>bb7e0c73-9355-4f01-8801-e16afa85830b</onsuccess><code><![CDATA[
MimeKit.MimeMessage result =_imapClient.Inbox.GetMessage((int)MessageNumber - 1);
Subject = result.Subject;

From_Name = result.From.Mailboxes.First().Name;
From_Email = result.From.Mailboxes.First().Address;
Date_Sent = result.Date.Date;
MessageID = result.MessageId;

]]></code></stage><stage stageid="8b3fea45-44e6-4725-b5ac-64697c0d83dc" name="anchor1" type="Anchor"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="15" y="240" w="10" h="10" /><onsuccess>1e5fdbc0-d74d-4df7-91fd-84769229882f</onsuccess></stage><stage stageid="1e5fdbc0-d74d-4df7-91fd-84769229882f" name="anchor2" type="Anchor"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="15" y="60" w="10" h="10" /><onsuccess>89809ee7-92cd-41cb-b136-e9fe151f83ae</onsuccess></stage><stage stageid="89ac092d-f99d-4223-a4b9-ef6705d88168" name="Add Row" type="Action"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="90" y="120" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Emails&quot;" /></inputs><onsuccess>fb396091-2396-4ebf-8bf1-a2c5da5efd9a</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="7e23a2bb-ffdb-4a3a-9f03-9e1a4d0db006" name="Emails" type="Collection"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="-180" y="105" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject" type="text" description="The subject of the email." /><field name="From Name" type="text" description="The name of the sender." /><field name="From Address" type="text" description="The email address of the sender." /><field name="Date Sent" type="datetime" description="The date and time at which the email was sent." /><field name="MessageID" type="text" description="The ID of the email message." /></collectioninfo></stage><stage stageid="6e097994-11e5-4ce0-b689-b514c3188e1a" name="IMAP Message Count" type="Code"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="90" y="0" /><inputs><input type="flag" name="Use StartTLS" expr="[IMAP Use StartTLS]" /></inputs><outputs><output type="number" name="MessageCount" stage="MessageCount" /></outputs><onsuccess>89809ee7-92cd-41cb-b136-e9fe151f83ae</onsuccess><code><![CDATA[_imapClient.Inbox.Open(MailKit.FolderAccess.ReadOnly);
MessageCount = _imapClient.Inbox.Search(SearchQuery.All).Count;
]]></code></stage><stage stageid="682000a2-e500-49e1-9e0d-f3ef1acf2bf9" name="INTERNAL - Connect IMAP" type="SubSheet"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="90" y="-60" w="90" h="30" /><onsuccess>6e097994-11e5-4ce0-b689-b514c3188e1a</onsuccess><processid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</processid></stage><stage stageid="8bb58752-1249-439c-a0f8-c50143a8c0f4" name="Input" type="Block"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f6f200c8-c7f6-436b-83f6-d699c7c342c2" name="Output" type="Block"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="4364e34c-d232-4ffb-b40d-cef86f254da6" name="Local" type="Block"><subsheetid>d8554674-fbba-4027-a4fc-e97d9ae4f7ee</subsheetid><loginhibit /><display x="-315" y="150" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="9e21b3a8-95ab-4e40-b1f0-dc1ccba54565" name="IMAP Create Folder - Personal Namespace" type="SubSheetInfo"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><narrative>Creates a folder under the personal namespace.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c4a8f0fb-a22a-4751-aa12-444eefb9ca6e" name="Folder Name" type="Data"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><display x="-180" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4beafedf-9155-49dc-a755-7de4e8d3f881" name="Start" type="Start"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><loginhibit /><display x="90" y="-15" /><inputs><input type="text" name="FolderName" narrative="The name of the folder to create." stage="Folder Name" /></inputs><onsuccess>60e53773-c093-4944-9211-bdc57c8d65fd</onsuccess></stage><stage stageid="973f7bea-2609-464c-9a58-8f64b8ed2f30" name="IMAP Create Folder" type="Code"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><loginhibit /><display x="90" y="105" w="120" h="30" /><inputs><input type="text" name="FolderName" expr="[Folder Name]" /></inputs><outputs><output type="text" name="CreatedFolderName" stage="CreatedFolderName" /></outputs><onsuccess>372304f5-ef63-495e-aadd-c968550196ca</onsuccess><code><![CDATA[
 CreatedFolderName = CreateNewPersonalFolder(FolderName);]]></code></stage><stage stageid="60e53773-c093-4944-9211-bdc57c8d65fd" name="INTERNAL - Connect IMAP" type="SubSheet"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><loginhibit /><display x="90" y="45" w="90" h="30" /><onsuccess>973f7bea-2609-464c-9a58-8f64b8ed2f30</onsuccess><processid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</processid></stage><stage stageid="79a6a127-3241-435b-8736-d339fdb5908a" name="Input" type="Block"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="33eb8829-8133-4507-8866-8ed68995aa95" name="Output" type="Block"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="e16741fc-b5be-4c36-9f1a-fc9fc86bb3e6" name="IMAP Rename Folder - Personal Namespace" type="SubSheetInfo"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><narrative>Renames a folder in the personal namespace.
</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="07b8f7a7-f514-4494-80f5-623c68b030f9" name="Start" type="Start"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><loginhibit /><display x="90" y="15" /><inputs><input type="text" name="OldFolderNAme" stage="OldFolderName" /><input type="text" name="NewFolderName" stage="NewFolderName" /></inputs><onsuccess>d4a7ddfe-d2d5-4c6b-9a19-1c7a00d81708</onsuccess></stage><stage stageid="b1d3062d-eda5-4d35-be70-945c82646c7f" name="Rename Folder" type="Code"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><loginhibit /><narrative>Personal Namespaces Only</narrative><display x="90" y="135" w="90" h="30" /><inputs><input type="text" name="OldFolderName" expr="[OldFolderName]" /><input type="text" name="NewFolderName" expr="[NewFolderName]" /></inputs><outputs><output type="text" name="RenamedFolderName" stage="RenamedFolderName" /></outputs><onsuccess>414802bf-51ae-42d4-bdeb-1bf13908aafc</onsuccess><code><![CDATA[	
RenamedFolderName = RenameFolder(OldFolderName, NewFolderName);
	]]></code></stage><stage stageid="d4a7ddfe-d2d5-4c6b-9a19-1c7a00d81708" name="INTERNAL - Connect IMAP" type="SubSheet"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><loginhibit /><display x="90" y="75" w="90" h="30" /><onsuccess>b1d3062d-eda5-4d35-be70-945c82646c7f</onsuccess><processid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</processid></stage><stage stageid="0ce6780a-2061-4c03-bf2e-3a35cd2b0c50" name="Input" type="Block"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="42235f7a-c34e-4c91-9993-e6470b8264c6" name="Output" type="Block"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="56fd2938-fd08-48ba-b456-ecff2acb1bfa" name="CheckCertificateRevocation" type="Data"><subsheetid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</subsheetid><display x="-120" y="0" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="fab6a8c2-cae0-424f-bf2c-9c43c9d8afb4" name="OldFolderName" type="Data"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><display x="-240" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a5bdc083-be41-4665-af2d-cbe0e1fe9b9e" name="NewFolderName" type="Data"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><display x="-105" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1b9295fa-60e6-4a0a-85e5-c7e9d5cfda77" name="IMAP Get Folder - Personal Namespace" type="SubSheetInfo"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><narrative>Returns details of a folder in the personal namespace.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e4c4f2ba-7a81-4643-9c6c-c3b5f8b8cd08" name="Start" type="Start"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><loginhibit /><display x="90" y="15" /><onsuccess>8939ec4c-359f-4e4e-b110-2c64e3d40de5</onsuccess></stage><stage stageid="117bce86-6adb-45c6-a2b2-a02183adf389" name="Get Folder" type="Code"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><loginhibit /><narrative>Personal Namespaces Only</narrative><display x="90" y="135" w="90" h="30" /><inputs><input type="text" name="FolderName" expr="[FolderName]" /></inputs><outputs><output type="collection" name="FolderDetails" stage="FolderDetails" /></outputs><onsuccess>232bb635-eb3e-4f16-9858-2bab57ef5260</onsuccess><code><![CDATA[
	FolderDetails = GetFolderInfo(FolderName);
]]></code></stage><stage stageid="8939ec4c-359f-4e4e-b110-2c64e3d40de5" name="INTERNAL - Connect IMAP" type="SubSheet"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><loginhibit /><display x="90" y="75" w="90" h="30" /><onsuccess>117bce86-6adb-45c6-a2b2-a02183adf389</onsuccess><processid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</processid></stage><stage stageid="c8538647-3fa1-4021-9c9d-f9c2c6799058" name="Input" type="Block"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bd590beb-cb7c-4312-bcb4-3dd65446d2c6" name="Output" type="Block"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="c6d7df7c-22ba-4713-a2bb-7015aed487a7" name="FolderName" type="Data"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><display x="-180" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="641c118b-40c3-43c9-bb8d-d974cb1ca96e" name="IMAP Get Folders - Personal Namespace" type="SubSheetInfo"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><narrative>Return a collection of IMAP folders from the Personal Namespace.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="87896824-59c3-444d-9b03-3becf0004378" name="Start" type="Start"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><loginhibit /><display x="90" y="0" /><onsuccess>446e6a4b-fa79-43a2-bd6e-73f0c5794ec5</onsuccess></stage><stage stageid="628cda41-d3b5-48bb-b29a-166bb5875413" name="Get Folders" type="Code"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><loginhibit /><narrative>Personal Namespaces Only</narrative><display x="90" y="120" w="90" h="30" /><outputs><output type="collection" name="folders" stage="Folders" /></outputs><onsuccess>b2052ebc-902a-4fc4-b00f-31a26f38536e</onsuccess><code><![CDATA[	
folders = GetFolders();
	]]></code></stage><stage stageid="446e6a4b-fa79-43a2-bd6e-73f0c5794ec5" name="INTERNAL - Connect IMAP" type="SubSheet"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><loginhibit /><display x="90" y="60" w="90" h="30" /><onsuccess>628cda41-d3b5-48bb-b29a-166bb5875413</onsuccess><processid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</processid></stage><stage stageid="366cdeed-6698-4101-926b-f1fef6e33a0f" name="Input" type="Block"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="96ece590-161f-48f8-84f8-32113052a185" name="Output" type="Block"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="1d662810-3116-41ef-abaf-463b16152a50" name="Local" type="Block"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><loginhibit /><display x="-315" y="150" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="b6c9dc04-9e9f-4c4f-b19e-9ee0fb5b8611" name="Folders" type="Collection"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><display x="-195" y="105" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="b2052ebc-902a-4fc4-b00f-31a26f38536e" name="End1" type="End"><subsheetid>9eeb197f-322e-45d5-b510-caac9eadc939</subsheetid><loginhibit /><display x="90" y="180" /><outputs><output type="collection" name="Folders" narrative="A list of IMAP folders from the personal namespace" stage="Folders" /></outputs></stage><stage stageid="372304f5-ef63-495e-aadd-c968550196ca" name="End2" type="End"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><loginhibit /><display x="90" y="180" /><outputs><output type="text" name="CreatedFolderName" stage="CreatedFolderName" /></outputs></stage><stage stageid="7cdc561e-3dcd-432a-b4dd-83408705bfc5" name="CreatedFolderName" type="Data"><subsheetid>a940b2a6-c5cd-499f-99f5-e88c0fdc2445</subsheetid><display x="-180" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="414802bf-51ae-42d4-bdeb-1bf13908aafc" name="End3" type="End"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><loginhibit /><display x="90" y="195" /><outputs><output type="text" name="RenamedFolderName" stage="RenamedFolderName" /></outputs></stage><stage stageid="580c9ed6-754b-4652-93aa-385ad35c99e1" name="RenamedFolderName" type="Data"><subsheetid>2596c3be-a122-4e8d-ae0a-a45cc17abc75</subsheetid><display x="-180" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="232bb635-eb3e-4f16-9858-2bab57ef5260" name="End4" type="End"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><loginhibit /><display x="90" y="195" /></stage><stage stageid="a17f0ec9-a5ff-480b-98ac-1bf5630c41bf" name="FolderDetails" type="Collection"><subsheetid>5242c3a8-5560-46ca-a805-6f5d3e5cf0f8</subsheetid><display x="-195" y="105" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="fd49ecbd-f9a5-4ad0-aa2e-e42ee54190f9" name="IMAP Move MailItem By Subject" type="SubSheetInfo"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><narrative>Moves a mail message from a folder to another folder.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0f516416-6392-4c01-bc77-8ce66686db56" name="Start" type="Start"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><loginhibit /><display x="90" y="0" /><inputs><input type="text" name="FromFolder" stage="FromFolder" /><input type="text" name="ToFolder" stage="ToFolder" /><input type="text" name="Subject" stage="Subject" /></inputs><onsuccess>41f868e6-7f7b-44e4-9953-339390ce27c8</onsuccess></stage><stage stageid="c60dfa6c-af2d-4786-acef-b7a000a2c8fe" name="Move MailItem By Subject" type="Code"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><loginhibit /><narrative>Personal Namespaces Only</narrative><display x="90" y="120" w="90" h="30" /><inputs><input type="text" name="FromFolder" expr="[FromFolder]" /><input type="text" name="ToFolder" expr="[ToFolder]" /><input type="text" name="Subject" expr="[Subject]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>734aa9e3-3a89-48da-9394-ff3b26998614</onsuccess><code><![CDATA[	
Success = MoveMailItemBySubject(Subject, FromFolder, ToFolder);
]]></code></stage><stage stageid="41f868e6-7f7b-44e4-9953-339390ce27c8" name="INTERNAL - Connect IMAP" type="SubSheet"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><loginhibit /><display x="90" y="60" w="90" h="30" /><onsuccess>c60dfa6c-af2d-4786-acef-b7a000a2c8fe</onsuccess><processid>23b79bcf-348d-4ffc-9522-b1454e0fbfc8</processid></stage><stage stageid="fd68ff49-cccb-477d-af47-8ec3ecd1e05d" name="Input" type="Block"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><loginhibit /><display x="-315" y="0" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="890f066d-46c8-4823-8b94-1b7364906169" name="Output" type="Block"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><loginhibit /><display x="-315" y="75" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="accb65d5-27ca-45da-8d4d-1347b28cd81f" name="Local" type="Block"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><loginhibit /><display x="-315" y="150" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="734aa9e3-3a89-48da-9394-ff3b26998614" name="End1" type="End"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><loginhibit /><display x="90" y="180" /><outputs><output type="flag" name="Success" narrative="Item move was successful" stage="Success" /></outputs></stage><stage stageid="bce26072-cf59-44cc-a633-aa21b2173bb0" name="FromFolder" type="Data"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><display x="-255" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="96959378-f602-4838-90b3-b6364465fc6e" name="ToFolder" type="Data"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><display x="-180" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="90ab7bcb-103c-479a-aafd-e7fe1904d2bf" name="Subject" type="Data"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><display x="-105" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a6a6b0a3-add8-403f-aef5-486dba1c5c15" name="Success" type="Data"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><display x="-255" y="105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8405a263-c1af-478c-a4bb-9604050c1f74" name="Message" type="Data"><subsheetid>93beb7f6-a73f-48ab-97b7-db223fb5f081</subsheetid><display x="-120" y="105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a661ff3f-89a6-4db6-b57f-ec5d3c6a2b87" name="CC" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><display x="-345" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="065e60b2-9ad9-4d31-8bb4-ea1cf2fa360a" name="BCC" type="Data"><subsheetid>cc1b4ba2-0510-4980-92bd-d6312072c5bf</subsheetid><loginhibit /><display x="-225" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba6de024-18ad-4000-891c-171f885e084d" name="Note2" type="Note"><narrative>© 2023 Blue Prism Limited
Licensed under Blue Prism Asset Terms for Modifiable Assets
https://portal.blueprism.com/agreements
</narrative><display x="270" y="-105" w="330" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage></process></object>
        <object id="a0908033-2718-415a-b0fa-d93248553c69" name="Google Gemini" xmlns="http://www.blueprism.co.uk/product/process"><process name="Google Gemini" version="1.0" bpversion="7.4.1.15931" narrative="Google Gemini" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>744449ca-2686-4642-a8aa-e57544174544</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-40</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="764efdc4-1b8c-48ee-8486-0a84769dd710" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9df993fc-d87e-47df-b2b0-4e0af504f95c" type="Normal" published="False"><name>Internal - Set URL Params</name><view><camerax>0</camerax><cameray>1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9bd04e2b-708f-488f-8a42-2afa2150eed7" type="Normal" published="True"><name>models.countTokens</name><view><camerax>0</camerax><cameray>66</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="59e87229-dd4b-46dd-835a-a0e907d2d6ad" type="Normal" published="True"><name>model.batchEmbedContents</name><view><camerax>36</camerax><cameray>48</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="00880f6b-7ba3-4879-bd39-d46829283e74" type="Normal" published="True"><name>models.list</name><view><camerax>17</camerax><cameray>13</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bcbabda0-e174-4fbe-84f0-f44fbc53b09b" type="Normal" published="True"><name>models.embedContent</name><view><camerax>0</camerax><cameray>73</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="798e3387-0d3e-49f8-8ab0-7a4928fcdc29" type="Normal" published="True"><name>models.generateContent</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d1f9e767-d4fb-4366-a8a7-d10a14a0ea5a" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>9e458790-ddc2-433a-9551-2ef669549ae0</onsuccess></stage><stage stageid="9e458790-ddc2-433a-9551-2ef669549ae0" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="9d947b8e-90a9-41d0-8c75-46574545d25f" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="1f073461-2027-483c-9183-b813ea19b2b5" name="Clean Up" type="SubSheetInfo"><subsheetid>764efdc4-1b8c-48ee-8486-0a84769dd710</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d8cf367d-6e3d-4aca-bc36-b8ba8da0ce6a" name="Start" type="Start"><subsheetid>764efdc4-1b8c-48ee-8486-0a84769dd710</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>b805bf39-8c77-4bc3-b7fb-79c64c36de15</onsuccess></stage><stage stageid="b805bf39-8c77-4bc3-b7fb-79c64c36de15" name="End" type="End"><subsheetid>764efdc4-1b8c-48ee-8486-0a84769dd710</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="7e93a505-1822-45de-aad1-0d6dbcf85aa4" name="" type="Note"><subsheetid>764efdc4-1b8c-48ee-8486-0a84769dd710</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="aa9e800a-3f99-4b0d-9ed4-c6e45eb5aae3" name="" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="4e259596-a8ec-4ec2-a43c-08e028f78060" name="Note2" type="Note"><narrative>© 2024 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="285" y="-60" w="330" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="ca4db17b-6646-470e-9571-6506b4a72a78" name="Note3" type="Note"><loginhibit /><narrative>v1.0.0</narrative><display x="15" y="-150" /><font family="Segoe UI" size="13" style="Regular" color="993366" /></stage><stage stageid="4874d133-1379-4748-8fcd-31eeb44ce022" name="Internal - Set URL Params" type="SubSheetInfo"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><narrative>Sets the path and query parameters in the URL </narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2724b498-fe84-4b77-901f-af452a44851d" name="Start" type="Start"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="URL Params" stage="URL Params" /><input type="text" name="AddressURL" stage="AddressURL" /></inputs><onsuccess>2949d729-9c27-4f09-ab7f-1b60416055a4</onsuccess></stage><stage stageid="9b25e423-8289-419f-bec2-14118c4e3612" name="End" type="End"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="15" y="300" /><outputs><output type="text" name="AddressURL" stage="AddressURL" /></outputs></stage><stage stageid="abff5826-8863-4650-afe2-64d0f9483ddb" name="Set URL Params" type="LoopStart"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="15" y="75" /><onsuccess>c787deac-203b-4a02-8d2b-e9a8578fb664</onsuccess><groupid>88b00c73-08a3-464d-90b3-5cd3dd678d8c</groupid><looptype>ForEach</looptype><loopdata>Transposed URL Parameters</loopdata></stage><stage stageid="281c670c-4fb9-4c67-9cc2-031ce5f357f2" name="Set URL Params" type="LoopEnd"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="15" y="210" /><onsuccess>43de7c1f-336e-41e7-bf08-a9ecc61d9c7f</onsuccess><groupid>88b00c73-08a3-464d-90b3-5cd3dd678d8c</groupid></stage><stage stageid="c787deac-203b-4a02-8d2b-e9a8578fb664" name="Field Exists in URL" type="Decision"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="15" y="135" /><decision expression="InStr([AddressURL], [Transposed URL Parameters.Name])&gt;0" /><ontrue>bfd8087c-009c-4ed3-88a7-e4b3683df76c</ontrue><onfalse>281c670c-4fb9-4c67-9cc2-031ce5f357f2</onfalse></stage><stage stageid="bfd8087c-009c-4ed3-88a7-e4b3683df76c" name="Update FieldValue in URL" type="Calculation"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="105" y="135" /><onsuccess>ddb87f8c-ee91-47a8-abd2-9b31d785c68f</onsuccess><calculation expression="Replace([AddressURL], &quot;{&quot;&amp;[Transposed URL Parameters.Name]&amp;&quot;}&quot;, [Transposed URL Parameters.Value])" stage="AddressURL" /></stage><stage stageid="59a6db6b-1ac5-4d96-b0a2-1a825cdf1e2e" name="Transpose Collection" type="Action"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit onsuccess="true" /><display x="15" y="30" /><inputs><input type="collection" name="Collection" friendlyname="Collection" narrative="The collection to transpose." expr="[URL Params]" /></inputs><outputs><output type="collection" name="Appended Collection" friendlyname="Appended Collection" narrative="The transposed collection." stage="Transposed URL Parameters" /></outputs><onsuccess>abff5826-8863-4650-afe2-64d0f9483ddb</onsuccess><resource object="Utility - Collection Manipulation" action="Transpose Collection" /></stage><stage stageid="2949d729-9c27-4f09-ab7f-1b60416055a4" name="Collections::Count Rows" type="Action"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-60" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;URL Params&quot;" /></inputs><outputs><output type="number" name="Count" friendlyname="Count" narrative="The number of rows counted in the collection" stage="ParamCount" /></outputs><onsuccess>3d796caa-2931-4228-8c12-b9eef21a42b9</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="3d796caa-2931-4228-8c12-b9eef21a42b9" name="ParamCount&gt;0" type="Decision"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="15" y="-15" /><decision expression="[ParamCount]&gt;0" /><ontrue>59a6db6b-1ac5-4d96-b0a2-1a825cdf1e2e</ontrue><onfalse>5536034d-a253-4e7c-97d0-59da8eb8ebac</onfalse></stage><stage stageid="5536034d-a253-4e7c-97d0-59da8eb8ebac" name="Anchor1" type="Anchor"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="-60" y="-15" w="10" h="10" /><onsuccess>908dcfa4-2e56-4443-8f77-e33c2d1012fb</onsuccess></stage><stage stageid="908dcfa4-2e56-4443-8f77-e33c2d1012fb" name="Anchor2" type="Anchor"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="-60" y="255" w="10" h="10" /><onsuccess>43de7c1f-336e-41e7-bf08-a9ecc61d9c7f</onsuccess></stage><stage stageid="ddb87f8c-ee91-47a8-abd2-9b31d785c68f" name="Blank URI Param?" type="Decision"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="195" y="135" /><decision expression="InStr([AddressURL], &quot;&amp;&quot; &amp; [Transposed URL Parameters.Name] &amp; &quot;=&quot;)&gt;0 AND Trim([Transposed URL Parameters.Value])=&quot;&quot;" /><ontrue>8b03c6d1-5603-4186-8678-10083bdd5da7</ontrue><onfalse>6daa99c2-4068-431a-b721-49aeec64b2aa</onfalse></stage><stage stageid="8b03c6d1-5603-4186-8678-10083bdd5da7" name="Remove URI param" type="Calculation"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="195" y="180" /><onsuccess>8c851d8c-3829-4841-8c29-ee31f368819a</onsuccess><calculation expression="Replace([AddressURL], &quot;&amp;&quot;&amp;[Transposed URL Parameters.Name]&amp;&quot;=&quot;, &quot;&quot;)" stage="AddressURL" /></stage><stage stageid="6daa99c2-4068-431a-b721-49aeec64b2aa" name="Blank URI Param?" type="Decision"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="285" y="135" /><decision expression="InStr([AddressURL], [Transposed URL Parameters.Name] &amp; &quot;=&quot;)&gt;0 AND Trim([Transposed URL Parameters.Value])=&quot;&quot;" /><ontrue>e55076a6-4b1e-457d-bc06-4196b90e0690</ontrue><onfalse>2f806d70-4d55-4aac-94b2-fed27910afb8</onfalse></stage><stage stageid="e55076a6-4b1e-457d-bc06-4196b90e0690" name="Remove URI param" type="Calculation"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="285" y="180" /><onsuccess>f75cac93-28d2-4869-8037-c89e1d6f5ab6</onsuccess><calculation expression="Replace([AddressURL], [Transposed URL Parameters.Name]&amp;&quot;=&quot;, &quot;&quot;)" stage="AddressURL" /></stage><stage stageid="8c851d8c-3829-4841-8c29-ee31f368819a" name="Anchor5" type="Anchor"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="195" y="210" w="10" h="10" /><onsuccess>281c670c-4fb9-4c67-9cc2-031ce5f357f2</onsuccess></stage><stage stageid="f75cac93-28d2-4869-8037-c89e1d6f5ab6" name="Anchor6" type="Anchor"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="285" y="210" w="10" h="10" /><onsuccess>8c851d8c-3829-4841-8c29-ee31f368819a</onsuccess></stage><stage stageid="2f806d70-4d55-4aac-94b2-fed27910afb8" name="Anchor7" type="Anchor"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="345" y="135" w="10" h="10" /><onsuccess>31054fa1-a51e-4e76-abaf-345c57081ba2</onsuccess></stage><stage stageid="31054fa1-a51e-4e76-abaf-345c57081ba2" name="Anchor8" type="Anchor"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="345" y="210" w="10" h="10" /><onsuccess>f75cac93-28d2-4869-8037-c89e1d6f5ab6</onsuccess></stage><stage stageid="c5fd0451-3222-442f-b84a-7218b5ddc6bc" name="URL Params" type="Collection"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="-285" y="15" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="fdb257ee-c957-42c2-a747-d324894f521e" name="ParamCount" type="Data"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><display x="-285" y="60" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="87957cda-32b4-4b05-97ff-707f709b38a8" name="Transposed URL Parameters" type="Collection"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><display x="-225" y="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6e4581c9-d778-49f9-b928-b61b1a84ad26" name="AddressURL" type="Data"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="-165" y="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43de7c1f-336e-41e7-bf08-a9ecc61d9c7f" name="Anchor3" type="Anchor"><subsheetid>9df993fc-d87e-47df-b2b0-4e0af504f95c</subsheetid><loginhibit /><display x="15" y="255" w="10" h="10" /><onsuccess>9b25e423-8289-419f-bec2-14118c4e3612</onsuccess></stage><stage stageid="5d843075-69c5-4d54-8dcd-7dfb5fe65357" name="models.list" type="SubSheetInfo"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><narrative>Lists models available through the API</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b6d3f7dd-1517-451c-b376-bef639aa0917" name="Start" type="Start"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="password" name="key" narrative="Google API Key" stage="URL Params.key" /><input type="text" name="pageSize" narrative="The maximum number of Models to return (per page)" stage="URL Params.pageSize" /><input type="text" name="pageToken" narrative="A page token, received from a previous models.list call" stage="URL Params.pageToken" /></inputs><onsuccess>befc8651-9202-46ca-8aa2-a39a67724e23</onsuccess></stage><stage stageid="d1c93c69-7c80-4149-92f5-e7836b8f5281" name="End" type="End"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><loginhibit /><display x="15" y="255" /><outputs><output type="text" name="Result" narrative="HTTP Response from the API call" stage="Result" /><output type="number" name="Status Code" narrative="HTTP Status code from the API call" stage="Status Code" /><output type="text" name="Headers as Json" narrative="HTTP Headers as returned from the API call" stage="Headers as Json" /><output type="collection" name="ModelList" narrative="Lists models available through the API" stage="ModelList" /></outputs></stage><stage stageid="df81002d-2131-4740-920d-c19993376410" name="AddressURL" type="Data"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><loginhibit /><display x="-255" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">/models?key={key}</initialvalue><private /><alwaysinit /></stage><stage stageid="abc784de-9f81-42a1-9dc6-051ee22ecd95" name="Utility - HTTP::HTTP Request" type="Action"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /><inputs><input type="text" name="Address URL" friendlyname="Address URL" narrative="The URL to send the HTTP data to" expr="[AddressURL]" /><input type="text" name="Body" friendlyname="Body" narrative="The body text of the HTTP request" expr="" /><input type="flag" name="Use Proxy" friendlyname="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" friendlyname="Content Type" narrative="The content type of the HTTP request." expr="" /><input type="text" name="Method" friendlyname="Method" narrative="The method of the HTTP request." expr="[Method]" /><input type="text" name="Proxy URL" friendlyname="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" friendlyname="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" friendlyname="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" friendlyname="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" friendlyname="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" friendlyname="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" friendlyname="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" friendlyname="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /><input type="flag" name="Force Pre Authorization" friendlyname="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the 'Authorization' header for HTTP Basic." expr="" /><input type="flag" name="File URL" friendlyname="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" expr="" /><input type="flag" name="Use Bearer Token" friendlyname="Use Bearer Token" expr="" /><input type="text" name="Bearer Token" friendlyname="Bearer Token" narrative="OPTIONAL: If you 'Use Bearer Token' is set to True, this must be set to the value of the actual Bearer Token." expr="" /><input type="flag" name="Allow Auto Redirects" friendlyname="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." expr="" /><input type="number" name="Maximum Redirects" friendlyname="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." expr="" /><input type="number" name="Request Timeout" friendlyname="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." expr="" /></inputs><outputs><output type="text" name="Result" friendlyname="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" friendlyname="Headers as Json" narrative="The returned headers response as Json" stage="Headers as Json" /><output type="number" name="Status Code" friendlyname="Status Code" narrative="The HTTP status code associated with the request." stage="Status Code" /></outputs><onsuccess>cec85aeb-18b2-40c3-8fff-3717daf0a6aa</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="0f8973b2-c977-4b3a-b727-4f50284d40eb" name="Result" type="Data"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><display x="-255" y="135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7a8d234e-771b-4cf6-b2d2-beafc5f611b6" name="Headers as Json" type="Data"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><display x="-135" y="135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c5422b89-e21f-4579-be06-981f0aaedd14" name="Status Code" type="Data"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><display x="-195" y="135" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0597e663-65bd-4627-a3fc-f3d5b40bb29f" name="URL Params" type="Collection"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><loginhibit /><display x="-255" y="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="key" type="password" /><field name="pageToken" type="text" /><field name="pageSize" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="key" type="password" encvalue="aCpGKl8qTyp6KlgqQypZKkcqBCppKkUqRypHKkUqRCoEKnkqTypJKl8qWCpDKl4qUyoEKnkqQypHKloqRipPKmUqSCpMKl8qWSpJKksqXipFKlgq&lt;0b7597ab-1cb3-41c5-9c6a-d7a22ea76ddd&gt;" /><field name="pageToken" type="text" value="" /><field name="pageSize" type="text" value="" /></row></initialvalue></stage><stage stageid="befc8651-9202-46ca-8aa2-a39a67724e23" name="Internal - Set URL Params" type="SubSheet"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="collection" name="URL Params" friendlyname="URL Params" expr="[URL Params]" /><input type="text" name="AddressURL" friendlyname="AddressURL" expr="[BaseURL]&amp;[AddressURL]" /></inputs><outputs><output type="text" name="AddressURL" friendlyname="AddressURL" stage="AddressURL" /></outputs><onsuccess>abc784de-9f81-42a1-9dc6-051ee22ecd95</onsuccess><processid>9df993fc-d87e-47df-b2b0-4e0af504f95c</processid></stage><stage stageid="0b7e6e58-b362-4267-9ace-b77e9abe3c61" name="Method" type="Data"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><loginhibit /><display x="-180" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">GET</initialvalue><private /><alwaysinit /></stage><stage stageid="1ca35014-7edf-482c-9b62-7db3f26ef9ca" name="Utility - JSON::JSON to Collection (skipping JArray)" type="Action"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><loginhibit onsuccess="true" /><display x="15" y="135" /><inputs><input type="text" name="json" friendlyname="json" expr="[Result]" /></inputs><outputs><output type="collection" name="Result" friendlyname="Result" stage="ModelList" /></outputs><onsuccess>fba08034-80fe-42a8-8757-3f96644e42f0</onsuccess><resource object="Utility - JSON" action="JSON to Collection (skipping JArray)" /></stage><stage stageid="8f0a8467-b6b0-452d-9961-eb05fee381ea" name="models.embedContent" type="SubSheetInfo"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><narrative>Generates an embedding from the model given an input Content</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="cd0b4b01-ea9f-4fc0-a276-0cdeb956e139" name="End" type="End"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit /><display x="15" y="255" /><outputs><output type="text" name="Result" narrative="HTTP Response from the API call" stage="Result" /><output type="number" name="Status Code" narrative="HTTP Status code from the API call" stage="Status Code" /><output type="text" name="Headers as Json" narrative="HTTP Headers as returned from the API call" stage="Headers as Json" /><output type="text" name="ContentEmbedding" narrative="The embedding values" stage="ContentEmbedding" /></outputs></stage><stage stageid="18739bd3-8385-498e-85d8-605b3961c27d" name="AddressURL" type="Data"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit /><display x="-255" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">/models/{model}:embedContent?key={key}</initialvalue><private /><alwaysinit /></stage><stage stageid="c2e48d5e-1434-4669-8f2a-8631be21683b" name="Utility - HTTP::HTTP Request" type="Action"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /><inputs><input type="text" name="Address URL" friendlyname="Address URL" narrative="The URL to send the HTTP data to" expr="[AddressURL]" /><input type="text" name="Body" friendlyname="Body" narrative="The body text of the HTTP request" expr="[Body Params.body]" /><input type="flag" name="Use Proxy" friendlyname="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" friendlyname="Content Type" narrative="The content type of the HTTP request." expr="[Content Type]" /><input type="text" name="Method" friendlyname="Method" narrative="The method of the HTTP request." expr="[Method]" /><input type="text" name="Proxy URL" friendlyname="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" friendlyname="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" friendlyname="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" friendlyname="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" friendlyname="Accept" narrative="OPTIONAL: Accept" expr="&quot;application/json&quot;" /><input type="text" name="Username" friendlyname="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" friendlyname="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" friendlyname="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /><input type="flag" name="Force Pre Authorization" friendlyname="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the 'Authorization' header for HTTP Basic." expr="" /><input type="flag" name="File URL" friendlyname="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" expr="" /><input type="flag" name="Use Bearer Token" friendlyname="Use Bearer Token" expr="" /><input type="text" name="Bearer Token" friendlyname="Bearer Token" narrative="OPTIONAL: If you 'Use Bearer Token' is set to True, this must be set to the value of the actual Bearer Token." expr="" /><input type="flag" name="Allow Auto Redirects" friendlyname="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." expr="" /><input type="number" name="Maximum Redirects" friendlyname="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." expr="" /><input type="number" name="Request Timeout" friendlyname="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." expr="" /></inputs><outputs><output type="text" name="Result" friendlyname="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" friendlyname="Headers as Json" narrative="The returned headers response as Json" stage="Headers as Json" /><output type="number" name="Status Code" friendlyname="Status Code" narrative="The HTTP status code associated with the request." stage="Status Code" /></outputs><onsuccess>f23ba813-0cec-4cc9-bb85-6f8dfc7241ae</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="bede4a9d-4eb4-402e-b1e6-06e543c5d4e6" name="Result" type="Data"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><display x="-255" y="180" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d02875f6-7379-4980-aa1d-96273238d4e7" name="Headers as Json" type="Data"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><display x="-135" y="180" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e2fd04ec-f02f-4de8-93ba-abd301fe286a" name="Status Code" type="Data"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><display x="-195" y="180" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec9a6f44-e0c9-4f3c-a6bc-63ea580d2403" name="URL Params" type="Collection"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit /><display x="-255" y="105" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="key" type="password" /><field name="model" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="key" type="password" encvalue="aCpGKl8qTyp6KlgqQypZKkcqBCppKkUqRypHKkUqRCoEKnkqTypJKl8qWCpDKl4qUyoEKnkqQypHKloqRipPKmUqSCpMKl8qWSpJKksqXipFKlgq&lt;0b7597ab-1cb3-41c5-9c6a-d7a22ea76ddd&gt;" /><field name="model" type="text" value="" /></row></initialvalue></stage><stage stageid="22e81530-719b-4bfd-b304-1ccbcbc07818" name="Body Params" type="Collection"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit /><display x="-180" y="105" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="body" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="body" type="text" value="" /></row></initialvalue></stage><stage stageid="4d6bc9e4-0529-4b84-8e20-152d4c0904e1" name="Internal - Set URL Params" type="SubSheet"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="collection" name="URL Params" friendlyname="URL Params" expr="[URL Params]" /><input type="text" name="AddressURL" friendlyname="AddressURL" expr="[BaseURL]&amp;[AddressURL]" /></inputs><outputs><output type="text" name="AddressURL" friendlyname="AddressURL" stage="AddressURL" /></outputs><onsuccess>c2e48d5e-1434-4669-8f2a-8631be21683b</onsuccess><processid>9df993fc-d87e-47df-b2b0-4e0af504f95c</processid></stage><stage stageid="7a7a1654-0b02-4a7a-b611-aa8bdc7b1207" name="Method" type="Data"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit /><display x="-195" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">POST</initialvalue><private /><alwaysinit /></stage><stage stageid="7927c33e-9ca7-4fe3-b28f-7ff0321fecdb" name="Content Type" type="Data"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit /><display x="-135" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">application/json</initialvalue><private /><alwaysinit /></stage><stage stageid="90da349c-fb54-4718-a6db-751afd75838c" name="Start" type="Start"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="password" name="key" narrative="Google API Key" stage="URL Params.key" /><input type="text" name="model" narrative="Name of the model" stage="URL Params.model" /><input type="text" name="prompt" narrative="Prompt for the Gemini API" stage="Body Params.body" /></inputs><onsuccess>4d6bc9e4-0529-4b84-8e20-152d4c0904e1</onsuccess></stage><stage stageid="1b68c462-e328-4749-b3b3-6dfc0f8a4131" name="ModelList" type="Collection"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><display x="-255" y="180" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="fba08034-80fe-42a8-8757-3f96644e42f0" name="Set ModelList" type="Calculation"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><loginhibit /><display x="15" y="195" /><onsuccess>d1c93c69-7c80-4149-92f5-e7836b8f5281</onsuccess><calculation expression="[ModelList.models]" stage="ModelList" /></stage><stage stageid="43d9cabc-ac45-467c-8297-abafe491d017" name="models.generateContent" type="SubSheetInfo"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><narrative>Generates a response from the model given an input GenerateContentRequest</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ffab0e93-bedb-4328-ba04-0fa8a147313c" name="End" type="End"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><loginhibit /><display x="15" y="195" /><outputs><output type="text" name="Result" narrative="HTTP Response from the API call" stage="Result" /><output type="number" name="Status Code" narrative="HTTP Status code from the API call" stage="Status Code" /><output type="text" name="Headers as Json" narrative="HTTP Headers as returned from the API call" stage="Headers as Json" /><output type="text" name="GeneratedText" narrative="Generated text" stage="GeneratedText" /></outputs></stage><stage stageid="566517ed-119f-456e-9a5c-063ea2154e57" name="AddressURL" type="Data"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><loginhibit /><display x="-255" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">/models/{model}:generateContent?key={key}</initialvalue><private /><alwaysinit /></stage><stage stageid="42ec3786-c54d-41ec-901b-9ffa33f45b83" name="Utility - HTTP::HTTP Request" type="Action"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /><inputs><input type="text" name="Address URL" friendlyname="Address URL" narrative="The URL to send the HTTP data to" expr="[AddressURL]" /><input type="text" name="Body" friendlyname="Body" narrative="The body text of the HTTP request" expr="[Body Params.body]" /><input type="flag" name="Use Proxy" friendlyname="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" friendlyname="Content Type" narrative="The content type of the HTTP request." expr="[Content Type]" /><input type="text" name="Method" friendlyname="Method" narrative="The method of the HTTP request." expr="[Method]" /><input type="text" name="Proxy URL" friendlyname="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" friendlyname="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" friendlyname="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" friendlyname="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" friendlyname="Accept" narrative="OPTIONAL: Accept" expr="&quot;application/json&quot;" /><input type="text" name="Username" friendlyname="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" friendlyname="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" friendlyname="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /><input type="flag" name="Force Pre Authorization" friendlyname="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the 'Authorization' header for HTTP Basic." expr="" /><input type="flag" name="File URL" friendlyname="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" expr="" /><input type="flag" name="Use Bearer Token" friendlyname="Use Bearer Token" expr="" /><input type="text" name="Bearer Token" friendlyname="Bearer Token" narrative="OPTIONAL: If you 'Use Bearer Token' is set to True, this must be set to the value of the actual Bearer Token." expr="" /><input type="flag" name="Allow Auto Redirects" friendlyname="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." expr="" /><input type="number" name="Maximum Redirects" friendlyname="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." expr="" /><input type="number" name="Request Timeout" friendlyname="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." expr="" /></inputs><outputs><output type="text" name="Result" friendlyname="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" friendlyname="Headers as Json" narrative="The returned headers response as Json" stage="Headers as Json" /><output type="number" name="Status Code" friendlyname="Status Code" narrative="The HTTP status code associated with the request." stage="Status Code" /></outputs><onsuccess>28e6d1b9-0bd2-46cf-8085-a6048a7cf4c0</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="7e4171c6-0d92-40ac-bd44-c0e1e08a1da8" name="Result" type="Data"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><display x="-255" y="135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9e99cf2-eeca-473c-b5be-d2d52d30cff8" name="Headers as Json" type="Data"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><display x="-135" y="135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="182aaa7d-1f35-49cb-81d9-389ed86ae5a6" name="Status Code" type="Data"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><display x="-195" y="135" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0bff0ac5-9263-40c2-852e-9c52fa1b436a" name="URL Params" type="Collection"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><loginhibit /><display x="-255" y="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="key" type="password" /><field name="model" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="key" type="password" encvalue="aCpGKl8qTyp6KlgqQypZKkcqBCppKkUqRypHKkUqRCoEKnkqTypJKl8qWCpDKl4qUyoEKnkqQypHKloqRipPKmUqSCpMKl8qWSpJKksqXipFKlgq&lt;0b7597ab-1cb3-41c5-9c6a-d7a22ea76ddd&gt;" /><field name="model" type="text" value="" /></row></initialvalue></stage><stage stageid="3087c5d7-0a59-448e-aabe-f215ec7ef556" name="Body Params" type="Collection"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><loginhibit /><display x="-195" y="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="body" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="body" type="text" value="" /></row></initialvalue></stage><stage stageid="38bca594-6376-40f8-a295-7de9ff7fe134" name="Internal - Set URL Params" type="SubSheet"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="collection" name="URL Params" friendlyname="URL Params" expr="[URL Params]" /><input type="text" name="AddressURL" friendlyname="AddressURL" expr="[BaseURL]&amp;[AddressURL]" /></inputs><outputs><output type="text" name="AddressURL" friendlyname="AddressURL" stage="AddressURL" /></outputs><onsuccess>42ec3786-c54d-41ec-901b-9ffa33f45b83</onsuccess><processid>9df993fc-d87e-47df-b2b0-4e0af504f95c</processid></stage><stage stageid="36aeb95f-7e47-4338-8327-71d3f8c9f8d3" name="Method" type="Data"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><loginhibit /><display x="-195" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">POST</initialvalue><private /><alwaysinit /></stage><stage stageid="e3e9da12-bb1c-405d-b5af-f665bf2a384f" name="Content Type" type="Data"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><loginhibit /><display x="-135" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">application/json</initialvalue><private /><alwaysinit /></stage><stage stageid="7ad24ec4-8f17-4f55-bb46-433009df5bfc" name="Start" type="Start"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="password" name="key" narrative="Google API Key" stage="URL Params.key" /><input type="text" name="model" narrative="Name of the model" stage="URL Params.model" /><input type="text" name="prompt" narrative="Prompt for the Gemini API" stage="Body Params.body" /></inputs><onsuccess>38bca594-6376-40f8-a295-7de9ff7fe134</onsuccess></stage><stage stageid="89a1b289-d5bc-4332-bfc7-4ad4f143a704" name="Utility - JSON::JsonPath" type="Action"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><loginhibit onsuccess="true" /><display x="15" y="135" /><inputs><input type="text" name="Json" friendlyname="Json" expr="[Result]" /><input type="text" name="JsonPath" friendlyname="JsonPath" expr="&quot;candidates[0].content.parts[0].text&quot;" /></inputs><outputs><output type="number" name="NumericResult" friendlyname="NumericResult" stage="" /><output type="text" name="TextResult" friendlyname="TextResult" stage="GeneratedText" /><output type="text" name="ErrorMessage" friendlyname="ErrorMessage" stage="" /></outputs><onsuccess>ffab0e93-bedb-4328-ba04-0fa8a147313c</onsuccess><resource object="Utility - JSON" action="JsonPath" /></stage><stage stageid="0e4726ef-88b4-4c1a-bed0-bdd81428f210" name="GeneratedText" type="Data"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><display x="-255" y="180" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a33521a6-3cf1-4da2-ad9a-cbba9ef169f0" name="Input Data Items" type="Block"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><loginhibit /><display x="-300" y="30" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="687a1a84-7aca-43f4-b9cc-54abb1e9412f" name="Output Data Items" type="Block"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><loginhibit /><display x="-300" y="105" w="210" h="105" /><font family="Segoe UI" size="10" style="Regular" color="993300" /></stage><stage stageid="3513b1ca-fbcf-4390-8e9d-9c096cdb43b9" name="Local Data Items" type="Block"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><loginhibit /><display x="-300" y="-45" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="5b4c27e7-2e5f-49fc-a0e2-54b1abe988f1" name="Input Data Items" type="Block"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><loginhibit /><display x="-300" y="30" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="6ad81e20-eef1-4a4b-b4c9-4e99961a8dff" name="Output Data Items" type="Block"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><loginhibit /><display x="-300" y="105" w="210" h="105" /><font family="Segoe UI" size="10" style="Regular" color="993300" /></stage><stage stageid="0de52038-b85c-4e93-851e-ee88a0fdaf5c" name="Local Data Items" type="Block"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><loginhibit /><display x="-300" y="-45" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="6f06d547-1fb5-40da-b7fa-6daabc450fbd" name="Utility - JSON::JsonPath - Return Collection" type="Action"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit onsuccess="true" /><display x="15" y="135" /><inputs><input type="text" name="Json" friendlyname="Json" expr="[Result]" /><input type="text" name="JsonPath" friendlyname="JsonPath" expr="&quot;embedding.values&quot;" /></inputs><outputs><output type="text" name="ErrorMessage" friendlyname="ErrorMessage" stage="" /><output type="collection" name="Result" friendlyname="Result" stage="ResultCollection" /></outputs><onsuccess>ecaab35f-a7ed-40ff-8625-58492e2c532c</onsuccess><resource object="Utility - JSON" action="JsonPath - Return Collection" /></stage><stage stageid="ecaab35f-a7ed-40ff-8625-58492e2c532c" name="Utility - JSON::Collection to JSON" type="Action"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit onsuccess="true" /><display x="15" y="195" /><inputs><input type="collection" name="Data" friendlyname="Data" expr="[ResultCollection]" /></inputs><outputs><output type="text" name="JSON" friendlyname="JSON" stage="ContentEmbedding" /></outputs><onsuccess>cd0b4b01-ea9f-4fc0-a276-0cdeb956e139</onsuccess><resource object="Utility - JSON" action="Collection to JSON" /></stage><stage stageid="a6555365-b21a-48ae-aa45-43d089037e96" name="ContentEmbedding" type="Data"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit /><display x="-255" y="225" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b8ba31b-fa16-4738-9628-f84143439869" name="Input Data Items" type="Block"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit /><display x="-300" y="75" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="26f50e09-dfba-4d22-9051-dea3f93e0a6e" name="Output Data Items" type="Block"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit /><display x="-300" y="150" w="210" h="105" /><font family="Segoe UI" size="10" style="Regular" color="993300" /></stage><stage stageid="860bd11e-8e05-4e05-97cc-72a78d8b1be5" name="Local Data Items" type="Block"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><loginhibit /><display x="-300" y="-45" w="210" h="105" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="83e83b62-8d5b-4268-a3e0-ba2e18532a01" name="ResultCollection" type="Collection"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><display x="-255" y="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="76dcdad8-57cd-4cc0-b7f5-84a6827b883e" name="Global" type="Block"><loginhibit onsuccess="true" /><display x="120" y="0" w="345" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="88a02170-0a4e-4599-8ded-75012241809f" name="BaseURL" type="Data"><loginhibit /><display x="300" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">https://generativelanguage.googleapis.com/v1</initialvalue><alwaysinit /></stage><stage stageid="cec85aeb-18b2-40c3-8fff-3717daf0a6aa" name="HTTP 2XX?" type="Decision"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><display x="15" y="75" /><decision expression="InStr([Status Code], &quot;2&quot;)&gt;0" /><ontrue>1ca35014-7edf-482c-9b62-7db3f26ef9ca</ontrue><onfalse>74ec7742-eddf-44c8-a119-a22a9ee9d095</onfalse></stage><stage stageid="74ec7742-eddf-44c8-a119-a22a9ee9d095" name="HTTP Exception" type="Exception"><subsheetid>00880f6b-7ba3-4879-bd39-d46829283e74</subsheetid><display x="75" y="75" w="30" h="30" /><exception localized="yes" type="System Exception" detail="&quot;Failed to Call Gemini API (models.list) &quot; &amp; [Status Code]&amp;&quot; &quot;&amp;[Result]" /></stage><stage stageid="f23ba813-0cec-4cc9-bb85-6f8dfc7241ae" name="HTTP 2XX?" type="Decision"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><display x="15" y="75" /><decision expression="InStr([Status Code], &quot;2&quot;)&gt;0" /><ontrue>6f06d547-1fb5-40da-b7fa-6daabc450fbd</ontrue><onfalse>6b58e6e8-ab3b-4439-936c-2fc875e5e53c</onfalse></stage><stage stageid="6b58e6e8-ab3b-4439-936c-2fc875e5e53c" name="HTTP Exception" type="Exception"><subsheetid>bcbabda0-e174-4fbe-84f0-f44fbc53b09b</subsheetid><display x="75" y="75" w="30" h="30" /><exception localized="yes" type="System Exception" detail="&quot;Failed to Call Gemini API (models.embedContent) &quot; &amp; [Status Code]&amp;&quot; &quot;&amp;[Result]" /></stage><stage stageid="28e6d1b9-0bd2-46cf-8085-a6048a7cf4c0" name="HTTP 2XX?" type="Decision"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><display x="15" y="75" /><decision expression="InStr([Status Code], &quot;2&quot;)&gt;0" /><ontrue>89a1b289-d5bc-4332-bfc7-4ad4f143a704</ontrue><onfalse>221b28d2-29af-4ab3-9a1c-ce5c5b0d0185</onfalse></stage><stage stageid="221b28d2-29af-4ab3-9a1c-ce5c5b0d0185" name="HTTP Exception" type="Exception"><subsheetid>798e3387-0d3e-49f8-8ab0-7a4928fcdc29</subsheetid><display x="75" y="75" w="30" h="30" /><exception localized="yes" type="System Exception" detail="&quot;Failed to Call Gemini API (models.generateContent) &quot; &amp; [Status Code]&amp;&quot; &quot;&amp;[Result]" /></stage><stage stageid="81f9fe94-428b-4dd9-8298-4cbcb5677ddd" name="models.countTokens" type="SubSheetInfo"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><narrative>Runs a model's tokenizer on input content and returns the token count</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2d6daeed-61f4-4bf4-a6de-e3a6641dbf5f" name="Start" type="Start"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="password" name="key" narrative="Google API Key" stage="URL Params.key" /><input type="text" name="model" narrative="Name of the model" stage="URL Params.model" /><input type="text" name="prompt" narrative="Text string for token count" stage="Body Params.body" /></inputs><onsuccess>1a213e20-52d7-4711-a200-d7868639b2e0</onsuccess></stage><stage stageid="9af3058a-62ab-49bf-92cc-091e31ed00b1" name="AddressURL" type="Data"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><loginhibit /><display x="-255" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">/models/{model}:countTokens?key={key}
</initialvalue><private /><alwaysinit /></stage><stage stageid="c9f8761a-5696-4e2d-aa66-d816527e08d7" name="Utility - HTTP::HTTP Request" type="Action"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /><inputs><input type="text" name="Address URL" friendlyname="Address URL" narrative="The URL to send the HTTP data to" expr="[AddressURL]" /><input type="text" name="Body" friendlyname="Body" narrative="The body text of the HTTP request" expr="[Body Params.body]" /><input type="flag" name="Use Proxy" friendlyname="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" friendlyname="Content Type" narrative="The content type of the HTTP request." expr="[Content Type]" /><input type="text" name="Method" friendlyname="Method" narrative="The method of the HTTP request." expr="[Method]" /><input type="text" name="Proxy URL" friendlyname="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" friendlyname="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" friendlyname="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" friendlyname="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" friendlyname="Accept" narrative="OPTIONAL: Accept" expr="&quot;application/json&quot;" /><input type="text" name="Username" friendlyname="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" friendlyname="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" friendlyname="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /><input type="flag" name="Force Pre Authorization" friendlyname="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the 'Authorization' header for HTTP Basic." expr="" /><input type="flag" name="File URL" friendlyname="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" expr="" /><input type="flag" name="Use Bearer Token" friendlyname="Use Bearer Token" expr="" /><input type="text" name="Bearer Token" friendlyname="Bearer Token" narrative="OPTIONAL: If you 'Use Bearer Token' is set to True, this must be set to the value of the actual Bearer Token." expr="" /><input type="flag" name="Allow Auto Redirects" friendlyname="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." expr="" /><input type="number" name="Maximum Redirects" friendlyname="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." expr="" /><input type="number" name="Request Timeout" friendlyname="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." expr="" /></inputs><outputs><output type="text" name="Result" friendlyname="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" friendlyname="Headers as Json" narrative="The returned headers response as Json" stage="Headers as Json" /><output type="number" name="Status Code" friendlyname="Status Code" narrative="The HTTP status code associated with the request." stage="Status Code" /></outputs><onsuccess>6b6fa179-f997-416a-b0f2-8e71733b1b21</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="cc72dffa-1db1-4011-96b5-07ef3983e221" name="Result" type="Data"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><display x="-255" y="180" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="252e5c03-2e71-4ed0-89ec-0a03a029df58" name="Headers as Json" type="Data"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><display x="-135" y="180" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f7285a36-b5eb-4975-917e-ba8542c216de" name="Status Code" type="Data"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><display x="-195" y="180" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e97898a8-6c2b-4c5c-9cb9-89305196e24f" name="URL Params" type="Collection"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><loginhibit /><display x="-255" y="105" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="key" type="password" /><field name="model" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="key" type="password" encvalue="aCpGKl8qTyp6KlgqQypZKkcqBCppKkUqRypHKkUqRCoEKnkqTypJKl8qWCpDKl4qUyoEKnkqQypHKloqRipPKmUqSCpMKl8qWSpJKksqXipFKlgq&lt;0b7597ab-1cb3-41c5-9c6a-d7a22ea76ddd&gt;" /><field name="model" type="text" value="" /></row></initialvalue></stage><stage stageid="0d1918d4-2748-4099-bdb3-277410fa186b" name="Body Params" type="Collection"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><loginhibit /><display x="-180" y="105" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="body" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="body" type="text" value="" /></row></initialvalue></stage><stage stageid="1a213e20-52d7-4711-a200-d7868639b2e0" name="Internal - Set URL Params" type="SubSheet"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="collection" name="URL Params" friendlyname="URL Params" expr="[URL Params]" /><input type="text" name="AddressURL" friendlyname="AddressURL" expr="[BaseURL]&amp;[AddressURL]" /></inputs><outputs><output type="text" name="AddressURL" friendlyname="AddressURL" stage="AddressURL" /></outputs><onsuccess>c9f8761a-5696-4e2d-aa66-d816527e08d7</onsuccess><processid>9df993fc-d87e-47df-b2b0-4e0af504f95c</processid></stage><stage stageid="7c24b01e-6693-4efa-a0bc-e3b04244d13a" name="Method" type="Data"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><loginhibit /><display x="-195" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">POST</initialvalue><private /><alwaysinit /></stage><stage stageid="8850839d-0d27-475e-abcf-34c07c41266f" name="Content Type" type="Data"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><loginhibit /><display x="-135" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">application/json</initialvalue><private /><alwaysinit /></stage><stage stageid="4da56e7f-28e9-430d-8b8b-045467e21d3e" name="Input Data Items" type="Block"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><loginhibit /><display x="-300" y="75" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="6ed74c0c-d5d6-433d-af3d-2f808fd0bb75" name="Output Data Items" type="Block"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><loginhibit /><display x="-300" y="150" w="210" h="105" /><font family="Segoe UI" size="10" style="Regular" color="993300" /></stage><stage stageid="2663f76a-6e21-4768-ba25-47e4e0539a5c" name="Local Data Items" type="Block"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><loginhibit /><display x="-300" y="-45" w="210" h="105" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="fc6f33a8-29b8-4cbd-a53b-04682eb957de" name="ResultCollection" type="Collection"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><display x="-255" y="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6b6fa179-f997-416a-b0f2-8e71733b1b21" name="HTTP 2XX?" type="Decision"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><display x="15" y="75" /><decision expression="InStr([Status Code], &quot;2&quot;)&gt;0" /><ontrue>80bcd1fb-5b9f-41e4-a48d-83fe2b23b239</ontrue><onfalse>d302e321-606e-42ea-b767-93469992d5da</onfalse></stage><stage stageid="d302e321-606e-42ea-b767-93469992d5da" name="HTTP Exception" type="Exception"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><display x="75" y="75" w="30" h="30" /><exception localized="yes" type="System Exception" detail="&quot;Failed to Call Gemini API (models.embedContent) &quot; &amp; [Status Code]&amp;&quot; &quot;&amp;[Result]" /></stage><stage stageid="231b64a8-cbdc-4c8a-84d3-6eadf0769e7c" name="End" type="End"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><loginhibit /><display x="15" y="195" /><outputs><output type="text" name="Result" narrative="HTTP Response from the API call" stage="Result" /><output type="number" name="Status Code" narrative="HTTP Status code from the API call" stage="Status Code" /><output type="text" name="Headers as Json" narrative="HTTP Headers as returned from the API call" stage="Headers as Json" /><output type="number" name="TokenCount" narrative="Number of tokens" stage="TokenCount" /></outputs></stage><stage stageid="80bcd1fb-5b9f-41e4-a48d-83fe2b23b239" name="Utility - JSON::JsonPath" type="Action"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><loginhibit onsuccess="true" /><display x="15" y="135" /><inputs><input type="text" name="Json" friendlyname="Json" expr="[Result]" /><input type="text" name="JsonPath" friendlyname="JsonPath" expr="&quot;totalTokens&quot;" /></inputs><outputs><output type="number" name="NumericResult" friendlyname="NumericResult" stage="TokenCount" /><output type="text" name="TextResult" friendlyname="TextResult" stage="" /><output type="text" name="ErrorMessage" friendlyname="ErrorMessage" stage="" /></outputs><onsuccess>231b64a8-cbdc-4c8a-84d3-6eadf0769e7c</onsuccess><resource object="Utility - JSON" action="JsonPath" /></stage><stage stageid="8a28f21d-7893-4d1e-97f2-5fc447f8a4fb" name="TokenCount" type="Data"><subsheetid>9bd04e2b-708f-488f-8a42-2afa2150eed7</subsheetid><display x="-255" y="225" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="78a79fff-6d37-46f6-b004-31bfedac5faa" name="model.batchEmbedContents" type="SubSheetInfo"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><narrative>Generates multiple embeddings from the model given input text in a synchronous call</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ddac0d8f-41a8-4757-82d0-552467662275" name="End" type="End"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="15" y="510" /><outputs><output type="text" name="Result" narrative="HTTP Response from the API call" stage="Result" /><output type="number" name="Status Code" narrative="HTTP Status code from the API call" stage="Status Code" /><output type="text" name="Headers as Json" narrative="HTTP Headers as returned from the API call" stage="Headers as Json" /><output type="collection" name="ContentEmbedding" narrative="The embedding values" stage="ContentEmbedding" /></outputs></stage><stage stageid="37e53f1b-a2c2-4fc2-906f-04cfebb150f9" name="AddressURL" type="Data"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="-255" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">/models/{model}:batchEmbedContents?key={key}</initialvalue><private /><alwaysinit /></stage><stage stageid="993c7f34-73cb-43ce-b7bd-98a5239bd731" name="Utility - HTTP::HTTP Request" type="Action"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /><inputs><input type="text" name="Address URL" friendlyname="Address URL" narrative="The URL to send the HTTP data to" expr="[AddressURL]" /><input type="text" name="Body" friendlyname="Body" narrative="The body text of the HTTP request" expr="[Body Params.body]" /><input type="flag" name="Use Proxy" friendlyname="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" friendlyname="Content Type" narrative="The content type of the HTTP request." expr="[Content Type]" /><input type="text" name="Method" friendlyname="Method" narrative="The method of the HTTP request." expr="[Method]" /><input type="text" name="Proxy URL" friendlyname="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" friendlyname="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" friendlyname="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" friendlyname="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" friendlyname="Accept" narrative="OPTIONAL: Accept" expr="&quot;application/json&quot;" /><input type="text" name="Username" friendlyname="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" friendlyname="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" friendlyname="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /><input type="flag" name="Force Pre Authorization" friendlyname="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the 'Authorization' header for HTTP Basic." expr="" /><input type="flag" name="File URL" friendlyname="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" expr="" /><input type="flag" name="Use Bearer Token" friendlyname="Use Bearer Token" expr="" /><input type="text" name="Bearer Token" friendlyname="Bearer Token" narrative="OPTIONAL: If you 'Use Bearer Token' is set to True, this must be set to the value of the actual Bearer Token." expr="" /><input type="flag" name="Allow Auto Redirects" friendlyname="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." expr="" /><input type="number" name="Maximum Redirects" friendlyname="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." expr="" /><input type="number" name="Request Timeout" friendlyname="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." expr="" /></inputs><outputs><output type="text" name="Result" friendlyname="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" friendlyname="Headers as Json" narrative="The returned headers response as Json" stage="Headers as Json" /><output type="number" name="Status Code" friendlyname="Status Code" narrative="The HTTP status code associated with the request." stage="Status Code" /></outputs><onsuccess>b93eed56-3b98-44f4-aa80-7baa2b6720cf</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="ed0dc884-e6cc-4b10-ae7a-9aebff18ffcd" name="Result" type="Data"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><display x="-255" y="180" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="837c8480-d8bd-4aa2-af32-b12e43280f93" name="Headers as Json" type="Data"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><display x="-135" y="180" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b6068e2-46c4-4c94-af13-65b1ad1ec532" name="Status Code" type="Data"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><display x="-195" y="180" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d34795c8-80ce-4840-8419-8d51f2879a6c" name="URL Params" type="Collection"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="-255" y="105" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="key" type="password" /><field name="model" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="key" type="password" encvalue="aCpGKl8qTyp6KlgqQypZKkcqBCppKkUqRypHKkUqRCoEKnkqTypJKl8qWCpDKl4qUyoEKnkqQypHKloqRipPKmUqSCpMKl8qWSpJKksqXipFKlgq&lt;0b7597ab-1cb3-41c5-9c6a-d7a22ea76ddd&gt;" /><field name="model" type="text" value="" /></row></initialvalue></stage><stage stageid="d82f5eeb-f733-4ad8-aa42-3ceff80e2606" name="Body Params" type="Collection"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="-180" y="105" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><singlerow /><field name="body" type="text" /></collectioninfo><initialvalue><singlerow /><row><field name="body" type="text" value="" /></row></initialvalue></stage><stage stageid="97a11a58-2831-4af0-8cd2-87d125c486df" name="Internal - Set URL Params" type="SubSheet"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="collection" name="URL Params" friendlyname="URL Params" expr="[URL Params]" /><input type="text" name="AddressURL" friendlyname="AddressURL" expr="[BaseURL]&amp;[AddressURL]" /></inputs><outputs><output type="text" name="AddressURL" friendlyname="AddressURL" stage="AddressURL" /></outputs><onsuccess>993c7f34-73cb-43ce-b7bd-98a5239bd731</onsuccess><processid>9df993fc-d87e-47df-b2b0-4e0af504f95c</processid></stage><stage stageid="e1e51d0d-ef03-477b-89fd-ff80c9847175" name="Method" type="Data"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="-195" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">POST</initialvalue><private /><alwaysinit /></stage><stage stageid="298d4f16-2310-4a34-b07e-2f5febca0842" name="Content Type" type="Data"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="-135" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">application/json</initialvalue><private /><alwaysinit /></stage><stage stageid="64755e14-3ee7-40e7-ac50-8e9ffb96c1bb" name="Input Data Items" type="Block"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="-300" y="75" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="c169194c-2c03-4f7a-9310-2f847c308a20" name="Output Data Items" type="Block"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="-300" y="150" w="210" h="105" /><font family="Segoe UI" size="10" style="Regular" color="993300" /></stage><stage stageid="13ed4e55-f640-4a63-a70b-d567a3503178" name="Local Data Items" type="Block"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="-300" y="-45" w="210" h="105" /><font family="Segoe UI" size="10" style="Regular" color="339966" /></stage><stage stageid="49877ca4-9a66-4273-a3bf-b09c06af536a" name="ResultCollection" type="Collection"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><display x="-255" y="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="b93eed56-3b98-44f4-aa80-7baa2b6720cf" name="HTTP 2XX?" type="Decision"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><display x="15" y="75" /><decision expression="InStr([Status Code], &quot;2&quot;)&gt;0" /><ontrue>a6d8ae8e-252c-4ed7-8e14-000fb2a8c6c7</ontrue><onfalse>5ea7e694-f2bf-4951-a7c0-984d599d510f</onfalse></stage><stage stageid="5ea7e694-f2bf-4951-a7c0-984d599d510f" name="HTTP Exception" type="Exception"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><display x="75" y="75" w="30" h="30" /><exception localized="yes" type="System Exception" detail="&quot;Failed to Call Gemini API (models.embedContent) &quot; &amp; [Status Code]&amp;&quot; &quot;&amp;[Result]" /></stage><stage stageid="18e0428a-c04a-48b4-afd5-bb47e52f37d7" name="Start" type="Start"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="password" name="key" narrative="Google API Key" stage="URL Params.key" /><input type="text" name="model" narrative="Name of the model" stage="URL Params.model" /><input type="text" name="content" narrative="Prompt for the Gemini API" stage="Body Params.body" /></inputs><onsuccess>97a11a58-2831-4af0-8cd2-87d125c486df</onsuccess></stage><stage stageid="a6d8ae8e-252c-4ed7-8e14-000fb2a8c6c7" name="Utility - JSON::JSON to Collection (skipping JArray)" type="Action"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit onsuccess="true" /><display x="15" y="135" /><inputs><input type="text" name="json" friendlyname="json" expr="[Result]" /></inputs><outputs><output type="collection" name="Result" friendlyname="Result" stage="ResultCollection" /></outputs><onsuccess>4f201338-4d01-40cf-8654-b2271b515778</onsuccess><resource object="Utility - JSON" action="JSON to Collection (skipping JArray)" /></stage><stage stageid="b7daca70-06c5-4316-b826-ba92a17fcd64" name="Utility - JSON::Collection to JSON" type="Action"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit onsuccess="true" /><display x="15" y="405" /><inputs><input type="collection" name="Data" friendlyname="Data" expr="[ResultCollection.values]" /></inputs><outputs><output type="text" name="JSON" friendlyname="JSON" stage="ContentEmbedding.embeddings" /></outputs><onsuccess>2a2f7870-dc2b-4920-8495-d1df74a5dc47</onsuccess><resource object="Utility - JSON" action="Collection to JSON" /></stage><stage stageid="4f201338-4d01-40cf-8654-b2271b515778" name="Get ResultCollection.embeddings" type="Calculation"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="15" y="180" /><onsuccess>6f43d197-3929-4b94-b4ef-a87078128784</onsuccess><calculation expression="[ResultCollection.embeddings]" stage="ResultCollection" /></stage><stage stageid="28b2999f-ba4d-473e-a075-a9f826306bc9" name="Loop ResultCollection" type="LoopStart"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="15" y="270" /><onsuccess>2e1b4797-44bc-44a3-9a4e-df06e76db142</onsuccess><groupid>d3ce0403-daed-4ab8-b025-c4caf90abdf1</groupid><looptype>ForEach</looptype><loopdata>ResultCollection</loopdata></stage><stage stageid="2a2f7870-dc2b-4920-8495-d1df74a5dc47" name="Loop ResultCollection" type="LoopEnd"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="15" y="450" /><onsuccess>ddac0d8f-41a8-4757-82d0-552467662275</onsuccess><groupid>d3ce0403-daed-4ab8-b025-c4caf90abdf1</groupid></stage><stage stageid="6f43d197-3929-4b94-b4ef-a87078128784" name="Append embedding field" type="Action"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit onsuccess="true" /><display x="15" y="225" /><inputs><input type="collection" name="Collection" friendlyname="Collection" narrative="The collection to append a field to." expr="[ResultCollection]" /><input type="text" name="Field Name" friendlyname="Field Name" narrative="The name of the new field." expr="&quot;embeddings&quot;" /><input type="text" name="Value" friendlyname="Value" narrative="The value to be put in the new field." expr="" /></inputs><outputs><output type="collection" name="Appended Collection" friendlyname="Appended Collection" narrative="The collection with field appended." stage="ResultCollection" /></outputs><onsuccess>28b2999f-ba4d-473e-a075-a9f826306bc9</onsuccess><resource object="Utility - Collection Manipulation" action="Append Field (Text)" /></stage><stage stageid="2e1b4797-44bc-44a3-9a4e-df06e76db142" name="Utility - Collection Manipulation::Rename Field" type="Action"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit onsuccess="true" /><display x="15" y="315" /><inputs><input type="text" name="Field Name" friendlyname="Field Name" narrative="The name of the existing field to rename." expr="&quot;JSON_Unnamed_Value&quot;" /><input type="collection" name="Collection In" friendlyname="Collection In" narrative="The collection to rename a field in." expr="[ResultCollection.values]" /><input type="text" name="New Name" friendlyname="New Name" narrative="The new name for the field." expr="&quot;JSON:Array&quot;" /></inputs><outputs><output type="collection" name="Collection Out" friendlyname="Collection Out" narrative="The collection with field renamed." stage="ResultCollection.values" /></outputs><onsuccess>70200fba-63d0-4c0c-b919-103632f3feee</onsuccess><resource object="Utility - Collection Manipulation" action="Rename Field" /></stage><stage stageid="4372d88d-0a55-4b7b-bca8-ddfdcd5bc660" name="ContentEmbedding" type="Collection"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit /><display x="-255" y="225" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="embeddings" type="text" /></collectioninfo></stage><stage stageid="70200fba-63d0-4c0c-b919-103632f3feee" name="Collections::Add Row" type="Action"><subsheetid>59e87229-dd4b-46dd-835a-a0e907d2d6ad</subsheetid><loginhibit onsuccess="true" /><display x="15" y="360" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;ContentEmbedding&quot;" /></inputs><onsuccess>b7daca70-06c5-4316-b826-ba92a17fcd64</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage></process></object>
        <object id="8d364ed0-afcd-4fa9-96f6-d51eec328c43" name="Google Sheets" xmlns="http://www.blueprism.co.uk/product/process"><process name="Google Sheets" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="Common actions to interact with Google Sheets. Requires a Google API Client ID and Secret for operation - these must be created as Environment Variables called &quot;Google Sheets API Client ID&quot; and &quot;Google Sheets API Client Secret&quot; respectively" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>4830b7b9-239c-4eb3-9641-2aedb0a6a111</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="35ffcfa5-a5aa-423a-b7c3-decf8e80a924" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ace7cc50-a839-43ee-9a72-6ea826f52d37" type="Normal" published="True"><name>Add Sheet</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="09e15c28-a266-45d8-807e-ccf138808c0e" type="Normal" published="True"><name>Delete Sheet</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7c2d28ea-07ba-4bc5-9de9-baf843f322c2" type="Normal" published="True"><name>Get Sheets</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ba7b3bed-1e26-41ed-9b0a-e16127a8a82f" type="Normal" published="True"><name>Get Range Values</name><view><camerax>0</camerax><cameray>90</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6c7b4fc9-2505-45dd-82fd-d938efb3776a" type="Normal" published="True"><name>Set Range Values</name><view><camerax>0</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0e35d793-2c08-4d95-9f81-6013e1ae0487" type="Normal" published="True"><name>Append Data</name><view><camerax>0</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7058171b-bc51-49d5-8a21-05afd7144b58" type="Normal" published="True"><name>Clear Range</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="731e266a-881b-44e9-a0dd-e131788e3f62" type="Normal" published="True"><name>Create Workbook</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cfac1cb7-dae8-47ff-8a2f-ef5663396f77" type="Normal" published="False"><name>Get API Tokens</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="94d15efb-9890-4cd7-b9e1-2d9c039cb66c" name="Start" type="Start"><loginhibit onsuccess="true" /><display x="15" y="-105" /><onsuccess>96ddabf9-b71f-437d-89d2-7041aa691bca</onsuccess></stage><stage stageid="96ddabf9-b71f-437d-89d2-7041aa691bca" name="End" type="End"><loginhibit onsuccess="true" /><display x="15" y="90" /></stage><stage stageid="23af3fd9-8eae-4ea0-ac92-5998a8611be3" name="Stage1" type="ProcessInfo"><loginhibit onsuccess="true" /><display x="-150" y="-45" w="180" h="150" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Google.Apis.Auth.dll</reference><reference>Google.Apis.Core.dll</reference><reference>Google.Apis.dll</reference><reference>Google.Apis.Sheets.v4.dll</reference><reference>System.Linq.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>Google.Apis.Auth.OAuth2</import><import>Google.Apis.Services</import><import>Google.Apis.Sheets.v4</import><import>Google.Apis.Sheets.v4.Data</import><import>System.Linq</import><import>System.IO</import><import>System.Threading</import><import>System.Collections.Generic</import></imports><language>csharp</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[public SheetsService GetSheetsService(string clientId, string clientSecret)
{
	var clientSecrets = new ClientSecrets
	{
		ClientId = clientId,
		ClientSecret = clientSecret
	};

	return
		new SheetsService(
			new BaseClientService.Initializer
			{
				HttpClientInitializer = 
					GoogleWebAuthorizationBroker.AuthorizeAsync(
						clientSecrets,
						new[] { SheetsService.Scope.Spreadsheets },
						"user",
						CancellationToken.None)
					.Result
			});
}]]></code></stage><stage stageid="0c0ad39a-220e-4799-b202-3e99b79a6de1" name="Clean Up" type="SubSheetInfo"><subsheetid>35ffcfa5-a5aa-423a-b7c3-decf8e80a924</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="-75" w="150" h="90" /></stage><stage stageid="086e66e0-7211-461b-80b0-0442f8ca12b4" name="Start" type="Start"><subsheetid>35ffcfa5-a5aa-423a-b7c3-decf8e80a924</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><onsuccess>f9d59825-14d3-4344-8117-d14a81ef9109</onsuccess></stage><stage stageid="f9d59825-14d3-4344-8117-d14a81ef9109" name="End" type="End"><subsheetid>35ffcfa5-a5aa-423a-b7c3-decf8e80a924</subsheetid><loginhibit onsuccess="true" /><display x="15" y="90" /></stage><stage stageid="a4862ee6-6827-4306-82bf-a2066fadb7ce" name="Get Range Values" type="SubSheetInfo"><subsheetid>ba7b3bed-1e26-41ed-9b0a-e16127a8a82f</subsheetid><loginhibit onsuccess="true" /><narrative>Gets a collection of values from a range in a Google Sheets document.</narrative><display x="-105" y="-75" w="150" h="90" /></stage><stage stageid="523ff1ca-3458-4638-b811-7765be8e7692" name="Start" type="Start"><subsheetid>ba7b3bed-1e26-41ed-9b0a-e16127a8a82f</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Sheet ID" narrative="The ID of the Sheet to retrieve values from. The Sheet ID can be found in the URL of the workbook." stage="Sheet ID" /><input type="text" name="Range" narrative="The range to get values for (e.g. &quot;Sheet1!A1:C4&quot;)." stage="Range" /><input type="flag" name="Return Formula" narrative="True if the formula of a cell should be returned; otherwise, False" stage="Return Formula" /></inputs><onsuccess>8301950d-ee5d-4d15-9353-eff7cdce3516</onsuccess></stage><stage stageid="039ab5f0-7e1e-4855-a0e8-b747925068af" name="End" type="End"><subsheetid>ba7b3bed-1e26-41ed-9b0a-e16127a8a82f</subsheetid><loginhibit onsuccess="true" /><display x="15" y="30" /><outputs><output type="collection" name="Values" narrative="The values retrieved from the given range." stage="Values" /></outputs></stage><stage stageid="29976b32-7e3e-454e-9e8a-acded4baa67a" name="Get Values" type="Code"><subsheetid>ba7b3bed-1e26-41ed-9b0a-e16127a8a82f</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-15" /><inputs><input type="text" name="Range" expr="[Range]" /><input type="text" name="SheetId" expr="[Sheet ID]" /><input type="flag" name="ReturnFormula" expr="[Return Formula]" /><input type="text" name="ClientId" expr="[Client ID]" /><input type="text" name="ClientSecret" expr="[Client Secret]" /></inputs><outputs><output type="collection" name="Values" stage="Values" /></outputs><onsuccess>039ab5f0-7e1e-4855-a0e8-b747925068af</onsuccess><code><![CDATA[var sheetsService = GetSheetsService(ClientId, ClientSecret);

var request = 
	sheetsService.Spreadsheets.Values.Get(SheetId, Range);
	
request.ValueRenderOption = 
	ReturnFormula
	? SpreadsheetsResource.ValuesResource.GetRequest.ValueRenderOptionEnum.FORMULA
	: SpreadsheetsResource.ValuesResource.GetRequest.ValueRenderOptionEnum.FORMATTEDVALUE;

var cellValues = request.Execute().Values;
	
var table = new System.Data.DataTable();

if(cellValues == null)
{
	Values = table;
	return;
}

var columns = 0;
foreach(var row in cellValues)
{
	if(row.Count > columns)
		columns = row.Count;
}
for(var i = 1; i <= columns; ++i)
{
	table.Columns.Add(i.ToString());
}
foreach(var row in cellValues)
{
	var i = 1;
	var dataRow = table.NewRow();
	foreach(var cell in row)
	{
		dataRow[i++.ToString()] = cell.ToString();
	}
	table.Rows.Add(dataRow);
}

Values = table;]]></code></stage><stage stageid="bb33e98d-f67f-43c7-9001-b1d17d228c80" name="Range" type="Data"><subsheetid>ba7b3bed-1e26-41ed-9b0a-e16127a8a82f</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea26df17-df2c-4e04-b1a3-ab8f013bf5d9" name="Values" type="Collection"><subsheetid>ba7b3bed-1e26-41ed-9b0a-e16127a8a82f</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="150" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c5016b9e-3008-43eb-b536-b0f2513043d5" name="Sheet ID" type="Data"><subsheetid>ba7b3bed-1e26-41ed-9b0a-e16127a8a82f</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3b1681cd-ea1d-42bb-8962-e9a1c3450e19" name="Set Range Values" type="SubSheetInfo"><subsheetid>6c7b4fc9-2505-45dd-82fd-d938efb3776a</subsheetid><loginhibit onsuccess="true" /><narrative>Sets a range of values in a Google Sheets document.</narrative><display x="-105" y="-75" w="150" h="90" /></stage><stage stageid="748ee915-ab31-47b4-8141-b970d0ec50dd" name="Start" type="Start"><subsheetid>6c7b4fc9-2505-45dd-82fd-d938efb3776a</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Sheet ID" narrative="The ID of the Sheet to set values in. The Sheet ID can be found in the URL of the workbook." stage="Sheet ID" /><input type="text" name="Range" narrative="The range to set values for (e.g. &quot;Sheet1!A1:C4&quot;)." stage="Range" /><input type="collection" name="Values" narrative="The values which should be inserted into the range." stage="Values" /><input type="flag" name="As User Entered" narrative="True if the data should be entered as if typed by the user; False if the data should be entered exactly as is. For example, if attempting to set the value to be a formula, set this value to True. Defaults to True." stage="As User Entered" /></inputs><onsuccess>30332a01-88a8-4f2f-b7ba-02f0e8d994c9</onsuccess></stage><stage stageid="3a14ad7a-3f67-4b58-a06d-49e159ad1c13" name="End" type="End"><subsheetid>6c7b4fc9-2505-45dd-82fd-d938efb3776a</subsheetid><loginhibit onsuccess="true" /><display x="15" y="30" /></stage><stage stageid="cf5a7dba-86bb-49d7-8f29-78c2d1f18c37" name="Set Values" type="Code"><subsheetid>6c7b4fc9-2505-45dd-82fd-d938efb3776a</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-15" /><inputs><input type="text" name="Range" expr="[Range]" /><input type="text" name="SheetId" expr="[Sheet ID]" /><input type="collection" name="Values" expr="[Values]" /><input type="flag" name="AsUserEntered" expr="[As User Entered]" /><input type="text" name="ClientId" expr="[Client ID]" /><input type="text" name="ClientSecret" expr="[Client Secret]" /></inputs><onsuccess>3a14ad7a-3f67-4b58-a06d-49e159ad1c13</onsuccess><code><![CDATA[var sheetsService = GetSheetsService(ClientId, ClientSecret);

var cells = new List<IList<object>>();

foreach(DataRow row in Values.Rows)
{
	cells.Add(new List<object>(row.ItemArray));
}

var valueRange = new ValueRange { Values = (IList<IList<object>>)cells };
var request = sheetsService.Spreadsheets.Values.Update(valueRange, SheetId, Range);

request.ValueInputOption = 
	AsUserEntered
	? SpreadsheetsResource.ValuesResource.UpdateRequest.ValueInputOptionEnum.USERENTERED
	: SpreadsheetsResource.ValuesResource.UpdateRequest.ValueInputOptionEnum.RAW;
request.Execute();
]]></code></stage><stage stageid="da525194-fe09-4449-8958-761190ca941c" name="Range" type="Data"><subsheetid>6c7b4fc9-2505-45dd-82fd-d938efb3776a</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d95543b4-db27-4c29-b033-6f2996b2ce18" name="Values" type="Collection"><subsheetid>6c7b4fc9-2505-45dd-82fd-d938efb3776a</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="75" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8922b564-7062-433c-9fed-63aa267eb78a" name="Sheet ID" type="Data"><subsheetid>6c7b4fc9-2505-45dd-82fd-d938efb3776a</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b9ae1944-3bbd-4132-9912-265a67c694c7" name="Clear Range" type="SubSheetInfo"><subsheetid>7058171b-bc51-49d5-8a21-05afd7144b58</subsheetid><loginhibit onsuccess="true" /><narrative>Clears all values in the given range.</narrative><display x="-105" y="-75" w="150" h="90" /></stage><stage stageid="897e37e8-181e-4e9d-baae-5dc701e7e89b" name="Start" type="Start"><subsheetid>7058171b-bc51-49d5-8a21-05afd7144b58</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Sheet ID" narrative="The ID of the Sheet to clear values from. The Sheet ID can be found in the URL of the workbook." stage="Sheet ID" /><input type="text" name="Range" narrative="The range to get values for (e.g. &quot;Sheet1!A1:C4&quot;)." stage="Range" /></inputs><onsuccess>c199b9ef-32dc-4769-be73-7a6dece694c4</onsuccess></stage><stage stageid="8611e42e-83d3-4d86-a91a-bbb85549fd27" name="End" type="End"><subsheetid>7058171b-bc51-49d5-8a21-05afd7144b58</subsheetid><loginhibit onsuccess="true" /><display x="15" y="30" /></stage><stage stageid="7822c7b7-fce6-4177-9e68-7ba8f322bea6" name="Clear Values" type="Code"><subsheetid>7058171b-bc51-49d5-8a21-05afd7144b58</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-15" /><inputs><input type="text" name="Range" expr="[Range]" /><input type="text" name="SheetId" expr="[Sheet ID]" /><input type="text" name="ClientId" expr="[Client ID]" /><input type="text" name="ClientSecret" expr="[Client Secret]" /></inputs><onsuccess>8611e42e-83d3-4d86-a91a-bbb85549fd27</onsuccess><code><![CDATA[var sheetsService = GetSheetsService(ClientId, ClientSecret);

sheetsService.Spreadsheets.Values.Clear(new ClearValuesRequest(), SheetId, Range).Execute();
]]></code></stage><stage stageid="e25780b9-afd2-4372-812b-f981e2138c77" name="Range" type="Data"><subsheetid>7058171b-bc51-49d5-8a21-05afd7144b58</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b174957-1668-4e45-92a1-b014ce5947c4" name="Sheet ID" type="Data"><subsheetid>7058171b-bc51-49d5-8a21-05afd7144b58</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52982153-af93-407e-bb38-0c7dd750a44b" name="Append Data" type="SubSheetInfo"><subsheetid>0e35d793-2c08-4d95-9f81-6013e1ae0487</subsheetid><loginhibit onsuccess="true" /><narrative>Appends the given data to a table found in a sheet. Tables are discovered programatically based on the given range and the data is added at the end of the table.</narrative><display x="-105" y="-75" w="150" h="90" /></stage><stage stageid="736125fc-8115-4a7f-a391-d272230aa930" name="Start" type="Start"><subsheetid>0e35d793-2c08-4d95-9f81-6013e1ae0487</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Sheet ID" narrative="The ID of the Sheet to append values to. The Sheet ID can be found in the URL of the workbook." stage="Sheet ID" /><input type="text" name="Range" narrative="The range to search for a table (e.g. &quot;Sheet1!A1:C4&quot;)." stage="Range" /><input type="collection" name="Values" narrative="The values which should be appended to the end of the table found at the range." stage="Values" /><input type="flag" name="As User Entered" narrative="True if the data should be entered as if typed by the user; False if the data should be entered exactly as is. Defaults to True." stage="As User Entered" /></inputs><onsuccess>ad7ffb28-6df0-44cc-95b9-db7e4f226bef</onsuccess></stage><stage stageid="4f66045a-efa0-4fa7-b068-e2705c7be0be" name="End" type="End"><subsheetid>0e35d793-2c08-4d95-9f81-6013e1ae0487</subsheetid><loginhibit onsuccess="true" /><display x="15" y="30" /></stage><stage stageid="eb3401c3-434c-4056-a358-4241d48ed45f" name="Append Values" type="Code"><subsheetid>0e35d793-2c08-4d95-9f81-6013e1ae0487</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-15" /><inputs><input type="text" name="Range" expr="[Range]" /><input type="text" name="SheetId" expr="[Sheet ID]" /><input type="collection" name="Values" expr="[Values]" /><input type="flag" name="AsUserEntered" expr="[As User Entered]" /><input type="text" name="ClientId" expr="[Client ID]" /><input type="text" name="ClientSecret" expr="[Client Secret]" /></inputs><onsuccess>4f66045a-efa0-4fa7-b068-e2705c7be0be</onsuccess><code><![CDATA[var sheetsService = GetSheetsService(ClientId, ClientSecret);

var cells = new List<IList<object>>();

foreach(DataRow row in Values.Rows)
{
	cells.Add(new List<object>(row.ItemArray));
}

var valueRange = new ValueRange { Values = (IList<IList<object>>)cells };
var request = sheetsService.Spreadsheets.Values.Append(valueRange, SheetId, Range);
request.ValueInputOption = 
	AsUserEntered
	? SpreadsheetsResource.ValuesResource.AppendRequest.ValueInputOptionEnum.USERENTERED
	: SpreadsheetsResource.ValuesResource.AppendRequest.ValueInputOptionEnum.RAW;
request.Execute();
]]></code></stage><stage stageid="62ced62c-c18e-46e3-825f-8b1304ac8e56" name="Create Workbook" type="SubSheetInfo"><subsheetid>731e266a-881b-44e9-a0dd-e131788e3f62</subsheetid><loginhibit onsuccess="true" /><narrative>Creates a new Google Sheets document and returns its ID.</narrative><display x="-105" y="-75" w="150" h="90" /></stage><stage stageid="661d71c9-01bd-46c4-bf2c-f0b144d0d2c0" name="Start" type="Start"><subsheetid>731e266a-881b-44e9-a0dd-e131788e3f62</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Title" narrative="The name of the Sheet file to create." stage="Title" /></inputs><onsuccess>9d83efc0-f89d-4b32-9c5b-91d1e57cb6b5</onsuccess></stage><stage stageid="fe41f416-fa00-4003-96a8-f7795c00ea59" name="End" type="End"><subsheetid>731e266a-881b-44e9-a0dd-e131788e3f62</subsheetid><loginhibit onsuccess="true" /><display x="15" y="30" /><outputs><output type="text" name="Sheet ID" narrative="The ID of the newly created document." stage="Sheet ID" /></outputs></stage><stage stageid="59306020-4c92-4784-b1fb-acf1998c3d38" name="Create Sheet" type="Code"><subsheetid>731e266a-881b-44e9-a0dd-e131788e3f62</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-15" /><inputs><input type="text" name="Title" expr="[Title]" /><input type="text" name="ClientId" expr="[Client ID]" /><input type="text" name="ClientSecret" expr="[Client Secret]" /></inputs><outputs><output type="text" name="SheetId" stage="Sheet ID" /></outputs><onsuccess>fe41f416-fa00-4003-96a8-f7795c00ea59</onsuccess><code><![CDATA[var sheetsService = GetSheetsService(ClientId, ClientSecret);

SheetId =
	sheetsService.Spreadsheets.Create(
		new Spreadsheet 
		{
			Properties = new SpreadsheetProperties
			{
				Title = Title
			}
		})
		.Execute().SpreadsheetId;
]]></code></stage><stage stageid="60ac2aa6-6c3e-4ccd-a417-8a9677b38f2c" name="Sheet ID" type="Data"><subsheetid>731e266a-881b-44e9-a0dd-e131788e3f62</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="81f8e32d-ef56-44d0-9e71-8529fde8ab8f" name="Title" type="Data"><subsheetid>731e266a-881b-44e9-a0dd-e131788e3f62</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3af2255c-c1a4-44f2-a252-127cef99ddd9" name="As User Entered" type="Data"><subsheetid>6c7b4fc9-2505-45dd-82fd-d938efb3776a</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="d5603c08-7e65-4db4-86e6-0e0e831b07d9" name="Inputs" type="Block"><subsheetid>6c7b4fc9-2505-45dd-82fd-d938efb3776a</subsheetid><loginhibit onsuccess="true" /><display x="-180" y="-15" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e85c3c2f-2e47-4788-b8fe-dc9e4a5b5340" name="Inputs" type="Block"><subsheetid>ba7b3bed-1e26-41ed-9b0a-e16127a8a82f</subsheetid><loginhibit onsuccess="true" /><display x="-180" y="-15" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="67e54db0-0d82-4b5a-95ed-2952c760b638" name="Outputs" type="Block"><subsheetid>ba7b3bed-1e26-41ed-9b0a-e16127a8a82f</subsheetid><loginhibit onsuccess="true" /><display x="-180" y="120" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0c3df123-9026-4bb8-aca2-44cf4844e0b1" name="Inputs" type="Block"><subsheetid>731e266a-881b-44e9-a0dd-e131788e3f62</subsheetid><loginhibit onsuccess="true" /><display x="-180" y="-15" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="fa1d5a65-e690-4ea1-9ae3-ae9d34af92ed" name="Outputs" type="Block"><subsheetid>731e266a-881b-44e9-a0dd-e131788e3f62</subsheetid><loginhibit onsuccess="true" /><display x="-180" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1125e9f4-8c28-4047-a113-bd6a9e7233b1" name="Inputs" type="Block"><subsheetid>7058171b-bc51-49d5-8a21-05afd7144b58</subsheetid><loginhibit onsuccess="true" /><display x="-180" y="-15" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="37f2ab19-be5c-4f8f-9334-a9ff54f6e9a4" name="Range" type="Data"><subsheetid>0e35d793-2c08-4d95-9f81-6013e1ae0487</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3298f7a6-4bd8-40b0-84e3-60fe9f48407e" name="Values" type="Collection"><subsheetid>0e35d793-2c08-4d95-9f81-6013e1ae0487</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="75" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2197341b-3427-4792-9895-37e6cc8d12e7" name="Sheet ID" type="Data"><subsheetid>0e35d793-2c08-4d95-9f81-6013e1ae0487</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1824cb9a-ed28-4aea-9b88-b65229630acb" name="As User Entered" type="Data"><subsheetid>0e35d793-2c08-4d95-9f81-6013e1ae0487</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="88b9c265-3b5c-425e-a93d-5175d99c51a4" name="Inputs" type="Block"><subsheetid>0e35d793-2c08-4d95-9f81-6013e1ae0487</subsheetid><loginhibit onsuccess="true" /><display x="-180" y="-15" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ed357660-9911-4264-bcad-f3578beb9332" name="Return Formula" type="Data"><subsheetid>ba7b3bed-1e26-41ed-9b0a-e16127a8a82f</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="6d9bd089-75f1-426d-9e77-a1af64089dfc" name="Get API Tokens" type="SubSheetInfo"><subsheetid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="-75" w="150" h="90" /></stage><stage stageid="a79ce144-43b7-4549-a789-0a7d4f60136d" name="Start" type="Start"><subsheetid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</subsheetid><loginhibit onsuccess="true" /><display x="45" y="-105" /><onsuccess>93be0572-5881-4495-b2db-9350a6a6a0fa</onsuccess></stage><stage stageid="6bbf8b3e-d2af-4665-8149-7c41f0d71ad9" name="End" type="End"><subsheetid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</subsheetid><loginhibit onsuccess="true" /><display x="45" y="90" /><outputs><output type="text" name="Client ID" stage="Google Sheets API Client ID" /><output type="text" name="Client Secret" stage="Google Sheets API Client Secret" /></outputs></stage><stage stageid="93be0572-5881-4495-b2db-9350a6a6a0fa" name="Environment Variables Valid?" type="Decision"><subsheetid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</subsheetid><display x="45" y="-45" w="90" h="30" /><decision expression="[Google Sheets API Client ID]&lt;&gt;&quot;&quot; AND [Google Sheets API Client Secret]&lt;&gt;&quot;&quot;" /><ontrue>6bbf8b3e-d2af-4665-8149-7c41f0d71ad9</ontrue><onfalse>4b77aba5-9351-47fb-b563-670886ee4da4</onfalse></stage><stage stageid="4b77aba5-9351-47fb-b563-670886ee4da4" name="Throw Exception" type="Exception"><subsheetid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</subsheetid><display x="195" y="-45" /><exception type="API Tokens Not Found" detail="&quot;The environment variables 'Google Sheets API Client ID' and 'Google Sheets API Client Secret' are either blank or cannot be found. Please check their values before trying again.&quot;" /></stage><stage stageid="9857e47d-9c65-4eba-9ee4-e12b8422f2e7" name="Verify Tokens" type="Block"><subsheetid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</subsheetid><loginhibit onsuccess="true" /><display x="-15" y="-75" w="165" h="135" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="9c671cac-f28d-416a-9733-10fb7013a9d7" name="Recover" type="Recover"><subsheetid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-15" /><onsuccess>b4ff837f-c6c4-4957-9a44-a45315df42ed</onsuccess></stage><stage stageid="4568d613-2504-49ec-afef-acc35664626b" name="Anchor1" type="Anchor"><subsheetid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</subsheetid><loginhibit onsuccess="true" /><display x="195" y="30" w="10" h="10" /><onsuccess>4b77aba5-9351-47fb-b563-670886ee4da4</onsuccess></stage><stage stageid="b4ff837f-c6c4-4957-9a44-a45315df42ed" name="Resume" type="Resume"><subsheetid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</subsheetid><loginhibit onsuccess="true" /><display x="105" y="30" /><onsuccess>4568d613-2504-49ec-afef-acc35664626b</onsuccess></stage><stage stageid="a044533c-d65e-4f96-9d14-391d9a932a94" name="Google Sheets API Client ID" type="Data"><subsheetid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</subsheetid><loginhibit onsuccess="true" /><display x="-105" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="5aa1c83d-1037-4fe1-b08f-1ac9f1fb5346" name="Environment Variables" type="Block"><subsheetid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</subsheetid><loginhibit onsuccess="true" /><display x="-180" y="-15" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8301950d-ee5d-4d15-9353-eff7cdce3516" name="Get API Tokens" type="SubSheet"><subsheetid>ba7b3bed-1e26-41ed-9b0a-e16127a8a82f</subsheetid><loginhibit /><display x="15" y="-60" /><outputs><output type="text" name="Client ID" stage="Client ID" /><output type="text" name="Client Secret" stage="Client Secret" /></outputs><onsuccess>29976b32-7e3e-454e-9e8a-acded4baa67a</onsuccess><processid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</processid></stage><stage stageid="e2642c1a-4ad5-4d25-a882-64a79dbbe447" name="Client ID" type="Data"><subsheetid>ba7b3bed-1e26-41ed-9b0a-e16127a8a82f</subsheetid><display x="-105" y="225" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97696dda-7f80-4b55-9aad-51b06a7e351d" name="Client Secret" type="Data"><subsheetid>ba7b3bed-1e26-41ed-9b0a-e16127a8a82f</subsheetid><display x="-105" y="255" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="19b890c1-a9d5-4bbf-b399-866212527fd5" name="Data" type="Block"><subsheetid>ba7b3bed-1e26-41ed-9b0a-e16127a8a82f</subsheetid><loginhibit /><display x="-180" y="195" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b5a3de76-52ad-4cf1-8981-03864811decc" name="Client ID" type="Data"><subsheetid>6c7b4fc9-2505-45dd-82fd-d938efb3776a</subsheetid><display x="-105" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c0d55e95-54e4-4aba-8f10-30dc15c481aa" name="Client Secret" type="Data"><subsheetid>6c7b4fc9-2505-45dd-82fd-d938efb3776a</subsheetid><display x="-105" y="210" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eded8684-4e0b-460f-baed-59c71705a192" name="Data" type="Block"><subsheetid>6c7b4fc9-2505-45dd-82fd-d938efb3776a</subsheetid><loginhibit /><display x="-180" y="150" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6ba1ec83-ecf1-4cf7-850d-80cd20f051d8" name="Client ID" type="Data"><subsheetid>0e35d793-2c08-4d95-9f81-6013e1ae0487</subsheetid><display x="-105" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="410a8b26-48ef-484d-80cb-4f4f73951108" name="Client Secret" type="Data"><subsheetid>0e35d793-2c08-4d95-9f81-6013e1ae0487</subsheetid><display x="-105" y="210" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b884ecb0-9f5e-457d-85e1-1b72e595e7bd" name="Data" type="Block"><subsheetid>0e35d793-2c08-4d95-9f81-6013e1ae0487</subsheetid><loginhibit /><display x="-180" y="150" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1d8fc2ca-b267-4cc6-916f-02feeef07db0" name="Client ID" type="Data"><subsheetid>7058171b-bc51-49d5-8a21-05afd7144b58</subsheetid><display x="-105" y="120" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7a151787-bdbc-4fba-b68e-d629f4ec75c0" name="Client Secret" type="Data"><subsheetid>7058171b-bc51-49d5-8a21-05afd7144b58</subsheetid><display x="-105" y="150" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c1471b3e-3ede-4777-b16f-7fbbbb2d456d" name="Data" type="Block"><subsheetid>7058171b-bc51-49d5-8a21-05afd7144b58</subsheetid><loginhibit /><display x="-180" y="90" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="3cb2ac04-c3e0-4f18-8545-bbf7d27404ca" name="Client ID" type="Data"><subsheetid>731e266a-881b-44e9-a0dd-e131788e3f62</subsheetid><display x="-105" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3e3b8fa4-68f3-4584-a884-cac988c182d4" name="Client Secret" type="Data"><subsheetid>731e266a-881b-44e9-a0dd-e131788e3f62</subsheetid><display x="-105" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="841036c4-3ad9-48fa-bedf-1b421e23fe38" name="Data" type="Block"><subsheetid>731e266a-881b-44e9-a0dd-e131788e3f62</subsheetid><loginhibit /><display x="-180" y="135" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="30332a01-88a8-4f2f-b7ba-02f0e8d994c9" name="Get API Tokens" type="SubSheet"><subsheetid>6c7b4fc9-2505-45dd-82fd-d938efb3776a</subsheetid><loginhibit /><display x="15" y="-60" /><outputs><output type="text" name="Client ID" stage="Client ID" /><output type="text" name="Client Secret" stage="Client Secret" /></outputs><onsuccess>cf5a7dba-86bb-49d7-8f29-78c2d1f18c37</onsuccess><processid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</processid></stage><stage stageid="ad7ffb28-6df0-44cc-95b9-db7e4f226bef" name="Get API Tokens" type="SubSheet"><subsheetid>0e35d793-2c08-4d95-9f81-6013e1ae0487</subsheetid><loginhibit /><display x="15" y="-60" /><outputs><output type="text" name="Client ID" stage="Client ID" /><output type="text" name="Client Secret" stage="Client Secret" /></outputs><onsuccess>eb3401c3-434c-4056-a358-4241d48ed45f</onsuccess><processid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</processid></stage><stage stageid="c199b9ef-32dc-4769-be73-7a6dece694c4" name="Get API Tokens" type="SubSheet"><subsheetid>7058171b-bc51-49d5-8a21-05afd7144b58</subsheetid><loginhibit /><display x="15" y="-60" /><outputs><output type="text" name="Client ID" stage="Client ID" /><output type="text" name="Client Secret" stage="Client Secret" /></outputs><onsuccess>7822c7b7-fce6-4177-9e68-7ba8f322bea6</onsuccess><processid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</processid></stage><stage stageid="9d83efc0-f89d-4b32-9c5b-91d1e57cb6b5" name="Get API Tokens" type="SubSheet"><subsheetid>731e266a-881b-44e9-a0dd-e131788e3f62</subsheetid><loginhibit /><display x="15" y="-60" /><outputs><output type="text" name="Client ID" stage="Client ID" /><output type="text" name="Client Secret" stage="Client Secret" /></outputs><onsuccess>59306020-4c92-4784-b1fb-acf1998c3d38</onsuccess><processid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</processid></stage><stage stageid="b59efe8f-6c74-4093-9014-51e7a2b089bb" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182
</narrative><display x="240" y="0" w="330" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="908750aa-64c0-4ac0-8752-5384ccc7d002" name="Google Sheets API Client Secret" type="Data"><subsheetid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</subsheetid><loginhibit /><display x="-105" y="45" w="150" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="0895e973-cbf5-48d0-b82c-6e443415be05" name="Add Sheet" type="SubSheetInfo"><subsheetid>ace7cc50-a839-43ee-9a72-6ea826f52d37</subsheetid><narrative>Use this action to add a new sheet to a specific spreadsheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="99f02335-3f8a-4bda-8719-33da8e567e63" name="Start" type="Start"><subsheetid>ace7cc50-a839-43ee-9a72-6ea826f52d37</subsheetid><loginhibit /><display x="-30" y="-90" /><inputs><input type="text" name="Sheet Id" narrative="The ID of the Sheet to set values in. The Sheet ID can be found in the URL of the workbook." stage="Sheet ID" /><input type="text" name="Sheet Name" narrative="The name of the new sheet." stage="Sheet Name" /></inputs><onsuccess>83e32da6-c7e8-4b23-9f41-567ca8c1ec2e</onsuccess></stage><stage stageid="9aa8f4a6-edbe-4e68-949e-69823e84d3b2" name="End" type="End"><subsheetid>ace7cc50-a839-43ee-9a72-6ea826f52d37</subsheetid><loginhibit /><display x="-30" y="45" /><outputs><output type="text" name="New Sheet ID" narrative="The ID of the new sheet that was added to the spreadsheet." stage="New Sheet ID" /><output type="text" name="New Sheet Type" narrative="The type (ex. GRID) of the new sheet." stage="New Sheet Type" /></outputs></stage><stage stageid="83e32da6-c7e8-4b23-9f41-567ca8c1ec2e" name="Get API Tokens" type="SubSheet"><subsheetid>ace7cc50-a839-43ee-9a72-6ea826f52d37</subsheetid><loginhibit /><display x="-30" y="-45" /><outputs><output type="text" name="Client ID" friendlyname="Client ID" stage="Client ID" /><output type="text" name="Client Secret" friendlyname="Client Secret" stage="Client Secret" /></outputs><onsuccess>4effc2d4-a462-4e76-9c9c-c12d89ebf34a</onsuccess><processid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</processid></stage><stage stageid="21b956be-d013-4157-8837-0e289078f5a5" name="Client ID" type="Data"><subsheetid>ace7cc50-a839-43ee-9a72-6ea826f52d37</subsheetid><display x="-195" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3dcdb6b-fcf3-4e12-aeb0-06823a150dbf" name="Client Secret" type="Data"><subsheetid>ace7cc50-a839-43ee-9a72-6ea826f52d37</subsheetid><display x="-195" y="225" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d006cf2d-1c4c-49e2-aee0-572224941583" name="Data" type="Block"><subsheetid>ace7cc50-a839-43ee-9a72-6ea826f52d37</subsheetid><loginhibit /><display x="-270" y="165" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="81f19c7b-1348-46f2-816b-0faa629c3dc5" name="Sheet ID" type="Data"><subsheetid>ace7cc50-a839-43ee-9a72-6ea826f52d37</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97a1fe5a-2e3f-4eb6-b6d2-654e25ac079d" name="Sheet Name" type="Data"><subsheetid>ace7cc50-a839-43ee-9a72-6ea826f52d37</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5a417343-7842-44e2-a508-fad397e6caf5" name="Inputs" type="Block"><subsheetid>ace7cc50-a839-43ee-9a72-6ea826f52d37</subsheetid><loginhibit onsuccess="true" /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="4effc2d4-a462-4e76-9c9c-c12d89ebf34a" name="Add Sheet" type="Code"><subsheetid>ace7cc50-a839-43ee-9a72-6ea826f52d37</subsheetid><loginhibit /><display x="-30" y="0" /><inputs><input type="text" name="sheetId" expr="[Sheet ID]" /><input type="text" name="sheetName" expr="[Sheet Name]" /><input type="text" name="clientId" expr="[Client ID]" /><input type="text" name="clientSecret" expr="[Client Secret]" /></inputs><outputs><output type="text" name="newSheetId" stage="New Sheet ID" /><output type="text" name="newSheetType" stage="New Sheet Type" /></outputs><onsuccess>9aa8f4a6-edbe-4e68-949e-69823e84d3b2</onsuccess><code><![CDATA[// Get a pointer to the Speadsheets Service.
var sheetsService = GetSheetsService(clientId, clientSecret);

// Build the AddSheet request.
var addSheetRequest = new AddSheetRequest();
addSheetRequest.Properties = new SheetProperties();
addSheetRequest.Properties.Title = sheetName;
BatchUpdateSpreadsheetRequest batchUpdateSpreadsheetRequest = new BatchUpdateSpreadsheetRequest();
batchUpdateSpreadsheetRequest.Requests = new List<Request>();
batchUpdateSpreadsheetRequest.Requests.Add(new Request
{
	AddSheet = addSheetRequest
});

var batchUpdateRequest = sheetsService.Spreadsheets.BatchUpdate(batchUpdateSpreadsheetRequest, sheetId);

BatchUpdateSpreadsheetResponse updateResp = batchUpdateRequest.Execute();

// Get the response values.
newSheetId = updateResp.Replies[0].AddSheet.Properties.SheetId.ToString();
newSheetType = updateResp.Replies[0].AddSheet.Properties.SheetType;]]></code></stage><stage stageid="26f0fd98-2798-40c2-a831-23ab604faeb1" name="New Sheet ID" type="Data"><subsheetid>ace7cc50-a839-43ee-9a72-6ea826f52d37</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="757fcb08-0db5-400e-ba0e-f3e9a003013d" name="New Sheet Type" type="Data"><subsheetid>ace7cc50-a839-43ee-9a72-6ea826f52d37</subsheetid><display x="-195" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9e558c4-18b1-48eb-8875-a82c95a1fd23" name="Output" type="Block"><subsheetid>ace7cc50-a839-43ee-9a72-6ea826f52d37</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="634dba2a-6fe1-4dbd-82a2-1a6e1be6518b" name="Delete Sheet" type="SubSheetInfo"><subsheetid>09e15c28-a266-45d8-807e-ccf138808c0e</subsheetid><narrative>Use this action to delete a sheet from a specific spreadsheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="856876d2-04a7-4ece-9047-105df51d3b02" name="Start" type="Start"><subsheetid>09e15c28-a266-45d8-807e-ccf138808c0e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Sheet ID" narrative="The ID of the main spreadsheet. The Sheet ID can be found in the URL of the workbook." stage="Sheet ID" /><input type="text" name="Sheet to Delete" narrative="The ID of the specific sheet within the spreadsheet that should be deleted." stage="Sheet to Delete" /></inputs><onsuccess>da55378c-0a10-4c49-baaf-3c9277d23a63</onsuccess></stage><stage stageid="51ee546b-93c2-4f4b-8b52-7ea189e5dcbf" name="End" type="End"><subsheetid>09e15c28-a266-45d8-807e-ccf138808c0e</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="da55378c-0a10-4c49-baaf-3c9277d23a63" name="Get API Tokens" type="SubSheet"><subsheetid>09e15c28-a266-45d8-807e-ccf138808c0e</subsheetid><loginhibit /><display x="15" y="-60" /><outputs><output type="text" name="Client ID" friendlyname="Client ID" stage="Client ID" /><output type="text" name="Client Secret" friendlyname="Client Secret" stage="Client Secret" /></outputs><onsuccess>3c22aac3-7add-4720-92c2-5c0ac84caf17</onsuccess><processid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</processid></stage><stage stageid="3c22aac3-7add-4720-92c2-5c0ac84caf17" name="Delete Sheet" type="Code"><subsheetid>09e15c28-a266-45d8-807e-ccf138808c0e</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="sheetId" expr="[Sheet ID]" /><input type="text" name="sheettodelete" expr="[Sheet to Delete]" /><input type="text" name="clientId" expr="[Client ID]" /><input type="text" name="clientSecret" expr="[Client Secret]" /></inputs><onsuccess>51ee546b-93c2-4f4b-8b52-7ea189e5dcbf</onsuccess><code><![CDATA[// Get a pointer to the Speadsheets Service.
var sheetsService = GetSheetsService(clientId, clientSecret);

// Build the DeleteSheetRequest object.
var delSheetRequest = new DeleteSheetRequest();
delSheetRequest.SheetId = Int32.Parse(sheettodelete);
BatchUpdateSpreadsheetRequest batchUpdateSpreadsheetRequest = new BatchUpdateSpreadsheetRequest();
batchUpdateSpreadsheetRequest.Requests = new List<Request>();
batchUpdateSpreadsheetRequest.Requests.Add(new Request
{
	DeleteSheet = delSheetRequest
});

var batchUpdateRequest = sheetsService.Spreadsheets.BatchUpdate(batchUpdateSpreadsheetRequest, sheetId);

BatchUpdateSpreadsheetResponse updateResp = batchUpdateRequest.Execute();
]]></code></stage><stage stageid="3286bef8-ba49-40c7-b710-8f199f25ef5a" name="Sheet ID" type="Data"><subsheetid>09e15c28-a266-45d8-807e-ccf138808c0e</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="888db87f-0319-47b8-863e-0e687790d76d" name="Client ID" type="Data"><subsheetid>09e15c28-a266-45d8-807e-ccf138808c0e</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fadf7b4-c6f2-4585-ac66-73a731d73903" name="Client Secret" type="Data"><subsheetid>09e15c28-a266-45d8-807e-ccf138808c0e</subsheetid><display x="-195" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f089a35f-4f49-432f-9ea7-f61987a1f1c0" name="Input" type="Block"><subsheetid>09e15c28-a266-45d8-807e-ccf138808c0e</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f6af174c-1a2d-4f68-9675-a3de90de7e3a" name="Data" type="Block"><subsheetid>09e15c28-a266-45d8-807e-ccf138808c0e</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b7b5241c-1edf-4dcc-9991-c68a2e1d01c0" name="Sheet to Delete" type="Data"><subsheetid>09e15c28-a266-45d8-807e-ccf138808c0e</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3f135b96-0fb2-4ace-94e5-229a1fc52889" name="Get Sheets" type="SubSheetInfo"><subsheetid>7c2d28ea-07ba-4bc5-9de9-baf843f322c2</subsheetid><narrative>Use this action to get a Collection of information about the individual sheets in the specified spreadsheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="059cef07-3f77-45b2-8f98-69d654eb5f65" name="Start" type="Start"><subsheetid>7c2d28ea-07ba-4bc5-9de9-baf843f322c2</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Sheet Id" narrative="The ID of the main spreadsheet. The Sheet ID can be found in the URL of the workbook." stage="Sheet Id" /></inputs><onsuccess>67cc2929-91e0-4da9-a179-400ae9818b7e</onsuccess></stage><stage stageid="0aa7d739-e97c-42d5-8e0b-03af36fe5616" name="End" type="End"><subsheetid>7c2d28ea-07ba-4bc5-9de9-baf843f322c2</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="collection" name="Sheets" narrative="A Collection containing information about each sheet in the specified spreadsheet." stage="Sheets" /></outputs></stage><stage stageid="46dfc3ea-76ec-4e78-944a-85ad787bce54" name="Sheet Id" type="Data"><subsheetid>7c2d28ea-07ba-4bc5-9de9-baf843f322c2</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="67cc2929-91e0-4da9-a179-400ae9818b7e" name="Get API Tokens" type="SubSheet"><subsheetid>7c2d28ea-07ba-4bc5-9de9-baf843f322c2</subsheetid><loginhibit /><display x="15" y="-60" /><outputs><output type="text" name="Client ID" friendlyname="Client ID" stage="Client ID" /><output type="text" name="Client Secret" friendlyname="Client Secret" stage="Client Secret" /></outputs><onsuccess>12553173-e029-42eb-b4ad-f79f37a6c425</onsuccess><processid>cfac1cb7-dae8-47ff-8a2f-ef5663396f77</processid></stage><stage stageid="0d4ae8f3-f70c-4b1f-88fa-3aac0b0323ec" name="Client ID" type="Data"><subsheetid>7c2d28ea-07ba-4bc5-9de9-baf843f322c2</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8793fcb9-8d89-4c68-b131-1796823e24e9" name="Client Secret" type="Data"><subsheetid>7c2d28ea-07ba-4bc5-9de9-baf843f322c2</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ca9a4122-6f5d-4be4-9f6e-9f05763aa2b0" name="Data" type="Block"><subsheetid>7c2d28ea-07ba-4bc5-9de9-baf843f322c2</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="612ea813-e506-49a8-909b-cf05a9ad08e1" name="Input" type="Block"><subsheetid>7c2d28ea-07ba-4bc5-9de9-baf843f322c2</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="12553173-e029-42eb-b4ad-f79f37a6c425" name="Get Sheets" type="Code"><subsheetid>7c2d28ea-07ba-4bc5-9de9-baf843f322c2</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="sheetId" expr="[Sheet Id]" /><input type="text" name="clientId" expr="[Client ID]" /><input type="text" name="clientSecret" expr="[Client Secret]" /></inputs><outputs><output type="collection" name="sheets" stage="Sheets" /></outputs><onsuccess>0aa7d739-e97c-42d5-8e0b-03af36fe5616</onsuccess><code><![CDATA[// Get a pointer to the Speadsheets Service.
var sheetsService = GetSheetsService(clientId, clientSecret);

// Get the master spreadsheet object.
SpreadsheetsResource.GetRequest request = sheetsService.Spreadsheets.Get(sheetId);
Spreadsheet mainSpreadsheet = request.Execute();

// Define the return Collection.
sheets = new DataTable();
sheets.Columns.Add("ID", typeof(int));
sheets.Columns.Add("Index", typeof(int));
sheets.Columns.Add("Title", typeof(string));
sheets.Columns.Add("Sheet Type", typeof(string));

// Populate the Collection.
foreach (Sheet sheet in mainSpreadsheet.Sheets)
{
	sheets.Rows.Add(sheet.Properties.SheetId, sheet.Properties.Index, sheet.Properties.Title, sheet.Properties.SheetType);
}
]]></code></stage><stage stageid="9e568b7d-e34c-435d-87a3-b4e32286e33b" name="Sheets" type="Collection"><subsheetid>7c2d28ea-07ba-4bc5-9de9-baf843f322c2</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3d87784f-0567-4086-9774-30b0005a37de" name="Output" type="Block"><subsheetid>7c2d28ea-07ba-4bc5-9de9-baf843f322c2</subsheetid><loginhibit /><display x="-270" y="135" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2c8840f4-2080-4dc6-8ffc-6617f784a1d6" name="Note1" type="Note"><loginhibit /><narrative>Version 10.0</narrative><display x="15" y="-150" w="90" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage></process></object>
        <object id="3d28aa56-ae5c-4236-b745-885fa6cfa1cc" name="Hugging Face" xmlns="http://www.blueprism.co.uk/product/process"><process name="Hugging Face" version="1.0" bpversion="7.4.1.15931" narrative="Interact with the Hugging Face Inference API to leverage AI models." byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Foreground"><appdef><element name="Application Root"><id>932ba3f2-bdf5-4571-b5d1-87cd502a379e</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>27</camerax><cameray>-51</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="74dc3bee-09f4-49a1-8bac-0c9c0b6cff1a" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>-26</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d75bac3c-4e8d-454a-9146-c86514bda7d0" type="Normal" published="True"><name>NLP: Fill Mask</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="06c989b9-8fc4-45e4-8d66-d0b9092df81d" type="Normal" published="True"><name>NLP: Summarization</name><view><camerax>0</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3b51863d-fa74-4005-90fd-1220d47dae73" type="Normal" published="True"><name>NLP: Question Answering</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1100021c-365a-48b1-89a4-7e2f4f21ea41" type="Normal" published="True"><name>NLP: Table Question Answering</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5147773b-8f64-4d59-a9b2-ade9b6b839d9" type="Normal" published="True"><name>NLP: Sentence Similarity</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="47b3ef3e-a572-48d6-a420-281c8ea0530a" type="Normal" published="True"><name>NLP: Text Classification</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7bc71905-6002-4fbb-aa8b-d81db901a035" type="Normal" published="True"><name>NLP: Text Generation</name><view><camerax>-26</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9466c57d-7239-4cfd-b27b-d06ed4860c21" type="Normal" published="True"><name>NLP: Token Classification</name><view><camerax>27</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3be60158-7103-4593-98a7-5803f3ca57c0" type="Normal" published="True"><name>NLP: Translation</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0104a53d-e317-4cf3-a407-3fe4575ce67d" type="Normal" published="True"><name>NLP: Zero-Shot Classification</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d9d8c152-d9b9-49a7-9181-c1e826c119b9" type="Normal" published="False"><name>NLP: Conversational</name><view><camerax>27</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67156ffe-a861-4ddd-8e93-deec5195d6ed" type="Normal" published="True"><name>NLP: Feature Extraction</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c4fec47e-2a48-42d5-afaa-bfdefdd35fc6" type="Normal" published="True"><name>Audio: Automatic Speech Recognition</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5b70b8a8-49e7-41ee-8122-90ec54811216" type="Normal" published="True"><name>Audio: Classification</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c6ecc022-cef9-47c0-adb5-36576a714b71" type="Normal" published="True"><name>Computer Vision: Image Classification</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="10f4ff07-12bc-47c7-9a5b-81cf86a63fa9" type="Normal" published="True"><name>Computer Vision: Object Detection</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7daf2cf2-954d-47d1-a6a7-a8ce487bb3a9" type="Normal" published="True"><name>Computer Vision: Image Segmentation</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="06d396cf-9c3d-4aef-bbb5-80316cd8ff9a" name="Start" type="Start"><loginhibit /><display x="-120" y="-150" /><onsuccess>7dfc7237-29e5-42bb-a631-18b9e782e410</onsuccess></stage><stage stageid="7dfc7237-29e5-42bb-a631-18b9e782e410" name="End" type="End"><loginhibit /><display x="-120" y="-60" /></stage><stage stageid="a97d11b5-dd19-4eb3-b0b3-ed65ae9c5f8d" name="Stage1" type="ProcessInfo"><display x="-240" y="-105" w="150" h="120" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Collections.dll</reference><reference>Newtonsoft.Json.dll</reference><reference>System.Net.dll</reference><reference>System.Net.Http.dll</reference></references><imports><import>System</import><import>System.Collections.Generic</import><import>Newtonsoft.Json</import><import>System.Net</import><import>System.Net.Http</import><import>System.Net.Http.Headers</import><import>System.IO</import><import>System.Data</import><import>System.Text</import></imports><language>csharp</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[//************\\
//*  MODELS  *\\
//************\\

internal class ApiResponse
{
	internal bool Success { get; set; }
	internal string Status { get; set; }
	internal string Content { get; set; }
	internal DataTable Headers { get; set; }
	internal string Error { get; set; }
	internal string Request { get; set; }
	
	internal ApiResponse()
	{
		Success = false;
		Status = string.Empty;
		Content = string.Empty;
		Error = string.Empty;
		Request = string.Empty;
		Headers = new DataTable();
		Headers.Columns.Add("Header", typeof(string));
		Headers.Columns.Add("Value", typeof(string));
	}
}

// OPTIONS
internal class Options
{
	[JsonProperty("use_cache")]
	internal bool UseCache { get; set; }
	[JsonProperty("wait_for_model")]
	internal bool WaitForModel { get; set; }
	
	internal Options()
	{
		UseCache = true;
		WaitForModel = false;
	}
}

// NLP: FILL MASK
internal class FillMask
{
	[JsonProperty("inputs")]
	internal string Inputs { get; set; }
	[JsonProperty("options")]
	internal Options Options { get; set; }
	
	internal FillMask()
	{
		Options = new Options();
	}
}

// NLP: SUMMARIZE
internal class Summarize
{
		
	[JsonProperty("inputs")]
	internal string Inputs { get; set; }
	[JsonProperty("parameters")]
	internal SummarizeParameters Parameters { get; set; }
	[JsonProperty("options")]
	internal Options Options { get; set; }
	
	internal Summarize()
	{
		Parameters = new SummarizeParameters();
		Options = new Options();
	}
}

internal class SummarizeParameters
{
	[JsonProperty("min_length")]
	internal int? MinLength { get; set; }	
	[JsonProperty("max_length")]
	internal int? MaxLength { get; set; }	
	[JsonProperty("top_k")]
	internal int? TopK { get; set; }	
	[JsonProperty("top_p")]
	internal decimal? TopP { get; set; }	
	[JsonProperty("temperature")]
	internal decimal Temperature { get; set; }
	[JsonProperty("repetition_penalty")]
	internal decimal? RepetitionPenalty { get; set; }
	[JsonProperty("max_time")]
	internal int? MaxTime { get; set; }
}

// NLP: QUESTION ANSWERING
internal class QuestionAnswering
{
	[JsonProperty("inputs")]
	internal QuestionAnsweringInputs Inputs { get; set; }
	[JsonProperty("options")]
	internal Options Options { get; set; }
	
	internal QuestionAnswering()
	{
		Inputs = new QuestionAnsweringInputs();
		Options = new Options();
	}
}

internal class  QuestionAnsweringInputs
{
	[JsonProperty("question")]
	internal string Question { get; set; }
	[JsonProperty("context")]
	internal string Context { get; set; }
}

// NLP: TABLE QUESTION ANSWERING
internal class TableQuestionAnswering
{
	[JsonProperty("inputs")]
	internal TableQuestionAnsweringInputs Inputs { get; set; }
	[JsonProperty("options")]
	internal Options Options { get; set; }
	
	internal TableQuestionAnswering()
	{
		Inputs = new TableQuestionAnsweringInputs();
		Options = new Options();
	}
}

internal class TableQuestionAnsweringInputs
{
	[JsonProperty("query")]
	internal string Query { get; set; }
	[JsonProperty("table")]
	internal string Table { get; set; }
}

internal class TableEntry
{
	internal string Header { get; set; }
	internal List<string> Values { get; set; }

	internal TableEntry()
	{
		Values = new List<string>();
	}
}

// NLP: SENTENCE SIMILARITY
internal class SentenceSimilarity
{
	[JsonProperty("inputs")]
	internal SentenceSimilarityInputs Inputs { get; set; }
	[JsonProperty("options")]
	internal Options Options { get; set; }

	internal SentenceSimilarity()
	{
		Inputs = new SentenceSimilarityInputs();
		Options = new Options();
	}
}

internal class SentenceSimilarityInputs 
{
	[JsonProperty("source_sentence")]
	internal string SourceSentence { get; set; }
	[JsonProperty("sentences")]
	internal List<string> Sentences { get; set; }

	internal SentenceSimilarityInputs()
	{
		Sentences = new List<string>();
	}
}

// NLP: TEXT CLASSIFICATION
internal class TextClassification
{
	[JsonProperty("inputs")]
	internal string Inputs { get; set; }
	[JsonProperty("options")]
	internal Options Options { get; set; }
	
	internal TextClassification()
	{
		Options = new Options();
	}
}

// NLP: TEXT GENERATION
internal class TextGeneration
{
	[JsonProperty("inputs")]
	internal string Inputs { get; set; }
	[JsonProperty("options")]
	internal Options Options { get; set; }
	[JsonProperty("parameters")]
	internal TextGenerationParameters Parameters { get; set; }
	
	internal TextGeneration()
	{
		Options = new Options();
		Parameters = new TextGenerationParameters();
	}
}

internal class TextGenerationParameters
{
	[JsonProperty("top_k")]
	internal int? TopK { get; set; }
	[JsonProperty("top_p")]
	internal decimal? TopP { get; set; }
	[JsonProperty("temperature")]
	internal decimal Temperature { get; set; }
	[JsonProperty("repetition_penalty")]
	internal decimal? RepetitionPenalty { get; set; }
	[JsonProperty("max_new_tokens")]
	internal int? MaximumNewTokens { get; set; }
	[JsonProperty("max_time")]
	internal int? MaxTime { get; set; }
	[JsonProperty("return_full_text")]
	internal bool ReturnFullText { get; set; }
	[JsonProperty("num_return_sequences")]
	internal int NumberOfReturnSequences { get; set; }
	[JsonProperty("do_sample")]
	internal bool UseSampling { get; set; }
}

// NLP: TOKEN CLASSIFICATION
internal class TokenClassification
{
	[JsonProperty("inputs")]
	internal string Inputs { get; set; }
	[JsonProperty("options")]
	internal Options Options { get; set; }
	[JsonProperty("parameters")]
	internal TokenClassificationParameters Parameters { get; set; }
	
	internal TokenClassification()
	{
		Options = new Options();
		Parameters = new TokenClassificationParameters();
	}
}

internal class TokenClassificationParameters
{
	[JsonProperty("aggregation_strategy")]
	internal string AggregationStrategy { get; set; }
}

// NLP: TRANSLATION
internal class Translation
{
	[JsonProperty("inputs")]
	internal string Inputs { get; set; }
	[JsonProperty("options")]
	internal Options Options { get; set; }
	
	internal Translation()
	{
		Options = new Options();
	}
}

// NLP: ZERO-SHOT CLASSIFICATION
internal class ZeroShotClassification
{
	[JsonProperty("inputs")]
	internal string Inputs { get; set; }
	[JsonProperty("options")]
	internal Options Options { get; set; }
	[JsonProperty("parameters")]
	internal ZeroShotClassificationParameters Parameters { get; set; }
	
	internal ZeroShotClassification()
	{
		Options = new Options();
		Parameters = new ZeroShotClassificationParameters();
	}
}

internal class ZeroShotClassificationParameters
{
	[JsonProperty("candidate_labels")]
	internal List<string> CandidateLabels { get; set; }
	[JsonProperty("multi-label")]
	internal bool MultiLabel { get; set; }
	
	internal ZeroShotClassificationParameters()
	{
		CandidateLabels = new List<string>();
	}
}

// NLP: CONVERSATIONAL
internal class Conversational
{
	[JsonProperty("inputs")]
	internal ConversationalInputs Inputs { get; set; }
	[JsonProperty("options")]
	internal Options Options { get; set; }
	[JsonProperty("parameters")]
	internal ConversationalParameters Parameters { get; set; }
	
	internal Conversational()
	{
		Inputs = new ConversationalInputs();
		Options = new Options();
		Parameters = new ConversationalParameters();
	}
}

internal class ConversationalInputs
{
	[JsonProperty("text")]
	internal string Text { get; set; }
	[JsonProperty("generated_responses")]
	internal List<string> GeneratedResponses { get; set; }
	[JsonProperty("past_user_inputs")]
	internal List<string> PastUserInputs { get; set; }
	
	internal ConversationalInputs()
	{
		GeneratedResponses = new List<string>();
		PastUserInputs = new List<string>();
	}
}

internal class ConversationalParameters
{
	[JsonProperty("min_length")]
	internal int? MinLength { get; set; }	
	[JsonProperty("max_length")]
	internal int? MaxLength { get; set; }	
	[JsonProperty("top_k")]
	internal int? TopK { get; set; }	
	[JsonProperty("top_p")]
	internal decimal? TopP { get; set; }	
	[JsonProperty("temperature")]
	internal decimal Temperature { get; set; }
	[JsonProperty("repetition_penalty")]
	internal decimal? RepetitionPenalty { get; set; }
	[JsonProperty("max_time")]
	internal int? MaxTime { get; set; }
}

// NLP: FEATURE EXTRACTION
internal class FeatureExtraction
{
	[JsonProperty("inputs")]
	internal string Inputs { get; set; }
	[JsonProperty("options")]
	internal Options Options { get; set; }
	
	internal FeatureExtraction()
	{
		Options = new Options();
	}
}


//*************\\
//*  METHODS  *\\
//*************\\

/// <summary>Converts an object into a JSON-formatted string</summary>
string SerializePayload(object payload)
{
	return JsonConvert.SerializeObject(payload, new JsonSerializerSettings
	{
		Formatting = Formatting.Indented,
		NullValueHandling = NullValueHandling.Ignore
	});
}

///<summary>Creates an HttpWebRequest</summary>
HttpWebRequest CreateRequest(string uri, string method, string token, decimal timeout, string contentType = "")
{
	var request = (HttpWebRequest)WebRequest.Create(uri);
	request.Method = method;
	request.Timeout = (int)timeout;
	if (!string.IsNullOrEmpty(contentType)) request.ContentType = contentType;
	request.Headers.Add(HttpRequestHeader.Authorization, $"Bearer {token}");
	return request;
}

///<summary>Sends a request and returns a response</summary>
ApiResponse SendRequest(HttpWebRequest request, bool disableRequestSend, string payload = "", bool payloadIsFile = false)
{
	var apiResponse = new ApiResponse();
	
	if (request.Method == WebRequestMethods.Http.Post ||
	    request.Method == WebRequestMethods.Http.Put)
	{
		if (payloadIsFile)
		{
			using (Stream requestStream = request.GetRequestStream())
			{
				byte[] fileBytes = File.ReadAllBytes(payload);
				requestStream.Write(fileBytes, 0, fileBytes.Length);
			}
		}
		else
		{
			using (StreamWriter writer = new StreamWriter(request.GetRequestStream()))
			{
				writer.Write(payload);
			}
		}			
	}
	
	apiResponse.Request = CreateRequestSummary(request, payload);
	
	try
	{
		if (!disableRequestSend)
		{
			using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())
			{
				apiResponse.Status = ((int)response.StatusCode).ToString();
				foreach (string key in response.Headers.Keys)
				{
					apiResponse.Headers.Rows.Add(new object[] { key, response.Headers[key] });
				}
				apiResponse.Headers.AcceptChanges();
				
				using (StreamReader reader = new StreamReader(response.GetResponseStream()))
				{
					apiResponse.Content = reader.ReadToEnd();
				}
				apiResponse.Success = true;
			}
		}
	}
	catch (WebException webEx)
	{
		apiResponse.Error = 
			$"{webEx.Status}{Environment.NewLine}" +
			$"{webEx.Response}{Environment.NewLine}" +
			$"{webEx.Message}";
		using (StreamReader reader = new StreamReader(webEx.Response.GetResponseStream()))
		{
			apiResponse.Content = reader.ReadToEnd();
		}
		var response = webEx.Response as HttpWebResponse;
		apiResponse.Status = ((int)response?.StatusCode).ToString() ?? string.Empty;
	}
	catch (Exception ex)
	{
		apiResponse.Error = ex.Message;
	}
	return apiResponse;
}

///<summary>Create a string summary representation of a request</summary>
string CreateRequestSummary(HttpWebRequest request, string payload = "")
{
	var requestSummary = new StringBuilder();
	requestSummary.Append($"{request.Method} {request.RequestUri.AbsoluteUri}{Environment.NewLine}");
	foreach (string key in request.Headers.Keys)
	{
		requestSummary.Append($"{key}: {request.Headers.Get(key)}{Environment.NewLine}");
	}
	if (!string.IsNullOrEmpty(payload)) requestSummary.Append($"{Environment.NewLine}{payload}");
	return requestSummary.ToString();
}

///<summary>Converts a DataTable into a JSON-formatted string for usage in the NLP: Table Question Answering action</summary>
string SerializeDataTable(DataTable dt, bool enforceStrings)
{
	var table = new List<TableEntry>();
	for (int i = 0; i < dt.Columns.Count; i++)
	{
		var tableEntry = new TableEntry();
		tableEntry.Header = dt.Columns[i].ColumnName;
		for (int j = 0; j < dt.Rows.Count; j++)
		{
			if (enforceStrings)
			{
				tableEntry.Values.Add($"\"{dt.Rows[j][i]}\"");
			}
			else
			{
				if (dt.Columns[i].DataType == typeof(bool) || dt.Columns[i].DataType == typeof(decimal))
				{
					tableEntry.Values.Add(dt.Rows[j][i].ToString().ToLower());
				}
				else
				{
					tableEntry.Values.Add($"\"{dt.Rows[j][i]}\"");
				}
			}					
		}
		table.Add(tableEntry);
	}
	return StringifyTransposedDataTable(table);
}

///<summary>Converts a transposed DataTable into a JSON-formatted string for usage in the NLP: Table Question Answering action</summary>
string StringifyTransposedDataTable(List<TableEntry> table)
{           
	var sb = new StringBuilder();
	sb.Append("{\n");            
	for (int i = 0; i < table.Count; i++)
	{
		sb.Append("\t\t\t\"" + table[i].Header + "\": ");
		sb.Append("[" + string.Join(", ", table[i].Values) + "]");
		if (i < table.Count - 1) sb.Append(",\n");
	}
	sb.Append("\n\t\t}");
	return sb.ToString();
}]]></code></stage><stage stageid="50b04f65-2799-461a-aaa4-ebaaf10d4a8f" name="Clean Up" type="SubSheetInfo"><subsheetid>74dc3bee-09f4-49a1-8bac-0c9c0b6cff1a</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9659a66b-224c-487c-a60a-5cee19e95c89" name="Start" type="Start"><subsheetid>74dc3bee-09f4-49a1-8bac-0c9c0b6cff1a</subsheetid><loginhibit /><display x="-75" y="-135" /><onsuccess>eef5846e-559c-4315-b4bc-35952b6afe3c</onsuccess></stage><stage stageid="eef5846e-559c-4315-b4bc-35952b6afe3c" name="End" type="End"><subsheetid>74dc3bee-09f4-49a1-8bac-0c9c0b6cff1a</subsheetid><loginhibit /><display x="-75" y="-75" /></stage><stage stageid="98369661-7d7b-4a0c-9954-a3de732630fb" name="NLP: Fill Mask" type="SubSheetInfo"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><narrative>Attempts to fill a missing token (word) in an input string.</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="5a64bc66-0219-49af-b134-96f60e3ed23e" name="Start" type="Start"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="Inputs" narrative="[Required] A string to be filled from. Must contain the [MASK] token. Check specific model card for exact name of the ask. Example: &quot;The answer to the universe is [MASK].&quot;" stage="Inputs" /><input type="flag" name="Use Cache" narrative="[Optional] There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True" stage="Use Cache" /><input type="flag" name="Wait For Model" narrative="[Optional] If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False" stage="Wait For Model" /><input type="text" name="Request Body" narrative="[Optional] A custom user-supplied JSON body for the request. If blank, the request body will be automatically created using [Inputs], [Use Cache], [Wait For Model]" stage="Request Body" /></inputs><onsuccess>f598b028-131f-415a-9b70-4ad1bf9b2056</onsuccess></stage><stage stageid="4791dad6-ab10-4930-90d1-542e793a0faf" name="End" type="End"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="eaf47f7b-ac8b-4c64-9e4f-c7b7ae2da708" name="License" type="Note"><loginhibit /><narrative>© 2024 Blue Prism Limited
Licensed under the Blue Prism Asset Terms for Modifiable Assets
https://portal.blueprism.com/agreements</narrative><display x="-180" y="-210" w="270" h="60" /></stage><stage stageid="e742d582-c7e9-48f6-a5cf-8c38316609b8" name="Version" type="Note"><loginhibit /><narrative>Build date: 2024/03/01
Version: v1.0.0
Blue Prism Version: 7.3</narrative><display x="-240" y="0" w="150" h="60" /></stage><stage stageid="90283ec5-a532-45c1-b5b8-70c509afe986" name="Global - Base URL" type="Data"><loginhibit /><narrative>Base URL for the Hugging Face Inference API</narrative><display x="30" y="-90" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">https://api-inference.huggingface.co/models/</initialvalue><alwaysinit /></stage><stage stageid="e1836a05-fd0a-4a41-a5af-01425d06dbe9" name="Global - Token" type="Data"><loginhibit /><narrative>The token for authenticating API requests</narrative><display x="255" y="-60" w="180" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><alwaysinit /></stage><stage stageid="5ab443e0-8cae-464b-aab4-79a2d045692e" name="Global - Timeout" type="Data"><loginhibit /><narrative>The number of milliseconds before a request should be timed out. Default: 30,000</narrative><display x="255" y="-30" w="180" h="30" /><datatype>number</datatype><initialvalue>30000</initialvalue><alwaysinit /></stage><stage stageid="a4a30a95-31b3-412b-b5df-dec1475e3582" name="Global - Model" type="Data"><loginhibit /><narrative>The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn</narrative><display x="255" y="-90" w="180" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="8d241506-2aaf-47df-b7a1-211470dee4a5" name="Global - Content Type" type="Data"><loginhibit /><narrative>The value for the content type header for requests</narrative><display x="30" y="-30" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">application/json</initialvalue><alwaysinit /></stage><stage stageid="a1d74d3d-fe9a-42ef-9397-3d44916b53e6" name="Global - Disable Sending of Request" type="Data"><loginhibit /><narrative>Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False</narrative><display x="255" y="0" w="180" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="06b28e08-94d1-444d-8bf3-799f74d61257" name="Global Constant Data Items" type="Block"><loginhibit /><display x="-75" y="-120" w="210" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="eb51b4f7-edc6-4cdc-87d8-989636fc914d" name="Global - Method" type="Data"><loginhibit /><narrative>The HTTP method for the request. Default: POST</narrative><display x="30" y="-60" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">POST</initialvalue><alwaysinit /></stage><stage stageid="aaf4b94b-a405-4fcb-ac95-c3d92a3442b8" name="Inputs" type="Data"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><narrative>A string to be filled from. Must contain the [MASK] token. Check specific model card for exact name of the ask. Example: "The answer to the universe is [MASK]."</narrative><display x="-285" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="265be42c-c325-4d56-ad08-aa70aa369adf" name="Use Cache" type="Data"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><narrative>There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True</narrative><display x="-285" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="27d5351d-70ac-4e78-a394-4624cfa7accf" name="Wait For Model" type="Data"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><narrative>If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False</narrative><display x="-285" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="82970b17-aec9-4a3c-91d2-08735c57aae0" name="User-Set Global Data Items" type="Block"><loginhibit /><display x="150" y="-120" w="210" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b26b2416-0304-4876-9ba3-42ee9a1abda2" name="Global Constants" type="Note"><loginhibit /><narrative>These data items should not need to be changed from their initial values.</narrative><display x="30" y="-150" w="210" h="30" /></stage><stage stageid="30d9619f-cbdb-4074-bced-e597b8f66bf3" name="User-Set Parameters" type="Note"><loginhibit /><narrative>These data items are common Start input parameters to every action in the VBO and can be configured by a user at the process level.</narrative><display x="255" y="-165" w="210" h="60" /></stage><stage stageid="2ef86118-ea7a-46ff-89a5-beb5653c4a93" name="Success" type="Data"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-120" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="40edd375-417f-4eab-9f00-0ecbc364d455" name="Status" type="Data"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-120" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="543fe06f-0cc6-4ca1-b4db-f40e98fe2837" name="Content" type="Data"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="88249e8e-26d8-4669-9fa2-17c2aa1b7de2" name="Error" type="Data"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-120" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="600c006b-04aa-45ac-ad10-df5d353492f6" name="Request" type="Data"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-120" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="33a4db5a-6388-400a-868b-1765ea66042b" name="Headers" type="Collection"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-120" y="75" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="da1f1c2d-778f-4aef-82a1-d69a38fd2570" name="Inputs" type="Block"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><display x="-360" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7c91f41e-1ce0-4c93-94a9-266f65c3420c" name="Outputs" type="Block"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><display x="-195" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="20c05d8c-42ad-4415-bc56-447b4d1ba423" name="NLP: Fill Mask - Create Request Body" type="Code"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="inputs" expr="[Inputs]" /><input type="flag" name="useCache" expr="[Use Cache]" /><input type="flag" name="waitForModel" expr="[Wait For Model]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /></outputs><onsuccess>b06e20aa-b205-443b-b2fc-f1c3266f3707</onsuccess><code><![CDATA[var fillMask = new FillMask();
fillMask.Inputs = inputs;
fillMask.Options.UseCache = useCache;
fillMask.Options.WaitForModel = waitForModel;
requestBody = SerializePayload(fillMask);]]></code></stage><stage stageid="71b519b7-dbfb-4d71-b2c9-e17ff4db53e1" name="Request Body" type="Data"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><narrative>The JSON request body</narrative><display x="-285" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="31d47f63-7f87-4428-a318-2c51ec885659" name="Locals" type="Block"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><display x="-360" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f598b028-131f-415a-9b70-4ad1bf9b2056" name="[Request Body] supplied?" type="Decision"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len([Request Body]) &gt; 0" /><ontrue>20ac9715-f182-46bd-8e97-32433836b791</ontrue><onfalse>20c05d8c-42ad-4415-bc56-447b4d1ba423</onfalse></stage><stage stageid="b06e20aa-b205-443b-b2fc-f1c3266f3707" name="NLP: Fill Mask - Send Request" type="Code"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>4791dad6-ab10-4930-90d1-542e793a0faf</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, payload);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="ed3c7781-5673-4d83-a457-1c98ebfd7c0a" name="Anchor1" type="Anchor"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><display x="75" y="30" w="10" h="10" /><onsuccess>b06e20aa-b205-443b-b2fc-f1c3266f3707</onsuccess></stage><stage stageid="20ac9715-f182-46bd-8e97-32433836b791" name="Anchor2" type="Anchor"><subsheetid>d75bac3c-4e8d-454a-9146-c86514bda7d0</subsheetid><loginhibit /><display x="75" y="-60" w="10" h="10" /><onsuccess>ed3c7781-5673-4d83-a457-1c98ebfd7c0a</onsuccess></stage><stage stageid="9f33f4e1-943b-4eb5-bee7-17ba4c2e3cfe" name="NLP: Summarization" type="SubSheetInfo"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><narrative>Summarizes longer text into shorter text. Some models have maximum input lengths.</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="ad9bd379-6ffa-48e2-920d-45dbc7ceae04" name="Start" type="Start"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="Inputs" narrative="[Required] The text to be summarized." stage="Inputs" /><input type="flag" name="Use Cache" narrative="[Optional] There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True" stage="Use Cache" /><input type="flag" name="Wait For Model" narrative="[Optional] If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False" stage="Wait For Model" /><input type="text" name="Request Body" narrative="[Optional] A custom user-supplied JSON body for the request. If blank, the request body will be automatically created using [Inputs], [Use Cache], [Wait For Model]" stage="Request Body" /><input type="number" name="Minimum Length" narrative="[Optional] Maps to min_length parameter. Integer to define the minimum length in tokens of the output summary. Default: none" stage="Minimum Length" /><input type="number" name="Maximum Length" narrative="[Optional] Maps to max_length parameter. Integer to define the maximum length in tokens of the output summary. Default: none" stage="Maximum Length" /><input type="number" name="Top K" narrative="[Optional] Maps to top_k parameter. Integer to define the top tokens considered within the sample operation to create new text. Default: None" stage="Top K" /><input type="number" name="Top P" narrative="[Optional] Maps to top_p parameter. Float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than [Top P]. Default: None" stage="Top P" /><input type="number" name="Temperature" narrative="[Optional] Maps to temperature parameter. The temperature of the sampling operation. Valid range: 0.0 to 100.0. 1 means regular sampling. 0 means always take the highest score. 0 approaches uniform probability. Default value: 1.0" stage="Temperature" /><input type="number" name="Repetition Penalty" narrative="[Optional] Maps to repetition_penalty parameter. The more a token is used within generation, the more it is penalized to not be picked in successive generation passes. Valid range: 0.0 to 100.0. Default value: None" stage="Repetition Penalty" /><input type="number" name="Max Time" narrative="[Optional] Maps to max_time parameter. The amount of time in seconds the the query should take maximum. Network can cause some overhead so it will be a soft limit. The [Timeout] value will take precedence over this value. Valid range: 0 to 120.0. Default value: None" stage="Max Time" /></inputs><onsuccess>b27a6bf2-e6dd-418f-a6ba-23b1c06a6a05</onsuccess></stage><stage stageid="7d5ba42d-2e42-467c-ad92-3e4806f27de2" name="End" type="End"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="1d01222f-1747-4dd0-9b47-babd9a135b64" name="Inputs" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>The text to be summarized.</narrative><display x="-270" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e723283a-a5f5-46a6-9e29-cd605e6bd743" name="Use Cache" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True</narrative><display x="-270" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e3754acf-c14c-4bd7-96aa-c108ebbea166" name="Wait For Model" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False</narrative><display x="-270" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="a128c0b1-c1e9-4ca1-8958-acb292027521" name="Success" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-135" y="180" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="a7091012-1c0d-4e22-9879-0b5623d88efd" name="Status" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-135" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b9dce32c-89af-434e-b75f-9dfe7a5386a7" name="Content" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-135" y="240" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8841bae6-095b-4d7f-8a5d-5b7100468080" name="Error" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-135" y="300" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2a0cc16b-0d73-49ba-bbc9-0605c57e257a" name="Request" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-135" y="330" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="afce687e-1dfe-4a27-a8a9-757ab71a638b" name="Headers" type="Collection"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-135" y="270" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="045f8a63-f7a5-4b25-ad67-f1f04130c594" name="Inputs" type="Block"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><display x="-345" y="-45" w="270" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e2e089d9-6262-413d-a269-736b1b008368" name="Outputs" type="Block"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><display x="-210" y="150" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2aed6da0-a906-410a-b8f0-909f74222cda" name="NLP: Summarize - Create Request Body" type="Code"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="inputs" expr="[Inputs]" /><input type="flag" name="useCache" expr="[Use Cache]" /><input type="flag" name="waitForModel" expr="[Wait For Model]" /><input type="number" name="minLength" expr="[Minimum Length]" /><input type="number" name="maxLength" expr="[Maximum Length]" /><input type="number" name="topK" expr="[Top K]" /><input type="number" name="topP" expr="[Top P]" /><input type="number" name="temperature" expr="[Temperature]" /><input type="number" name="repetitionPenalty" expr="[Repetition Penalty]" /><input type="number" name="maxTime" expr="[Max Time]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /></outputs><onsuccess>63f6d7d0-ec14-4e0e-81b9-1e6d0e9d8ca2</onsuccess><code><![CDATA[var summarize = new Summarize();
summarize.Inputs = inputs;

summarize.Options.UseCache = useCache;
summarize.Options.WaitForModel = waitForModel;

if (minLength > -1) summarize.Parameters.MinLength = (int)minLength;
if (maxLength > -1) summarize.Parameters.MaxLength = (int)maxLength;
if (topK > -1) summarize.Parameters.TopK = (int)topK;
if (topP > -1) summarize.Parameters.TopP = topP;
if (temperature > -1) summarize.Parameters.Temperature = temperature;
if (repetitionPenalty > -1) summarize.Parameters.RepetitionPenalty = repetitionPenalty;
if (maxTime > -1) summarize.Parameters.MaxTime = (int)maxTime;

requestBody = SerializePayload(summarize);]]></code></stage><stage stageid="f7190c35-21b5-460f-9197-dd119a9b252a" name="Request Body" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>The JSON request body</narrative><display x="-300" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="39fc083d-b36c-450e-9fb4-490041cd4005" name="Locals" type="Block"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><display x="-375" y="150" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b27a6bf2-e6dd-418f-a6ba-23b1c06a6a05" name="[Request Body] supplied?" type="Decision"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len([Request Body]) &gt; 0" /><ontrue>bc5dd798-bc45-45d5-aa02-7d5bb6e73cd9</ontrue><onfalse>2aed6da0-a906-410a-b8f0-909f74222cda</onfalse></stage><stage stageid="63f6d7d0-ec14-4e0e-81b9-1e6d0e9d8ca2" name="NLP: Summarize - Send Request" type="Code"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>7d5ba42d-2e42-467c-ad92-3e4806f27de2</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, payload);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="98b81c92-c93b-47f2-822f-8fdd73b620ef" name="Anchor1" type="Anchor"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><display x="75" y="30" w="10" h="10" /><onsuccess>63f6d7d0-ec14-4e0e-81b9-1e6d0e9d8ca2</onsuccess></stage><stage stageid="bc5dd798-bc45-45d5-aa02-7d5bb6e73cd9" name="Anchor2" type="Anchor"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><display x="75" y="-60" w="10" h="10" /><onsuccess>98b81c92-c93b-47f2-822f-8fdd73b620ef</onsuccess></stage><stage stageid="63c6f19c-0b7c-4806-aef1-7f43260ae854" name="Minimum Length" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>Maps to min_length parameter. Integer to define the minimum length in tokens of the output summary. Default: none</narrative><display x="-270" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="49ea414d-c0ac-44a2-8bbe-250c0e57a9fa" name="Maximum Length" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>Maps to max_length parameter. Integer to define the maximum length in tokens of the output summary. Default: none</narrative><display x="-270" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="2dcd7d82-9423-4c33-a404-7cd3e665a44d" name="Top K" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>Maps to top_k parameter. Integer to define the top tokens considered within the sample operation to create new text. Default: None</narrative><display x="-150" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="5f4f6122-96a5-4dbb-97bb-c7bd3b0c0ae6" name="Top P" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>Maps to top_p parameter. Float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than [Top P]. Default: None</narrative><display x="-150" y="15" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="7104142f-bdea-48af-b4e3-af29ca0958e6" name="Temperature" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>Maps to temperature parameter. The temperature of the sampling operation. Valid range: 0.0 to 100.0. 1 means regular sampling. 0 means always take the highest score. 0 approaches uniform probability. Default value: 1.0</narrative><display x="-150" y="45" w="120" h="30" /><datatype>number</datatype><initialvalue>1.0</initialvalue><private /><alwaysinit /></stage><stage stageid="bf3ea136-86af-499c-b2e6-1026b21c097e" name="Repetition Penalty" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>Maps to repetition_penalty parameter. The more a token is used within generation, the more it is penalized to not be picked in successive generation passes. Valid range: 0.0 to 100.0. Default value: None</narrative><display x="-150" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="6917c01f-c9b4-4492-8069-0469d9993164" name="Max Time" type="Data"><subsheetid>06c989b9-8fc4-45e4-8d66-d0b9092df81d</subsheetid><loginhibit /><narrative>Maps to max_time parameter. The amount of time in seconds the the query should take maximum. Network can cause some overhead so it will be a soft limit. The [Timeout] value will take precedence over this value. Valid range: 0 to 120.0. Default value: None</narrative><display x="-150" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="36974951-3bd2-44ea-9bb2-0e81fc025552" name="NLP: Question Answering" type="SubSheetInfo"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><narrative>Generates answers to questions</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="9f563d49-67d4-4820-930d-1a302fe67ca4" name="Start" type="Start"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="Question" narrative="[Required] A question to be answered" stage="Question" /><input type="text" name="Context" narrative="[Required] Supporting background information/context from that will be considered when the answer is generated." stage="Context" /><input type="flag" name="Use Cache" narrative="[Optional] There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True" stage="Use Cache" /><input type="flag" name="Wait For Model" narrative="[Optional] If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False" stage="Wait For Model" /><input type="text" name="Request Body" narrative="[Optional] A custom user-supplied JSON body for the request. If blank, the request body will be automatically created using [Inputs], [Use Cache], [Wait For Model]" stage="Request Body" /></inputs><onsuccess>6ed53cad-7a65-4011-84d4-748b51099e6f</onsuccess></stage><stage stageid="38220e65-27f7-4a7e-affb-deeadd98ea63" name="End" type="End"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="9753fa37-ebf8-4a2b-9af8-473dfff6ca84" name="Question" type="Data"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><narrative>A question to be answered</narrative><display x="-300" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="82b43a02-29e9-43a8-827e-6c12a2a2f287" name="Use Cache" type="Data"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><narrative>There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True</narrative><display x="-300" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="0afce6a5-f851-4958-ae2b-3f1baccba6ff" name="Wait For Model" type="Data"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><narrative>If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False</narrative><display x="-300" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="a7073a09-aca2-4979-a6b9-33a470dcb91b" name="Success" type="Data"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-135" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="14e50f09-965e-4cd9-a941-f1f584c33229" name="Status" type="Data"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-135" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fc723a8e-0f08-49fe-b742-3c21a898f852" name="Content" type="Data"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0694c06c-f388-4db1-b2b6-84d4659ccc37" name="Error" type="Data"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-135" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9ee1066-7cb2-45a8-bbef-acfb9589af8f" name="Request" type="Data"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-135" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4d9d6c0e-4ad5-41c6-a4d8-ed19564ab7d1" name="Headers" type="Collection"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-135" y="75" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="af81e692-3648-4217-a018-595f3b675b27" name="Inputs" type="Block"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><display x="-375" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="375530f8-1a03-4feb-9ef0-c51636e76e32" name="Outputs" type="Block"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><display x="-210" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d326841d-ca08-48a8-94d5-cdc922cf2cdf" name="NLP: Question Answering - Create Request Body" type="Code"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="question" expr="[Question]" /><input type="text" name="context" expr="[Context]" /><input type="flag" name="useCache" expr="[Use Cache]" /><input type="flag" name="waitForModel" expr="[Wait For Model]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /></outputs><onsuccess>4484d90a-ed81-43d6-855a-457540e5da84</onsuccess><code><![CDATA[var questionAnswering = new QuestionAnswering();
questionAnswering.Inputs.Question = question;
questionAnswering.Inputs.Context = context;
requestBody = SerializePayload(questionAnswering);]]></code></stage><stage stageid="3786e645-e8fb-43ee-a943-94326f77b5ef" name="Request Body" type="Data"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><narrative>The JSON request body</narrative><display x="-300" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="60886f6a-3daf-45bd-b34b-f742c5322f33" name="Locals" type="Block"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><display x="-375" y="120" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6ed53cad-7a65-4011-84d4-748b51099e6f" name="[Request Body] supplied?" type="Decision"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len([Request Body]) &gt; 0" /><ontrue>0f830408-2798-42e1-a590-7dea4adf6d37</ontrue><onfalse>d326841d-ca08-48a8-94d5-cdc922cf2cdf</onfalse></stage><stage stageid="4484d90a-ed81-43d6-855a-457540e5da84" name="NLP: Question Answering - Send Request" type="Code"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>38220e65-27f7-4a7e-affb-deeadd98ea63</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, payload);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="21fbb601-d0d3-4c28-b740-fd765b375962" name="Anchor1" type="Anchor"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><display x="75" y="30" w="10" h="10" /><onsuccess>4484d90a-ed81-43d6-855a-457540e5da84</onsuccess></stage><stage stageid="0f830408-2798-42e1-a590-7dea4adf6d37" name="Anchor2" type="Anchor"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><display x="75" y="-60" w="10" h="10" /><onsuccess>21fbb601-d0d3-4c28-b740-fd765b375962</onsuccess></stage><stage stageid="17073c70-00c9-49f6-afff-cb5e46196d2b" name="Context" type="Data"><subsheetid>3b51863d-fa74-4005-90fd-1220d47dae73</subsheetid><loginhibit /><narrative>Supporting background information/context from that will be considered when the answer is generated.</narrative><display x="-300" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc064e67-144d-489d-ab54-130a272c36bf" name="NLP: Table Question Answering" type="SubSheetInfo"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><narrative>Generates answers to questions based on tables of data</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="58e75fc7-141c-4065-8594-45c7ca11e8b8" name="Start" type="Start"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="Query" narrative="[Required] A natural language query to be answered based on data provided in [Table]" stage="Query" /><input type="collection" name="Table" narrative="[Required] A collection of data to use as a reference for answering the [Query]. This collection should be organized as columns (with names) and each row needs a value for every column. In other words, every cell in the collection must have a value. See documentation for example collection." stage="Table" /><input type="flag" name="Enforce Strings in Table" narrative="[Optional] Some models will only accept string (Text) values in the input [Table] collection. If this parameter is set to True, all values types will be turned into strings (including Flags and Numbers). If set to False, the no string conversion will occur. This will preserve the data types but may not work with models for this task. If you receive an error about encountering an unusable data type, set this parameter to True. Default value: False" stage="Enforce Strings in Table" /><input type="flag" name="Use Cache" narrative="[Optional] There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True" stage="Use Cache" /><input type="flag" name="Wait For Model" narrative="[Optional] If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False" stage="Wait For Model" /><input type="text" name="Request Body" narrative="[Optional] A custom user-supplied JSON body for the request. If blank, the request body will be automatically created using [Inputs], [Use Cache], [Wait For Model]" stage="Request Body" /></inputs><onsuccess>2275c3f5-134c-4beb-b0e7-cfe1ffcfcaf8</onsuccess></stage><stage stageid="0ce9a911-0bef-4201-937f-ca145aceae8a" name="End" type="End"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="6ced8c32-282e-4fc6-82aa-3c190172f0ac" name="Query" type="Data"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><narrative>A natural language query to be answered based on data provided in [Table]</narrative><display x="-300" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3152ced4-1aab-49ac-8b85-78bc486d1d4b" name="Use Cache" type="Data"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><narrative>There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True</narrative><display x="-300" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="fdb05a62-6ea0-4fb1-8d30-ec87e474baeb" name="Wait For Model" type="Data"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><narrative>If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False</narrative><display x="-300" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="71a200ee-726f-46e8-bbbe-920fe5b59019" name="Success" type="Data"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-135" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="055b5310-654d-408d-8496-38ff2e431fce" name="Status" type="Data"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-135" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b47bd284-bd5e-4b0e-b7b3-eedb19e265d9" name="Content" type="Data"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="76b59d38-e13f-428a-bbc5-9abb30607903" name="Error" type="Data"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-135" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7907af73-36f0-4e36-a9d2-eb424a6f4d25" name="Request" type="Data"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-135" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b520d0e0-70c4-493d-b1a0-fcb30058aff0" name="Headers" type="Collection"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-135" y="75" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8c0236f7-c3b8-4cfe-8bd7-048a273d9de5" name="Inputs" type="Block"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><display x="-375" y="-45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2f92d8c4-b0bb-46f8-a81a-aafbde6e7517" name="Outputs" type="Block"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><display x="-210" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5bef19a5-b1fb-475d-a9ce-bafbf1d34cc4" name="NLP: Table Question Answering - Create Request Body" type="Code"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="query" expr="[Query]" /><input type="collection" name="inputTable" expr="[Table]" /><input type="flag" name="enforceStrings" expr="[Enforce Strings in Table]" /><input type="flag" name="useCache" expr="[Use Cache]" /><input type="flag" name="waitForModel" expr="[Wait For Model]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /></outputs><onsuccess>4b403393-3e13-48a4-93fd-70db686f1003</onsuccess><code><![CDATA[string table = SerializeDataTable(inputTable, enforceStrings);
var sb = new StringBuilder();
sb.Append("{\n\t");
sb.Append("\"inputs\": {\n\t\t");
sb.Append("\"query\": " + "\"" + query + "\",\n\t\t");
sb.Append("\"table\": " + table);
sb.Append("\n\t}\n}");
requestBody = sb.ToString();]]></code></stage><stage stageid="6a84ecea-1cd1-4222-9d7a-704eb6d3c0ae" name="Request Body" type="Data"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><narrative>The JSON request body</narrative><display x="-300" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc263639-4e0c-4795-8e78-ba43ea5453f9" name="Locals" type="Block"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><display x="-375" y="150" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2275c3f5-134c-4beb-b0e7-cfe1ffcfcaf8" name="[Request Body] supplied?" type="Decision"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len([Request Body]) &gt; 0" /><ontrue>5685a57c-9beb-4375-8802-3d54f63959ed</ontrue><onfalse>5bef19a5-b1fb-475d-a9ce-bafbf1d34cc4</onfalse></stage><stage stageid="4b403393-3e13-48a4-93fd-70db686f1003" name="NLP: Table Question Answering - Send Request" type="Code"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>0ce9a911-0bef-4201-937f-ca145aceae8a</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, payload);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="4b92e400-5973-45f7-8187-f17ad7bc915e" name="Anchor1" type="Anchor"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><display x="75" y="30" w="10" h="10" /><onsuccess>4b403393-3e13-48a4-93fd-70db686f1003</onsuccess></stage><stage stageid="5685a57c-9beb-4375-8802-3d54f63959ed" name="Anchor2" type="Anchor"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><display x="75" y="-60" w="10" h="10" /><onsuccess>4b92e400-5973-45f7-8187-f17ad7bc915e</onsuccess></stage><stage stageid="e70d0815-f53e-4880-b1ac-7c2f60fa7934" name="Table" type="Collection"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><narrative>A collection of data to use as a reference for answering the [Query]. This collection should be organized as columns (with names) and each row needs a value for every column. In other words, every cell in the collection must have a value. See documentation for example collection.</narrative><display x="-300" y="15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="120ce4b2-fe15-49b4-8e48-2335ab45c0c8" name="Enforce Strings in Table" type="Data"><subsheetid>1100021c-365a-48b1-89a4-7e2f4f21ea41</subsheetid><loginhibit /><narrative>[Optional] Some models will only accept string (Text) values in the input [Table] collection. If this parameter is set to True, all values types will be turned into strings (including Flags and Numbers). If set to False, the no string conversion will occur. This will preserve the data types but may not work with models for this task. If you receive an error about encountering an unusable data type, set this parameter to True. Default value: False</narrative><display x="-300" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ad03fc4a-a771-469a-a3a6-147714030d5e" name="NLP: Sentence Similarity" type="SubSheetInfo"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><narrative>Calculates the semantic similarity between one text and a list of other sentences by comparing their embeddings.</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="4494e3a7-a343-4341-89cc-812b2900ed18" name="Start" type="Start"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="Source Sentence" narrative="[Required] The string to be compared with other strings. This can be a phrase, sentence, or longer passage, depending upon the model used." stage="Source Sentence" /><input type="collection" name="Sentences" narrative="[Required] Collection of strings which will be compared against [Source Sentence]. Only values in the first column will be considered in this action." stage="Sentences" /><input type="flag" name="Use Cache" narrative="[Optional] There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True" stage="Use Cache" /><input type="flag" name="Wait For Model" narrative="[Optional] If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False" stage="Wait For Model" /><input type="text" name="Request Body" narrative="[Optional] A custom user-supplied JSON body for the request. If blank, the request body will be automatically created using [Inputs], [Use Cache], [Wait For Model]" stage="Request Body" /></inputs><onsuccess>4722575e-260b-4872-87b2-ddc6fae45d25</onsuccess></stage><stage stageid="2c53fa9f-4d6e-48d8-b38f-1d94edd9cf0e" name="End" type="End"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="ea0d5846-3d05-4359-a948-0d0808db8a4c" name="Source Sentence" type="Data"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><narrative>The string to be compared with other strings. This can be a phrase, sentence, or longer passage, depending upon the model used.</narrative><display x="-300" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3bf3cc8-fa50-4396-990b-11af41f913de" name="Use Cache" type="Data"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><narrative>There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True</narrative><display x="-300" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="d1894f03-746c-4857-b0b6-29d313773e3e" name="Wait For Model" type="Data"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><narrative>If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False</narrative><display x="-300" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="51e72f52-b768-40e3-bd21-b20153335758" name="Success" type="Data"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-135" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0e97ceae-a600-44d9-bebd-626fbfc5eac3" name="Status" type="Data"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-135" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3cd92bc-51ea-408f-b9e2-32780842601d" name="Content" type="Data"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fef59729-d2f8-4f3c-a093-8f10ed1ce36e" name="Error" type="Data"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-135" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="42698ad1-2ae0-4aaf-a7dc-6df042eb39b3" name="Request" type="Data"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-135" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2b475973-58b8-4c34-aaa0-a1fa4a64c7a7" name="Headers" type="Collection"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-135" y="75" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1b9e5c65-43a4-44b2-a45d-00b4605d7c0f" name="Inputs" type="Block"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><display x="-375" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6248891a-b9a7-492d-811c-a8f30e2c2bcb" name="Outputs" type="Block"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><display x="-210" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="3b5b4a82-2aeb-4aeb-a05e-85d710da64bf" name="NLP: Sentence Similarity - Create Request Body" type="Code"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="sourceSentence" expr="[Source Sentence]" /><input type="collection" name="sentences" expr="[Sentences]" /><input type="flag" name="useCache" expr="[Use Cache]" /><input type="flag" name="waitForModel" expr="[Wait For Model]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /></outputs><onsuccess>20fd09c8-6af5-410b-9957-561c7930b4db</onsuccess><code><![CDATA[var sentenceSimilarity = new SentenceSimilarity();
sentenceSimilarity.Inputs.SourceSentence = sourceSentence;

for (int i = 0; i < sentences.Rows.Count; i++)
{
	sentenceSimilarity.Inputs.Sentences.Add(sentences.Rows[i][0].ToString());
}

requestBody = SerializePayload(sentenceSimilarity);]]></code></stage><stage stageid="7c832480-b1ca-4740-a13d-0d2ed190173e" name="Request Body" type="Data"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><narrative>The JSON request body</narrative><display x="-300" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6fa41538-bd31-4709-8de0-fb2e8251d10c" name="Locals" type="Block"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><display x="-375" y="120" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="4722575e-260b-4872-87b2-ddc6fae45d25" name="[Request Body] supplied?" type="Decision"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len([Request Body]) &gt; 0" /><ontrue>97d39a93-2e63-4156-9925-cedc8937fd7a</ontrue><onfalse>3b5b4a82-2aeb-4aeb-a05e-85d710da64bf</onfalse></stage><stage stageid="20fd09c8-6af5-410b-9957-561c7930b4db" name="NLP: Sentence Similarity - Send Request" type="Code"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>2c53fa9f-4d6e-48d8-b38f-1d94edd9cf0e</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, payload);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="17fba27b-86b8-4fa0-be10-1336ff81fe73" name="Anchor1" type="Anchor"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><display x="75" y="30" w="10" h="10" /><onsuccess>20fd09c8-6af5-410b-9957-561c7930b4db</onsuccess></stage><stage stageid="97d39a93-2e63-4156-9925-cedc8937fd7a" name="Anchor2" type="Anchor"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><display x="75" y="-60" w="10" h="10" /><onsuccess>17fba27b-86b8-4fa0-be10-1336ff81fe73</onsuccess></stage><stage stageid="af68a5fe-a582-45ab-872c-168b056c6d9e" name="Sentences" type="Collection"><subsheetid>5147773b-8f64-4d59-a9b2-ade9b6b839d9</subsheetid><loginhibit /><narrative>Collection of strings which will be compared against [Source Sentence]. Only values in the first column will be considered in this action.</narrative><display x="-300" y="15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="64a24b15-cdc1-485f-a73c-b7578854835f" name="NLP: Text Classification" type="SubSheetInfo"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><narrative>Typically used for sentiment analysis. This will output the likelihood of classes of an input.</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="e6b2c0e0-f456-4a8a-b373-7b4ef7cb856e" name="Start" type="Start"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="Inputs" narrative="[Required] The text to be classified." stage="Inputs" /><input type="flag" name="Use Cache" narrative="[Optional] There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True" stage="Use Cache" /><input type="flag" name="Wait For Model" narrative="[Optional] If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False" stage="Wait For Model" /><input type="text" name="Request Body" narrative="[Optional] A custom user-supplied JSON body for the request. If blank, the request body will be automatically created using [Inputs], [Use Cache], [Wait For Model]" stage="Request Body" /></inputs><onsuccess>51882930-51b9-4a07-b372-29cb9bba2d82</onsuccess></stage><stage stageid="1607d3f4-36a7-4ca3-84f8-9fc98e6c8405" name="End" type="End"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="6c642603-8ffe-4697-98f1-b39b4e4e1c30" name="Inputs" type="Data"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><narrative>The text to be classified.</narrative><display x="-300" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9e628eaa-8391-419e-9963-cf80bc6b6e0f" name="Use Cache" type="Data"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><narrative>There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True</narrative><display x="-300" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="39e15094-e8f1-4164-b330-c59b5fab2c07" name="Wait For Model" type="Data"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><narrative>If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False</narrative><display x="-300" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="bcf7d5b4-9a2c-4fcd-98ae-ba55cc08fe42" name="Success" type="Data"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-135" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ffb69c5e-e6a8-4712-ba70-2ecc7b5701d3" name="Status" type="Data"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-135" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ab104207-7f97-45f0-80f3-b24384e9105f" name="Content" type="Data"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d53550d4-b616-479e-a7c8-7fe1eb00ba85" name="Error" type="Data"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-135" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef8de982-502f-426b-8e67-dc982da4519a" name="Request" type="Data"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-135" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7b0737d5-2e6a-4580-a32f-4c7ead77f3fb" name="Headers" type="Collection"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-135" y="75" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="dfdefc6b-5f8c-47f5-b92f-a349d513a72c" name="Inputs" type="Block"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><display x="-375" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f99f4753-f35b-4601-833d-4abc5cddeb42" name="Outputs" type="Block"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><display x="-210" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0e7ef861-8265-4217-84ef-df7ae59f1b64" name="NLP: Text Classification - Create Request Body" type="Code"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="inputs" expr="[Inputs]" /><input type="flag" name="useCache" expr="[Use Cache]" /><input type="flag" name="waitForModel" expr="[Wait For Model]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /></outputs><onsuccess>3cbe5a49-4316-40b4-9481-5969b86cc445</onsuccess><code><![CDATA[var textClassification = new TextClassification();
textClassification.Inputs = inputs;
textClassification.Options.UseCache = useCache;
textClassification.Options.WaitForModel = waitForModel;
requestBody = SerializePayload(textClassification);]]></code></stage><stage stageid="ce7fc848-ee0a-41f3-98e8-691ad28689ab" name="Request Body" type="Data"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><narrative>The JSON request body</narrative><display x="-300" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4d4f02cc-6cd3-4952-ac3d-a7d6ede723c2" name="Locals" type="Block"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><display x="-375" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="51882930-51b9-4a07-b372-29cb9bba2d82" name="[Request Body] supplied?" type="Decision"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len([Request Body]) &gt; 0" /><ontrue>4d5c6a95-3e2b-4838-8c43-7cb4cd335801</ontrue><onfalse>0e7ef861-8265-4217-84ef-df7ae59f1b64</onfalse></stage><stage stageid="3cbe5a49-4316-40b4-9481-5969b86cc445" name="NLP: Text Classification - Send Request" type="Code"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>1607d3f4-36a7-4ca3-84f8-9fc98e6c8405</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, payload);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="922a6c92-6cdd-4052-9a55-9617a78fe72f" name="Anchor1" type="Anchor"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><display x="75" y="30" w="10" h="10" /><onsuccess>3cbe5a49-4316-40b4-9481-5969b86cc445</onsuccess></stage><stage stageid="4d5c6a95-3e2b-4838-8c43-7cb4cd335801" name="Anchor2" type="Anchor"><subsheetid>47b3ef3e-a572-48d6-a420-281c8ea0530a</subsheetid><loginhibit /><display x="75" y="-60" w="10" h="10" /><onsuccess>922a6c92-6cdd-4052-9a55-9617a78fe72f</onsuccess></stage><stage stageid="735b5d14-ee13-407b-9b70-c31997af8028" name="NLP: Text Generation" type="SubSheetInfo"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><narrative>Generates text based on an input prompt.</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="3ec0c457-3de2-442d-b5ba-9b143a4f7e0f" name="Start" type="Start"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="Inputs" narrative="[Required] The text prompt from which additional text should be generated or continued." stage="Inputs" /><input type="flag" name="Use Cache" narrative="[Optional] There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True" stage="Use Cache" /><input type="flag" name="Wait For Model" narrative="[Optional] If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False" stage="Wait For Model" /><input type="text" name="Request Body" narrative="[Optional] A custom user-supplied JSON body for the request. If blank, the request body will be automatically created using [Inputs], [Use Cache], [Wait For Model]" stage="Request Body" /><input type="number" name="Top K" narrative="[Optional] Maps to top_k parameter. Integer to define the top tokens considered within the sample operation to create new text. Default: None" stage="Top K" /><input type="number" name="Top P" narrative="[Optional] Maps to top_p parameter. Float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than [Top P]. Default: None" stage="Top P" /><input type="number" name="Temperature" narrative="[Optional] Maps to temperature parameter. The temperature of the sampling operation. Valid range: 0.0 to 100.0. 1 means regular sampling. 0 means always take the highest score. 0 approaches uniform probability. Default value: 1.0" stage="Temperature" /><input type="number" name="Repetition Penalty" narrative="[Optional] Maps to repetition_penalty parameter. The more a token is used within generation, the more it is penalized to not be picked in successive generation passes. Valid range: 0.0 to 100.0. Default value: None" stage="Repetition Penalty" /><input type="number" name="Max Time" narrative="[Optional] Maps to max_time parameter. The amount of time in seconds the the query should take maximum. Network can cause some overhead so it will be a soft limit. The [Timeout] value will take precedence over this value. Valid range: 0 to 120.0. Default value: None" stage="Max Time" /><input type="number" name="Maximum New Tokens" narrative="[Optional] Maps to max_new_tokens. The amount of new tokens to be generated. This does include the input length. It is an estimate of the size of generated text you want. Each new token slows down the request so look for a balance between response time and length of text generated. Valid range: 0-250. Default value: None" stage="Maximum New Tokens" /><input type="flag" name="Return Full Text" narrative="[Optional] Maps to return_full_text. If set to False, the returned results will not contain the original query making it easier for prompting. Default value: True" stage="Return Full Text" /><input type="number" name="Number of Return Sequences" narrative="[Optional] Maps to num_return_sequences. The number of propositions you want to be returned. Default value: 1" stage="Number of Return Sequences" /><input type="flag" name="Use Sampling" narrative="[Optional] Maps to do_sample. Set True to use sampling. Otherwise, greedy decoding will be used. Default value: True" stage="Use Sampling" /></inputs><onsuccess>649631f9-63f7-4623-9815-54d507bfdb57</onsuccess></stage><stage stageid="93185d2e-213e-4b2c-880f-726a5972b7fd" name="End" type="End"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="4207d87f-c44c-460b-9a1f-d22779ad5b2b" name="Inputs" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>The text prompt from which additional text should be generated or continued.</narrative><display x="-360" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcaabea8-0fa6-4717-8a39-c3a18e8e0f10" name="Use Cache" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True</narrative><display x="-360" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="31c502bd-49e2-4cf9-84f7-b41a0ac84ac6" name="Wait For Model" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False</narrative><display x="-360" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8f9597af-5955-493d-81e1-e05f398f5245" name="Success" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-150" y="150" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="d3579d27-7b59-4042-8518-683bc0ac6e0d" name="Status" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-150" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ca0a7142-f34f-4d48-8f14-569ba0de8579" name="Content" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-150" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="65f0d91f-6035-41a2-8059-20d2ff82be41" name="Error" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-150" y="270" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c3aeeaa-f8df-4a97-a807-101e2e47ae45" name="Request" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-150" y="300" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="78cbe5a5-05bd-4c1d-be65-fcd7ac6ac448" name="Headers" type="Collection"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-150" y="240" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5738c490-cc08-45cb-94a3-3b0b2573f3a5" name="Inputs" type="Block"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><display x="-435" y="-45" w="390" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="892595cf-df61-46af-80a7-fd0fe845c0e9" name="Outputs" type="Block"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><display x="-225" y="120" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d52ffa49-a3d0-4efb-ba1b-ca5731894370" name="NLP: Text Generation - Create Request Body" type="Code"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="inputs" expr="[Inputs]" /><input type="flag" name="useCache" expr="[Use Cache]" /><input type="flag" name="waitForModel" expr="[Wait For Model]" /><input type="number" name="topK" expr="[Top K]" /><input type="number" name="topP" expr="[Top P]" /><input type="number" name="temperature" expr="[Temperature]" /><input type="number" name="repetitionPenalty" expr="[Repetition Penalty]" /><input type="number" name="maximumNewTokens" expr="[Maximum New Tokens]" /><input type="number" name="maxTime" expr="[Max Time]" /><input type="flag" name="returnFullText" expr="[Return Full Text]" /><input type="number" name="numberOfReturnSequences" expr="[Number of Return Sequences]" /><input type="flag" name="useSampling" expr="[Use Sampling]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /></outputs><onsuccess>75b425d3-e40c-40f7-aceb-33e83b50a06d</onsuccess><code><![CDATA[var textGeneration = new TextGeneration();
textGeneration.Inputs = inputs;
textGeneration.Options.UseCache = useCache;
textGeneration.Options.WaitForModel = waitForModel;
if (topK > -1) textGeneration.Parameters.TopK = (int)topK;
if (topP > -1) textGeneration.Parameters.TopP = topP;
if (temperature > -1) textGeneration.Parameters.Temperature = temperature;
if (repetitionPenalty > -1) textGeneration.Parameters.RepetitionPenalty = repetitionPenalty;
if (maximumNewTokens > -1) textGeneration.Parameters.MaximumNewTokens = (int)maximumNewTokens;
if (maxTime > -1) textGeneration.Parameters.MaxTime = (int)maxTime;
if (numberOfReturnSequences > -1) textGeneration.Parameters.NumberOfReturnSequences = (int)numberOfReturnSequences;
textGeneration.Parameters.ReturnFullText = returnFullText;
textGeneration.Parameters.UseSampling = useSampling;
requestBody = SerializePayload(textGeneration);]]></code></stage><stage stageid="adff8fe8-a31c-4b71-b8d1-d7e1bb17db1b" name="Request Body" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>The JSON request body</narrative><display x="-330" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5606d603-a5e7-4ae3-8c80-338d9aa8a4e3" name="Locals" type="Block"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><display x="-405" y="120" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="649631f9-63f7-4623-9815-54d507bfdb57" name="[Request Body] supplied?" type="Decision"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len([Request Body]) &gt; 0" /><ontrue>34044ace-ebb1-4174-a88b-edb4fbf2e70e</ontrue><onfalse>d52ffa49-a3d0-4efb-ba1b-ca5731894370</onfalse></stage><stage stageid="75b425d3-e40c-40f7-aceb-33e83b50a06d" name="NLP: Text Generation - Send Request" type="Code"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>93185d2e-213e-4b2c-880f-726a5972b7fd</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, payload);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="8ffce06b-33e0-4a26-aaf8-165cecba438e" name="Anchor1" type="Anchor"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><display x="75" y="30" w="10" h="10" /><onsuccess>75b425d3-e40c-40f7-aceb-33e83b50a06d</onsuccess></stage><stage stageid="34044ace-ebb1-4174-a88b-edb4fbf2e70e" name="Anchor2" type="Anchor"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><display x="75" y="-60" w="10" h="10" /><onsuccess>8ffce06b-33e0-4a26-aaf8-165cecba438e</onsuccess></stage><stage stageid="f2b448af-1528-40e0-8171-4577a979d5aa" name="Top K" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>Maps to top_k parameter. Integer to define the top tokens considered within the sample operation to create new text. Default: None</narrative><display x="-360" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="561d57f8-fcfe-435d-8eed-0e3ceb9c1e08" name="Top P" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>Maps to top_p parameter. Float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than [Top P]. Default: None</narrative><display x="-240" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="55f6f197-cfc3-44e3-b311-e879923802ae" name="Temperature" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>Maps to temperature parameter. The temperature of the sampling operation. Valid range: 0.0 to 100.0. 1 means regular sampling. 0 means always take the highest score. 0 approaches uniform probability. Default value: 1.0</narrative><display x="-240" y="15" w="120" h="30" /><datatype>number</datatype><initialvalue>1.0</initialvalue><private /><alwaysinit /></stage><stage stageid="7265f7d9-cd05-45a9-bfa9-a359ddadf0b4" name="Repetition Penalty" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>Maps to repetition_penalty parameter. The more a token is used within generation, the more it is penalized to not be picked in successive generation passes. Valid range: 0.0 to 100.0. Default value: None</narrative><display x="-240" y="45" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="f8b962bd-7be5-43c0-b66f-f5b6c5ab2af1" name="Max Time" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>Maps to max_time parameter. The amount of time in seconds the the query should take maximum. Network can cause some overhead so it will be a soft limit. The [Timeout] value will take precedence over this value. Valid range: 0 to 120.0. Default value: None</narrative><display x="-120" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="e659e7a7-cc74-410d-898e-71ce50bbd5fd" name="Maximum New Tokens" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>Maps to max_new_tokens. The amount of new tokens to be generated. This does include the input length. It is an estimate of the size of generated text you want. Each new token slows down the request so look for a balance between response time and length of text generated. Valid range: 0-250. Default value: None</narrative><display x="-240" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="9ad077d2-b53f-4170-aa5b-40cfd7556085" name="Return Full Text" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>Maps to return_full_text. If set to False, the returned results will not contain the original query making it easier for prompting. Default value: True</narrative><display x="-120" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="f06495ba-5b84-4d0b-b0e7-ac8c017ba750" name="Use Sampling" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>Maps to do_sample. Set True to use sampling. Otherwise, greedy decoding will be used. Default value: True</narrative><display x="-120" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="8da16451-380c-48a0-a176-720dca20b695" name="Number of Return Sequences" type="Data"><subsheetid>7bc71905-6002-4fbb-aa8b-d81db901a035</subsheetid><loginhibit /><narrative>Maps to num_return_sequences. The number of propositions you want to be returned. Default value: 1</narrative><display x="-120" y="45" w="120" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="051709c3-ea5e-4d84-8a96-f26ff1ca6a17" name="NLP: Token Classification" type="SubSheetInfo"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><narrative>Typically used for sentence parsing, either grammatical, or Named Entity Recognition (NER) to understand keywords contained within text.</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="9740db00-8f33-4364-bf20-6e4253ed00e4" name="Start" type="Start"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="Inputs" narrative="[Required] The text to be classified." stage="Inputs" /><input type="text" name="Aggregation Strategy" narrative="[Optional] The aggregation strategy to use. Must be one of the following values: none, simple, first, average, max. None: Every token gets classified without further aggregation. Simple: Entities are grouped according to the default schema (B-, I- tags get merged when then tag is similar). First: Same as simple except words cannot end up with different tags. Words will use the tag of the first token when there is ambiguity. Average: Same as simple except words cannot end up with different tags. Scores are averaged across tokens and then the maximum label is applied. Max: Same as simple except words cannot end up with different tags. Word entity will be the token with the maximum score. Default value: simple" stage="Aggregation Strategy" /><input type="flag" name="Use Cache" narrative="[Optional] There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True" stage="Use Cache" /><input type="flag" name="Wait For Model" narrative="[Optional] If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False" stage="Wait For Model" /><input type="text" name="Request Body" narrative="[Optional] A custom user-supplied JSON body for the request. If blank, the request body will be automatically created using [Inputs], [Use Cache], [Wait For Model]" stage="Request Body" /></inputs><onsuccess>93eb323c-72ca-4879-a7a2-e1410970453a</onsuccess></stage><stage stageid="f178da1f-1691-458c-aa1e-d13f8ca550a1" name="End" type="End"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="6fca3903-04e8-4249-8ec5-b3ed51655d14" name="Inputs" type="Data"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><narrative>The text to be classified.</narrative><display x="-300" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b05c3f4b-f407-418b-9832-fad911eabeb8" name="Use Cache" type="Data"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><narrative>There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True</narrative><display x="-300" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="ea4256c4-d1d3-4d2b-ac25-3ecba6da986d" name="Wait For Model" type="Data"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><narrative>If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False</narrative><display x="-300" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4f77602c-de21-4a4e-995c-b82d535a7946" name="Success" type="Data"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-135" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="346c4291-daec-4b14-8a72-7ce9573a8ca4" name="Status" type="Data"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-135" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae3f282b-4b90-488c-b975-ad324a9eb468" name="Content" type="Data"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="21098640-9dff-4d2a-bc47-2e74d698cf51" name="Error" type="Data"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-135" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2b1e5397-73a2-48a8-9447-8b6577a4ce4a" name="Request" type="Data"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-135" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0ac93a2b-2ded-487d-a9be-3d183ae1ceb3" name="Headers" type="Collection"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-135" y="75" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1289bda9-1ff2-4b40-bb94-956cbba7d719" name="Inputs" type="Block"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><display x="-375" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="01164160-5556-4a5e-be50-59a2509dbe10" name="Outputs" type="Block"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><display x="-210" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8d53f53b-5b21-44cc-8a7b-6a6a90112baa" name="NLP: Token Classification - Create Request Body" type="Code"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="inputs" expr="[Inputs]" /><input type="text" name="aggregationStrategy" expr="[Aggregation Strategy]" /><input type="flag" name="useCache" expr="[Use Cache]" /><input type="flag" name="waitForModel" expr="[Wait For Model]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /></outputs><onsuccess>46b7c280-8f7b-432c-8cea-2d3f9535688b</onsuccess><code><![CDATA[var tokenClassification = new TokenClassification();
tokenClassification.Inputs = inputs;
tokenClassification.Options.UseCache = useCache;
tokenClassification.Options.WaitForModel = waitForModel;
tokenClassification.Parameters.AggregationStrategy = aggregationStrategy;
requestBody = SerializePayload(tokenClassification);]]></code></stage><stage stageid="b068ce74-ffdf-4d5b-90e4-a53d16a326c3" name="Request Body" type="Data"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><narrative>The JSON request body</narrative><display x="-300" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc652598-885e-44bb-aab2-1644f328bdfe" name="Locals" type="Block"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><display x="-375" y="120" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="93eb323c-72ca-4879-a7a2-e1410970453a" name="[Request Body] supplied?" type="Decision"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len([Request Body]) &gt; 0" /><ontrue>0830b509-bcd0-4565-9023-70cb2b8250f8</ontrue><onfalse>8d53f53b-5b21-44cc-8a7b-6a6a90112baa</onfalse></stage><stage stageid="46b7c280-8f7b-432c-8cea-2d3f9535688b" name="NLP: Token Classification - Send Request" type="Code"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>f178da1f-1691-458c-aa1e-d13f8ca550a1</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, payload);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="4b95e768-2cf5-423a-93c3-ed89dca33d8a" name="Anchor1" type="Anchor"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><display x="75" y="30" w="10" h="10" /><onsuccess>46b7c280-8f7b-432c-8cea-2d3f9535688b</onsuccess></stage><stage stageid="0830b509-bcd0-4565-9023-70cb2b8250f8" name="Anchor2" type="Anchor"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><display x="75" y="-60" w="10" h="10" /><onsuccess>4b95e768-2cf5-423a-93c3-ed89dca33d8a</onsuccess></stage><stage stageid="06d4fafe-8c0c-484c-a99f-c03d18f4b9f1" name="Aggregation Strategy" type="Data"><subsheetid>9466c57d-7239-4cfd-b27b-d06ed4860c21</subsheetid><loginhibit /><narrative>The aggregation strategy to use. Must be one of the following values: none, simple, first, average, max. None: Every token gets classified without further aggregation. Simple: Entities are grouped according to the default schema (B-, I- tags get merged when then tag is similar). First: Same as simple except words cannot end up with different tags. Words will use the tag of the first token when there is ambiguity. Average: Same as simple except words cannot end up with different tags. Scores are averaged across tokens and then the maximum label is applied. Max: Same as simple except words cannot end up with different tags. Word entity will be the token with the maximum score. Default value: simple</narrative><display x="-300" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">simple</initialvalue><private /><alwaysinit /></stage><stage stageid="6788b8c6-6a92-40fb-aac1-e1e5594c2251" name="NLP: Translation" type="SubSheetInfo"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><narrative>Translates text from one language to another</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="ba7e16aa-2fd9-411d-8a2b-696c2cca84b5" name="Start" type="Start"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="Inputs" narrative="[Required] The text to be translated" stage="Inputs" /><input type="flag" name="Use Cache" narrative="[Optional] There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True" stage="Use Cache" /><input type="flag" name="Wait For Model" narrative="[Optional] If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False" stage="Wait For Model" /><input type="text" name="Request Body" narrative="[Optional] A custom user-supplied JSON body for the request. If blank, the request body will be automatically created using [Inputs], [Use Cache], [Wait For Model]" stage="Request Body" /></inputs><onsuccess>2e795b70-78ca-4931-b4d6-7c278d84141a</onsuccess></stage><stage stageid="5b6070e0-79e6-4f42-8b93-687c473561d2" name="End" type="End"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="c887df84-6cf2-4936-a6ea-ee7b252766fa" name="Inputs" type="Data"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><narrative>The text to be translated</narrative><display x="-300" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e22607a0-5129-4b83-b136-fefb12c4062f" name="Use Cache" type="Data"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><narrative>There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True</narrative><display x="-300" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="69eecdba-909a-410a-8880-880d8a81fb67" name="Wait For Model" type="Data"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><narrative>If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False</narrative><display x="-300" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e891df07-8031-4f00-948b-921f1cffb8d5" name="Success" type="Data"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-135" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c8a5d325-41f4-4d79-9808-5e60fdb75ed7" name="Status" type="Data"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-135" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="07010869-1d67-49fa-975d-93bc0db65d0f" name="Content" type="Data"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e6f51c10-8dd2-4968-8989-4cc3dfa0493c" name="Error" type="Data"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-135" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e859916-556c-4a3a-a8dd-f3e210bca4bf" name="Request" type="Data"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-135" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ed01e30f-6b36-491f-8dac-b6c2df2a9927" name="Headers" type="Collection"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-135" y="75" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e92f9ca0-4571-44b6-b9f7-baccbd85ebe0" name="Inputs" type="Block"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><display x="-375" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6c290ba1-0c31-465b-a615-7877ec871aa2" name="Outputs" type="Block"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><display x="-210" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bedf0c23-94ca-401b-a6ee-341e64d3a3e3" name="NLP: Translation - Create Request Body" type="Code"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="inputs" expr="[Inputs]" /><input type="flag" name="useCache" expr="[Use Cache]" /><input type="flag" name="waitForModel" expr="[Wait For Model]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /></outputs><onsuccess>e69ee4e9-08be-47a4-aacd-71dc45e64437</onsuccess><code><![CDATA[var translation = new Translation();
translation.Inputs = inputs;
translation.Options.UseCache = useCache;
translation.Options.WaitForModel = waitForModel;
requestBody = SerializePayload(translation);]]></code></stage><stage stageid="59e4a07b-91b0-49c9-924a-33526de8fbb4" name="Request Body" type="Data"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><narrative>The JSON request body</narrative><display x="-300" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="00a253f3-597e-479c-ad6b-b8110761e4ab" name="Locals" type="Block"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><display x="-375" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2e795b70-78ca-4931-b4d6-7c278d84141a" name="[Request Body] supplied?" type="Decision"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len([Request Body]) &gt; 0" /><ontrue>ab6c74ba-aefa-4b5f-98e9-3d1427db49e2</ontrue><onfalse>bedf0c23-94ca-401b-a6ee-341e64d3a3e3</onfalse></stage><stage stageid="e69ee4e9-08be-47a4-aacd-71dc45e64437" name="NLP: Translation - Send Request" type="Code"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>5b6070e0-79e6-4f42-8b93-687c473561d2</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, payload);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="89986ba9-3889-4b54-8bb4-8bd743cf1b85" name="Anchor1" type="Anchor"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><display x="75" y="30" w="10" h="10" /><onsuccess>e69ee4e9-08be-47a4-aacd-71dc45e64437</onsuccess></stage><stage stageid="ab6c74ba-aefa-4b5f-98e9-3d1427db49e2" name="Anchor2" type="Anchor"><subsheetid>3be60158-7103-4593-98a7-5803f3ca57c0</subsheetid><loginhibit /><display x="75" y="-60" w="10" h="10" /><onsuccess>89986ba9-3889-4b54-8bb4-8bd743cf1b85</onsuccess></stage><stage stageid="b885b3ad-71c0-40b5-a300-463866a6f487" name="NLP: Zero-Shot Classification" type="SubSheetInfo"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><narrative>Chooses from a set of provided labels to classify a piece of input text</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="6aac1bd2-d682-42ab-ba7a-ebb257ff9458" name="Start" type="Start"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="Inputs" narrative="[Required] The text to be classified" stage="Inputs" /><input type="collection" name="Candidate Labels" narrative="[Required] Collection containing strings that are possible classes for inputs. Maximum: 10 rows allowed. For more, simply run multiple requests. Results can be misleading if too many labels are supplied. Only text values in the first column of this collection will be used. Any other columns will be ignored." stage="Candidate Labels" /><input type="flag" name="Multi Label" narrative="[Optional] Set True if classes can overlap. Default value: False" stage="Multi Label" /><input type="flag" name="Use Cache" narrative="[Optional] There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True" stage="Use Cache" /><input type="flag" name="Wait For Model" narrative="[Optional] If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False" stage="Wait For Model" /><input type="text" name="Request Body" narrative="[Optional] A custom user-supplied JSON body for the request. If blank, the request body will be automatically created using [Inputs], [Use Cache], [Wait For Model]" stage="Request Body" /></inputs><onsuccess>cd7c6e61-17e2-4b85-8d3f-e445290c3ab9</onsuccess></stage><stage stageid="9e8be4c8-c11d-4a9b-8df6-892e9b0558e0" name="End" type="End"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="858095da-c436-4c4b-9547-d0079048d652" name="Inputs" type="Data"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><narrative>The text to be classified</narrative><display x="-300" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7cd9781-02b6-4c11-bed6-135c449c868c" name="Use Cache" type="Data"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><narrative>There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True</narrative><display x="-300" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="3b151e57-7d7e-40bb-a601-668c8e12fe2d" name="Wait For Model" type="Data"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><narrative>If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False</narrative><display x="-300" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="88c059ac-eba5-4e60-8554-3e5a03bee853" name="Success" type="Data"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-135" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="078de514-f04c-4522-a402-04a09dc9ad6c" name="Status" type="Data"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-135" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4c8d4a31-b52f-436a-b975-45040a1f56a5" name="Content" type="Data"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3e23c980-a6d1-498a-982e-531be3029f45" name="Error" type="Data"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-135" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a04aa44-a446-4da6-a0f2-62c13fc49559" name="Request" type="Data"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-135" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="044e3738-3a31-4b09-96e8-53bee733bada" name="Headers" type="Collection"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-135" y="75" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a4bdcc8d-ff4d-4ffc-9277-d98e1bbef348" name="Inputs" type="Block"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><display x="-375" y="-45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="99af9323-aecc-4977-bf0a-0fb5b8d4c5a2" name="Outputs" type="Block"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><display x="-210" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="29abd1be-2891-4bea-87b3-3bd791b93989" name="NLP: Zero-Shot Classification - Create Request Body" type="Code"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="inputs" expr="[Inputs]" /><input type="collection" name="candidateLabels" expr="[Candidate Labels]" /><input type="flag" name="multiLabel" expr="[Multi Label]" /><input type="flag" name="useCache" expr="[Use Cache]" /><input type="flag" name="waitForModel" expr="[Wait For Model]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /></outputs><onsuccess>ed72ab28-4e19-41ad-b4e1-7b27de7d8e56</onsuccess><code><![CDATA[var zeroShotClassification = new ZeroShotClassification();
zeroShotClassification.Inputs = inputs;
zeroShotClassification.Options.UseCache = useCache;
zeroShotClassification.Options.WaitForModel = waitForModel;
zeroShotClassification.Parameters.MultiLabel = multiLabel;
for (int i = 0; i < candidateLabels.Rows.Count; i++)
{
	zeroShotClassification.Parameters.CandidateLabels.Add(candidateLabels.Rows[i][0].ToString());
}
requestBody = SerializePayload(zeroShotClassification);]]></code></stage><stage stageid="fdc04079-65ba-4d68-914d-8ad82d817adc" name="Request Body" type="Data"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><narrative>The JSON request body</narrative><display x="-300" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="24012cb4-49c7-4c67-80a7-037bf73db7a5" name="Locals" type="Block"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><display x="-375" y="150" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="cd7c6e61-17e2-4b85-8d3f-e445290c3ab9" name="[Request Body] supplied?" type="Decision"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len([Request Body]) &gt; 0" /><ontrue>4b016ede-7cb3-4ff5-9919-7c0b39981c0d</ontrue><onfalse>29abd1be-2891-4bea-87b3-3bd791b93989</onfalse></stage><stage stageid="ed72ab28-4e19-41ad-b4e1-7b27de7d8e56" name="NLP: Zero-Shot Classification - Send Request" type="Code"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>9e8be4c8-c11d-4a9b-8df6-892e9b0558e0</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, payload);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="28b81af9-a789-4bb9-8be8-24ecdd41e561" name="Anchor1" type="Anchor"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><display x="75" y="30" w="10" h="10" /><onsuccess>ed72ab28-4e19-41ad-b4e1-7b27de7d8e56</onsuccess></stage><stage stageid="4b016ede-7cb3-4ff5-9919-7c0b39981c0d" name="Anchor2" type="Anchor"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><display x="75" y="-60" w="10" h="10" /><onsuccess>28b81af9-a789-4bb9-8be8-24ecdd41e561</onsuccess></stage><stage stageid="26fb618c-c2f7-4b37-b38f-98f256bf6982" name="Candidate Labels" type="Collection"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><narrative>Collection containing strings that are possible classes for inputs. Maximum: 10 rows allowed. For more, simply run multiple requests. Results can be misleading if too many labels are supplied. Only text values in the first column of this collection will be used. Any other columns will be ignored.</narrative><display x="-300" y="15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5d356874-c115-400c-bb68-78f6e32a9f16" name="Multi Label" type="Data"><subsheetid>0104a53d-e317-4cf3-a407-3fe4575ce67d</subsheetid><loginhibit /><narrative>Set True if classes can overlap. Default value: False</narrative><display x="-300" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="9a647377-7265-45a2-9e5f-eac29c99dfe6" name="NLP: Conversational" type="SubSheetInfo"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><narrative>Provides chatbot-like structure. Models tend to have short Maximum Length values for tokens. Use caution when using a given model if longer range is needed.</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="7fef5a63-6fba-4ddb-8379-6b40f98087a9" name="Start" type="Start"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="Text" narrative="[Required] The latest input from the user in the conversation" stage="Text" /><input type="collection" name="Generated Responses" narrative="[Optional] Collection containing string responses from earlier replies in the model. Include these in the first column of the collection only. One response per row." stage="Generated Responses" /><input type="collection" name="Past User Inputs" narrative="[Optional] Collection containing earlier replies from the user. Include these in the first column of the only. One response per row. Number of rows should match [Generated Responses]." stage="Past User Inputs" /><input type="flag" name="Use Cache" narrative="[Optional] There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True" stage="Use Cache" /><input type="flag" name="Wait For Model" narrative="[Optional] If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False" stage="Wait For Model" /><input type="text" name="Request Body" narrative="[Optional] A custom user-supplied JSON body for the request. If blank, the request body will be automatically created using [Inputs], [Use Cache], [Wait For Model]" stage="Request Body" /><input type="number" name="Minimum Length" narrative="[Optional] Maps to min_length parameter. Integer to define the minimum length in tokens of the output summary. Default: none" stage="Minimum Length" /><input type="number" name="Maximum Length" narrative="[Optional] Maps to max_length parameter. Integer to define the maximum length in tokens of the output summary. Default: none" stage="Maximum Length" /><input type="number" name="Top K" narrative="[Optional] Maps to top_k parameter. Integer to define the top tokens considered within the sample operation to create new text. Default: None" stage="Top K" /><input type="number" name="Top P" narrative="[Optional] Maps to top_p parameter. Float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than [Top P]. Default: None" stage="Top P" /><input type="number" name="Temperature" narrative="[Optional] Maps to temperature parameter. The temperature of the sampling operation. Valid range: 0.0 to 100.0. 1 means regular sampling. 0 means always take the highest score. 0 approaches uniform probability. Default value: 1.0" stage="Temperature" /><input type="number" name="Repetition Penalty" narrative="[Optional] Maps to repetition_penalty parameter. The more a token is used within generation, the more it is penalized to not be picked in successive generation passes. Valid range: 0.0 to 100.0. Default value: None" stage="Repetition Penalty" /><input type="number" name="Max Time" narrative="[Optional] Maps to max_time parameter. The amount of time in seconds the the query should take maximum. Network can cause some overhead so it will be a soft limit. The [Timeout] value will take precedence over this value. Valid range: 0 to 120.0. Default value: None" stage="Max Time" /></inputs><onsuccess>5f8fdf3e-3c84-46ea-a878-b328525b08f2</onsuccess></stage><stage stageid="5afc9a8f-3e41-4ce6-bfea-f98055526013" name="End" type="End"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="6c74dae0-442c-4dfa-9401-2bf6150b5a62" name="Use Cache" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True</narrative><display x="-360" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="9ab1c8ae-ffa6-4c91-9788-530181557e3a" name="Wait For Model" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False</narrative><display x="-240" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="adc7e29b-631b-4bed-b64a-92baf0deb1b3" name="Success" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-150" y="150" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="108a9d56-b0ee-4524-a979-da5017e3c43e" name="Status" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-150" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4407200c-ecfe-43a1-afc9-05ac9ca3e688" name="Content" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-150" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="81b2ecf1-0fc2-49fa-b89f-fd8f7b098b62" name="Error" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-150" y="270" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9c803441-a6cb-41ec-a149-ccd94871c456" name="Request" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-150" y="300" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="623cf134-8f15-440a-ba2a-b7f5e236198f" name="Headers" type="Collection"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-150" y="240" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="516ec6c0-90b4-4f7b-a117-7c17bbd6ea62" name="Inputs" type="Block"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><display x="-435" y="-45" w="390" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="66fed271-485f-42b9-b60c-0703036990e7" name="Outputs" type="Block"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><display x="-225" y="120" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7d152642-77fd-4351-9e49-28befb18ffe9" name="NLP: Conversational - Create Request Body" type="Code"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="text" expr="[Text]" /><input type="collection" name="generatedResponses" expr="[Generated Responses]" /><input type="collection" name="pastUserInputs" expr="[Past User Inputs]" /><input type="flag" name="useCache" expr="[Use Cache]" /><input type="flag" name="waitForModel" expr="[Wait For Model]" /><input type="number" name="minLength" expr="[Minimum Length]" /><input type="number" name="maxLength" expr="[Maximum Length]" /><input type="number" name="topK" expr="[Top K]" /><input type="number" name="topP" expr="[Top P]" /><input type="number" name="temperature" expr="[Temperature]" /><input type="number" name="repetitionPenalty" expr="[Repetition Penalty]" /><input type="number" name="maxTime" expr="[Max Time]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /></outputs><onsuccess>ca768085-9e25-4b7d-b32d-c7445c661705</onsuccess><code><![CDATA[var conversational = new Conversational();
conversational.Options.UseCache = useCache;
conversational.Options.WaitForModel = waitForModel;
conversational.Inputs.Text = text;
for (int i = 0; i < generatedResponses.Rows.Count; i++)
{
	conversational.Inputs.GeneratedResponses.Add(generatedResponses.Rows[i][0].ToString());
}
for (int i = 0; i < pastUserInputs.Rows.Count; i++)
{
	conversational.Inputs.PastUserInputs.Add(pastUserInputs.Rows[i][0].ToString());
}
if (minLength > -1) conversational.Parameters.MinLength = (int)minLength;
if (maxLength > -1) conversational.Parameters.MaxLength = (int)maxLength;
if (topK > -1) conversational.Parameters.TopK = (int)topK;
if (topP > -1) conversational.Parameters.TopP = topP;
if (temperature > -1) conversational.Parameters.Temperature = temperature;
if (repetitionPenalty > -1) conversational.Parameters.RepetitionPenalty = repetitionPenalty;
if (maxTime > -1) conversational.Parameters.MaxTime = (int)maxTime;
requestBody = SerializePayload(conversational);]]></code></stage><stage stageid="5d49ce9b-f24c-4d34-8cfb-ee80cdc2f832" name="Request Body" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>The JSON request body</narrative><display x="-330" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="260c21aa-03d1-43b5-99ce-eece1c915e09" name="Locals" type="Block"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><display x="-405" y="120" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5f8fdf3e-3c84-46ea-a878-b328525b08f2" name="[Request Body] supplied?" type="Decision"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len([Request Body]) &gt; 0" /><ontrue>bc3664ab-339b-4c7a-ba32-366b8118c6e4</ontrue><onfalse>7d152642-77fd-4351-9e49-28befb18ffe9</onfalse></stage><stage stageid="ca768085-9e25-4b7d-b32d-c7445c661705" name="NLP: Conversational - Send Request" type="Code"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>5afc9a8f-3e41-4ce6-bfea-f98055526013</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, payload);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="aec9a753-d048-418c-b83b-6c9d22cf8037" name="Anchor1" type="Anchor"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><display x="75" y="30" w="10" h="10" /><onsuccess>ca768085-9e25-4b7d-b32d-c7445c661705</onsuccess></stage><stage stageid="bc3664ab-339b-4c7a-ba32-366b8118c6e4" name="Anchor2" type="Anchor"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><display x="75" y="-60" w="10" h="10" /><onsuccess>aec9a753-d048-418c-b83b-6c9d22cf8037</onsuccess></stage><stage stageid="bc5ec1f7-6750-48d7-bb70-a08f89371375" name="Minimum Length" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>Maps to min_length parameter. Integer to define the minimum length in tokens of the output summary. Default: none</narrative><display x="-240" y="15" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="59b280b1-8f07-4988-bac5-1674e504b755" name="Maximum Length" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>Maps to max_length parameter. Integer to define the maximum length in tokens of the output summary. Default: none</narrative><display x="-240" y="45" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="ca1be288-cd1a-474c-926b-2700000ae21e" name="Top K" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>Maps to top_k parameter. Integer to define the top tokens considered within the sample operation to create new text. Default: None</narrative><display x="-240" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="a2812570-d8ac-43de-bc6d-31b6bf0be7ac" name="Top P" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>Maps to top_p parameter. Float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than [Top P]. Default: None</narrative><display x="-120" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="ba02492d-080a-430d-ba25-e57aecd0a5db" name="Temperature" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>Maps to temperature parameter. The temperature of the sampling operation. Valid range: 0.0 to 100.0. 1 means regular sampling. 0 means always take the highest score. 0 approaches uniform probability. Default value: 1.0</narrative><display x="-120" y="15" w="120" h="30" /><datatype>number</datatype><initialvalue>1.0</initialvalue><private /><alwaysinit /></stage><stage stageid="5728c4af-ea01-4777-ad24-d6f720d8ad11" name="Repetition Penalty" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>Maps to repetition_penalty parameter. The more a token is used within generation, the more it is penalized to not be picked in successive generation passes. Valid range: 0.0 to 100.0. Default value: None</narrative><display x="-120" y="45" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="a01d7721-09b8-4fb5-a319-f56e13097695" name="Max Time" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>Maps to max_time parameter. The amount of time in seconds the the query should take maximum. Network can cause some overhead so it will be a soft limit. The [Timeout] value will take precedence over this value. Valid range: 0 to 120.0. Default value: None</narrative><display x="-120" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="bf60dd7e-fbd9-4f26-a95d-ac7f543bf044" name="Text" type="Data"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>The latest input from the user in the conversation</narrative><display x="-360" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ac524843-1183-4797-a131-5c24e4756d93" name="Generated Responses" type="Collection"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>Collection containing string responses from earlier replies in the model. Include these in the first column of the collection only. One response per row.</narrative><display x="-360" y="15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="bd23b50b-4eee-46d8-80bd-1ccd421dc470" name="Past User Inputs" type="Collection"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>Collection containing earlier replies from the user. Include these in the first column of the only. One response per row. Number of rows should match [Generated Responses].</narrative><display x="-360" y="45" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4974fa34-1f5d-4916-a9c9-bfbe3840e8c9" name="NLP: Feature Extraction" type="SubSheetInfo"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><narrative>Reads text and outputs raw float values that are usually consumed as part of a semantic database or semantic search</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="80602044-c86b-42f3-845a-d1df09d16aee" name="Start" type="Start"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="Inputs" narrative="[Required] The text for which features should be extracted" stage="Inputs" /><input type="flag" name="Use Cache" narrative="[Optional] There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True" stage="Use Cache" /><input type="flag" name="Wait For Model" narrative="[Optional] If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False" stage="Wait For Model" /><input type="text" name="Request Body" narrative="[Optional] A custom user-supplied JSON body for the request. If blank, the request body will be automatically created using [Inputs], [Use Cache], [Wait For Model]" stage="Request Body" /></inputs><onsuccess>8fe57e2b-052f-421c-997a-2463f6bd7263</onsuccess></stage><stage stageid="34f8f1cf-18de-445a-a82d-ddcfbad8d3ee" name="End" type="End"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="3acfe788-9081-4a5e-830b-0576f427a52f" name="Inputs" type="Data"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><narrative>The text for which features should be extracted</narrative><display x="-300" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="123a1ce2-6a66-48b4-a9a6-fd53febe714a" name="Use Cache" type="Data"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><narrative>There is a cache layer on the Inference API to speed up requests that have been seen before. Most models can use these results as is as models are deterministic (meaning the results will be the same anyway). However, if you use a non-deterministic model, you can set this parameter to prevent the caching mechanism from being used resulting in a real new query. Default: True</narrative><display x="-300" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="91c3764e-c781-43ae-b6da-31dc110be8fb" name="Wait For Model" type="Data"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><narrative>If the model is not ready, wait for it instead of receiving an HTTP 503 error code. It limits the number of requests to get an inference completed. It is advised to only set this flag to true after receiving a 503 error as it will limit hanging in your application to only known places. Default: False</narrative><display x="-300" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2dfa0d8c-85a8-4faa-99e6-ef0bdf7e0080" name="Success" type="Data"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-135" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="d20357d9-9fa3-46a0-a745-e632a827e50b" name="Status" type="Data"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-135" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a27d27b7-ad58-4ca4-8660-39b8c3c43307" name="Content" type="Data"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2ec847d0-3a81-4cd4-bd54-f9baeb9e4397" name="Error" type="Data"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-135" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fe8f7d86-96e3-42a2-947e-5d91fd57ac6d" name="Request" type="Data"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-135" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1031d5b-e021-4afc-acb3-ba04618ea014" name="Headers" type="Collection"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-135" y="75" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="49c15b16-7e30-4f6d-af88-cf8cb6ecd990" name="Inputs" type="Block"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><display x="-375" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="502d3911-81cb-4484-88cd-718700c18f85" name="Outputs" type="Block"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><display x="-210" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="60a74ff0-c0af-43b6-af32-cba93d471525" name="NLP: Feature Extraction - Create Request Body" type="Code"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="inputs" expr="[Inputs]" /><input type="flag" name="useCache" expr="[Use Cache]" /><input type="flag" name="waitForModel" expr="[Wait For Model]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /></outputs><onsuccess>4a6d6c81-5aab-4b0a-8928-d896a1026d28</onsuccess><code><![CDATA[var featureExtraction = new FeatureExtraction();
featureExtraction.Inputs = inputs;
featureExtraction.Options.UseCache = useCache;
featureExtraction.Options.WaitForModel = waitForModel;
requestBody = SerializePayload(featureExtraction);]]></code></stage><stage stageid="4dd4aef9-0d6b-4e25-9d02-a6cbfd1c6bee" name="Request Body" type="Data"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><narrative>The JSON request body</narrative><display x="-300" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7be11abf-0933-4731-9daa-05629fa4c01e" name="Locals" type="Block"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><display x="-375" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8fe57e2b-052f-421c-997a-2463f6bd7263" name="[Request Body] supplied?" type="Decision"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len([Request Body]) &gt; 0" /><ontrue>f2f58157-7546-480b-911d-9a3d51e98191</ontrue><onfalse>60a74ff0-c0af-43b6-af32-cba93d471525</onfalse></stage><stage stageid="4a6d6c81-5aab-4b0a-8928-d896a1026d28" name="NLP: Feature Extraction - Send Request" type="Code"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>34f8f1cf-18de-445a-a82d-ddcfbad8d3ee</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, payload);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="2566b3a5-0523-4b3d-b9b7-435242f8962a" name="Anchor1" type="Anchor"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><display x="75" y="30" w="10" h="10" /><onsuccess>4a6d6c81-5aab-4b0a-8928-d896a1026d28</onsuccess></stage><stage stageid="f2f58157-7546-480b-911d-9a3d51e98191" name="Anchor2" type="Anchor"><subsheetid>67156ffe-a861-4ddd-8e93-deec5195d6ed</subsheetid><loginhibit /><display x="75" y="-60" w="10" h="10" /><onsuccess>2566b3a5-0523-4b3d-b9b7-435242f8962a</onsuccess></stage><stage stageid="e0eb90c1-11c3-41dd-b199-ab90795b1304" name="Audio: Automatic Speech Recognition" type="SubSheetInfo"><subsheetid>c4fec47e-2a48-42d5-afaa-bfdefdd35fc6</subsheetid><narrative>Reads audio input and outputs the spoken words within the audio file</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="7f0db7fc-83eb-477c-99c9-5e66bb54a948" name="Start" type="Start"><subsheetid>c4fec47e-2a48-42d5-afaa-bfdefdd35fc6</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="File Path" narrative="[Required] The path to the audio file to be processed. Most formats are allowed (.mp3, .wav, .flac, .ogg)" stage="File Path" /></inputs><onsuccess>fd055b95-7abb-4224-a7ac-a4ceedd2dfac</onsuccess></stage><stage stageid="fcb1f6e6-ce7c-4482-ae60-7f4fbd6ac4f5" name="End" type="End"><subsheetid>c4fec47e-2a48-42d5-afaa-bfdefdd35fc6</subsheetid><loginhibit /><display x="15" y="-15" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="0a1eda46-620b-49e6-abd0-e2572ce48b87" name="File Path" type="Data"><subsheetid>c4fec47e-2a48-42d5-afaa-bfdefdd35fc6</subsheetid><loginhibit /><narrative>The path to the audio file to be processed. Most formats are allowed (.mp3, .wav, .flac, .ogg)</narrative><display x="-300" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="83a77199-1fda-4213-a523-82d69e38bd38" name="Success" type="Data"><subsheetid>c4fec47e-2a48-42d5-afaa-bfdefdd35fc6</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-135" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c4498bb7-2429-4d77-ac84-58ed9634b86b" name="Status" type="Data"><subsheetid>c4fec47e-2a48-42d5-afaa-bfdefdd35fc6</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-135" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="512c5c8c-1d12-4698-925f-c4a792107723" name="Content" type="Data"><subsheetid>c4fec47e-2a48-42d5-afaa-bfdefdd35fc6</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="797ffaea-c5fc-4fc2-b262-8b50eafe8af0" name="Error" type="Data"><subsheetid>c4fec47e-2a48-42d5-afaa-bfdefdd35fc6</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-135" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3b4e1890-46f5-4432-b103-1ff1a369dd48" name="Request" type="Data"><subsheetid>c4fec47e-2a48-42d5-afaa-bfdefdd35fc6</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-135" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="edf511c6-d9ab-4e1a-86fc-bf325fc6ebc7" name="Headers" type="Collection"><subsheetid>c4fec47e-2a48-42d5-afaa-bfdefdd35fc6</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-135" y="75" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a5f43bbd-5142-4f98-bc87-1b0c6cde46b1" name="Inputs" type="Block"><subsheetid>c4fec47e-2a48-42d5-afaa-bfdefdd35fc6</subsheetid><loginhibit /><display x="-375" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f5223890-5268-41c8-b0ff-0e68e84bc76d" name="Outputs" type="Block"><subsheetid>c4fec47e-2a48-42d5-afaa-bfdefdd35fc6</subsheetid><loginhibit /><display x="-210" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="fd055b95-7abb-4224-a7ac-a4ceedd2dfac" name="Audio: Automatic Speech Recognition - Send Request" type="Code"><subsheetid>c4fec47e-2a48-42d5-afaa-bfdefdd35fc6</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type (Octet-Stream)]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="filePath" expr="[File Path]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>fcb1f6e6-ce7c-4482-ae60-7f4fbd6ac4f5</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, filePath, true);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="77f1cda0-9954-4560-b1ac-559cbe7c01b2" name="Global - Content Type (Octet-Stream)" type="Data"><loginhibit /><narrative>The value for the content type header for octet-stream requests</narrative><display x="30" y="0" w="180" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">application/octet-stream</initialvalue><alwaysinit /></stage><stage stageid="5e7fae75-4bcd-4258-b021-0de3b4e43dfc" name="Audio: Classification" type="SubSheetInfo"><subsheetid>5b70b8a8-49e7-41ee-8122-90ec54811216</subsheetid><narrative>Reads audio input and outputs the likelihood of classes</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="94a9357f-2b1b-4717-b289-7411186d207d" name="Start" type="Start"><subsheetid>5b70b8a8-49e7-41ee-8122-90ec54811216</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="File Path" narrative="[Required] The path to the audio file to be processed. Most formats are allowed (.mp3, .wav, .flac, .ogg)" stage="File Path" /></inputs><onsuccess>98fcf0c6-2c29-4402-abae-720a931612b6</onsuccess></stage><stage stageid="50b847ee-844c-4163-b778-77c6f4fce0ae" name="End" type="End"><subsheetid>5b70b8a8-49e7-41ee-8122-90ec54811216</subsheetid><loginhibit /><display x="15" y="-15" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="1c0929ef-0e0b-4805-a35a-4c0802c2d0e1" name="File Path" type="Data"><subsheetid>5b70b8a8-49e7-41ee-8122-90ec54811216</subsheetid><loginhibit /><narrative>The path to the audio file to be processed. Most formats are allowed (.mp3, .wav, .flac, .ogg)</narrative><display x="-300" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7fdb1227-0e1e-47c9-bf31-18c7e50d35d8" name="Success" type="Data"><subsheetid>5b70b8a8-49e7-41ee-8122-90ec54811216</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-135" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="dd57d38e-6772-4464-a06d-5603135ae878" name="Status" type="Data"><subsheetid>5b70b8a8-49e7-41ee-8122-90ec54811216</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-135" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="be939154-7f7c-4302-b4a0-a89da72337df" name="Content" type="Data"><subsheetid>5b70b8a8-49e7-41ee-8122-90ec54811216</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="08e667bf-dec0-418d-886d-ed9d07ff8ccb" name="Error" type="Data"><subsheetid>5b70b8a8-49e7-41ee-8122-90ec54811216</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-135" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ce97ee99-d310-4e5b-b1ea-d471085622f7" name="Request" type="Data"><subsheetid>5b70b8a8-49e7-41ee-8122-90ec54811216</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-135" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d83f6bf3-0700-42e6-9295-0ec985649643" name="Headers" type="Collection"><subsheetid>5b70b8a8-49e7-41ee-8122-90ec54811216</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-135" y="75" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cf24942c-c1e6-4f5f-bd0b-1244a5a6317e" name="Inputs" type="Block"><subsheetid>5b70b8a8-49e7-41ee-8122-90ec54811216</subsheetid><loginhibit /><display x="-375" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2e254e78-0a13-4a52-aa91-4ae010c2d117" name="Outputs" type="Block"><subsheetid>5b70b8a8-49e7-41ee-8122-90ec54811216</subsheetid><loginhibit /><display x="-210" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="98fcf0c6-2c29-4402-abae-720a931612b6" name="Audio: Classification - Send Request" type="Code"><subsheetid>5b70b8a8-49e7-41ee-8122-90ec54811216</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type (Octet-Stream)]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="filePath" expr="[File Path]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>50b847ee-844c-4163-b778-77c6f4fce0ae</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, filePath, true);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="13f83540-c99b-47a5-8ed9-2568fcc337a7" name="Computer Vision: Image Classification" type="SubSheetInfo"><subsheetid>c6ecc022-cef9-47c0-adb5-36576a714b71</subsheetid><narrative>Reads an image and outputs the likelihood of classes</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="e27b73fc-28c2-4cad-92f9-6b2d62819d8c" name="Start" type="Start"><subsheetid>c6ecc022-cef9-47c0-adb5-36576a714b71</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="File Path" narrative="[Required] The path to the image file to be processed" stage="File Path" /></inputs><onsuccess>87cf8e8f-ac6a-4502-ab83-1da20165cb62</onsuccess></stage><stage stageid="67fb01b3-664f-42ff-9ea1-9f4b5e7aad72" name="End" type="End"><subsheetid>c6ecc022-cef9-47c0-adb5-36576a714b71</subsheetid><loginhibit /><display x="15" y="-15" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="37166027-a7b1-4fbb-9542-bc8ed9f2828d" name="File Path" type="Data"><subsheetid>c6ecc022-cef9-47c0-adb5-36576a714b71</subsheetid><loginhibit /><narrative>The path to the image file to be processed</narrative><display x="-300" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bea33175-8dcc-4a6a-b9b1-732032c358e5" name="Success" type="Data"><subsheetid>c6ecc022-cef9-47c0-adb5-36576a714b71</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-135" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="117fa64f-39a0-4ee7-9b78-e1b83a87e0c0" name="Status" type="Data"><subsheetid>c6ecc022-cef9-47c0-adb5-36576a714b71</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-135" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c89e228c-f109-43d3-8794-d6cd3bea28f0" name="Content" type="Data"><subsheetid>c6ecc022-cef9-47c0-adb5-36576a714b71</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="33d7476e-01a2-4bcd-9054-eb29adee0eae" name="Error" type="Data"><subsheetid>c6ecc022-cef9-47c0-adb5-36576a714b71</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-135" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee412d81-f86f-4217-9bf6-823ece0cab4c" name="Request" type="Data"><subsheetid>c6ecc022-cef9-47c0-adb5-36576a714b71</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-135" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d60f21e1-baa3-4ea6-a18a-154db802556c" name="Headers" type="Collection"><subsheetid>c6ecc022-cef9-47c0-adb5-36576a714b71</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-135" y="75" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="b99c5d30-f135-4246-8cc1-5ea8ca61cefd" name="Inputs" type="Block"><subsheetid>c6ecc022-cef9-47c0-adb5-36576a714b71</subsheetid><loginhibit /><display x="-375" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="9cf3a0f0-7372-4aba-9fcc-95a26a0424fd" name="Outputs" type="Block"><subsheetid>c6ecc022-cef9-47c0-adb5-36576a714b71</subsheetid><loginhibit /><display x="-210" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="87cf8e8f-ac6a-4502-ab83-1da20165cb62" name="Computer Vision: Image Classification - Send Request" type="Code"><subsheetid>c6ecc022-cef9-47c0-adb5-36576a714b71</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type (Octet-Stream)]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="filePath" expr="[File Path]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>67fb01b3-664f-42ff-9ea1-9f4b5e7aad72</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, filePath, true);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="05980d14-7d02-4f22-b6ea-a5dc22c9890d" name="Computer Vision: Object Detection" type="SubSheetInfo"><subsheetid>10f4ff07-12bc-47c7-9a5b-81cf86a63fa9</subsheetid><narrative>Reads an image and outputs the likelihood of classes and bounding boxes of detected objects</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="5c2aa406-d990-48ad-bf25-be2c21407712" name="Start" type="Start"><subsheetid>10f4ff07-12bc-47c7-9a5b-81cf86a63fa9</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="File Path" narrative="[Required] The path to the image file to be processed" stage="File Path" /></inputs><onsuccess>ae101388-5db2-43aa-9bb7-1bdec499136b</onsuccess></stage><stage stageid="465d18f3-9537-4567-9e95-4350d74266e0" name="End" type="End"><subsheetid>10f4ff07-12bc-47c7-9a5b-81cf86a63fa9</subsheetid><loginhibit /><display x="15" y="-15" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="ff06aff3-afc2-4e4b-a949-789944afaf77" name="File Path" type="Data"><subsheetid>10f4ff07-12bc-47c7-9a5b-81cf86a63fa9</subsheetid><loginhibit /><narrative>The path to the image file to be processed</narrative><display x="-300" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d768db5b-0238-4724-8c49-7fc3a2981df0" name="Success" type="Data"><subsheetid>10f4ff07-12bc-47c7-9a5b-81cf86a63fa9</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-135" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2e52d94a-09e2-4a05-bfcd-7b0eaba3dddf" name="Status" type="Data"><subsheetid>10f4ff07-12bc-47c7-9a5b-81cf86a63fa9</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-135" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dbfe28bc-4a43-4df3-93f2-508eb6e29ae5" name="Content" type="Data"><subsheetid>10f4ff07-12bc-47c7-9a5b-81cf86a63fa9</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a2d3f5fa-397b-4d3b-973d-67ce67765915" name="Error" type="Data"><subsheetid>10f4ff07-12bc-47c7-9a5b-81cf86a63fa9</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-135" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3944a063-2d9f-40b0-8673-3cfed89ef09a" name="Request" type="Data"><subsheetid>10f4ff07-12bc-47c7-9a5b-81cf86a63fa9</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-135" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="145aaa39-30c1-4b54-a365-73026ce0e283" name="Headers" type="Collection"><subsheetid>10f4ff07-12bc-47c7-9a5b-81cf86a63fa9</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-135" y="75" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7925e9ce-a554-401c-ab5c-cd320f2454c8" name="Inputs" type="Block"><subsheetid>10f4ff07-12bc-47c7-9a5b-81cf86a63fa9</subsheetid><loginhibit /><display x="-375" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7a185aee-aa66-4061-af32-ca9369c9ad10" name="Outputs" type="Block"><subsheetid>10f4ff07-12bc-47c7-9a5b-81cf86a63fa9</subsheetid><loginhibit /><display x="-210" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ae101388-5db2-43aa-9bb7-1bdec499136b" name="Computer Vision: Object Detection - Send Request" type="Code"><subsheetid>10f4ff07-12bc-47c7-9a5b-81cf86a63fa9</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type (Octet-Stream)]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="filePath" expr="[File Path]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>465d18f3-9537-4567-9e95-4350d74266e0</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, filePath, true);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="9ab076ba-8b9b-4276-ad9d-6d357bea5082" name="Computer Vision: Image Segmentation" type="SubSheetInfo"><subsheetid>7daf2cf2-954d-47d1-a6a7-a8ce487bb3a9</subsheetid><narrative>Reads an image and outputs the likelihood of classes and bounding boxes of detected objects</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="acb7b47b-8531-48b7-8420-5c4c6943b0f2" name="Start" type="Start"><subsheetid>7daf2cf2-954d-47d1-a6a7-a8ce487bb3a9</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Model" narrative="[Required] The name of the Hugging Face model to be utilized. See https://huggingface.co/models for available models. Example: facebook/bart-large-cnn" stage="Global - Model" /><input type="password" name="Token" narrative="[Required] The token for authenticating API requests" stage="Global - Token" /><input type="number" name="Timeout" narrative="[Optional] The number of milliseconds before a request should be timed out. Default: 30,000" stage="Global - Timeout" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Indicates if the request should be sent. Set to False to send requests. Set to True to build requests without sending. Useful for troubleshooting. Default: False" stage="Global - Disable Sending of Request" /><input type="text" name="File Path" narrative="[Required] The path to the image file to be processed" stage="File Path" /></inputs><onsuccess>8263caab-d663-4f68-b89d-1b7b59c0a151</onsuccess></stage><stage stageid="bdaf06b5-92b9-4655-abc0-25eba898f936" name="End" type="End"><subsheetid>7daf2cf2-954d-47d1-a6a7-a8ce487bb3a9</subsheetid><loginhibit /><display x="15" y="-15" /><outputs><output type="flag" name="Success" narrative="Indicates if the request was successful." stage="Success" /><output type="text" name="Status" narrative="The HTTP status code of the request" stage="Status" /><output type="text" name="Content" narrative="The content of the response" stage="Content" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Headers" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Error" /><output type="text" name="Request" narrative="The summary of the request" stage="Request" /></outputs></stage><stage stageid="0acfd88c-b603-4d27-a9b3-98060096ef87" name="File Path" type="Data"><subsheetid>7daf2cf2-954d-47d1-a6a7-a8ce487bb3a9</subsheetid><loginhibit /><narrative>The path to the image file to be processed</narrative><display x="-300" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e61decd0-ba59-4fc4-b500-a7a5d7a1de36" name="Success" type="Data"><subsheetid>7daf2cf2-954d-47d1-a6a7-a8ce487bb3a9</subsheetid><loginhibit /><narrative>Indicates if the request was successful.</narrative><display x="-135" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0631706f-738f-4906-80cd-fc71414dd726" name="Status" type="Data"><subsheetid>7daf2cf2-954d-47d1-a6a7-a8ce487bb3a9</subsheetid><loginhibit /><narrative>The HTTP status code of the request</narrative><display x="-135" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="538b6a06-2f1a-49eb-9a60-af19bbf8155d" name="Content" type="Data"><subsheetid>7daf2cf2-954d-47d1-a6a7-a8ce487bb3a9</subsheetid><loginhibit /><narrative>The content of the response</narrative><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aab8cf0a-cda9-4ac9-bb8c-4999331d5719" name="Error" type="Data"><subsheetid>7daf2cf2-954d-47d1-a6a7-a8ce487bb3a9</subsheetid><loginhibit /><narrative>The error message, if any occurs</narrative><display x="-135" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34156277-a52c-4794-9e39-f687fbcac8d5" name="Request" type="Data"><subsheetid>7daf2cf2-954d-47d1-a6a7-a8ce487bb3a9</subsheetid><loginhibit /><narrative>The summary of the request</narrative><display x="-135" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad7631e7-afc6-4391-85a7-18e14e2b5c97" name="Headers" type="Collection"><subsheetid>7daf2cf2-954d-47d1-a6a7-a8ce487bb3a9</subsheetid><loginhibit /><narrative>The headers contained in the response</narrative><display x="-135" y="75" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="14ff1a94-0f46-41bb-a53c-76ada7878568" name="Inputs" type="Block"><subsheetid>7daf2cf2-954d-47d1-a6a7-a8ce487bb3a9</subsheetid><loginhibit /><display x="-375" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="fae88faf-1252-40f4-bfe1-ef507b300a90" name="Outputs" type="Block"><subsheetid>7daf2cf2-954d-47d1-a6a7-a8ce487bb3a9</subsheetid><loginhibit /><display x="-210" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8263caab-d663-4f68-b89d-1b7b59c0a151" name="Computer Vision: Image Segmentation - Send Request" type="Code"><subsheetid>7daf2cf2-954d-47d1-a6a7-a8ce487bb3a9</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="method" expr="[Global - Method]" /><input type="text" name="contentType" expr="[Global - Content Type (Octet-Stream)]" /><input type="text" name="model" expr="[Global - Model]" /><input type="password" name="token" expr="[Global - Token]" /><input type="number" name="timeout" expr="[Global - Timeout]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="filePath" expr="[File Path]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="status" stage="Status" /><output type="text" name="content" stage="Content" /><output type="collection" name="headers" stage="Headers" /><output type="text" name="error" stage="Error" /><output type="text" name="requestSummary" stage="Request" /></outputs><onsuccess>bdaf06b5-92b9-4655-abc0-25eba898f936</onsuccess><code><![CDATA[var uri = baseUrl + model;
var request = CreateRequest(uri, method, token, timeout, contentType);
var response = SendRequest(request, disableRequestSend, filePath, true);

success = response.Success;
status = response.Status;
content = response.Content;
headers = response.Headers;
error = response.Error;
requestSummary = response.Request;]]></code></stage><stage stageid="bdb48cc1-df71-4803-b05e-4c4cb1e5d685" name="Publish" type="Note"><subsheetid>d9d8c152-d9b9-49a7-9181-c1e826c119b9</subsheetid><loginhibit /><narrative>UNPUBLISHED. It appears the NLP Conversational task is not available on HuggingFace (there are no models tagged with the Conversational task type) despite its presence in the Hugging Face Inference API documentation. Leaving this action here in case there is some model on Hugging Face that supports this type of task.</narrative><display x="210" y="-30" w="210" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="36364325-d263-47ed-8695-060015dda84d" name="Blue Prism Limited Copyright Note" type="Note"><loginhibit /><narrative>© 2024 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="-555" y="-60" w="450" h="210" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage></process></object>
        <object id="66085a0f-6bf6-45e2-b5ed-6345f014f05b" name="MS Excel VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="MS Excel VBO" version="6.8.2" bpversion="7.4.1.15931" narrative="VBO that supports integration with a local instance of Microsoft Excel.&#xD;&#xA;" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>ca515603-8af2-4608-8a70-31028a7d9a0b</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>11</camerax><cameray>-68</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="You must have Excel installed locally." /></preconditions><endpoint narrative="" /><subsheet subsheetid="ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6632ed99-8751-4c2a-ad00-3cc016300e08" type="Normal" published="True"><name>Activate Workbook</name><view><camerax>-137</camerax><cameray>-75</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="733c2840-8162-465a-a8f2-7d023087c369" type="Normal" published="True"><name>Activate Worksheet</name><view><camerax>-132</camerax><cameray>-106</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ff693b16-4c78-4161-a40d-e818901cb594" type="Normal" published="True"><name>Add Criteria to Autofilter</name><view><camerax>0</camerax><cameray>126</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b120a3cb-4e9c-449d-bb4c-b29f7fe6f810" type="Normal" published="True"><name>Add AdvancedFilter</name><view><camerax>-26</camerax><cameray>105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f34a2620-a7e1-44fc-9f69-2b85749540b1" type="Normal" published="True"><name>Add Columns to Pivot Table</name><view><camerax>-73</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3e571153-3704-4ebc-a8f7-ba8a54720a4a" type="Normal" published="True"><name>Add Criteria to Page Field Filter for Pivot Table</name><view><camerax>-87</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e776b77e-ba8a-4476-a423-a758df1b7a14" type="Normal" published="True"><name>Add Page Field to Pivot Table</name><view><camerax>23</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e4828db4-dcd4-49ac-9f50-9e19ef766270" type="Normal" published="True"><name>Add Row Labels to Pivot Table</name><view><camerax>34</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="693ae5d5-9309-4b1a-8e20-e1fad3301537" type="Normal" published="True"><name>Add Values to Pivot Table</name><view><camerax>42</camerax><cameray>49</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7f5467c9-fc00-4e1a-934a-2f9bc3c8332b" type="Normal" published="True"><name>Amend Pivot Table Data Source</name><view><camerax>32</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6871bfde-213a-4018-a6cc-f12fd5e77b3b" type="Normal" published="True"><name>Add Sort to Autofilter</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ad81501-44a1-48ab-94fd-9b2c35ed20b8" type="Normal" published="True"><name>Attach</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2b3544ad-af96-4f40-9b50-16dfbe0600f1" type="Normal" published="True"><name>Attach to Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="89fcf96f-29b4-4541-9afd-111eb51cb2af" type="Normal" published="True"><name>Autocalculate</name><view><camerax>123</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7d1a63d8-1c2b-4b13-80b8-348c65b8a56b" type="Normal" published="True"><name>Autofill</name><view><camerax>123</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32" type="Normal" published="True"><name>Autofit Column(s)</name><view><camerax>86</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="41a07606-d51b-4fe3-a076-7a77a4ca2cde" type="Normal" published="False"><name>CheckFileExists</name><view><camerax>-22</camerax><cameray>-32</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9f7a4a91-68c9-4871-bb65-417e96cc4ad1" type="Normal" published="False"><name>CheckInstanceAndWorkbook</name><view><camerax>-41</camerax><cameray>-49</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="492548e8-2fa5-473e-9061-df8326d46e4c" type="Normal" published="False"><name>CheckInstanceHandle</name><view><camerax>-187</camerax><cameray>-504</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="feb8ce9f-299e-4152-85a1-354a5f9d995c" type="Normal" published="True"><name>Close All Instances</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c" type="Normal" published="True"><name>Close Current Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6ec3006a-6553-4526-b522-32526c4aa3cc" type="Normal" published="True"><name>Close Instance</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6ccaae8b-c06f-45c8-8772-835218881458" type="Normal" published="True"><name>Close Workbook</name><view><camerax>-120.799988</camerax><cameray>110</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="71ebd060-a411-45fc-8f39-132eb3e5ff79" type="Normal" published="True"><name>Copy</name><view><camerax>98</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="da83b3dd-0312-4b53-9732-e3f8e29c561f" type="Normal" published="True"><name>Copy and Paste Worksheet Range</name><view><camerax>0</camerax><cameray>105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f14b96b9-42a3-45e6-bf7b-285cb99d1bcf" type="Normal" published="True"><name>Copy Chart to Clipboard</name><view><camerax>-132</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="99e648cc-a136-471c-8424-19071c0fd9e7" type="Normal" published="True"><name>Create Instance</name><view><camerax>-104</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5b257bb9-b590-42a9-9e2f-7750668252e2" type="Normal" published="True"><name>Create Pivot Table</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="73b8ddb4-b679-4697-b3c4-79ce833a9456" type="Normal" published="True"><name>Create Workbook</name><view><camerax>-81</camerax><cameray>-204</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f78a5f80-c2d5-4e9b-ae08-a56fb8007b18" type="Normal" published="True"><name>Create Worksheet</name><view><camerax>-120</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5eee765d-c84b-493f-9132-f6a27f296d0e" type="Normal" published="True"><name>Cut</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a" type="Normal" published="True"><name>Delete</name><view><camerax>82</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="37a2442f-8e22-4749-8b44-4ef2980f28a6" type="Normal" published="True"><name>Delete Worksheet</name><view><camerax>16</camerax><cameray>-38</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6" type="Normal" published="True"><name>Draw Chart from Range</name><view><camerax>-97</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc33871a-9aec-4a29-b811-3ab205ddf41e" type="Normal" published="True"><name>Exit</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9367543b-9548-4abf-a4e3-8a13f9829c8c" type="Normal" published="True"><name>Export as PDF</name><view><camerax>0</camerax><cameray>-57</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0b5de6c6-ed9a-443d-95b8-142dd521120e" type="Normal" published="True"><name>Find Next Empty Cell</name><view><camerax>0</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e482f617-15cc-46a4-bf04-a70da83313aa" type="Normal" published="True"><name>Find in Worksheet</name><view><camerax>0</camerax><cameray>357</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c" type="Normal" published="True"><name>Format Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9b535bfc-4f80-4d7c-88b5-49b941688030" type="Normal" published="True"><name>Format Current Cell</name><view><camerax>0</camerax><cameray>-28</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8e069f50-f85d-46c0-af8f-12fc0ed754bf" type="Normal" published="True"><name>Font - Bold</name><view><camerax>32</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b4bda15a-3641-4358-a6d1-748f6db06fab" type="Normal" published="True"><name>Font - Lowercase</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5a40fe34-dabd-45a5-9bc8-42e0db460f5e" type="Normal" published="True"><name>Font - Remove Bold</name><view><camerax>23</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f32cf2e8-7958-440b-a0f3-10d2c9fc5b18" type="Normal" published="True"><name>Font - Uppercase</name><view><camerax>49</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4cbee4d2-707f-4ea2-9490-8f3cd719d5b7" type="Normal" published="True"><name>Format Range</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c" type="Normal" published="True"><name>Get Active Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d96215cc-750e-4616-8852-1d4d44a9f21b" type="Normal" published="True"><name>Get Active Cell Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0e031661-2f5e-4cb2-949b-97babe59ff81" type="Normal" published="True"><name>Get Cell Value</name><view><camerax>0</camerax><cameray>-4</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="17f8ab72-203a-42d4-a59b-a073ccd57bb0" type="Normal" published="True"><name>Get Formatted Cell Value</name><view><camerax>-54</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="260abf59-2d83-4e6b-a613-611a8bd9cba5" type="Normal" published="True"><name>Get Cell Visibility</name><view><camerax>0</camerax><cameray>17</cameray><zoom version="2">2.8125</zoom></view></subsheet><subsheet subsheetid="dc139ac7-b971-481e-9528-b1521ae9fc92" type="Normal" published="True"><name>Get Number Of Rows</name><view><camerax>8</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cc781b4b-9c18-49dd-b0f7-53a0ce978337" type="Normal" published="True"><name>Get Workbook Sensitivity Label Info</name><view><camerax>15</camerax><cameray>-117</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30" type="Normal" published="True"><name>Get Worksheet As Collection</name><view><camerax>15</camerax><cameray>-117</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e58a482d-f349-4f40-9b03-a903156ce1b5" type="Normal" published="True"><name>Get Worksheet As Collection (Fast)</name><view><camerax>-26</camerax><cameray>-72</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="92799072-140a-4621-89cd-2da12475dcda" type="Normal" published="True"><name>Get Worksheet as Collection Offset</name><view><camerax>-119</camerax><cameray>-589</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67" type="Normal" published="True"><name>Get Worksheet Name</name><view><camerax>-27</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="becd6faa-f5c0-4d3a-a48a-cb54d3aa8909" type="Normal" published="True"><name>Get Worksheet Names</name><view><camerax>-10</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="510b0ce5-bf46-43a1-86a4-72877f427e6f" type="Normal" published="True"><name>Get Worksheet Position</name><view><camerax>0</camerax><cameray>38</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e" type="Normal" published="True"><name>Get Worksheet Range As Collection</name><view><camerax>147</camerax><cameray>-33</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b812a5de-1df1-4f91-88d3-f1ea07312258" type="Normal" published="True"><name>Get Worksheet Visible Range As Collection</name><view><camerax>-113</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed502669-4207-4c88-895d-8c58ec321578" type="Normal" published="True"><name>Go To Cell</name><view><camerax>-6</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b0b877cd-07ce-4df1-a63b-89fa4d315c4c" type="Normal" published="True"><name>Go To Next Cell</name><view><camerax>-180</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="82492075-b486-413c-9bd4-05eba466843e" type="Normal" published="True"><name>Go To Next Empty Cell Down</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eaafa766-b0ce-4891-8e6e-de12d6283ae0" type="Normal" published="True"><name>Go To Next Empty Cell Left</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2d4c80d-3058-4d60-8e96-7b9b12f9ae58" type="Normal" published="True"><name>Go To Next Empty Cell Right</name><view><camerax>-26</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5a78c1a5-e339-4f76-9203-d180bee31770" type="Normal" published="True"><name>Go To Next Empty Cell Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ef10421c-e1ff-4227-b367-c53059a6766d" type="Normal" published="True"><name>Hide</name><view><camerax>-62</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e62b9c20-62f8-4d28-8f19-de7610e56e1e" type="Normal" published="True"><name>Hide Other Worksheets</name><view><camerax>-276</camerax><cameray>-917</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7316eded-6aed-4d1d-9eeb-64fbbb8e53a0" type="Normal" published="True"><name>Hide Worksheet</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1487aa65-ac8a-44e9-a6e9-8b16b4be5199" type="Normal" published="True"><name>Import CSV</name><view><camerax>52</camerax><cameray>67</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="659749b0-1f00-4e33-956d-6be6172a8739" type="Normal" published="True"><name>Insert</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ddb3c741-0c59-4ac8-a260-258fb8eb1674" type="Normal" published="True"><name>Is Read Only</name><view><camerax>-91</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c8ae2169-fd46-4133-ac4d-5e0b2617eba5" type="Normal" published="True"><name>List Pivot Table Names</name><view><camerax>22</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="36a8fb06-38cb-48cd-a2d3-e86aa1feb062" type="Normal" published="True"><name>Merge Cells</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="79b9bf7c-222d-4cc3-adc8-5bb337fa6d72" type="Normal" published="True"><name>Move Worksheet</name><view><camerax>85</camerax><cameray>98</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ec281dc5-ed57-4b8b-9bf5-212e314657aa" type="Normal" published="True"><name>Open Instance</name><view><camerax>-129</camerax><cameray>-220</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2fb01e3f-e275-43bc-83eb-579001da335b" type="Normal" published="True"><name>Open Workbook</name><view><camerax>-255</camerax><cameray>-39</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="035d5ed0-2f39-46ca-80c1-b0127418dc9e" type="Normal" published="True"><name>Paste</name><view><camerax>-282</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c37e9923-b729-471b-80b1-7d44113ca618" type="Normal" published="True"><name>Protect Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8bf9be03-0eb7-4a7b-9288-4701615470f7" type="Normal" published="True"><name>Refresh All</name><view><camerax>0</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bc036c29-0dac-4e29-8cb8-3b8080859934" type="Normal" published="True"><name>Refresh Pivot Table</name><view><camerax>0</camerax><cameray>18</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4fb11e41-83d8-461d-8c0d-04cdd2f670e2" type="Normal" published="True"><name>Release Instance</name><view><camerax>0</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67651307-0389-47bf-ae8d-fd94364e808f" type="Normal" published="True"><name>Remove Blank Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4" type="Normal" published="True"><name>Remove Field from Pivot Table</name><view><camerax>16</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8a04bea6-656a-4cda-8b78-130a55f9a0bc" type="Normal" published="True"><name>Remove Pivot Table</name><view><camerax>0</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c50b67c1-fd97-4305-ab25-db7e94ab4f0c" type="Normal" published="True"><name>Replace in Worksheet</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4229da44-68c0-4b51-9d2c-08be4a9d6727" type="Normal" published="True"><name>Run Macro</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="27474cd9-9fc3-48de-ba4d-edaff65efde2" type="Normal" published="True"><name>Run Macro - From Text File</name><view><camerax>-119</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="14e69a88-1cd0-44b7-84d6-0fb16cf3872d" type="Normal" published="True"><name>Run Macro with Parallel Thread</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="76d598ed-b254-4c1e-8004-d4f2928b1450" type="Normal" published="True"><name>Save Current Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9c95435d-a34c-46cc-b90d-ab2ae7a3ec91" type="Normal" published="True"><name>Save Chart as Image File</name><view><camerax>-114</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="81b9e5cd-a91d-4a33-bc23-1602c5fe878f" type="Normal" published="True"><name>Save Current Workbook As</name><view><camerax>-44</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6e7cb0ad-5910-4065-aab2-2919726bae39" type="Normal" published="True"><name>Save Workbook</name><view><camerax>-121</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="21a53e34-8128-41cb-ad73-17250758ff23" type="Normal" published="True"><name>Save Workbook As</name><view><camerax>-64</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="859e3c31-acbc-48dd-8535-ef2ce9385d70" type="Normal" published="True"><name>Set Current Instance</name><view><camerax>-36</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="69db5cf5-4908-49c7-9027-8f48e26e5b27" type="Normal" published="True"><name>Set Events Enabled</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9147cb85-5c6f-4a47-adcf-ab472d5a0b5a" type="Normal" published="True"><name>Select</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5698ca16-b00d-4d62-9d9b-e76e8295b556" type="Normal" published="True"><name>Set Cell Value</name><view><camerax>55</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2515fa45-d11d-4317-b6cb-6941183e0b6b" type="Normal" published="True"><name>Set Value of Cells in Range</name><view><camerax>11</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="904eeb0d-e6a2-408b-99b5-621307252585" type="Normal" published="True"><name>Set Window Location</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="39374841-edab-4ea9-86d9-5f2fff3f1a5f" type="Normal" published="True"><name>Set Window Size</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d4998c94-d432-4713-81a5-e902535089c6" type="Normal" published="True"><name>Set Window State</name><view><camerax>-11</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9d88cd26-6c39-4eb2-8993-8cbb2eb4384a" type="Normal" published="True"><name>Set Workbook Sensitivity Label Info</name><view><camerax>15</camerax><cameray>-117</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="268628ce-c0f3-492a-be5c-87b432e16d1d" type="Normal" published="True"><name>Show</name><view><camerax>0</camerax><cameray>-131</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="85caf92e-2249-4026-bcf7-ece74a7caf06" type="Normal" published="True"><name>Sort Column</name><view><camerax>193</camerax><cameray>189</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f743df98-2e69-4559-89b6-32ef6637618d" type="Normal" published="True"><name>Split Worksheet</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3f24f536-12d6-47ea-a894-656b1fe4903f" type="Normal" published="True"><name>Text to Columns</name><view><camerax>0</camerax><cameray>29</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="04319f8f-404b-4311-b6e3-21912e409349" type="Normal" published="True"><name>Turn off Autofilter</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e172f6c0-22cb-43ca-a9f6-97382cdb1ce9" type="Normal" published="True"><name>Turn on Autofilter</name><view><camerax>0</camerax><cameray>26</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eacc4634-9985-4a1d-9773-8f79928708ee" type="Normal" published="True"><name>Worksheet Exists</name><view><camerax>105</camerax><cameray>81</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0dbe03a0-e259-47ab-bee7-7dec41ae32e7" type="Normal" published="True"><name>Write Collection</name><view><camerax>0</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5cf6d9a-2d16-40d6-ad95-b7df275166d7" type="Normal" published="True"><name>Write Collection (Fast)</name><view><camerax>0</camerax><cameray>115</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2c59601b-2b70-4c97-a218-0abf1bf7463a" type="Normal" published="True"><name>Write To Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="8f886cd8-eef6-485f-b9f3-0086c90eecdb" name="Start" type="Start"><loginhibit /><display x="0" y="-135" /><onsuccess>d0d87ebb-154d-4756-8b89-d2d5445479ae</onsuccess></stage><stage stageid="d0d87ebb-154d-4756-8b89-d2d5445479ae" name="End" type="End"><loginhibit /><display x="0" y="90" /></stage><stage stageid="13efd9ee-454d-4e73-a19d-91a25c412087" name="Stage1" type="ProcessInfo"><display x="-225" y="-105" w="300" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.Windows.Forms.dll</reference><reference>System.Core.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Collections.Generic</import><import>System.IO</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>System.Diagnostics</import><import>System.Text</import><import>System.Threading</import><import>System.Runtime.InteropServices</import><import>System.Windows.Forms</import><import>System.Linq</import><import>System.Text.RegularExpressions</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[
' External functions used to make sure the excel instances are exited and processes killed
Declare Function EndTask Lib "user32.dll" (ByVal hWnd As IntPtr) As Integer
Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As IntPtr
Declare Function FindWindowEx Lib "user32.dll" Alias "FindWindowExA" (hWnd1 As IntPtr, hWnd2 As IntPtr, lpsz1 As String, lpsz2 As String) As IntPtr
Declare Function GetWindowThreadProcessId Lib "user32.dll" (ByVal hWnd As IntPtr, ByRef lpdwProcessId As Integer) As Integer
Declare Function SetLastError Lib "kernel32.dll" (ByVal dwErrCode As Integer) As IntPtr
Declare Function AccessibleObjectFromWindow Lib "oleacc.dll" (hWnd As IntPtr, dwId As Int32, ByRef riid As Guid, <MarshalAs(UnmanagedType.Interface)> ByRef ppvObject As Object) As Int32
Declare Function SendMessage Lib "user32" Alias "SendMessageA" (ByVal hwnd As Int32, ByVal wMsg As Int32, ByVal wParam As Int32, ByVal lParam As String) As Int32

Private Const WM_CLOSE As Long = &H10

' The 'active' instance of excel.
' This is updated on any access of an instance (either adding a new
' instance or getting one)
Private CurrentInstance As Object

' Map of instances keyed against the handles which represent them.
Private HandleMap As Dictionary(Of Integer, Object)

' Map of handles keyed against the instances they represent.
' Here to ensure we don't assign multiple handles to a single
' instance and bring about a memory leak
Private InstanceMap As Dictionary(Of Object, Integer)

' Constructor - this just initialises the collections which map
' the excel instances to handles and vice versa.
Public Sub New()

	Me.HandleMap = New Dictionary(Of Integer, Object)()
	Me.InstanceMap = New Dictionary(Of Object, Integer)()

End Sub

' Execute a sub within a specific timeout period
'
' @param timeout The number of seconds to wait before timing out
' @param name The name of the operation
' @param operation The operation to perform
Private Sub ExecWithTimeout(timeout As Integer, name As String, operation As Action)
    Dim ar = operation.BeginInvoke(Nothing, Nothing)
    If Not ar.AsyncWaitHandle.WaitOne(TimeSpan.FromSeconds(timeout)) Then
        Throw New TimeoutException(name & " took more than " & timeout & " secs.")
    End If
    operation.EndInvoke(ar)
End Sub

' Execute a function within a specific timeout period
'
' @param timeout The number of seconds to wait before timing out
' @param name The name of the operation
' @param operation The operation to perform
'
' @return The result of the operation
Private Function ExecWithTimeout(Of T)(timeout As Integer, name As String, operation As Func(Of T)) As T
    Dim ar = operation.BeginInvoke(Nothing, Nothing)
    If Not ar.AsyncWaitHandle.WaitOne(TimeSpan.FromSeconds(timeout)) Then
        Throw New TimeoutException(name & " took more than " & timeout & " secs.")
    End If
    return operation.EndInvoke(ar)
End Function

' Used to hold a reference to the last exception that occurred
' Be careful to set back to nothing when the type has been checked.
Private mLastException As Exception = Nothing

' Loops over all excel instances and gets the instance with a given
' workbook name. This uses active accessibility because:
'     Dim application = GetObject(,"Excel.Application)
'     application.Windows(workbookName).Activate()
' dosen't work if there is more than one instance of excel
'
' @param workBookName The name of the workbook
'
' @return The application instance
Public Function OpenNamedObjectAA(workbookName As String) As Object
    Const OBJID_NATIVEOM = &HFFFFFFF0
    Dim IID_DISPATCH As New Guid("00020400-0000-0000-C000-000000000046")
    Dim workBook As Object = Nothing
    Do
        Dim XLhwnd As IntPtr = FindWindowEx(IntPtr.Zero, XLhwnd, "XLMAIN", Nothing)
        If IntPtr.Equals(XLhwnd, IntPtr.Zero) Then Exit Do
        Dim XLDESKhwnd As IntPtr = FindWindowEx(XLhwnd, IntPtr.Zero, "XLDESK", Nothing)
        Dim WBhwnd As IntPtr = FindWindowEx(XLDESKhwnd, IntPtr.Zero, "EXCEL7", Nothing)
        AccessibleObjectFromWindow(WBhwnd, OBJID_NATIVEOM, IID_DISPATCH, workBook)
        If workBook IsNot Nothing Then
            Dim application As Object = workBook.Application
            If application IsNot Nothing Then
                Try
                    application.Windows(workbookName).Activate()
                    Return application
                Catch ex As Exception
                    Continue Do
                End Try
            End If
        End If
    Loop
    Throw new Exception("Excel with workbook name '" & workBookName & "' not found.")
End Function

' Gets the handle for a given instance
'
' If the instance is not yet held, then it is added to the 
' 	map and a handle is assigned to it. It is also set as the
' 	'current' instance, accessed with a handle of zero in the
' 	below methods.
'
' Either way, the handle which identifies the instance is returned
'
' @param Instance The instance for which a handle is required
'
' @return The handle of the instance
Protected Function GetHandle(Instance As Object) As Integer

	If Instance Is Nothing Then
		Throw New ArgumentNullException("Tried to add an empty instance")
	End If

	' Check if we already have this instance - if so, return it.
	If InstanceMap.ContainsKey(Instance) Then
		CurrentInstance = Instance
		Return InstanceMap(Instance)
	End If

	Dim key as Integer
	For key = 1 to Integer.MaxValue
		If Not HandleMap.ContainsKey(key)
			HandleMap.Add(key, Instance)
			InstanceMap.Add(Instance, key)
			Me.CurrentInstance = Instance
			Return key
		End If
	Next key

	Return 0

End Function


' Gets the instance corresponding to the given handle, setting
' 	the instance as the 'current' instance for future calls
'
' A value of 0 will provide the 'current' instance, which
' 	is set each time an instance is added or accessed.
'
' This will return Nothing if the given handle does not
' correspond to a registered instance, or if the current
' instance was closed and the reference has not been updated.
'
' @param Handle The handle representing the instance required,
' 		or zero to get the 'current' instance.
Protected Function GetInstance(Handle As Integer) As Object

	Dim Instance As Object = Nothing
	
	If Handle = 0 Then
		If CurrentInstance Is Nothing Then
			' Special case - getting the current instance when the
			' instance is not set, try and get a current open instance.
			' If none there, create a new one and assign a handle as if
			' CreateInstance() had been called
		'	Try
		'		Instance = GetObject(,"Excel.Application")
		'	Catch ex as Exception ' Not running
		'		Instance = Nothing
		'	End Try
		'	If Instance Is Nothing Then
				Create_Instance(Handle)
				' Instance = CreateObject("Excel.Application")
				' Force the instance into the maps.
				' GetHandle(Instance)
				' CurrentInstance should now be set.
				' If it's not, we have far bigger problems
		'	End If
		End If
		Return CurrentInstance
	End If

	Instance = HandleMap(Handle)
	If Not Instance Is Nothing Then
		CurrentInstance = Instance
	End If
	Return Instance

End Function

' Helper method in forcing a com object to be released.
Private Sub ReleaseObject(ByVal comOj As Object)
	Try
		System.Runtime.InteropServices.Marshal.ReleaseComObject(comOj)
		System.Runtime.InteropServices.Marshal.FinalReleaseComObject(comOj)
		comOj = Nothing
	Catch ex As Exception
		comOj = Nothing
	Finally
		' Why is GC.Collect being called twice?
		' See https://msdn.microsoft.com/en-us/library/ff647790.aspx?f=255&MSPPError=-2147217396#scalenetchapt05_topic9
		GC.Collect()
		GC.WaitForPendingFinalizers()
		GC.Collect()
	End Try
End Sub

' Close the instance with the given handle, not saving any work, making
' sure that it is removed from this VBO's collection of instances
'
' @param Handle The handle representing the instance to close
Protected Sub CloseInstance(Handle As Integer)
	CloseInstance(Handle, False)
End Sub

' Close the instance with the given handle, saving the work as specified.
'
' @param Handle The handle representing the instance
'
' @param SaveWorkbooks True to save the workbooks before quitting the instance,
' 		False to discard any changes
Protected Sub CloseInstance(Handle As Integer, SaveWorkbooks As Boolean)
	
	Dim Instance As Object = Nothing
	If Handle = 0 AndAlso CurrentInstance Is Nothing Then
		Throw New NullReferenceException("Tried to close nonexistent current instance")
	ElseIf Handle = 0 ' Current Instance - reset it
		Handle = GetHandle(CurrentInstance) ' We need the handle to remove from HandleMap
		Instance = CurrentInstance
		CurrentInstance = Nothing
	Else
		Instance = GetInstance(Handle)
	End If

	Me.HandleMap.Remove(Handle)
	Me.InstanceMap.Remove(Instance)

	Instance.DisplayAlerts = False ' Hide alerts
	
	' First close all the workbooks and the workbooks collection
	Dim wbs as Object = Instance.Workbooks
	If wbs IsNot Nothing Then
		For Each Workbook As Object In wbs
			Workbook.Close(SaveWorkbooks)
			ReleaseObject(Workbook)
		Next
		wbs.Close()
	End If
	ReleaseObject(wbs)

	' Try quitting - sometimes this is enough
	Instance.Quit()
	
	' Try and force a com object release - this might quit excel for us.
	ReleaseObject(Instance)

	' Now if the com object has released the RCW, we need to stop
	' We'll know because if we try and get the version and it fails
	' then the COM object has been cleaned up.
	' If so, end the proc now - we have to assume the instance is gone
	
	Dim Ver as Double = 0.0
	Try
		Ver = Val(Instance.Version)
	Catch ex as Exception
		' Not got the version - assuming cleared up
		Return
	Finally
		SetLastError(0) ' If any errors have occurred thus far, clear them
	End Try

	' Now it's the messy stuff to try and find the excel instance and nuke
	' it from orbit. It's the only way to be sure.

	' The window handle for the excel instance
	Dim hwnd As IntPtr = IntPtr.Zero
	' Later versions of excel expose the window handle
	If Val(Ver) >= 10 Then _
		hwnd = New IntPtr(CType(Instance.Parent.Hwnd, Integer))
		
	' If the window handle isn't set, must be an earlier version of excel
	' Use FindWindow to find the window with the GUID that we set in it on creation
	If IntPtr.Equals(hwnd, IntPtr.Zero) Then _
		hwnd = FindWindow(Nothing, Instance.Caption)
	
	' If the window handle is still zero, the instance must already be closed
	If Not IntPtr.Equals(hwnd, IntPtr.Zero) Then
	
        ' Get the process ID for the window we have
		Dim resp, procId as Integer
        resp = GetWindowThreadProcessId(hwnd, procId)
		
        If procId = 0 Then ' can’t get Process ID
            If EndTask(hwnd) = 0 Then ' EndTask returns a bool - 0 = False
				Throw New ApplicationException("Failed to close Excel Instance.")
			End If
        Else ' We have a process ID - use it to kill excel
			Dim proc As Process = Process.GetProcessById(procId)
			' Try clicking the 'X'
			proc.CloseMainWindow()
			proc.Refresh()

			If Not proc.HasExited Then
				proc.Kill()	' Last resort - kill it with fire
			End If	
		End If	
	End If

End Sub

' Creates a new workbook in the instance represented by the given handle
'
' @param Handle The handle of the instance on which the workbook should be held
'
' @return The workbook object that was created.
Protected Function NewWorkbook(Handle as Integer) As Object

	Dim wb as Object = GetInstance(handle).Workbooks.Add()

	' Create a new Worksheet?
	if wb.Worksheets.Count = 0 Then
		wb.Sheets.Add().Activate()
	Else ' Just use the first sheet
		wb.Sheets(1).Activate()
	End If
	
	Return wb
	
End Function

' Gets the workbook in the given instance with the given name.
'
' @param Handle The handle representing the instance which holds the workbook
'
' @param Name The name of the workbook on the instance
'
' @return The object representing the workbook defined
Protected Function GetWorkbook(Handle As Integer, Name as String) As Object

	Dim wb as Object = Nothing
	If String.IsNullOrEmpty(Name) Then
		wb = GetInstance(Handle).ActiveWorkbook
		If wb Is Nothing ' We need to create a deafult workbook
			wb = NewWorkbook(Handle)
		End If
		Return wb
	Else
		Return GetInstance(Handle).Workbooks(Name)
	End If

End Function

' Gets the worksheet specified by the given handle, workbook name and
' worksheet name. If no such sheet is available, this will create a
' new one and return that
'
' @param Handle The handle identifying the instance which should be
' 		acted on
'
' @param WorkbookName The name of the workbook within the instance
'
' @param WorksheetName The name of the worksheet required
'
' @return The sheet object representing the sheet with the given name
Protected Function GetWorksheet(Handle As Integer, _
		WorkbookName As String, _
		WorksheetName As String) As Object

	Return GetWorksheet(Handle,WorkbookName,WorksheetName,True)

End Function

' Gets the worksheet specified by the given handle, workbook name and
' worksheet name. If no such sheet is available, this will create a
' new one or return Nothing, depending on the given flag
'
' @param Handle The handle identifying the instance which should be
' 		acted on
'
' @param WorkbookName The name of the workbook within the instance
'
' @param WorksheetName The name of the worksheet required
'
' @param CreateIfNotExists True to create the worksheet if it doesn't
' 		exist; False to return Nothing if it doesn't exist.
'
' @return The sheet object representing the sheet required or Nothing
'		if no such sheet exists and CreateIfNotExists was False
Protected Function GetWorksheet(Handle As Integer, _
		WorkbookName As String, _
		WorksheetName As String, _
		CreateIfNotExists As Boolean) As Object

	Dim wb As Object = GetWorkbook(Handle, WorkbookName)
	
	If (String.IsNullOrEmpty(WorksheetName)) Then

		Dim ws as Object = wb.ActiveSheet
		If ws Is Nothing Then
			Return wb.Sheets.Add()
		Else
			Return ws
		End If

	Else
		Dim sheets as Object = wb.Sheets
		If sheets IsNot Nothing Then
			For Each sheet as Object in sheets
				If sheet.Name = WorksheetName Then _
					Return sheet
			Next
		End If
		' Didn't find the sheet...
		If CreateIfNotExists Then

			Dim sheet as Object = sheets.Add()
			sheet.Name = WorksheetName
			Return sheet

		End If
		' Nothing else we can do - return nowt
		Return Nothing

	End If

End Function

' Gets the next cell, relative to a given cell in a given direction
' Note that if the cell is at a boundary, then the same cell is returned.
'
' @param cell : The cell to use as a base cell
'
' @param strDir : one of "L", "R", "U", "D" representing a direction from
' 		the given cell to move in.
'
' @return : The cell object representing the 'next cell' 
Protected Function GetNextCell(cell as Object, strDir as String) As Object
	
	Try
		Select Case strDir
			Case "L"
				cell = cell.Offset(0,-1)
			Case "R"
				cell = cell.Offset(0,1)
			Case "U"
				cell = cell.Offset(-1,0)
			Case "D"
				cell = cell.Offset(1,0)
		End Select
	Catch ex As Exception
		' A COM Exception is thrown if the cell is at a boundary and the offset
		' would break that boundary
	End Try
	
	Return cell

End Function

Const SchemaColumnName As String = "Column Name"

Function GetWorkSheetUsedRangeAsDataTable(
	usedRange as object, 
	firstRowIsHeader As Boolean,
	fetchDataWithMethod As String,
	isGetWorksheetAsCollection As Boolean) As DataTable	
		
	If usedRange Is Nothing Then Throw new ArgumentNullException("usedRange")
	' isGetWorksheetCollection parameter added to adjust index of column headers for actions that historically had column header indexes starting at 0
	Dim indexOffset As Integer = 1
	Dim colNameDelimiter As String = " "
	If isGetWorksheetAsCollection = True Then 
		indexOffset = 0
		colNameDelimiter = ""
	End If

	Dim range(usedRange.Rows.Count, usedRange.Columns.Count) As Object
	Dim fetchMethod as String = fetchDataWithMethod.ToLower().Trim()
 
	For currentRow As Integer = 1 To usedRange.Rows.Count
		For currentColumn As Integer = 1 To usedRange.Columns.Count			
			Select Case fetchMethod
				Case "text"
					range(currentRow, currentColumn) = usedRange.Cells(currentRow,currentColumn).Text
				Case "value2"
					range(currentRow, currentColumn) = usedRange.Cells(currentRow,currentColumn).Value2
				Case Else
					range(currentRow, currentColumn) = usedRange.Cells(currentRow,currentColumn).Value
			End Select
		Next
	Next

	Dim result = new DataTable()
	Dim headingsList = GetFirstRowHeadings(range, firstRowIsHeader, indexOffset, colNameDelimiter)

	For Each heading As String In headingsList
		result.Columns.Add(heading, GetType(string))
	Next
		
	Dim startRowIndex = If(firstRowIsHeader AndAlso range.GetLength(0) > 1, 2, 1)	
	Dim totalRows As Integer = usedRange.Rows.Count
	Dim totalCols As Integer = usedRange.Columns.Count

	For i As Integer = startRowIndex To totalRows
		Dim currentRow As DataRow = result.NewRow
		result.Rows.Add(currentRow)

		For j As Integer = 1 To totalCols
			Dim value = range(i, j)
			If value Is Nothing Then value = String.Empty
			' 2025/02/10 - Replaced the following line of code as it wasn't persisting any CRLF's in worksheet cells.
			' currentRow.Item(j - 1) = value.ToString()
			currentRow.Item(j - 1) = Replace(Replace(value, vbCr, vbCrLf), vbLf, vbCrLf)
		Next j
	Next i

	Return result
End Function

Function GetFirstRowHeadings(arr as Object(,), firstRowIsHeader As Boolean, indexOffset As Integer, colNameDelimiter As String) as List(Of String) 
	Dim result = new List(Of String)()
	For i as Integer = 1 to arr.GetLength(1)
		Try
			Dim value = arr(1, i)
			'indexOffset allows the index to start at 0 or 1 depending on the action calling for column headings
			Dim heading As String = If(value Is Nothing OrElse Not firstRowIsHeader, "Column"& colNameDelimiter &((i-indexOffset).ToString), value.ToString)  
			result.Add(heading)
		Catch e As Exception
			' ignore index out of bound exception,
			' typically thrown when .Text is used
		End Try
	Next i
	return result
End Function

Function ParseDelimSeparatedVariables(
 data As String,
 delimStr As String,
 schema As DataTable,
 firstRowIsHeader As Boolean) As DataTable

	Const DefaultState As Integer = 0
	Const Instring As Integer = 1
	Const FirstQuote As Integer = 2

	Const Quote As Char = """"c
	If delimStr.Length = 0 Then delimStr = ","
	If delimStr.Length <> 1 Then Throw New Exception("Delimiter must be a single character")

	Dim delim As Char = delimStr(0)

	Dim state As Integer = DefaultState
	Dim firstRow As Boolean = True
	Dim columnValue As New StringBuilder()

	Dim emptySchema As Boolean = schema Is Nothing OrElse schema.Rows.Count = 0
	If emptySchema Then schema = Nothing
	Dim outputCollection As New DataTable()

	If Not emptySchema Then
		For Each schemaRow As DataRow In schema.Rows
			Dim colName As String = schemaRow(SchemaColumnName).ToString
			outputCollection.Columns.Add(colName, GetType(String))
		Next
	End If

	Dim row As DataRow = Nothing
	Dim colIndex As Integer = 0
	Using sw As New StringReader(data)
		While True
			Dim line As String = sw.ReadLine()
			If line Is Nothing Then Exit While

			' If we're not processing a CRLF in the middle of a string, we want to move
			' onto the next row; if we are, we keep the current row and column since we're
			' still writing to that 'cell'.
			If state <> Instring Then
				row = outputCollection.NewRow
				colIndex = 0
			End If
			For Each ch As Char In line
				Select Case ch
					Case delim ' ie. 'ch' is the specified delimiter - "," or "\t"
						Select Case state
							Case Instring
								columnValue.Append(delim)
							Case Else ' Covers 'default' and 'first quote'.
								If firstRow Then
									HandleFirstRow(
										firstRowIsHeader,
										columnValue.ToString(),
										colIndex,
										row,
										schema
									)
								Else
									row(colIndex) = columnValue.ToString
								End If

								columnValue.Length = 0
								state = DefaultState
								colIndex += 1
						End Select
					Case Quote
						Select Case state
							Case FirstQuote
								state = Instring
								columnValue.Append(Quote)
							Case Instring
								state = FirstQuote
							Case Else
								' If we find a quote in the middle of a non-quoted cell, it's
								' a literal quote; otherwise (ie. at the start of a cell), it
								' means the cell value is wrapped - go into 'Instring' state
								If columnValue.Length > 0 Then
									columnValue.Append(Quote)
								Else
									state = Instring
								End If
						End Select
					Case Else
						columnValue.Append(ch)
				End Select
			Next

			If firstRow Then
				HandleFirstRow(
					firstRowIsHeader,
					columnValue.ToString(),
					colIndex,
					row,
					schema
				)
				firstRow = False
				columnValue.Length = 0
				state = DefaultState
				If Not firstRowIsHeader Then outputCollection.Rows.Add(row)

			Else
				' If we're still in the middle of the string we want to include the CRLF in the
				' actual value that we're writing and leave the state at 'Instring'
				If state = Instring Then
					columnValue.Append(vbCrLf)
				Else
					row.Item(colIndex) = columnValue.ToString
					outputCollection.Rows.Add(row)
					columnValue.Length = 0
					state = DefaultState
				End If
			End If

		End While

	End Using

	Return outputCollection

End Function

Sub HandleFirstRow(firstRowIsHeader As Boolean, val As String, colIndex As Integer, row As DataRow, schema As DataTable)
	Dim tab = row.Table
	If schema Is Nothing Then
		If firstRowIsHeader Then
			Dim colName As String = val
			tab.Columns.Add(colName, GetType(String))
		Else
			Dim colName As String = "Column " & tab.Columns.Count
			tab.Columns.Add(colName, GetType(String))
			row(colIndex) = val
		End If
	Else
		If firstRowIsHeader Then
			Dim schemaColName As String = schema.Rows(colIndex)(SchemaColumnName).ToString
			Dim colName As String = val
			If colName <> schemaColName Then
				Throw New Exception("Column name mismatch. Column '" & colName & "' dosen't match schema name of '" & schemaColName & "'")
			End If
		End If
	End If
End Sub

' The common language runtime (CLR) automatically passes locale ID 1033 to all methods and properties
' in the Excel object model that accept locale-sensitive data. There is no way to change this behavior
' automatically for all calls into the object model. However, you can pass a different locale ID to a
' specific method by using InvokeMember to call the method and by passing the locale ID to the culture
' parameter of the method.
' https://msdn.microsoft.com/en-us/library/bb157877.aspx
' Additionaly we must use the culture that Excel is using and not the local machine.
Private Function InvokeReflection(Instance As Object, Name As String, bindingFlags As Reflection.BindingFlags, ParamArray args() As Object) As Object
	const msoLanguageIDUI = 4 ' Execution mode language.
	
	Dim result As Object
	
	' 20240617
	' Added the Try...Catch block to address situations where the culture variable is not being properly set. 
	Try
		Dim culture As System.Globalization.CultureInfo = New System.Globalization.CultureInfo(DirectCast(CurrentInstance.LanguageSettings.LanguageID(msoLanguageIDUI), Integer))
		result = Instance.GetType().InvokeMember(Name, bindingFlags, Nothing, Instance, args, culture)
	Catch ex As Exception
		result = Instance.GetType().InvokeMember(Name, bindingFlags, Nothing, Instance, args)
	End Try

	Return result 
End Function

Private Function Invoke(Instance As Object, Name As String, ParamArray args() As Object) As Object	
	Return InvokeReflection(Instance, Name, Reflection.BindingFlags.InvokeMethod, args)
End Function

Private Sub SetProperty(Instance As Object, Name As String, ParamArray args As Object())
	InvokeReflection(Instance, Name, Reflection.BindingFlags.SetProperty, args)
End Sub

Private Function GetProperty(Instance As Object, Name As String) As Object
	Return InvokeReflection(Instance, Name, Reflection.BindingFlags.GetProperty)	
End Function

' Gets the clipboard text, ensuring that the retrieval is performed
' on an STA thread so that it retrieves it correctly.
Function GetClipboardText() As String
    Dim data As String = Nothing
    With New Threading.Thread(Sub() data = Clipboard.GetDataObject().GetData(DataFormats.UnicodeText, True))
        .SetApartmentState(Threading.ApartmentState.STA)
        .Start()
        .Join()
    End With
    Return data
End Function

' Sets the clipboard text, ensuring that it is done on an STA thread.
Sub SetClipboardText(value as String)
    With New Threading.Thread(Sub() Clipboard.SetText(value))
        .SetApartmentState(Threading.ApartmentState.STA)
        .Start()
        .Join()
    End With
End Sub

Private Function WIN32CloseWindow(ByVal hWnd As Int32, ByRef sErr As String) As Boolean
	Try
		SendMessage(hWnd, WM_CLOSE, 0, 0)
		Return True
	Catch ex As Exception
		sErr = ex.ToString
		Return False
	End Try
End Function

Private Function WIN32FindWindow(ByVal sClassName As String, ByVal sWindowName As String, ByRef hWnd As IntPtr, ByRef sErr As String) As Boolean
	Try
		hWnd = FindWindow(sClassName, sWindowName)

	Catch ex As Exception
		sErr = ex.ToString
		Return False
		Exit Function
	End Try

	Return True
End Function

Dim Timeout as Integer = 0
Private Sub WaitForConfirmationDialog()
	' This method will wait until Confirmation Dialog Appears and Click OK
	Dim i As Integer = 0
	Dim hWnd As IntPtr = 0
	Dim SError as string = ""
    
	For i = 0 To Timeout

		If WIN32FindWindow("#32770","Microsoft Excel", hWnd, SError)  = True Then 
			If hWnd.ToInt32 > 0 Then		
				If WIN32CloseWindow(hWnd.ToInt32, SError)  = True Then
					Exit Sub
				End if
			End If
		End if
	    Thread.Sleep(1000)
    Next i 
End Sub

Public Shared Function GetColumnName(ByVal index As Integer) As String

        Dim quotient As Integer = index \ 26 
        If quotient > 0 Then
            Return GetColumnName(quotient - 1) & Chr((index Mod 26) + 65).ToString

        Else
            Return Chr(index + 65).ToString

        End If

End Function

private Sub RunMacroFromTextFile(Handle as Integer, Worksheetpath as string, DestinationWorksheetPath as string, Macro_Text_FilePath as String, Macro_Name as String, Macro_Enabled as Boolean)
	Dim xlApp as Object = GetInstance(Handle)

	Dim xlwb as Object = xlApp.Workbooks.Open(Worksheetpath)

	If (xlwb.VBProject.VBComponents.Count = 0) Then
		xlwb.Project.VBComponents.Add(1)
	End If

	xlApp.VBE.ActiveVBProject.VBComponents.Item(1).CodeModule.AddFromFile(Macro_Text_FilePath)

	xlApp.Run(Macro_Name)

	xlApp.DisplayAlerts = false
	xlApp.EnableEvents = false

	If (Macro_Enabled) Then
		xlwb.SaveAs(DestinationWorkSheetPath, 52) 
	else
		xlwb.SaveAs(DestinationWorkSheetPath, 51) 
	End If

	xlApp.DisplayAlerts = true
	xlApp.EnableEvents = true
End Sub

]]></code></stage><stage stageid="debd0d09-d7e8-4af4-b718-c69fd2d3db22" name="Clean Up" type="SubSheetInfo"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><narrative>Closes all the instances that have been created / attached to using this business object.</narrative><display x="-180" y="-105" w="180" h="90" /></stage><stage stageid="74a37e04-8569-40b9-8cc7-55d419e6c658" name="Start" type="Start"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="-135" /><onsuccess>fedc107e-577b-47d9-a445-c3a3e66ef516</onsuccess></stage><stage stageid="d2814bb7-61fc-4b4f-8fd9-2dd9f79c06ba" name="End" type="End"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="9864b229-3596-444e-afb1-b46efff51132" name="Create Workbook" type="SubSheetInfo"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><narrative>Creates a workbook on the specified instance, returning the resultant name.

Params:
- handle : Number : The handle identifying the instance on which the workbook should be required. The default of zero indicates the current instance.

Returns:
- Workbook Name : Text : The workbook name that Excel has granted to the new workbook. By default, Excel will call it "Book&lt;n&gt;" where &lt;n&gt; is a positive integer.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.</narrative><display x="-255" y="-300" w="330" h="210" /></stage><stage stageid="e4ba7053-63b7-4fa4-b64b-12309c5d3d51" name="Start" type="Start"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-390" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be created. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>852ff62f-6d2b-4031-b675-ec155fd88908</onsuccess></stage><stage stageid="1d707fac-863d-4281-b9d0-a65c74bf374c" name="End" type="End"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-120" /><outputs><output type="text" name="Workbook Name" narrative="The name of the workbook that Excel has created - this can be changed using the &quot;Save Workbook As&quot; action" stage="workbookname" /></outputs></stage><stage stageid="88aa07c9-ea21-42c6-80da-110e83fc2748" name="new" type="Note"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="d7cd0bd3-f4fc-4acb-921b-97d3cff31998" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-225" y="30" w="300" h="150" /></stage><stage stageid="4ffe88be-5a6a-452e-a183-9d1b9e027326" name="Open Workbook" type="SubSheetInfo"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><narrative>Opens a workbook using the instance specified in the given handle, opening the book represented by the given filename.

Params :
- handle : Number : The handle to the instance in which the workbook should be opened. The default value of zero indicates the current instance.
- File name : Text : The path to the file which should be opened.
- Password : Text : Optional. If the workbook was saved with a password you must provide that password in order to open it.
- Timeout : Number: Default 30: The amount of time for the action to complete. Minimum value is 10 seconds.
- Update Links: Flag: Optional. Default: True. Controls whether references (links) to external Workbooks are updated as changes are made in this Workbook.

Outputs:
- Workbook Name : Text : The name of the workbook that Excel uses to identify it.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
- File Not Found : If the given file does not exist or is not a file.</narrative><display x="-315" y="-165" w="450" h="210" /></stage><stage stageid="753ce277-ee09-4ee9-841b-827037917616" name="Start" type="Start"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><preconditions><condition narrative="inimum " /></preconditions><display x="15" y="-255" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="File name" narrative="The path and name of the file which should be opened." stage="filename" /><input type="number" name="Timeout" narrative="The time available for the action to complete." stage="Timeout" /><input type="text" name="Password" narrative="Optional. The password required to open the workbook. This only applies to workbooks that were saved with a password." stage="password" /><input type="flag" name="Update Links" narrative="Optional. Flag that controls whether external references (links) in the file, such as the reference to other Workbooks, are updated. Default value is True." stage="Update Links" /></inputs><onsuccess>881471f2-60a8-496c-a7bb-061f5b4fee56</onsuccess></stage><stage stageid="18a306bf-d323-4c4e-83b5-4b226773161c" name="End" type="End"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="195" /><outputs><output type="text" name="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="workbookname" /></outputs></stage><stage stageid="4d2c2635-39a5-41ce-8c67-49eb1db37d55" name="Save Workbook" type="SubSheetInfo"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><narrative>Saves the workbook using the current name as a filename.

Params:
- handle : Number : The integer identifying the instance on which the workbook should be saved. The default of 0 indicates the current instance.
- Workbook Name : The name of the workbook to be saved. The default of empty indicates that the active workbook should be saved.
- Timeout: Number: Default 30. The amount of time for the action to complete. Minimum is 10 seconds.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-150" w="420" h="180" /></stage><stage stageid="7c92f23e-cde4-457b-8a6e-2856cf88955e" name="Start" type="Start"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-195" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" stage="workbookname" /><input type="number" name="TitmeOut" narrative="The timeout value. Default 30 Minimum is 10 seconds." stage="Timeout" /></inputs><onsuccess>4bdf7ada-ff18-4eed-9f46-3240faaaac65</onsuccess></stage><stage stageid="4c75715c-7a4a-491b-804f-261ee86fcd95" name="End" type="End"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="60" /></stage><stage stageid="cee07b01-63cb-4d6d-9cc4-d1868ae80a0a" name="Save Workbook As" type="SubSheetInfo"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><narrative>Save the given workbook using the given file name.</narrative><display x="-165" y="-180" w="180" h="90" /></stage><stage stageid="b4f79caf-dea6-4a9a-95f0-0c05bea8b485" name="End" type="End"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook within the instance." stage="newworkbookname" /></outputs></stage><stage stageid="8ff7cce5-b764-42f9-88ed-51eb82a178c0" name="Activate Worksheet" type="SubSheetInfo"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><narrative>Activates / Creates the worksheet specified by the given parameters 

Params:
- handle : Number : The instance handle;
- Workbook Name : Text : is the name of the workbook on which the sheet resides / should be created;
- Sheet name : Text : The name of the worksheet
- Create If Missing? : Flag : Indicates if the worksheet should be created if one with that name doesn't exist on the workbook - if missing, it will *not* create it.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the given worksheet did not exist on the specified workbook.</narrative><display x="-285" y="-165" w="420" h="210" /></stage><stage stageid="ddfe7f54-b5c2-410a-8a5d-3c2b52de9550" name="End" type="End"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="15" /></stage><stage stageid="cf681fff-ce18-4dcc-b190-da9870383e35" name="Delete Worksheet" type="SubSheetInfo"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><narrative>Deletes the specified worksheet from the workbook.

Params:
- handle : Number : The excel instance handle
- Workbook Name : Text : The name of the workbook
- Worksheet Name : Text : The name of the sheet to delete.
If the sheet doesn't exist, this will fail silently - ie. nothing will occur.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the named worksheet did not exist on the specified workbook, or if the active sheet was specified and there was no active sheet.</narrative><display x="-240" y="-135" w="360" h="210" /></stage><stage stageid="c23803d1-15b5-4976-9466-8fb2e49529d3" name="Go To Cell" type="SubSheetInfo"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><narrative>Activates the cell in the given workbook, identified by the given cell reference.

Params:
- handle : Number: The integer handle identifying the excel instance (0 represents 'active' instance)
- Cell Reference : Text : the cell reference to go to
NOTE - the active sheet in the instance is the one on which the cell is active</narrative><display x="-240" y="-135" w="360" h="120" /></stage><stage stageid="717bb32a-6e60-4972-bdcb-10d6c7b769a0" name="Start" type="Start"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-180" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." stage="cellref" /></inputs><onsuccess>dc6f6efd-7724-48b0-8544-8f86f7bb1b8d</onsuccess></stage><stage stageid="f9e7f87b-06e3-441b-a4ed-7cb2a60b38c8" name="End" type="End"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="0" /></stage><stage stageid="f9a7cb58-89e7-4295-be05-54454641b318" name="Set Cell Value" type="SubSheetInfo"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><narrative>Sets the specified cell's value to the given value.
This has the side-effect of setting the active cell to that which is specified here.

Exceptions
Office 2013 onwards
There are known issues when attempting to read and write data using the Excel VBO with the application set to run in background mode. These issues can be overcome by using the Show action
</narrative><display x="-225" y="-135" w="330" h="120" /></stage><stage stageid="15cc8816-ce32-4cb4-888f-7e42b5cbc653" name="Start" type="Start"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference on the speficied sheet identifying the cell which should be set." stage="cellref" /><input type="text" name="Value" narrative="The value to which the specified cell should be set." stage="value" /></inputs><onsuccess>f54da925-167d-4c17-b44c-1861acd36f9b</onsuccess></stage><stage stageid="3efecc12-e41e-4386-b852-2651ab750ecc" name="End" type="End"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="60" /></stage><stage stageid="69459b62-2608-4fd7-a65e-40074b837222" name="Get Cell Value" type="SubSheetInfo"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><narrative>Gets the value of the specified cell - note that if the cell has some formatting set in it, this does *not* return the formatted value - See "Get Formatted Cell Value".
Note also that this has the side-effect of making the specified cell active.</narrative><display x="-195" y="-105" w="270" h="90" /></stage><stage stageid="232e4bda-508e-44c7-8adb-315ce0fab8af" name="CreateWorkbook" type="Code"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-225" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="name" stage="workbookname" /></outputs><onsuccess>1d707fac-863d-4281-b9d0-a65c74bf374c</onsuccess><code><![CDATA[
name = NewWorkbook(handle).Name]]></code></stage><stage stageid="6b5a2269-93b3-4e07-ae32-b53e1a63e772" name="filename" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1365c72e-7420-4330-a305-53b0408ec641" name="cellref" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f4cf65f-1932-4f8c-9902-00080ed74347" name="value" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50be384a-f88b-477b-9bff-ee76cd5684bc" name="Set Cell Value" type="Code"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /><input type="text" name="value" expr="[value]" /></inputs><onsuccess>3efecc12-e41e-4386-b852-2651ab750ecc</onsuccess><code><![CDATA[GetInstance(handle).ActiveCell.Value = value
Dim activeCell = GetInstance(handle).ActiveCell
SetProperty(activeCell, "Value", value)]]></code></stage><stage stageid="155a039e-a678-4192-866d-0a80004f7b1b" name="cellref" type="Data"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="edbe4d75-3363-4d77-b489-87fb02980fdc" name="Select Cell" type="Code"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><onsuccess>f9e7f87b-06e3-441b-a4ed-7cb2a60b38c8</onsuccess><code><![CDATA[
GetWorkbook(handle, "").ActiveSheet.Range(cellref,cellref).Activate()]]></code></stage><stage stageid="476742dd-c37f-49de-9eb5-1a66e5bcda17" name="handle" type="Data"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><display x="-195" y="-45" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f54da925-167d-4c17-b44c-1861acd36f9b" name="Go To Cell" type="SubSheet"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Cell Reference" expr="[cellref]" /></inputs><onsuccess>50be384a-f88b-477b-9bff-ee76cd5684bc</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="e7dc5be6-9447-4f5a-b528-e3b4e6e92319" name="handle" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0b718057-0ae5-4c65-bb5a-d9a14ac2496a" name="handle" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="-90" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3fe639e8-b4a0-4f50-886f-fb9c99ed04b2" name="Activate Workbook" type="SubSheetInfo"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><narrative>Activates the excel workbook identified by the given handle and name.

Params:
- handle : Number : The identifier of the instance which is holding the workbook; 0 (default) indicates the active instance
- Name : Text : The name of the workbook which should be activated

Exceptions:
- Invalid Input Parameter : If the worksheet name parameter is given
- Bad Handle : If the handle does not correspond to an Excel instance</narrative><display x="-240" y="-165" w="360" h="180" /></stage><stage stageid="8084bde3-efbe-44ec-a484-c9b07c3d0b78" name="Start" type="Start"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-240" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." stage="workbookname" /></inputs><onsuccess>6344b53e-9777-411e-bab1-aee5633bbc7d</onsuccess></stage><stage stageid="f8b84adb-3239-4125-af8d-4b1d02c950a6" name="End" type="End"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="0" /></stage><stage stageid="05b66883-e53e-43f9-a4d8-baa1fb79f412" name="handle" type="Data"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><display x="-240" y="-45" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dc6f6efd-7724-48b0-8544-8f86f7bb1b8d" name="Activate Workbook" type="SubSheet"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>edbe4d75-3363-4d77-b489-87fb02980fdc</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="1c1bd122-21c0-4b17-92f4-e5459d7921c6" name="handle" type="Data"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><display x="-240" y="-165" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="5b35f9f6-e395-4e4b-8dc1-5b2e86b17fbe" name="Close Workbook" type="SubSheetInfo"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><narrative>Closes the specified workbook, saving changes if requested.

Params:
- handle : Number : The integer identifying the instance on which the workbook should be closed. 0 indicates the current instance.
- Workbook Name : Text : The name of the workbook which should be closed. "" indicates the active workbook on the specified instance.
- Save Changes : Flag : True to save the changes (the equivalent of calling 'Save Workbook' before closing the workbook); False to discard any changes when closing the workbook.
- Timeout : Number : The value, in seconds, which the function call should complete. Default is 30 minimum is 10.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-540" y="-30" w="450" h="180" /></stage><stage stageid="5f23862f-bb67-4712-ade2-d8d62befeb7b" name="End" type="End"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="210" /></stage><stage stageid="f308d1c5-88b0-455a-bff7-8163c95d1eab" name="Open Workbook" type="Code"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="15" w="120" h="30" /><inputs><input type="text" name="filename" expr="[filename]" /><input type="number" name="handle" expr="[handle]" /><input type="number" name="timeout" expr="[Timeout]" /><input type="text" name="password" expr="[password]" /><input type="flag" name="updateLinks" expr="[Update Links]" /></inputs><outputs><output type="text" name="name" stage="workbookname" /></outputs><onsuccess>6c2fa22d-1876-46b7-92eb-cf8343d0911f</onsuccess><code><![CDATA[Dim update As Integer = 0

If (updateLinks) Then
	update = 3
End If

name = ExecWithTimeout(Timeout, "Open Workbook",
Function()
    Dim instance = GetInstance(handle)
    Dim workbooks As object = GetProperty(instance, "Workbooks")
    Dim wb As Object = Invoke(workbooks, "Open", filename, update, False, vbNull, password)
    Invoke(wb, "Activate")
    Return wb.Name
End Function)]]></code></stage><stage stageid="5d910335-0e44-4e14-8093-292d0737faee" name="handle" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7edfc788-b0ea-4933-ac22-6345453b8c6c" name="filename" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54e39cf8-9167-44e0-aea5-08d102a67f52" name="Create Instance" type="SubSheetInfo"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><narrative>Creates an instance of Excel, returning a handle with which it can be retrieved using the global object method : GetInstance(handle).</narrative><display x="-255" y="-120" w="330" h="120" /></stage><stage stageid="2eee0d2a-9595-449a-bbdc-8fb0c5153180" name="Close Instance" type="SubSheetInfo"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><narrative>Closes the instance represented by the given handle, saving the changes or not as specified.

Params:
- handle : Number : The handle identifying the instance that should be closed; The default of 0 will close the 'current active' instance - ie. the last one accessed. Note that following the 'current active' instance being closed, the current instance will not be set.
- Save Changes : Flag : True to save the instance's workbooks before closing; False to just close the instance.
Timeout:Number: Default 30. The number of seconds by which the action should complete. Minimum is 10.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-255" y="-150" w="390" h="180" /></stage><stage stageid="b394cfde-b1ec-4f16-b977-d1e1ffd337be" name="Start" type="Start"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-270" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be closed. Zero indicates the currently active instance." stage="handle" /><input type="flag" name="Save Changes" narrative="True to save the changes to the open workbooks on the instance, False to discard any changes. Default is False." stage="savechanges" /><input type="number" name="Timeout" narrative="The time for the action to complete. Default is 30. Minimum is 10." stage="Timeout" /></inputs><onsuccess>86673c4b-ea74-4c51-aae2-1069c4fd639c</onsuccess></stage><stage stageid="5d9b206b-bf58-47fe-806b-c2d6807d911e" name="End" type="End"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="15" /></stage><stage stageid="9798ad3a-b44f-4102-a9d1-0861103be2d8" name="Open Instance" type="SubSheetInfo"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><narrative>Opens a currently running instance of Excel with the given workbook name.

If no workbook name is given, it opens the active instance of Excel. If there is no instance of Excel currently running, it will create a new one.

Params:
- WorkbookName : Text : should correspond to the workbook which should be opened - an empty value will cause the first activated instance of Excel to be opened.
- Enable Events: Flag.
- Timeout :Number: Default 30. The number of seconds by which the action should complete. Minimum is 10.

Returns:
- handle : Number : The numeric handle with which this instance can be identified</narrative><display x="-210" y="-195" w="270" h="180" /></stage><stage stageid="0d071afd-6ab3-43d1-ac0e-1951c7598b19" name="Start" type="Start"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-360" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." stage="workbookname" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" stage="Enable Events" /><input type="number" name="Timeout" narrative="The time by which the action will complete. Default is 30 seconds. Minimum is 10." stage="Timeout" /></inputs><onsuccess>a3000589-df5e-4c49-98e3-ee641b9e997a</onsuccess></stage><stage stageid="754832af-1144-48ff-8ab0-bb6c86d3f78e" name="End" type="End"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="165" /><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs></stage><stage stageid="6a0587c3-1640-4af9-9199-62382cc11cdb" name="Start" type="Start"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-165" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>c642c278-2fc8-4504-826c-25e0281a26af</onsuccess></stage><stage stageid="d337a2cf-1121-4619-a1b1-f7f19bea974e" name="End" type="End"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="0" /><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs></stage><stage stageid="c642c278-2fc8-4504-826c-25e0281a26af" name="Create Instance" type="Code"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-105" w="120" h="30" /><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>a13edde2-3883-4007-9719-92f0e1009ddd</onsuccess><code><![CDATA[
Dim excel as Object = CreateObject("Excel.Application")

' Create a GUID with which we can kill the instance later
' if we have to play hardball to get rid of it.
excel.Caption = System.Guid.NewGuid().ToString().ToUpper()

handle = GetHandle(excel)]]></code></stage><stage stageid="56408aa5-2607-4026-bbb0-ee39b8c304be" name="handle" type="Data"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><display x="-255" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bb0ff5ea-0f21-4e70-a3b3-2eaf0baa3dc5" name="Set Current Instance" type="SubSheetInfo"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><narrative>Sets the "current active" instance to that specified.

Params:
- handle : Number : The handle of the instance that should be set as the current instance. The default of zero only has the effect of throwing an exception if no current instance is set, otherwise it's a no-op.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-225" y="-135" w="330" h="150" /></stage><stage stageid="773582ee-ed72-4483-9b24-9e4f66cf590e" name="Start" type="Start"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-195" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should be made the 'current' one. The default of zero indicates the current, er, 'current' one - ie. this action has no effect other than validating that there is a current instance." stage="handle" /></inputs><onsuccess>79986761-82ee-46d2-83d5-4e3375b886be</onsuccess></stage><stage stageid="b272722b-ab35-4a09-9082-3cc31a0999b5" name="End" type="End"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><display x="15" y="-30" /></stage><stage stageid="d7897c32-9be3-483a-bca8-3fee7d1af8b5" name="handle" type="Data"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3866da9-69bc-4edc-9173-0f9d0013190a" name="handle" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7e31a12c-4578-4202-b034-a306f3ee679d" name="Close Instance" type="Code"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="flag" name="savechanges" expr="[savechanges]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><onsuccess>5d9b206b-bf58-47fe-806b-c2d6807d911e</onsuccess><code><![CDATA[ExecWithTimeout(Timeout,"Close Instance",
Sub() CloseInstance(handle, savechanges))]]></code></stage><stage stageid="eaefcb8d-64bd-4782-a39c-6ea00bb157b2" name="CheckInstanceHandle" type="SubSheetInfo"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><narrative>Checks if the handle given can be used to access a valid instance.

This means that the handle is a non-zero value which represents a handle, or it is zero and a 'current instance' is set (current instance is set every time an instance is created or accessed using GetInstance() - it may be set to Nothing if an instance is closed).

- handle is the handle to check that it represents a valid instance

Exceptions:
- Bad Handle : If the given handle doesn't represent an instance</narrative><display x="-315" y="-120" w="390" h="150" /></stage><stage stageid="19668af6-5fa9-48b7-9f6e-e2caf5795b69" name="Start" type="Start"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." stage="handle" /></inputs><onsuccess>34b692da-278c-4018-96ec-a9d03f696b43</onsuccess></stage><stage stageid="a4c8054c-d063-42e0-8063-c8972459baa3" name="End" type="End"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="105" /></stage><stage stageid="b06ec4ea-540a-4321-a1f9-a645f288eb9e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-150" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7e31a12c-4578-4202-b034-a306f3ee679d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="34b692da-278c-4018-96ec-a9d03f696b43" name="Check Handle" type="Code"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="flag" name="HandleMissing" stage="HandleMissing" /></outputs><onsuccess>a7383095-97e9-4fa8-90e0-ad186e9df285</onsuccess><code><![CDATA[
' Just ensure that the handle references a valid instance
HandleMissing = (GetInstance(handle) is Nothing)]]></code></stage><stage stageid="1468c19b-a6a0-44e0-b096-5f325448f3fb" name="handle" type="Data"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="-195" y="-15" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52d17605-ad90-4a36-aa9d-47e5418dba04" name="HandleMissing" type="Data"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="-195" y="30" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7383095-97e9-4fa8-90e0-ad186e9df285" name="Is Handle Missing?" type="Decision"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="45" w="120" h="30" /><decision expression="[HandleMissing]" /><ontrue>8b5e76e6-a81e-4377-b161-1bef1ff3d753</ontrue><onfalse>a4c8054c-d063-42e0-8063-c8972459baa3</onfalse></stage><stage stageid="8b5e76e6-a81e-4377-b161-1bef1ff3d753" name="Bad Instance Handle" type="Exception"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="135" y="45" w="120" h="30" /><exception type="Bad Handle" detail="&quot;Handle: &quot; &amp; [handle] &amp; &quot; does not correspond to an Excel Instance&quot;" /></stage><stage stageid="79986761-82ee-46d2-83d5-4e3375b886be" name="CheckInstanceHandle" type="SubSheet"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>b272722b-ab35-4a09-9082-3cc31a0999b5</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="2db56ca3-8def-419f-a3e3-ac8408915c69" name="Open Named Instance" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-135" w="150" h="30" /><inputs><input type="text" name="WorkbookName" expr="[workbookname]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>add1def4-fc64-4534-bbb0-d3ac07611a85</onsuccess><code><![CDATA[Dim obj = ExecWithTimeout(Timeout, "Open Named Instance",
Function() OpenNamedObjectAA(WorkbookName))
handle = GetHandle(obj)]]></code></stage><stage stageid="6e2accad-a08b-4b28-9551-f44a9a291607" name="handle" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="-75" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fe8e6a89-2552-4e75-9d44-72240a365783" name="workbookname" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a08aa147-8eee-4f21-a683-142cb1680af6" name="Is WorkbookName empty?" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="60" /><decision expression="Trim([workbookname])=&quot;&quot;" /><ontrue>aaa7ff33-69b5-4636-8766-e0556ee48bec</ontrue><onfalse>2db56ca3-8def-419f-a3e3-ac8408915c69</onfalse></stage><stage stageid="aaa7ff33-69b5-4636-8766-e0556ee48bec" name="Open Arbitrary Instance" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="195" y="-210" w="150" h="30" /><inputs><input type="number" name="Timeout" expr="[Timeout]" /></inputs><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>51d7d624-e8bf-42b7-afdd-8d090b584865</onsuccess><code><![CDATA[Dim obj As Object = Nothing
Try
    obj = ExecWithTimeout(timeout,"Get Object",
        Function() GetObject(,"Excel.Application"))
Catch ex As TimeoutException
    mLastException = ex
    Throw
End Try
If obj Is Nothing Then Throw New Exception("Could not Get Object")

' GetObject may return an unusable wrapper (possibly if instance is shutting
' down) which results in a "COM target does not implement IDispatch" exception
' when accessing members of the object. If reading the EnableEvents property 
' results in an exception, the recover stage will run and a new instance will 
' be created instead.
Dim tempEnableEvents = obj.EnableEvents

handle = GetHandle(obj)]]></code></stage><stage stageid="fba0fa7c-4ed5-4652-b4ae-08770f5f3867" name="No Open Instances" type="Recover"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-210" w="120" h="30" /><onsuccess>9474db50-6935-47fa-b862-4aa1a49143f8</onsuccess></stage><stage stageid="df0b2b99-8c10-4cf4-9d2d-c3ccf515c960" name="Carry On, Bertram" type="Resume"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="15" w="120" h="30" /><onsuccess>7fb1ba2f-64f1-417b-9b97-479efb954a9d</onsuccess></stage><stage stageid="a6205e66-5e1f-4360-86a2-8f1325751c3c" name="Create Instance" type="SubSheet"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-30" w="120" h="30" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="True" /></inputs><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs><onsuccess>df0b2b99-8c10-4cf4-9d2d-c3ccf515c960</onsuccess><processid>99e648cc-a136-471c-8424-19071c0fd9e7</processid></stage><stage stageid="852ff62f-6d2b-4031-b675-ec155fd88908" name="CheckInstanceHandle" type="SubSheet"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-300" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>232e4bda-508e-44c7-8adb-315ce0fab8af</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="59ebf811-1faf-4486-8630-6d2de19027f5" name="CheckType" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-75" w="90" h="30" /><decision expression="ExceptionType()=&quot;Internal&quot;" /><ontrue>a6205e66-5e1f-4360-86a2-8f1325751c3c</ontrue><onfalse>567674ba-270a-4107-ada5-1dae59125522</onfalse></stage><stage stageid="567674ba-270a-4107-ada5-1dae59125522" name="RethrowException" type="Exception"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="570" y="-75" w="120" h="30" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="9e0df7e0-ab34-4a97-9f69-db66c88ff5f4" name="CheckInstanceHandle" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>41c51e08-6c3e-4cbc-bc30-31936476aa7d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="4a034863-88fc-4111-a656-18471e002741" name="workbookname" type="Data"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><narrative>The name of the workbook</narrative><display x="-240" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="366f8bd4-fafd-47cc-98a3-0afb7d697fe9" name="ActivateWorkbook" type="Code"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-90" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /></inputs><onsuccess>f8b84adb-3239-4125-af8d-4b1d02c950a6</onsuccess><code><![CDATA[
GetWorkbook(handle,name).Activate()]]></code></stage><stage stageid="e74de56c-16cf-4cd7-8ecf-fabdf05e7311" name="handle" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e45f2d66-35c1-40fd-a729-754cfabbb5ab" name="SaveWorkbook" type="Code"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><onsuccess>4c75715c-7a4a-491b-804f-261ee86fcd95</onsuccess><code><![CDATA[ExecWithTimeout(Timeout, "Save Workbook",
Sub()
    Dim wb as Object = GetWorkbook(handle,workbookname)
    Dim excel as Object = wb.Application
    excel.DisplayAlerts = False
    Invoke(wb, "Save")
    excel.DisplayAlerts = True
End Sub)]]></code></stage><stage stageid="8ba3f3c5-2585-44db-9393-a681e9ff1111" name="workbookname" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bc9d285-c937-4336-89b3-aa7acf379075" name="Start" type="Start"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-210" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" stage="workbookname" /><input type="text" name="Filename" narrative="The full path and filename to which the workbook should be saved." stage="filename" /><input type="number" name="File Format" narrative="Optional: A numeric value indicating the format the workbook should be saved in. For a list of supported formats, refer to https://learn.microsoft.com/en-us/office/vba/api/excel.xlfileformat. The default value is 51 (Workbook Default)" stage="File Format" /><input type="text" name="Password" narrative="Optional. Sets the password that must be supplied to open the specified workbook." stage="password" /><input type="number" name="Timeout" narrative="The number of seconds by which the action should be complete." stage="Timeout" /></inputs><onsuccess>83cf0bf5-da78-448f-bb3a-f5184c0afcde</onsuccess></stage><stage stageid="a6943793-fb0e-491c-bdc1-ccf04ee31e6d" name="workbookname" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b526d9f-c7bd-4190-8c33-a6f5ad7982fa" name="SaveWorkbookAs" type="Code"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="filename" expr="[filename]" /><input type="number" name="Timeout" expr="[Timeout]" /><input type="text" name="password" expr="[password]" /><input type="number" name="fileFormat" expr="[File Format]" /></inputs><outputs><output type="text" name="newworkbookname" stage="newworkbookname" /></outputs><onsuccess>b4f79caf-dea6-4a9a-95f0-0c05bea8b485</onsuccess><code><![CDATA[newworkbookname = ExecWithTimeout(Timeout, "Save Workbook As",
Function()
    Dim wb as Object  = GetWorkbook(handle,workbookname)
    Dim excel as Object = wb.Application

    excel.DisplayAlerts = False

	' Set the password value. If no password was supplied as input, no password will take effect.
	wb.Password = password

    wb.SaveAs(filename, fileFormat)
    excel.DisplayAlerts = True

    Return wb.Name
End Function)]]></code></stage><stage stageid="a7fd5308-fe75-448e-99ad-e104521ee580" name="CheckInstanceAndWorkbook" type="SubSheetInfo"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><narrative>Checks the instance and workbook values, throwing an exception if they are invalid.

Params:
- instance : Number : The integer value representing an Excel instance. The default value of zero represents the last activated instance.
- Workbook Name : Text : The name of the workbook on the instance to check. An empty string represents the 'active' workbook.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-240" y="-150" w="360" h="180" /></stage><stage stageid="d69e69ce-7251-40e1-b779-c9951ee36cbb" name="Start" type="Start"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" stage="handle" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" stage="workbookname" /></inputs><onsuccess>16e7e153-e022-4c0b-9af2-ac69b52f855a</onsuccess></stage><stage stageid="bf3ac1a2-7f2a-4071-89c6-73cfa8f8c60d" name="End" type="End"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="60" /></stage><stage stageid="16e7e153-e022-4c0b-9af2-ac69b52f855a" name="CheckInstanceHandle" type="SubSheet"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>d4997ba5-8e1f-4585-a093-376eb725f14d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="b6c9fba5-0c8e-4e66-9cf2-8f2f1e5f6118" name="Workbook Found?" type="Decision"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><decision expression="[workbookfound]" /><ontrue>bf3ac1a2-7f2a-4071-89c6-73cfa8f8c60d</ontrue><onfalse>62e3710c-2e7e-4507-a49b-0009b3585ba3</onfalse></stage><stage stageid="62e3710c-2e7e-4507-a49b-0009b3585ba3" name="Workbook Not Found" type="Exception"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><narrative>Thrown when a workbook name was not found</narrative><display x="195" y="0" w="150" h="30" /><exception type="Workbook Not Found" detail="&quot;Workbook named: &quot; &amp; [workbookname] &amp; &quot; not found in instance: &quot; &amp; [handle]" /></stage><stage stageid="c3051222-78b2-48d6-9813-d71f854c5e81" name="handle" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6bcb687a-3390-4a83-8690-fba44345b1a8" name="workbookname" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><narrative>The name of the workbook</narrative><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba694738-8f03-4a1c-a7b1-d946dc55c028" name="workbookfound" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="-195" y="60" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="d4997ba5-8e1f-4585-a093-376eb725f14d" name="CheckWorkbook" type="Code"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><outputs><output type="flag" name="workbookfound" stage="workbookfound" /></outputs><onsuccess>b6c9fba5-0c8e-4e66-9cf2-8f2f1e5f6118</onsuccess><code><![CDATA[
Try
	ExecWithTimeout(timeout,"Get Workbook",
        Sub() GetWorkbook(handle,workbookname))	
	workbookfound = True
Catch ex as Exception
	If ex.Message.IndexOf("DISP_E_BADINDEX")<>-1 Then
		workbookfound = False
	Else
		Throw ex
	End If
End Try]]></code></stage><stage stageid="ab6f627b-d630-4bdd-b840-7aac26b5806f" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e45f2d66-35c1-40fd-a729-754cfabbb5ab</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="7fa4c0ab-6c38-4a55-915a-48e7ce529979" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>8b526d9f-c7bd-4190-8c33-a6f5ad7982fa</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="d52e7a12-1a97-4bcf-9014-5a4ad93aa054" name="Close Workbook" type="Code"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="150" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /><input type="number" name="timeout" expr="[Timeout]" /></inputs><onsuccess>5f23862f-bb67-4712-ade2-d8d62befeb7b</onsuccess><code><![CDATA[ExecWithTimeout(Timeout, "Close Workbook",
Sub()
    Dim wb as Object = GetWorkbook(handle,name)
    Dim app as Object = wb.Application

    app.DisplayAlerts = False
    wb.Close(False)
    app.DisplayAlerts = True
End Sub)]]></code></stage><stage stageid="3a83f920-ccd5-4dc3-95ee-4c5a195c5191" name="handle" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-465" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7b233620-de4e-40ff-9a99-af09b1574d08" name="workbookname" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-465" y="165" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85080efc-4429-45d0-9248-dfcceaa60a27" name="Start" type="Start"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="-75" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be closed." stage="workbookname" /><input type="flag" name="Save Data" narrative="True to save the data before closing the workbook; The default of False will discard any changes before closing the workbook." stage="savedata" /><input type="number" name="Timeout" narrative="The timeout value for the function to complete." stage="Timeout" /></inputs><onsuccess>77c60097-f610-4092-ac04-702df9bc03d2</onsuccess></stage><stage stageid="b481dbd1-022d-42b5-a2bc-5bfbbc233772" name="savedata" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-465" y="210" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="52c31124-7463-40b9-8d24-9ffebe12e167" name="Save Data?" type="Decision"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="45" w="90" h="30" /><decision expression="[savedata]" /><ontrue>16f6c60c-721b-44be-9e97-b5b518e0f360</ontrue><onfalse>68e0d10e-5b8a-4ccb-a42b-67192ce2ede1</onfalse></stage><stage stageid="16f6c60c-721b-44be-9e97-b5b518e0f360" name="Save Workbook" type="SubSheet"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-120" y="45" w="90" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" expr="[workbookname]" /><input type="number" name="TitmeOut" friendlyname="TitmeOut" narrative="The timeout value. Default 30 Minimum is 10 seconds." expr="[Timeout]" /></inputs><onsuccess>cf877504-31ed-4e77-b72f-b00469c37fc7</onsuccess><processid>6e7cb0ad-5910-4065-aab2-2919726bae39</processid></stage><stage stageid="68e0d10e-5b8a-4ccb-a42b-67192ce2ede1" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="90" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>d52e7a12-1a97-4bcf-9014-5a4ad93aa054</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="cf877504-31ed-4e77-b72f-b00469c37fc7" name="anchor1" type="Anchor"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-120" y="150" w="10" h="10" /><onsuccess>d52e7a12-1a97-4bcf-9014-5a4ad93aa054</onsuccess></stage><stage stageid="cdb03710-27a7-4412-964a-73e4b9bd1a07" name="noteybenny" type="Note"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><narrative>Note: CheckInstanceAndWorkbook is done as part of SaveWorkbook, so no need to do it again</narrative><display x="15" y="60" w="180" h="60" /></stage><stage stageid="f39e78b7-d81a-43de-af4f-ea3ce7a918a2" name="handle" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-300" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1f02e77b-3ca1-40a7-a64b-35fdad519172" name="workbookname" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-300" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6344b53e-9777-411e-bab1-aee5633bbc7d" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-165" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>366f8bd4-fafd-47cc-98a3-0afb7d697fe9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="ba48be23-80aa-4b44-beef-dbc6a7fb5901" name="VerifyFileExists" type="SubSheetInfo"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><narrative>Checks if the given file exists.

Params:
- File name : Text : Path to the file to check

Exceptions:
- File Not Found : If the given file does not exist or is not a file.</narrative><display x="-210" y="-120" w="240" h="120" /></stage><stage stageid="0c6df86d-8ca7-4778-adeb-2c570998768f" name="Start" type="Start"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-165" /><inputs><input type="text" name="filename" narrative="The filename to check to ensure it exists." stage="filename" /></inputs><onsuccess>e28c5aa8-d587-4390-843e-b97c32c2cdb8</onsuccess></stage><stage stageid="d465101e-fa27-4434-8413-515e331d1389" name="End" type="End"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="30" /></stage><stage stageid="8d315224-d32b-4a85-aae0-3ee4d3b98c9c" name="filename" type="Data"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86877e71-923f-4480-9b41-a5a7f4dc60a5" name="fileexists" type="Data"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-195" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e28c5aa8-d587-4390-843e-b97c32c2cdb8" name="File Exists?" type="Code"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-105" w="120" h="30" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="flag" name="fileexists" stage="fileexists" /></outputs><onsuccess>d43bfe27-76d7-4542-b7ad-ba696468713e</onsuccess><code><![CDATA[
fileexists = File.Exists(filename)]]></code></stage><stage stageid="d43bfe27-76d7-4542-b7ad-ba696468713e" name="Does File Exist?" type="Decision"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-45" w="120" h="30" /><decision expression="[fileexists]" /><ontrue>d465101e-fa27-4434-8413-515e331d1389</ontrue><onfalse>11a4a0e7-8810-493b-9409-df70ca4dc5b2</onfalse></stage><stage stageid="11a4a0e7-8810-493b-9409-df70ca4dc5b2" name="File Not Found" type="Exception"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><display x="135" y="-45" w="120" h="30" /><exception type="File Not Found" detail="&quot;File: &quot; &amp; [filename] &amp; &quot; does not exist or is not a file&quot;" /></stage><stage stageid="41c51e08-6c3e-4cbc-bc30-31936476aa7d" name="VerifyFileExists" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><onsuccess>f308d1c5-88b0-455a-bff7-8163c95d1eab</onsuccess><processid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</processid></stage><stage stageid="60533ca6-ea95-4425-b684-87e7517782aa" name="Start" type="Start"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-225" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." stage="createifmissing" /></inputs><onsuccess>b5d5c5b0-1e3b-438b-b988-6058174ec5ba</onsuccess></stage><stage stageid="63d363e1-c78b-4332-815c-06f9d6f7a7df" name="OpenWorksheet" type="Code"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="flag" name="createifmissing" expr="[createifmissing]" /></inputs><outputs><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>3a854b87-0e5a-46dd-8181-a58f97555aa8</onsuccess><code><![CDATA[
Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,createifmissing)
sheetexists = ws IsNot Nothing 
If sheetexists then ws.Activate()]]></code></stage><stage stageid="b5d5c5b0-1e3b-438b-b988-6058174ec5ba" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-165" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>63d363e1-c78b-4332-815c-06f9d6f7a7df</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="1dccafb3-fd07-4362-b343-e87c1a67e83e" name="worksheetname" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-180" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b35d569-0eb2-4c01-bb88-e5f7c41bde81" name="End" type="End"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="fab4ac4b-d2f7-4f1c-a0c3-d6dd0cd01f9b" name="handle" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="0" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="60f1e726-ab7f-437a-8bda-36148238d510" name="workbookname" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13ac609e-b9ca-4a72-907c-d7656496f5ab" name="Start" type="Start"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-195" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be deleted resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet to be deleted. The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet to be deleted. The default empty value indicates the currently active worksheet." stage="worksheetname" /></inputs><onsuccess>5346c305-4024-4d1d-8806-c1b20f16c10d</onsuccess></stage><stage stageid="982dd82e-af43-49cb-a4b1-58da1ccfeb33" name="Delete Worksheet" type="Code"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="flag" name="sheetexisted" stage="sheetexisted" /></outputs><onsuccess>56c2259b-9d71-4364-bede-79b4af1e3e96</onsuccess><code><![CDATA[
Dim Inst As Object = GetInstance(handle)
Inst.DisplayAlerts = False

Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,False)
sheetexisted = ws IsNot Nothing
If sheetexisted Then ws.Delete()

Inst.DisplayAlerts = True]]></code></stage><stage stageid="5346c305-4024-4d1d-8806-c1b20f16c10d" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-135" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>982dd82e-af43-49cb-a4b1-58da1ccfeb33</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="6ca6d1da-9270-43f8-89d4-c0ece0a353cb" name="worksheetname" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae9d880b-4f92-4620-94e8-36d06f4e2181" name="Start" type="Start"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." stage="cellref" /></inputs><onsuccess>9a734ecf-7e58-4aa4-b7ff-5aa4494ec687</onsuccess></stage><stage stageid="ca24190a-a9cb-4c37-b5d2-78bcd838ef40" name="End" type="End"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="text" name="Value" narrative="The (unformatted) value from the required cell." stage="value" /></outputs></stage><stage stageid="b659eb08-bf67-463a-a8cc-556b152d8032" name="cellref" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="257d1cf8-2a6f-47d2-88ee-1d0a125cb27d" name="value" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a04a5ea1-798c-4659-ac77-0c966c305cba" name="Get Cell Value" type="Code"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="text" name="value" stage="value" /></outputs><onsuccess>ca24190a-a9cb-4c37-b5d2-78bcd838ef40</onsuccess><code><![CDATA[
	Dim cellVal as String = GetInstance(handle).ActiveCell.Value
	value = IIf(cellVal Is Nothing, "", cellVal)]]></code></stage><stage stageid="39135f99-dd54-4a2b-bff2-555714753a6d" name="Go To Cell" type="SubSheet"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>a04a5ea1-798c-4659-ac77-0c966c305cba</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="c533ffd2-866d-4944-82be-7e6a6ede4c9a" name="handle" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3fe8fb5-4290-4e6e-8d8f-780f47e78d27" name="workbookname" type="Data"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><display x="-240" y="-120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5a7dc88f-16d6-41f8-a4f1-4ca8921bf024" name="Get Worksheet As Collection" type="SubSheetInfo"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><narrative>Gets the current worksheet into a collection. This will read the worksheet and store the contents into the collection. The first row will be treated as the column names and will be used as the column names in the generated collection.</narrative><display x="-195" y="-255" w="180" h="90" /></stage><stage stageid="cf5b0880-2cac-4221-946a-e4e3d7f0bc99" name="End" type="End"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-30" /><outputs><output type="collection" name="Data" narrative="The collection containing the data from the specified worksheet - the column IDs will be gleaned from the first row on the sheet being retrieved." stage="worksheetcollection" /></outputs></stage><stage stageid="14362f26-4336-4848-adf6-2e710eb2a69d" name="Start" type="Start"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-270" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="Fetch Data with Method" narrative="Optional: The method used to fetch data from cells in the worksheet. Options include Text, Value, and Value2. The default indicates Value will be used." stage="fetchDataWithMethod" /><input type="flag" name="Use Clipboard" narrative="Optional: Flag that indicates the Windows clipboard should be used. Default value is False." stage="Use Clipboard" /></inputs><onsuccess>23c90658-57ef-456a-92fa-970b0161d0f8</onsuccess></stage><stage stageid="23c90658-57ef-456a-92fa-970b0161d0f8" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>a172c462-0660-4e65-aef6-59287833aefb</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="9b8dd3a0-045b-4019-b977-8716d12d92c6" name="workbookname" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="-210" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3ba94499-d376-4a0b-9486-f4bced0a6a23" name="Close All Instances" type="SubSheetInfo"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><narrative>Closes all instances of excel which have been opened by this business object, either through "Create Instance" or "Open Instance" and which have not been discarded through "Close Instance" or "Release Instance"</narrative><display x="-195" y="-105" w="210" h="90" /></stage><stage stageid="e8745127-ee68-4c60-8b52-0b68e91835bf" name="Start" type="Start"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-165" /><onsuccess>8f8060c8-cea7-41c9-93c1-b181ca345fa9</onsuccess></stage><stage stageid="85215f92-002d-4d9c-8fe7-652c149d0206" name="End" type="End"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><display x="15" y="-45" /></stage><stage stageid="8f8060c8-cea7-41c9-93c1-b181ca345fa9" name="CloseAllInstances" type="Code"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><onsuccess>85215f92-002d-4d9c-8fe7-652c149d0206</onsuccess><code><![CDATA[
Dim clone as Dictionary(Of Integer,Object) = _
	new Dictionary(Of Integer,Object)(HandleMap)

For Each Handle As Integer In clone.Keys
	CloseInstance(Handle,False)
Next]]></code></stage><stage stageid="15437c28-7f56-4c1b-b98a-769b875b9d57" name="Find Next Empty Cell" type="SubSheetInfo"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><narrative>Searches for the next empty cell in the direction given.
This can either activate that cell before returning, or just return the cell reference while leaving the active cell as it was.

Params:
- handle : Number : The integer handle identifying the Excel instance to use. The default of zero indicates the 'current' instance.
- Direction : Text : The direction in which to go, this should start with "U", "D", "L" or "R" (not case-sensitive) - the rest of the string is ignored, so you can use "Up", "DOWN" "left" and, indeed, "r"
- Activate Cell? : Flag : True to activate the found cell, False to just return the reference. Default is False.

Returns:
- Cell Reference : Text : The cell ID which represents the next empty cell in the required direction. This will be blank if no empty cell was found in the given direction.

Exceptions:
Invalid Direction Parameter : If the given direction parameter was invalid - ie. did not start with one of the (case-insensitive) letters "U", "D", "L" or "R".</narrative><display x="-300" y="-195" w="450" h="270" /></stage><stage stageid="d3707693-ef57-453a-b8b2-16e8d8aee39f" name="Start" type="Start"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." stage="direction" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." stage="activatecell" /></inputs><onsuccess>ea536eb5-62b7-4b15-b0b9-0c5415414692</onsuccess></stage><stage stageid="65e26d12-b37e-4df9-a00b-07340967e5b2" name="End" type="End"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="105" /><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs></stage><stage stageid="2d159e37-f93b-42db-b8a7-3ea3e5300c76" name="direction" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-240" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bf3a1953-80c7-4d24-92fe-1e6823202956" name="cellref" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-150" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea536eb5-62b7-4b15-b0b9-0c5415414692" name="Direction Valid?" type="Decision"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><narrative>Direction must start with one of the following:
- U : Indicates 'up'
- D : Indicates 'down'
- L : Indicates 'left'
- R : Indicates 'right'
Any other value (including empty text) is invalid</narrative><display x="-15" y="-75" w="90" h="30" /><decision expression="Len(Trim([direction]))&gt;0 AND InStr(&quot;UDLR&quot;,Upper(Left(Trim([direction]),1)))&lt;&gt;0" /><ontrue>e8cca858-4b46-40a0-81fc-3112398c4a42</ontrue><onfalse>382555c6-554f-465d-bbac-43e5b0ec06ed</onfalse></stage><stage stageid="382555c6-554f-465d-bbac-43e5b0ec06ed" name="Invalid Direction Parameter" type="Exception"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="150" y="-75" w="150" h="30" /><exception type="Invalid Direction Parameter" detail="&quot;Direction: '&quot; &amp; [direction] &amp; &quot;' is invalid - it must start with 'U', 'D', 'L' or 'R' (up, down, left or right)&quot;" /></stage><stage stageid="e8cca858-4b46-40a0-81fc-3112398c4a42" name="FindEmptyCell" type="Code"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="-15" w="90" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="direction" expr="[direction]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>a47f3c07-957d-4909-bc43-4c56e5f58ae6</onsuccess><code><![CDATA[
' The initial char of the direction (capitalised)
Dim strDir as String = direction.Trim().Substring(0,1).ToUpper()

' The excel instance
Dim excel as Object = GetInstance(handle)

' The excel enum representing the direction
' Note: setting to zero is just to nix a duff compiler warning
Dim dirn as Integer = 0

' xlDirection enum values from: 
' http://msdn.microsoft.com/en-us/library/bb241212.aspx

' Get the direction we need to go
Select Case strDir
	Case "U"
		dirn = -4162 ' Excel.XlDirection.xlToUp
	Case "D"
		dirn = -4121 ' Excel.XlDirection.xlToDown
	Case "L"
		dirn = -4159 ' Excel.XlDirection.xlToLeft
	Case "R"
		dirn = -4161 ' Excel.XlDirection.xlToRight
	Case Else
		Throw New ArgumentException("Invalid Direction: " & strDir)
End Select

Dim cell as Object = excel.ActiveCell

While True

	' First check the next one along - if that's blank then we're away..
	Dim nextCell as Object = GetNextCell(cell, strDir)

	' If the cell address is the same on moving - that indicates we're
	' at a limit (eg. 1st column going left, last row going down etc.)
	' Just return empty to indicate that there are no blank cells in
	' that direction.
	If cell.Address = nextCell.Address Then
		cellref = ""
		Return
	ElseIf nextCell.Value = Nothing Then ' We've found our blank
		cellref = nextCell.Address(False,False)
		Return
	End If
	
	cell = nextCell
	
	' Quick way (rather than plodding from one cell to the next)
	' is to effectively press the 'End' key - but this is highly
	' inconsistent in what it returns.
	' Go to the 'end' of the range - ie. the last filled cell
	' cell = cell.End(dirn)
	' Now we need to go one beyond, ie. to the next cell
	' cell = GetNextCell(cell, strDir)

End While
]]></code></stage><stage stageid="facf151b-ee72-46d1-b528-a921e6945048" name="handle" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-240" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c507994e-eb49-43c1-bf77-9bf7cf88e0e6" name="Get Formatted Cell Value" type="SubSheetInfo"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><narrative>Gets the formatted value of the desired cell. This will apply any formatting which is in place in the specified cell before outputting the value.</narrative><display x="-195" y="-105" w="210" h="90" /></stage><stage stageid="c0ed8b3d-fb86-442b-959e-a601d2d5f84f" name="Start" type="Start"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance within which the cell is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose value is required. Note that a side-effect of this action is that the specified cell will become the active cell on the specified instance. An empty value indicates the currently active cell." stage="cellref" /></inputs><onsuccess>29427d7f-a2d9-4b65-b6c4-773881bd285d</onsuccess></stage><stage stageid="722e3ab7-97b7-4cd6-886e-53bf4ac022ec" name="End" type="End"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="text" name="Value" narrative="The formatted value at the given cell reference." stage="value" /></outputs></stage><stage stageid="1260d770-e90c-4ea2-9e64-e3442c7de787" name="cellref" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6618eccc-3c6e-4660-997c-5f9142e71dc8" name="value" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94dc11fe-505e-4544-a26b-80d3d88d0951" name="Get Cell Text" type="Code"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="text" name="value" stage="value" /></outputs><onsuccess>722e3ab7-97b7-4cd6-886e-53bf4ac022ec</onsuccess><code><![CDATA[
	value = GetInstance(handle).ActiveCell.Text]]></code></stage><stage stageid="3e695c2e-2110-4655-ba2e-31a41f453383" name="handle" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d9fc29b1-af47-4caf-882b-d9fc56955a8b" name="Split Worksheet" type="SubSheetInfo"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><narrative>Splits the specified worksheet into separate workbooks, creating a new sheet on each one and copying a subset of rows across to it.

Params:
- handle : Number : The integer representing the Excel instance - 0 represents the 'active' excel instance.
- Rows per sheet : Number : The number of rows which should be copied into each separate workbook.
- Workbook Name : Text : The name of the workbook from which the sheet should be split. "" indicates the active workbook on the instance.
- Worksheet Name : Text : The name of the worksheet from which the data should be split. "" indicates the active worksheet on the instance.
- Path : Text : The directory in which the resultant workbooks should be saved.
- No Title Row : Flag : True to indicate that the first row should *not* be used as a title row and copied across each of the generated workbooks.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- File Not Found : If the given path did not exist or was not a directory</narrative><display x="-240" y="-180" w="510" h="240" /></stage><stage stageid="aa8bb9c5-c392-43d5-b8fb-6a6308c40ad6" name="End" type="End"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="60" /></stage><stage stageid="052dc2d6-2989-49fb-9dbd-d4db6e106c98" name="Start" type="Start"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-285" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Rows per worksheet" narrative="The number of rows which should appear in each worksheet. Zero indicates all rows." stage="rowspersheet" /><input type="text" name="Workbook Name" narrative="The name of the workbook within the specified instance which contains the sheet to be split. The default empty text indicates the currently active workbook within the specified instance should be used." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook to split - The default empty value indicates that the currently active sheet within the workbook should be used." stage="worksheetname" /><input type="flag" name="No Title Row" narrative="True to indicate that the rows should just be split across without using the first row as a title row (ie. as a list of column headers). False to indicate that the first row contains the column headers which should be replicated across all generated sheets." stage="notitle" /><input type="text" name="Path" narrative="The path to the directory in which the generated workbooks should be created. The files will be created with a name of &quot;{Workbook Name}_SECTION_nnnn&quot;, where nnnn is an number incrementing with each section generated." stage="path" /></inputs><onsuccess>ee1e1e11-a16a-4060-9ea0-0848320dfbaf</onsuccess></stage><stage stageid="3200e67b-1f79-4672-9828-e9e4438f565b" name="handle" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="177b7483-8cfb-41a7-8644-e4fdc19ecf2a" name="rowspersheet" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd48b9ea-dee0-4b1a-a9bb-7c84a64fa132" name="workbookname" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f865844-bba2-4377-8b24-5d089cbfb8c4" name="worksheetname" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1e1e11-a16a-4060-9ea0-0848320dfbaf" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-225" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>359dbb2d-d57f-48c1-9c7f-1d22ef094036</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="359dbb2d-d57f-48c1-9c7f-1d22ef094036" name="Split Worksheet" type="Code"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-165" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="number" name="rowspersheet" expr="[rowspersheet]" /><input type="flag" name="notitle" expr="[notitle]" /><input type="text" name="path" expr="[path]" /></inputs><outputs><output type="flag" name="filefound" stage="filefound" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>5cb56c9a-aa29-4ed4-84e1-9a65976ba50f</onsuccess><code><![CDATA[Dim sheet as Object = GetWorksheet(handle,workbookname,worksheetname,False)

sheetexists = sheet IsNot Nothing
If Not sheetexists Then Return

Dim book as Object = sheet.Parent
Dim excel as Object = sheet.Application

Dim prefix as String = book.Name
If prefix.ToLower().EndsWith(".xls") Then
	prefix = prefix.Substring(0,prefix.Length - 4)
End If

If Not path.EndsWith("\") Then
	path += "\"
End If

filefound = Directory.Exists(path)
If Not filefound Then ' Might as well quit now 
	Return
End If

Dim lastCell as Object = sheet.Cells.Find("*", , , , , 2)			 'Excel.XlSearchDirection.xlPrevious=2
'loop through the worksheet in blocks of Numblines lines

' Force overwrites if the excel book already exists.
excel.DisplayAlerts = False ' Hide alerts

Dim loopCount as Integer = 0
For row as Integer = 1 To lastCell.Row-1 Step rowspersheet ' -1 to cope with total-rows = rowspersheet
	loopCount = loopCount + 1
	Dim newbook as Object = excel.Workbooks.Add
	If notitle Then
		'copy each block into the new worksheet
		sheet.Range(sheet.Cells(row, 1), sheet.Cells(loopCount * rowspersheet, sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
	Else
		'in here - so there must be a title row that needs copying to all the new worksheets
		If row = 1 Then
			'copy row 1-201 into new worksheet (including title row at #1)
			sheet.Range(sheet.Cells(row, 1),sheet.Cells(row + rowspersheet,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
		Else
			'copy title row into new worksheet
			sheet.Range(sheet.Cells(1, 1),sheet.Cells(1,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
			'next copy row iloop+1 to iloop+NumbLines into new worksheet (i.e. 202-401)
			sheet.Range(sheet.Cells(row + 1, 1),sheet.Cells(row + rowspersheet,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A2"))
		End If
	End If
	'close and save the new workbook
	newbook.Close(True, path & prefix & "_SECTION_" & (loopCount+1000).ToString().Substring(1) & ".xls")
Next]]></code></stage><stage stageid="cfd178fc-26e5-4e7c-b9f3-cb49ea4de27e" name="notitle" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="60" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="acee6017-400e-44c3-8b07-611d7318fecf" name="path" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dec5f88-d7e5-4ad4-be54-8744dc5cac54" name="filefound" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="859597f9-d048-46a3-bf99-2f3f6588c2c5" name="Was file found?" type="Decision"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-15" w="120" h="30" /><decision expression="[filefound]" /><ontrue>aa8bb9c5-c392-43d5-b8fb-6a6308c40ad6</ontrue><onfalse>6b2c84c0-9ceb-4f05-8746-5dfbf7ed3733</onfalse></stage><stage stageid="6b2c84c0-9ceb-4f05-8746-5dfbf7ed3733" name="No Such Directory" type="Exception"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="300" y="-15" w="120" h="30" /><exception type="File Not Found" detail="&quot;Directory : &quot; &amp; [path] &amp; &quot; does not exist or is not a directory&quot;" /></stage><stage stageid="e9c5ba22-79d3-4bd7-ae8f-3b36c06dd51e" name="Get Number Of Rows" type="SubSheetInfo"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><narrative>Counts the number of rows in a worksheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="555b5c2d-9106-444b-9c96-f1ff4699a988" name="End" type="End"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="number" name="Number of rows" narrative="The number of rows." stage="rowcount" /></outputs></stage><stage stageid="1c4aa0dc-e628-424b-8df8-eaf16dbd668d" name="Start" type="Start"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the number of rows is required. The default empty text value indicates the currently active sheet on the specified workbook." stage="worksheetname" /></inputs><onsuccess>35173317-eeae-482b-8a2a-ea46406fcb4f</onsuccess></stage><stage stageid="35173317-eeae-482b-8a2a-ea46406fcb4f" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>aa3ba555-86e5-42ae-bdb5-b614c46bdaf9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="aa3ba555-86e5-42ae-bdb5-b614c46bdaf9" name="Count Rows" type="Code"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="number" name="rowcount" stage="rowcount" /></outputs><onsuccess>555b5c2d-9106-444b-9c96-f1ff4699a988</onsuccess><code><![CDATA[
' enum - Excel.XlSearchDirection.xlPrevious=2
rowcount = GetWorksheet(handle,workbookname,worksheetname).Cells.Find("*", , , , , 2).Row]]></code></stage><stage stageid="fbf7b5e7-f86b-48f0-8d2a-8658bcabfe72" name="handle" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ae17d409-d655-459f-a6fe-1c4ed04c7023" name="workbookname" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f2032a3-62ce-48a2-b098-ed275a569931" name="worksheetname" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ac9321b0-2209-4f44-bd1e-3876c05fc35f" name="rowcount" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-150" y="15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1bb96d7-94f9-4570-85a9-f1bcff4f31ae" name="Is Read Only" type="SubSheetInfo"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><narrative>Checks if the given workbook is read only or not.

Params:
- handle : Number : The integer identifying the excel instance to check. Default (0) indicates the current instance.
- Workbook Name : Text : The name of the workbook to be checked. Default ("") indicates the active workbook on the given instance.

Output:
Read Only? : Flag : True to indicate that the workbook is read only; False to indicate that it is writable.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-300" y="-165" w="420" h="210" /></stage><stage stageid="bb6cb4de-9a8f-424e-82d8-52d766ab5da5" name="Start" type="Start"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be checked resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook to test to see if it is read-only or not." stage="workbookname" /></inputs><onsuccess>91487aa9-0d65-4895-940d-c4fed2212eec</onsuccess></stage><stage stageid="1e8fe949-d784-437f-a724-b5003709f18c" name="End" type="End"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="15" /><outputs><output type="flag" name="Read Only?" narrative="True to indicate that the specified workbook is read-only; False to indicate that it can be written to." stage="isreadonly" /></outputs></stage><stage stageid="cfa1438f-ab60-4810-a5b5-ede71fc7b700" name="handle" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-270" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="da3c5815-0a1f-4d3d-af8a-09e5f8a1d262" name="workbookname" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-270" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="91487aa9-0d65-4895-940d-c4fed2212eec" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-90" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e412638c-10ff-49e6-ae71-6b5c86f40ddb</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="b7057d73-acb5-4298-a652-5f91898d67d6" name="isreadonly" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-150" y="-30" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e412638c-10ff-49e6-ae71-6b5c86f40ddb" name="Check Read Only" type="Code"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="flag" name="isreadonly" stage="isreadonly" /></outputs><onsuccess>1e8fe949-d784-437f-a724-b5003709f18c</onsuccess><code><![CDATA[
isreadonly = GetWorkbook(handle,workbookname).ReadOnly]]></code></stage><stage stageid="fedc107e-577b-47d9-a445-c3a3e66ef516" name="Close All Instances" type="SubSheet"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><onsuccess>d2814bb7-61fc-4b4f-8fd9-2dd9f79c06ba</onsuccess><processid>feb8ce9f-299e-4152-85a1-354a5f9d995c</processid></stage><stage stageid="f6285d0d-f7fe-4987-96cf-4d0e27180f81" name="Show" type="SubSheetInfo"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><narrative>Shows a window attached to the instance identified.

Params:
- handle : Number : The handle identifying the excel instance to show. The default of zero shows the currently active instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-225" y="-105" w="330" h="120" /></stage><stage stageid="865342da-5035-45ef-9902-c74ba855f521" name="Start" type="Start"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-150" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window displayed. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>6562ae8e-f16f-4f89-8787-7884cc6a57db</onsuccess></stage><stage stageid="565f4f77-b276-4735-9c18-000ce13946a7" name="End" type="End"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-15" /></stage><stage stageid="6562ae8e-f16f-4f89-8787-7884cc6a57db" name="CheckInstanceHandle" type="SubSheet"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7785ca63-e0a8-40c6-940b-0d9e73944b25</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="97a05e5a-864b-4413-8623-d939827e5c39" name="Hide" type="SubSheetInfo"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><narrative>Hides the window attached to the instance identified.

Params:
- handle : Number : The handle identifying the excel instance to hide. The default of zero shows the currently active instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-240" y="-120" w="360" h="120" /></stage><stage stageid="7785ca63-e0a8-40c6-940b-0d9e73944b25" name="ShowInstance" type="Code"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>565f4f77-b276-4735-9c18-000ce13946a7</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = True]]></code></stage><stage stageid="f65b17c8-19fe-4381-9b68-8909f6aa312d" name="handle" type="Data"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><display x="-195" y="-15" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="11f4ca85-d053-4b2e-a46d-705fe87040c0" name="Start" type="Start"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-165" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window hidden. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>ebc908b3-4501-4500-9648-a35ebbabddda</onsuccess></stage><stage stageid="6106570f-43e1-4a42-9f67-c8f2522a910c" name="End" type="End"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-30" /></stage><stage stageid="ebc908b3-4501-4500-9648-a35ebbabddda" name="CheckInstanceHandle" type="SubSheet"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>1cc2d38f-3783-42f7-8b75-78243c367fb3</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="1cc2d38f-3783-42f7-8b75-78243c367fb3" name="HideInstance" type="Code"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>6106570f-43e1-4a42-9f67-c8f2522a910c</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = False]]></code></stage><stage stageid="11e05865-7edb-4526-b015-b4b5f725fbc4" name="handle" type="Data"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2e480365-7061-4a6c-81ea-380e5bd06ef7" name="Save Current Workbook As" type="SubSheetInfo"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><narrative>Save the current workbook using the given file name. This is the equivalent of calling the 'Save Workbook As' action with the default values for 'handle' (0) and 'Workbook Name' ("")

Params :
- File name : Text : The path and name of the file to which the workbook should be saved.
- Password: Text : Optional. Sets the password that must be supplied to open the specified workbook.
- Timeout: Number: Default 30. The number of seconds by which the action should have completed. Minimum is 10.
- File Format: Optional: A numeric value indicating the format the workbook should be saved in. For a list of supported formats, refer to https://learn.microsoft.com/en-us/office/vba/api/excel.xlfileformat. The default value is 51 (Workbook Default)

Output :
- New Workbook Name : Text : The new name with which the workbook is identified within the excel instance.</narrative><display x="-285" y="-150" w="360" h="150" /></stage><stage stageid="7e1a622f-6438-41c8-9b86-e0d93c8267cb" name="Start" type="Start"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="-180" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance for which the current workbook which should be saved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="File name" narrative="The full path and file name to which the current workbook should be saved." stage="filename" /><input type="number" name="File Format" narrative="Optional: A numeric value indicating the format the workbook should be saved in. For a list of supported formats, refer to https://learn.microsoft.com/en-us/office/vba/api/excel.xlfileformat. The default value is 51 (Workbook Default)" stage="File Format" /><input type="text" name="Password" narrative="Optional. Sets the password that must be supplied to open the specified workbook." stage="password" /><input type="number" name="Timeout" narrative="The number of seconds by which the action should have completed." stage="Timeout" /></inputs><onsuccess>fd8a42eb-d770-43de-8865-4ed77dcfd229</onsuccess></stage><stage stageid="acb62e2e-bb38-4f8b-8ceb-61ec851d8986" name="End" type="End"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="15" /><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook." stage="newworkbookname" /></outputs></stage><stage stageid="c5eee5f9-2db2-4efb-8f47-46e98073dedb" name="filename" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec111fc5-c308-4507-8b78-8fa3a8cfa136" name="Save Workbook As" type="SubSheet"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" expr="&quot;&quot;" /><input type="text" name="Filename" narrative="The full path and filename to which the workbook should be saved." expr="[filename]" /><input type="text" name="Password" friendlyname="Password" narrative="Optional. Sets the password that must be supplied to open the specified workbook." expr="[password]" /><input type="number" name="Timeout" friendlyname="Timeout" narrative="The number of seconds by which the action should be complete." expr="[Timeout]" /><input type="number" name="File Format" friendlyname="File Format" narrative="Optional: A numeric value indicating the format the workbook should be saved in. For a list of supported formats, refer to https://learn.microsoft.com/en-us/office/vba/api/excel.xlfileformat. The default value is 51 (Workbook Default)" expr="[File Format]" /></inputs><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook within the instance." stage="newworkbookname" /></outputs><onsuccess>acb62e2e-bb38-4f8b-8ceb-61ec851d8986</onsuccess><processid>21a53e34-8128-41cb-ad73-17250758ff23</processid></stage><stage stageid="09b432b9-8774-440c-8468-a5effa8bfe98" name="Exit" type="SubSheetInfo"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><narrative>Here for backward compatibility - exits the current instance of Excel without saving any changes.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4f9b1c2f-8b07-4ff1-95bc-12d1de8ec1a8" name="Start" type="Start"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="Timeout" narrative="The number of seconds by which the action should complete. Default is 30. Minimum is 10" stage="Timeout" /></inputs><onsuccess>fc97b188-f45e-46f4-a66e-f592917cabb1</onsuccess></stage><stage stageid="c6c7615b-e18b-42aa-9e83-88884e01e23b" name="End" type="End"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-15" /></stage><stage stageid="fc97b188-f45e-46f4-a66e-f592917cabb1" name="Close Instance" type="SubSheet"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be closed. Zero indicates the currently active instance." expr="0" /><input type="flag" name="Save Changes" narrative="True to save the changes to the open workbooks on the instance, False to discard any changes. Default is False." expr="False" /><input type="number" name="Timeout" friendlyname="Timeout" narrative="The time for the action to complete. Default is 30. Minimum is 10." expr="[Timeout]" /></inputs><onsuccess>c6c7615b-e18b-42aa-9e83-88884e01e23b</onsuccess><processid>6ec3006a-6553-4526-b522-32526c4aa3cc</processid></stage><stage stageid="f441e8a4-9990-4a87-a011-cb9f6c56a3f3" name="Save Current Workbook" type="SubSheetInfo"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><narrative>Saves the current workbook using the workbook name as the file name.
This is the equivalent of calling the Save Workbook action with the default values for 'handle' (0) and 'Workbook Name' ("")

Exceptions: 
- Bad Handle : If there is no active instance.
- Workbook Not Found : If there is no active workbook on the instance.</narrative><display x="-270" y="-90" w="330" h="120" /></stage><stage stageid="ed1db4c8-9563-4f9f-9606-a26b934a1db5" name="Start" type="Start"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-135" /><inputs><input type="number" name="Timeout" narrative="The number of seconds by which the action should complete." stage="Timeout" /></inputs><onsuccess>0d75fe69-c13e-4536-a444-0f915cb6844a</onsuccess></stage><stage stageid="097cd2c8-6d4c-42dc-a542-6e1f1e5a1b7e" name="End" type="End"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-15" /></stage><stage stageid="0d75fe69-c13e-4536-a444-0f915cb6844a" name="Save Workbook" type="SubSheet"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-75" w="90" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." expr="0" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" expr="&quot;&quot;" /><input type="number" name="TitmeOut" friendlyname="TitmeOut" narrative="The timeout value. Default 30 Minimum is 10 seconds." expr="[Timeout]" /></inputs><onsuccess>097cd2c8-6d4c-42dc-a542-6e1f1e5a1b7e</onsuccess><processid>6e7cb0ad-5910-4065-aab2-2919726bae39</processid></stage><stage stageid="4e15b86d-9a5b-40ce-babe-c9fb02cf8764" name="createifmissing" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-180" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="dabb4d29-516f-442c-b2da-32cc45ae4df3" name="Get Worksheet As Collection (Fast)" type="SubSheetInfo"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><narrative>DEPRECATED - Here for back-compatability only. Calls to this action should be replaced by "Get Worksheet As Collection". 

This gets the active worksheet on the active workbook in the current instance of Excel into a collection. It is the equivalent of calling GetWorksheet As Collection with all the default input values.

Output:
Data : Collection : The active sheet's data in a collection.</narrative><display x="-300" y="-120" w="330" h="120" /></stage><stage stageid="c9ce0be6-6a88-4147-aeb3-e8974bb74970" name="Start" type="Start"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="-165" /><onsuccess>a3308402-1446-47b9-9e40-cc105a30db14</onsuccess></stage><stage stageid="aa04eeb6-e87c-4392-b7d2-52e4eb0b28af" name="End" type="End"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="0" /><outputs><output type="collection" name="Data" narrative="The data output" stage="worksheetcollection" /></outputs></stage><stage stageid="98e74d10-88b7-40dd-b771-0a137c8d0665" name="worksheetcollection" type="Collection"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><display x="-210" y="-15" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a3308402-1446-47b9-9e40-cc105a30db14" name="Get Worksheet As Collection" type="SubSheet"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="-90" w="150" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." expr="0" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." expr="" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." expr="" /><input type="text" name="Fetch Data with Method" friendlyname="Fetch Data with Method" narrative="Optional: The method used to fetch data from cells in the worksheet. Options include Text, Value, and Value2. The default indicates Value will be used." expr="" /><input type="flag" name="Use Clipboard" friendlyname="Use Clipboard" narrative="Optional: Flag that indicates the Windows clipboard should be used. Default value is False." expr="" /></inputs><outputs><output type="collection" name="Data" narrative="The collection containing the data from the specified worksheet - the column IDs will be gleaned from the first row on the sheet being retrieved." stage="worksheetcollection" /></outputs><onsuccess>aa04eeb6-e87c-4392-b7d2-52e4eb0b28af</onsuccess><processid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</processid></stage><stage stageid="078c6299-d93e-41b7-9a05-e26f0436b301" name="Format Cell" type="SubSheetInfo"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><narrative>Sets the number format at the given cell to that specified. Oddly, this *doesn't* set the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="584cad36-fa91-4f11-83b7-4829f89f9a35" name="Start" type="Start"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose format should be changed." stage="cellref" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /></inputs><onsuccess>6ed5e96a-3604-426e-b112-0be4f4f4b9a8</onsuccess></stage><stage stageid="59f040b8-35ab-48a1-8321-ab6d321172f4" name="cellref" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1867e11e-a153-4421-9512-848674ac9bea" name="format" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f19aada3-d5b7-49ca-8f65-824a0be6abea" name="handle" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bc1c92c3-d8fd-4e00-86eb-cf22a3331a93" name="Format Current Cell" type="SubSheetInfo"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><narrative>Sets a cell format for the currently active cell.</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="7fea1a9b-6cad-487c-a1d4-0b7a31c0b1e6" name="Start" type="Start"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /></inputs><onsuccess>a8dd2eb1-5144-4f87-b5fc-87dc562df875</onsuccess></stage><stage stageid="936f31ef-fa8e-4960-aa8a-1653cc6d7de2" name="Get Active Cell" type="SubSheetInfo"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><narrative>Gets a reference to the currently active cell on the given instance.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b4a8f71f-cdb8-4091-99f6-f127fb3ec48d" name="Start" type="Start"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the currently active cell is required. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>0f68d429-d637-41bc-ab1c-3890e4e57da6</onsuccess></stage><stage stageid="de4f91e6-efde-42cd-9efa-700811c74c15" name="End" type="End"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="15" /><outputs><output type="text" name="Cell Reference" narrative="The reference identifying the currently active cell on the specified sheet." stage="cellref" /></outputs></stage><stage stageid="3251089f-0682-4cd7-84d1-78fd6a3f68db" name="handle" type="Data"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><display x="-180" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a88df339-9204-419b-9dd7-4553548f1dff" name="cellref" type="Data"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><display x="-180" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f68d429-d637-41bc-ab1c-3890e4e57da6" name="CheckInstanceHandle" type="SubSheet"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-90" w="150" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>0749822c-e521-461c-a3cc-23f5a695980b</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="0749822c-e521-461c-a3cc-23f5a695980b" name="GetActiveCell" type="Code"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>de4f91e6-efde-42cd-9efa-700811c74c15</onsuccess><code><![CDATA[
cellref = GetInstance(handle).ActiveCell.Address(False,False)]]></code></stage><stage stageid="035e5e46-b65c-4bb5-8684-b433aa67ec7b" name="activatecell" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-150" y="-30" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="a47f3c07-957d-4909-bc43-4c56e5f58ae6" name="Activate Cell?" type="Decision"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="45" w="90" h="30" /><decision expression="[activatecell]" /><ontrue>e17eb74e-6764-4980-a96c-dd500de13181</ontrue><onfalse>65e26d12-b37e-4df9-a00b-07340967e5b2</onfalse></stage><stage stageid="e17eb74e-6764-4980-a96c-dd500de13181" name="Go To Cell" type="SubSheet"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="135" y="45" w="90" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Cell Reference" expr="[cellref]" /></inputs><onsuccess>23c196fc-bba5-4cc0-8e36-c8d6db96e360</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="23c196fc-bba5-4cc0-8e36-c8d6db96e360" name="anchor2" type="Anchor"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="135" y="105" w="10" h="10" /><onsuccess>65e26d12-b37e-4df9-a00b-07340967e5b2</onsuccess></stage><stage stageid="5c445c44-609a-45b3-8c4a-ff4a670213df" name="Go To Next Empty Cell Left" type="SubSheetInfo"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><narrative>Activates the next empty cell that can be found on the left of the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /></stage><stage stageid="75944053-c0d7-42b9-9231-b173e13066f5" name="Start" type="Start"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>10b0cef9-77af-42e0-b42e-6fc1870587a4</onsuccess></stage><stage stageid="63d50db2-a5f9-48a9-ae16-9a801712b53c" name="End" type="End"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="15" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="10b0cef9-77af-42e0-b42e-6fc1870587a4" name="Find Next Empty Cell" type="SubSheet"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;L&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>63d50db2-a5f9-48a9-ae16-9a801712b53c</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="f6b88b10-a188-436b-830e-b7eaf783495c" name="handle" type="Data"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6b1312d6-de01-4272-b3cd-765b4835a9f2" name="cellref" type="Data"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ffa60dc-058f-4edc-9140-a43050494dee" name="Go To Next Empty Cell Right" type="SubSheetInfo"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><narrative>Activates the next empty cell that can be found on the right of the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /></stage><stage stageid="78bf9f71-b3ba-4ef3-8142-08be21698287" name="Go To Next Empty Cell Up" type="SubSheetInfo"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><narrative>Activates the next empty cell that can be found above the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /></stage><stage stageid="0a069347-2e66-4668-ab57-b59e6536c5d0" name="Go To Next Empty Cell Down" type="SubSheetInfo"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><narrative>Activates the next empty cell that can be found below the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /></stage><stage stageid="b3b21101-6815-4f78-b7af-06f0a73a4070" name="Start" type="Start"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>782731b8-b7fb-4bec-8b35-b0438a5d8cec</onsuccess></stage><stage stageid="650fc617-bcbd-4d39-b835-748d94773ec6" name="End" type="End"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="15" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="782731b8-b7fb-4bec-8b35-b0438a5d8cec" name="Find Next Empty Cell" type="SubSheet"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;R&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>650fc617-bcbd-4d39-b835-748d94773ec6</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="56afae5f-81d8-4fdc-b521-cb4b99fac5c3" name="handle" type="Data"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="347d2c28-0ea0-4ed0-95ce-14e5925f7193" name="cellref" type="Data"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4636685a-21dc-420d-ae4b-e435f9861298" name="Start" type="Start"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>c01227ef-86b5-48c4-8cbc-6db80b1df2c6</onsuccess></stage><stage stageid="c7e480b2-caf7-430d-b419-49c70c452c4f" name="End" type="End"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="15" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="c01227ef-86b5-48c4-8cbc-6db80b1df2c6" name="Find Next Empty Cell" type="SubSheet"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;U&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>c7e480b2-caf7-430d-b419-49c70c452c4f</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="2d6e7e4e-d6f5-45b7-b4ae-33658d6d38fd" name="handle" type="Data"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="287aee08-8696-49f9-b659-244e88067d0a" name="cellref" type="Data"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4791458d-f683-4adf-ad1c-1591b3d2fab2" name="Start" type="Start"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>072dae62-8d0d-4522-904c-6d253988874d</onsuccess></stage><stage stageid="b90c78f9-6a37-4db4-b30f-ac96d30c730c" name="End" type="End"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="15" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="072dae62-8d0d-4522-904c-6d253988874d" name="Find Next Empty Cell" type="SubSheet"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;D&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>b90c78f9-6a37-4db4-b30f-ac96d30c730c</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="c9e817ca-81d1-4d65-b9d1-27fe80445871" name="handle" type="Data"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1f9a80c2-fd03-43e2-a333-5f2c6b7ad0e2" name="cellref" type="Data"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="febdcc05-5a8a-4445-a188-d0259dfd21a5" name="handle" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="9cbae4e4-6b41-4a38-a05e-0dc4df5d25a3" name="End" type="End"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="60" /></stage><stage stageid="111cd676-ae8c-4b83-9bb1-5567fe0735bd" name="FormatCell" type="Code"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><inputs><input type="text" name="cellref" expr="[cellref]" /><input type="text" name="format" expr="[format]" /><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>9cbae4e4-6b41-4a38-a05e-0dc4df5d25a3</onsuccess><code><![CDATA[
GetWorkbook(handle,Nothing).ActiveSheet.Range(cellref,cellref).NumberFormat = format]]></code></stage><stage stageid="6ed5e96a-3604-426e-b112-0be4f4f4b9a8" name="Activate Workbook" type="SubSheet"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>111cd676-ae8c-4b83-9bb1-5567fe0735bd</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="a8dd2eb1-5144-4f87-b5fc-87dc562df875" name="Get Active Cell" type="SubSheet"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the currently active cell is required. The default of zero indicates the currently active instance." expr="[handle]" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The reference identifying the currently active cell on the specified sheet." stage="cellref" /></outputs><onsuccess>22a903ea-24b0-4f4b-ad3d-590aa6ab3d97</onsuccess><processid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</processid></stage><stage stageid="8480e1e0-5e73-4bec-bc84-ab2b4a5f43fa" name="cellref" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="120" y="-105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="22a903ea-24b0-4f4b-ad3d-590aa6ab3d97" name="Format Cell" type="SubSheet"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose format should be changed." expr="[cellref]" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" expr="[format]" /></inputs><onsuccess>2776814b-74bd-42b3-b282-80a156b933cd</onsuccess><processid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</processid></stage><stage stageid="dc6c799a-7fa3-4623-9bf8-e966d530b67d" name="format" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2776814b-74bd-42b3-b282-80a156b933cd" name="End3" type="End"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="15" /></stage><stage stageid="04fbbbb0-aba9-4518-8bc7-d26273986f9e" name="Set Window Size" type="SubSheetInfo"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><narrative>Sets the window size of the specified instance.</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="7a197c45-c253-4fb8-bed5-e01508e93824" name="Start" type="Start"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle specifying the instance on which the bounds should be changed." stage="handle" /><input type="number" name="Width" narrative="The width to which the instance's window should be set" stage="width" /><input type="number" name="Height" narrative="The height to which the instance's window should be set." stage="height" /></inputs><onsuccess>3d73ff94-84e6-4e12-947e-76d14884579c</onsuccess></stage><stage stageid="a952606a-38e1-4585-821a-7395c94d70cb" name="End" type="End"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="60" /></stage><stage stageid="d4c82574-5577-49e8-80a8-79a27ace5ffb" name="Set Window Location" type="SubSheetInfo"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><narrative>Moves the specified instance's window to the required location.</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="67ee4120-06af-41a6-ae0a-629e1bd3bd05" name="Start" type="Start"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance whose window location should be set." stage="handle" /><input type="number" name="X" narrative="The x co-ordinate to which the window should be moved." stage="x" /><input type="number" name="Y" narrative="The y co-ordinate to which the window should be moved." stage="y" /></inputs><onsuccess>3f663a38-1c01-438f-a02a-aa56ded74764</onsuccess></stage><stage stageid="5b24c512-8930-4c34-9083-7834083ab65c" name="End" type="End"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="60" /></stage><stage stageid="129fe5f1-311c-4b58-964f-74b62d5f17ad" name="Set Window State" type="SubSheetInfo"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><narrative>Minimizes / maximizes / restores the window attached to the specified excel instance.

Exceptions:
Invalid Input Parameter : If the given state was not "normal" and did not start with either "min" or "max"</narrative><display x="-240" y="-105" w="270" h="90" /></stage><stage stageid="44e95a42-ad61-4e8d-af8a-aed037662ba8" name="Go To Next Cell" type="SubSheetInfo"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><narrative>Moves a specified number of rows and columns from the currently active cell and returns the new cell reference.
If the resultant cell reference is the same as the active cell before this action was called, this action has 'failed'. This is usually because the active cell is too close to a boundary.</narrative><display x="-330" y="-135" w="420" h="150" /></stage><stage stageid="a87664dd-017d-4b12-b9c3-7230d7910326" name="Start" type="Start"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Rows" narrative="The number of rows to navigate down. A negative value indicates that the action should navigate UP the required number of rows." stage="rows" /><input type="number" name="Columns" narrative="The number of columns to navigate to the right. A negative value indicates that the action should navigate to the left." stage="cols" /></inputs><onsuccess>fdbdccce-2959-40cb-b4b4-d53556dd97a1</onsuccess></stage><stage stageid="dcae25b1-7e8b-4ee2-9ffc-11aacd935154" name="Close Current Workbook" type="SubSheetInfo"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><narrative>Closes the current workbook on the current excel instance.
This is the equivalent of calling the 'Close Workbook' action with the default values for 'handle' (0) and 'Workbook Name' ("")</narrative><display x="-210" y="-105" w="210" h="90" /></stage><stage stageid="8fccb8ba-397f-406d-a6cd-85cb3c09ba17" name="Start" type="Start"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-210" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Timeout" narrative="The time for the action to complete. Default is 30. Minimum is 10." stage="Timeout" /></inputs><onsuccess>219d05b8-5f6e-40a8-9305-f08edb637792</onsuccess></stage><stage stageid="160a79e4-be77-47f7-b8f2-271a170a762f" name="End" type="End"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-30" /></stage><stage stageid="9dbc3256-ac5d-4bb3-880c-a4aaaaf33bc5" name="Close Workbook" type="SubSheet"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be closed." expr="&quot;&quot;" /><input type="flag" name="Save Data" narrative="True to save the data before closing the workbook; The default of False will discard any changes before closing the workbook." expr="False" /><input type="number" name="Timeout" friendlyname="Timeout" narrative="The timeout value for the function to complete." expr="[Timeout]" /></inputs><onsuccess>160a79e4-be77-47f7-b8f2-271a170a762f</onsuccess><processid>6ccaae8b-c06f-45c8-8772-835218881458</processid></stage><stage stageid="a9a3eac3-7c04-4983-9224-bbf490c75af1" name="handle" type="Data"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="00fbd16c-c443-4d2e-ae2a-4539f816c297" name="rows" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fa354e6-61e2-452d-b0c4-208150e9076d" name="cols" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50344da8-13a3-4d20-899b-bfd3b5507681" name="End" type="End"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="60" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the currently active cell after navigating the required number of rows / columns. If the action could not navigate the desired number of rows / columns (eg. the active cell is near a boundary), then the active cell will not have been change, and this cell reference will represent the same cell that was active before this action was initiated." stage="cellref" /></outputs></stage><stage stageid="30a3c6c6-5324-4fe2-a0b2-3026f1a5e379" name="GoToNextCell" type="Code"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="cols" expr="[cols]" /><input type="number" name="rows" expr="[rows]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>50344da8-13a3-4d20-899b-bfd3b5507681</onsuccess><code><![CDATA[
Dim Instance As Object = GetInstance(handle)

If Instance.ActiveCell Is Nothing Then
	Dim wb As Object = Instance.ActiveWorkBook 
	If wb IsNot Nothing Then
		Dim ws As Object = wb.ActiveSheet
		If ws IsNot Nothing Then
			ws.Range(1,1).Activate()
		Else
			Throw New Exception("There is no active worksheet")
		End If
	Else
		Throw New Exception("There is no active workbook")
	End If
Else
	Try
		Instance.ActiveCell.Offset(rows,cols).Activate()
	Catch ex As Exception
	End Try
End If
cellref = Instance.ActiveCell.Address(False,False)
]]></code></stage><stage stageid="fdbdccce-2959-40cb-b4b4-d53556dd97a1" name="Activate Workbook" type="SubSheet"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>30a3c6c6-5324-4fe2-a0b2-3026f1a5e379</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="5742c4d1-0b40-4dd9-8cf0-e66b9adeab4b" name="handle" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="437bf59c-d85b-45c9-8828-2e2c665afd10" name="cellref" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="105" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc5149d8-0c99-413a-81c8-ba9efc719cdc" name="handle" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a87fd94f-f26f-4c2e-bb67-1ae4c0bed939" name="width" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59a65ce5-cfb1-4190-8449-e4fb5ced121a" name="height" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d73ff94-84e6-4e12-947e-76d14884579c" name="CheckInstanceHandle" type="SubSheet"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>82380eea-db5c-47b3-9a94-2e19338cca95</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="82380eea-db5c-47b3-9a94-2e19338cca95" name="SetWindowSize" type="Code"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="height" expr="[height]" /><input type="number" name="width" expr="[width]" /></inputs><onsuccess>a952606a-38e1-4585-821a-7395c94d70cb</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

excel.WindowState = -4143 'Excel.XlWindowState.xlNormal
excel.Width = width
excel.Height = height]]></code></stage><stage stageid="8acfecd0-d6d9-4de0-ae9e-46922ed73111" name="x" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="15" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b68bc93f-161f-4d6f-825d-2d961690ca56" name="y" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="60" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="079ee65b-a90b-4ab6-81b5-801557c07fbf" name="handle" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="-30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3f663a38-1c01-438f-a02a-aa56ded74764" name="CheckInstanceHandle" type="SubSheet"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>12d30538-38bf-4f9b-a180-41d0b836854c</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="12d30538-38bf-4f9b-a180-41d0b836854c" name="SetWindowLocation" type="Code"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="x" expr="[x]" /><input type="number" name="y" expr="[y]" /></inputs><onsuccess>5b24c512-8930-4c34-9083-7834083ab65c</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

excel.WindowState = -4143 'Excel.XlWindowState.xlNormal
excel.Left = x
excel.Top = y]]></code></stage><stage stageid="016d76a7-6a95-485e-84f5-faa85a0c0712" name="Start" type="Start"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance whose window state should be set." stage="handle" /><input type="text" name="State" narrative="The state of the window which is required. Should start with &quot;min&quot; (to minimize the window), &quot;max&quot; (to maximise the window) or it should equal &quot;normal&quot; (to restore the window). Anything else will result in an error." stage="state" /></inputs><onsuccess>0f8fc913-9174-4304-823f-d18ffae7217a</onsuccess></stage><stage stageid="ffe49fc1-13a2-4e84-a649-bd692ef7752a" name="End" type="End"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="90" /></stage><stage stageid="ca7b06cd-e6e3-42e1-8980-cb429796aa3b" name="handle" type="Data"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="-195" y="-30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3db578f3-47a7-4150-9ccc-6f9a16dbe73f" name="CheckInstanceHandle" type="SubSheet"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="0" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>458615b7-ea0b-4d96-9dce-87099d6e5950</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="458615b7-ea0b-4d96-9dce-87099d6e5950" name="SetWindowState" type="Code"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="state" expr="[state]" /></inputs><onsuccess>ffe49fc1-13a2-4e84-a649-bd692ef7752a</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

If state.ToLower().StartsWith("min") Then
	excel.WindowState = -4140
ElseIf state.ToLower().StartsWith("max") Then
	excel.WindowState = -4137
ElseIf state.ToLower() = "normal" Then
	excel.WindowState = -4143
End If]]></code></stage><stage stageid="4686174e-a845-4f2b-9a0a-70325a2df399" name="Valid State?" type="Decision"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><narrative>Checks if the given state is a valid value</narrative><display x="-30" y="-45" w="90" h="30" /><decision expression="StartsWith([state],&quot;max&quot;) or StartsWith([state],&quot;min&quot;) or [state]=&quot;normal&quot;" /><ontrue>3db578f3-47a7-4150-9ccc-6f9a16dbe73f</ontrue><onfalse>c0e54c49-a9fc-48c4-a54e-2b85581d4ba5</onfalse></stage><stage stageid="1537f595-55fc-4726-910a-1d5ef88bf7a4" name="state" type="Data"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="-195" y="15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c0e54c49-a9fc-48c4-a54e-2b85581d4ba5" name="Invalid State Exception" type="Exception"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="135" y="-45" w="150" h="30" /><exception type="Invalid Input Parameter" detail="&quot;Invalid Window State Parameter : &quot; &amp; [state] &amp; &quot; - must start with 'min', 'max' or equal 'normal'&quot;" /></stage><stage stageid="9d0e19ce-07b8-4074-a34c-6186bcd3ca77" name="newworkbookname" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04e9d703-4b1c-4196-b1ff-7bf68a12faae" name="newworkbookname" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><narrative>The new workbook name assigned by Excel after saving the book</narrative><display x="-135" y="-90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ab01750-1bb3-4299-add0-8a1d08f6bf41" name="handle" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f778bc6c-8cdd-4e56-80b8-b7cdb1fd11ae" name="Release Instance" type="SubSheetInfo"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><narrative>Removes an instance from this business object *without* closing or quitting it - after running this action, the instance in question will not be accessible by this object unless it is re-attached to using 'Open Instance'.

Params:
- handle : Number : The handle of the instance to be released. The default of 0 indicates the currently active instance. Note that following the current instance being released, the current instance will not be set.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-240" y="-135" w="360" h="150" /></stage><stage stageid="66fece2a-2c82-48bb-92fe-211ee6556a24" name="Start" type="Start"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-195" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be released. The default value of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>1d0738a9-7841-446d-b3ed-1a4bafeccc1b</onsuccess></stage><stage stageid="dc556131-4dde-459f-9af8-8c854fcae760" name="End" type="End"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-30" /></stage><stage stageid="6da262c1-9a82-4bc8-9363-ede171f125e5" name="handle" type="Data"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><display x="-225" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1d0738a9-7841-446d-b3ed-1a4bafeccc1b" name="CheckInstanceHandle" type="SubSheet"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-150" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>2e67a2b9-10bf-4d4d-9bd9-db68edaf7662</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="2e67a2b9-10bf-4d4d-9bd9-db68edaf7662" name="Release Instance" type="Code"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>dc556131-4dde-459f-9af8-8c854fcae760</onsuccess><code><![CDATA[
	Dim current as Object = CurrentInstance
	Dim inst as Object = GetInstance(handle) ' Careful - sets the 'current instance' to inst

	HandleMap.Remove(handle)
	InstanceMap.Remove(inst)

	If Object.ReferenceEquals(inst, current) Then
		CurrentInstance = Nothing
	Else
		CurrentInstance = current
	End If
]]></code></stage><stage stageid="0f04ef58-eacb-4204-ba2b-d073285c2be8" name="Note1" type="Note"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><narrative>Don't need to anything - a side-effect of the check is to set the current instance... makes it simple.</narrative><display x="150" y="-120" w="150" h="60" /></stage><stage stageid="f0ee2a73-65b2-418e-8b77-6dc802046c5d" name="Attach" type="SubSheetInfo"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><narrative>Back-compatible link to 'Open Instance'. This opens the first running instance of Excel found and links to it in this object.

Returns:
- handle : Number : An integer with which the instance opened can be identified.
- Enable Events : Flag : Indicates that events should be enabled / disabled on the attached instance - defaulted to True
- Timeout: Number: Default 30. The number of seconds by which the action should be complete. Minimum is 10.</narrative><display x="-210" y="-120" w="240" h="150" /></stage><stage stageid="92e3475b-ed7d-4ae1-940c-7eb554a7cea8" name="Start" type="Start"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-195" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /><input type="number" name="Timeout" narrative="The number of seconds by which the action should have completed. Minimum is 10" stage="Timeout" /></inputs><onsuccess>db3a97bd-7915-4a52-8aba-8a5897f95dc2</onsuccess></stage><stage stageid="c74db74c-8822-4391-8593-d9919e357a5b" name="End" type="End"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-15" /><outputs><output type="number" name="handle" narrative="The integer handle which identifies the excel instance in subsequent actions" stage="handle" /></outputs></stage><stage stageid="f68ab231-3cbb-423e-84de-9103b9f971f4" name="handle" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba67509b-7301-4ce1-a467-e9970249b392" name="Open Instance" type="SubSheet"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-75" w="120" h="30" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." expr="&quot;&quot;" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" expr="[Enable Events]" /><input type="number" name="Timeout" friendlyname="Timeout" narrative="The time by which the action will complete. Default is 30 seconds. Minimum is 10." expr="[Timeout]" /></inputs><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs><onsuccess>c74db74c-8822-4391-8593-d9919e357a5b</onsuccess><processid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</processid></stage><stage stageid="fa5aede4-db23-4781-8954-3baaf0fd0740" name="Attach to Workbook" type="SubSheetInfo"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><narrative>Back compatible link to 'Open instance' - attaches to the excel instance containing the current workbook. Note that if the instance containing the workbook could not be found, a new instance will be created.

Params:
- File name : Text : The name of the file in the instance that should be opened.
- Enable Events : Flag : Indicates that events should be enabled / disabled on the attached instance - defaulted to True
Returns:
- handle : Number : The integer that can be used to reference this instance later.</narrative><display x="-210" y="-135" w="390" h="150" /></stage><stage stageid="431ac081-4d84-414a-80dd-cb137dd67a73" name="Start" type="Start"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="-210" /><inputs><input type="text" name="File name" narrative="The name of the file which should be opened" stage="filename" /><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /><input type="number" name="Timeout" narrative="The number of seconds by which this action should be compelte." stage="Timeout" /></inputs><onsuccess>cd62beef-12a7-445d-a0e7-80705347fe60</onsuccess></stage><stage stageid="ba3c2775-b5ac-44a8-be6b-05befaea619b" name="End" type="End"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="15" /><outputs><output type="number" name="handle" narrative="The integer handle indentifying the instance opened. This can be used in subsequent actions to identify the instance." stage="handle" /></outputs></stage><stage stageid="0283fb0e-8dda-4956-b434-ea1d6c99e063" name="handle" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a719c51-85b9-4750-9593-bf0e3166edfc" name="Open Instance" type="SubSheet"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="-90" w="120" h="30" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." expr="[filename]" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" expr="[Enable Events]" /><input type="number" name="Timeout" friendlyname="Timeout" narrative="The time by which the action will complete. Default is 30 seconds. Minimum is 10." expr="[Timeout]" /></inputs><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs><onsuccess>ba3c2775-b5ac-44a8-be6b-05befaea619b</onsuccess><processid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</processid></stage><stage stageid="c99c412d-dbb6-4a6a-a7e2-9834a74052d0" name="filename" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a734ecf-7e58-4aa4-b7ff-5aa4494ec687" name="cellref empty?" type="Decision"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>bed65abf-b1ad-4f7e-83be-c8a96e3ea162</ontrue><onfalse>39135f99-dd54-4a2b-bff2-555714753a6d</onfalse></stage><stage stageid="bed65abf-b1ad-4f7e-83be-c8a96e3ea162" name="anchor3" type="Anchor"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><onsuccess>b98f8e72-e995-42a4-b3f9-df0acf2a5944</onsuccess></stage><stage stageid="b98f8e72-e995-42a4-b3f9-df0acf2a5944" name="anchor4" type="Anchor"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><onsuccess>a04a5ea1-798c-4659-ac77-0c966c305cba</onsuccess></stage><stage stageid="250bb1db-ca8e-4edb-b9a4-52fa39261823" name="Go To Cell" type="SubSheet"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>94dc11fe-505e-4544-a26b-80d3d88d0951</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="29427d7f-a2d9-4b65-b6c4-773881bd285d" name="cellref empty?" type="Decision"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>e743b184-cb2f-43cb-83c1-b99654286d3d</ontrue><onfalse>250bb1db-ca8e-4edb-b9a4-52fa39261823</onfalse></stage><stage stageid="e743b184-cb2f-43cb-83c1-b99654286d3d" name="anchor3" type="Anchor"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><onsuccess>dea637ce-5933-4805-94a4-f2bbd9b99d0b</onsuccess></stage><stage stageid="dea637ce-5933-4805-94a4-f2bbd9b99d0b" name="anchor4" type="Anchor"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><onsuccess>94dc11fe-505e-4544-a26b-80d3d88d0951</onsuccess></stage><stage stageid="bcf597f1-97f7-449c-8865-ff8ca139dd6c" name="Get Active Cell Value" type="SubSheetInfo"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><narrative>Gets the value of the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b69207e1-2811-4150-a61f-4746ef8489d4" name="Start" type="Start"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell whose value is required resides. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>af8aab5e-4539-4acc-a5cc-1bd632282587</onsuccess></stage><stage stageid="73e8408e-ff97-4d9f-b0e0-5a0e844b731c" name="End" type="End"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="15" /><outputs><output type="text" name="Value" narrative="The (unformatted) value found at the specified cell." stage="Value" /></outputs></stage><stage stageid="af8aab5e-4539-4acc-a5cc-1bd632282587" name="Get Active Cell Value" type="SubSheet"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." expr="&quot;&quot;" /></inputs><outputs><output type="text" name="Value" narrative="The (unformatted) value from the required cell." stage="Value" /></outputs><onsuccess>73e8408e-ff97-4d9f-b0e0-5a0e844b731c</onsuccess><processid>0e031661-2f5e-4cb2-949b-97babe59ff81</processid></stage><stage stageid="88d7196d-2443-4439-8261-6700e9673d0a" name="handle" type="Data"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e4cdc61b-a1e1-461e-8d91-a98cd40a2c5a" name="Value" type="Data"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="69cd13bc-f818-4a5b-be64-b6fb7de62c61" name="Create Worksheet" type="SubSheetInfo"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><narrative>Creates a new worksheet in the specified workbook with the given name. If a sheet with the given name already exists, this will activate that sheet.

Params:
- handle : Number : The number identifying the instance required.
- Workbook Name : Text : The name of the workbook to add it to. An empty string (the default) indicates the active workbook in the instance.
- Worksheet Name : Text : The name of the worksheet that is required. Note that if the name matches a worksheet already in the workbook a new worksheet will not be created, but that worksheet will be activated.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-165" w="420" h="210" /></stage><stage stageid="2a0c385f-fe76-4eb3-a36f-4936eb7ac84a" name="Start" type="Start"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="-240" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet should be created. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet should be created - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /></inputs><onsuccess>89240340-492e-44ab-9fed-c64a6d3fffdf</onsuccess></stage><stage stageid="5d624e42-813e-467d-bda1-ebb3e410045c" name="End" type="End"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="60" /></stage><stage stageid="89240340-492e-44ab-9fed-c64a6d3fffdf" name="Activate Worksheet" type="SubSheet"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="[workbookname]" /><input type="flag" name="Create If Missing?" expr="True" /><input type="text" name="Worksheet Name" expr="[worksheetname]" /></inputs><onsuccess>5d624e42-813e-467d-bda1-ebb3e410045c</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="ab7509fd-0572-44d9-9050-b9c9907c49ac" name="handle" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="544db1ef-b84c-403c-b4ee-de2d660ec253" name="worksheetname" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df17296d-4f63-46cf-bcd9-4acd7eefed34" name="workbookname" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="64089c9a-4a30-4db5-bf87-7ba017ba54e7" name="Write Collection" type="SubSheetInfo"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><narrative>Writes the given collection into the specified sheet.</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="a1ab274b-c2fb-47c7-94f8-292590df5765" name="Start" type="Start"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the specified collection should be written. The default of zero indicates the currently active instance." stage="handle" /><input type="collection" name="Collection" narrative="The collection containing the data which should be written to the worksheet." stage="collection" /><input type="text" name="Workbook Name" narrative="The name of the workbook within which the data should be written. The default empty value indicates the current workbook within the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the given data should be written. The default empty value indicates the current sheet within the specified workbook." stage="worksheetname" /><input type="text" name="Cell Reference" narrative="The reference at which the collection should be written." stage="cellref" /><input type="flag" name="Include Column Names" narrative="True to indicate that the column names from the collection should be written out as the first row; False to ignore the column names and just write out the data." stage="includecolnames" /></inputs><onsuccess>a3a318c6-e218-4e78-a818-1673f90541b3</onsuccess></stage><stage stageid="8819df51-0132-421d-baae-b24b5082f131" name="End" type="End"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="60" /></stage><stage stageid="85afbd6d-2c6e-42f8-8e71-7858a8488167" name="handle" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc024959-b016-4b16-93a8-e230e4ab936d" name="collection" type="Collection"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="71e25266-b464-4b47-b6a7-c8a70cff7514" name="worksheetname" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5f2a253-bee4-4ee0-9d8c-ab780265b5db" name="workbookname" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="98c5b0c8-0c25-4972-b9c8-6057e6841ce5" name="includecolnames" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="60" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3a318c6-e218-4e78-a818-1673f90541b3" name="Activate Worksheet" type="SubSheet"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookname]" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetname]" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>f2ebff4d-5325-45e8-945d-73006f5bd7ce</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="f2ebff4d-5325-45e8-945d-73006f5bd7ce" name="WriteColl" type="Code"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="cellref" expr="[cellref]" /><input type="collection" name="collection" expr="[collection]" /><input type="flag" name="includecolnames" expr="[includecolnames]" /></inputs><onsuccess>8819df51-0132-421d-baae-b24b5082f131</onsuccess><code><![CDATA[' Get to the cell
Dim ws As Object = GetWorksheet(handle, workbookname, worksheetname)
Dim origin As Object = ws.Range(cellref, cellref)
Dim cell As Object = origin

Dim colInd As Integer = 0, rowInd As Integer = 0 ' Offsets from the origin cell

' Deal with the column names first
If includecolnames Then
	For Each col As DataColumn In Collection.Columns
		Try
			cell = origin.Offset(rowInd, colInd)
		Catch ex As Exception ' Hit the edge.
			Exit For
		End Try
		SetProperty(cell, "Value", col.ColumnName)
		colInd += 1
	Next
	rowInd += 1
End If

' Now for the data itself
For Each row As DataRow In Collection.Rows
	colInd = 0
	For Each col As DataColumn In Collection.Columns
		Try
			cell = origin.Offset(rowInd, colInd)
		Catch ex As Exception ' Hit the edge.
			Exit For
		End Try
		SetProperty(cell, "Value", row(col))
		colInd += 1
	Next
	rowInd += 1
Next]]></code></stage><stage stageid="fb353c57-7a8c-4ccb-9428-94761a643715" name="cellref" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="add1def4-fc64-4534-bbb0-d3ac07611a85" name="anchor5" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="60" w="10" h="10" /><onsuccess>108c176a-92d1-4f50-b460-ac6a3f0dac25</onsuccess></stage><stage stageid="51d7d624-e8bf-42b7-afdd-8d090b584865" name="anchor6" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="195" y="60" w="10" h="10" /><onsuccess>add1def4-fc64-4534-bbb0-d3ac07611a85</onsuccess></stage><stage stageid="4be7292e-9eb1-43f7-9e87-3ae906bd79ed" name="savechanges" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0f8fc913-9174-4304-823f-d18ffae7217a" name="state = Lower(state)" type="Calculation"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><onsuccess>4686174e-a845-4f2b-9a0a-70325a2df399</onsuccess><calculation expression="Lower([state])" stage="state" /></stage><stage stageid="27e7ff80-4437-42a3-ba14-e499be5bc0e5" name="sheetexists" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-240" y="60" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a854b87-0e5a-46dd-8181-a58f97555aa8" name="Sheet Existed?" type="Decision"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><decision expression="[sheetexists]" /><ontrue>ddfe7f54-b5c2-410a-8a5d-3c2b52de9550</ontrue><onfalse>9bc52652-698b-46ca-ba0d-ebb170432963</onfalse></stage><stage stageid="9bc52652-698b-46ca-ba0d-ebb170432963" name="No Such Sheet" type="Exception"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="150" y="-45" w="90" h="30" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b396c564-6c31-4c6f-be0a-0cc64f178a19" name="sheetexisted" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56c2259b-9d71-4364-bede-79b4af1e3e96" name="Sheet Existed?" type="Decision"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><decision expression="[sheetexisted]" /><ontrue>6b35d569-0eb2-4c01-bb88-e5f7c41bde81</ontrue><onfalse>091e0364-11db-49d4-8e94-8f5f9396fa9c</onfalse></stage><stage stageid="091e0364-11db-49d4-8e94-8f5f9396fa9c" name="No Such Sheet" type="Exception"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="150" y="30" w="120" h="30" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b6d0da26-0322-4b43-b1d5-304466ff29fb" name="Sheet Exists?" type="Decision"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><decision expression="[sheetexists]" /><ontrue>cf5b0880-2cac-4221-946a-e4e3d7f0bc99</ontrue><onfalse>7e8fce63-9130-4c0f-baea-ea8be793c57d</onfalse></stage><stage stageid="7e8fce63-9130-4c0f-baea-ea8be793c57d" name="No Such Sheet" type="Exception"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="165" y="-90" w="90" h="30" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="5cb56c9a-aa29-4ed4-84e1-9a65976ba50f" name="Does sheet exist?" type="Decision"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-90" w="120" h="30" /><decision expression="[sheetexists]" /><ontrue>859597f9-d048-46a3-bf99-2f3f6588c2c5</ontrue><onfalse>2b8672dd-8330-4c2d-a522-9f12c9e27ba2</onfalse></stage><stage stageid="2b8672dd-8330-4c2d-a522-9f12c9e27ba2" name="No Such Sheet" type="Exception"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="300" y="-90" w="120" h="30" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="c50f1065-0989-47f5-aad4-c66396e462e0" name="sheetexists" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="68b64b13-62f8-4431-94c4-62b7ff1f1c2c" name="Get Worksheet as Collection Offset" type="SubSheetInfo"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><narrative>Gets the current worksheet into a collection. This will read the worksheet and store the contents into the collection. The offset function allows a starting cell to be specified.</narrative><display x="-330" y="-705" w="210" h="120" /></stage><stage stageid="164e0a2b-6c31-48ce-8172-7fb4edd3dbb3" name="End" type="End"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="-120" y="-480" /><outputs><output type="collection" name="Data" narrative="The data output" stage="worksheetcollection" /></outputs></stage><stage stageid="0b6697a7-4aa1-4ec1-86db-bc41f3ca9d5e" name="handle" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-285" y="-600" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2c25e33f-7af9-4998-8c1a-4029c0e2af9e" name="workbookname" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-285" y="-555" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ee01090-4b0b-4e85-9643-1f3b40d182e2" name="Start" type="Start"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="-120" y="-705" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="StartCell" narrative="The starting cell of the range of interest" stage="Start Cell" /><input type="flag" name="Use Header" narrative="This flag states if the excel collection uses a header, or not." stage="Use Header" /><input type="text" name="fetchDataWithMethod" narrative="An Excel specific string that indicates the Range property that should be used to get the data. Supported values include 'Text', 'Value', and 'Value2'. Default value is 'Value'." stage="fetchDataWithMethod" /></inputs><onsuccess>8f50a819-e470-4c0e-97d5-08bd0f705682</onsuccess></stage><stage stageid="a755a822-d485-45ea-8d7d-426646b4aec0" name="GetWorksheetAsCollectionOffset" type="Code"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="-120" y="-585" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="flag" name="Use Header" expr="[Use Header]" /><input type="text" name="fetchDataWithMethod" expr="[fetchDataWithMethod]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /></outputs><onsuccess>164e0a2b-6c31-48ce-8172-7fb4edd3dbb3</onsuccess><code><![CDATA[Dim ws as Object = GetWorksheet( _
 handle, workbookname, worksheetname)
ws.Activate()

Dim lastCell as Object = ws.UsedRange.SpecialCells(11)

Dim lastCellRef as String = GetColumnName(lastCell.Column - 1) + lastCell.Row.ToString()
Dim r as Object = ws.Range(Start_Cell & ":" & lastCellRef)


worksheetCollection = GetWorksheetUsedRangeAsDataTable(r, Use_Header, fetchDataWithMethod, False)]]></code></stage><stage stageid="8f50a819-e470-4c0e-97d5-08bd0f705682" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="-120" y="-645" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>a755a822-d485-45ea-8d7d-426646b4aec0</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="f82cf955-6669-494b-b6a1-866974c7cc74" name="worksheetname" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-285" y="-510" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b329ff1-b62a-41eb-9503-6673f300eb68" name="worksheetcollection" type="Collection"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="90" y="-600" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3f4b3c3e-515f-4ee7-9e70-5c76c0fb3044" name="Set Events Enabled" type="SubSheetInfo"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><narrative>Enables or disables the events on the specified excel instance.</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="cb955f7e-320d-42d1-8dad-26b8f55d083b" name="Start" type="Start"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." stage="handle" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" stage="Enable Events" /></inputs><onsuccess>68483479-6865-4fd5-9a77-f4392c4ade9e</onsuccess></stage><stage stageid="3969dd45-fdea-4671-879e-461a56f312be" name="End" type="End"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="30" /></stage><stage stageid="68483479-6865-4fd5-9a77-f4392c4ade9e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>21682417-b503-44b4-92f2-a3c80b4fad14</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="45553fd7-b75b-4fee-8961-aff490d121b3" name="Enable Events" type="Data"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="21682417-b503-44b4-92f2-a3c80b4fad14" name="Enable Events" type="Code"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-30" w="90" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="flag" name="enable" expr="[Enable Events]" /></inputs><onsuccess>3969dd45-fdea-4671-879e-461a56f312be</onsuccess><code><![CDATA[
GetInstance(handle).EnableEvents = enable]]></code></stage><stage stageid="3fd7c1fd-f40f-451d-885e-3f5e34c62b77" name="handle" type="Data"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb99ca56-7dc9-4a0d-860e-651747237d8f" name="Enable Events" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="7fb1ba2f-64f1-417b-9b97-479efb954a9d" name="anchor8" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="60" w="10" h="10" /><onsuccess>51d7d624-e8bf-42b7-afdd-8d090b584865</onsuccess></stage><stage stageid="108c176a-92d1-4f50-b460-ac6a3f0dac25" name="Enable/Disable Events" type="SubSheet"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="105" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>754832af-1144-48ff-8ab0-bb6c86d3f78e</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="17b0edcc-4892-4e42-93c9-9438a160ed66" name="Enable Events" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e24f71a3-1760-49ce-bbcb-4750671f20ad" name="Enable Events" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="9773e311-bcc9-4426-999e-7c586da425c5" name="Enable Events" type="Data"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><display x="-255" y="15" w="90" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="a13edde2-3883-4007-9719-92f0e1009ddd" name="Set Events Enabled" type="SubSheet"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>d337a2cf-1121-4619-a1b1-f7f19bea974e</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="7c3abf99-a3ae-44c2-b834-ad050b20a0eb" name="Enable Events" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="6c2fa22d-1876-46b7-92eb-cf8343d0911f" name="Set Events Enabled" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="90" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>18a306bf-d323-4c4e-83b5-4b226773161c</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="e13408b2-c348-4d32-9ca3-e878db7cd165" name="Start Cell" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-405" y="-600" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="614b5c49-3b88-427a-9513-c3048d8b716d" name="Get Worksheet Names" type="SubSheetInfo"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><narrative>Gets the name of the worksheets.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ef85b34d-5145-4f90-96a4-0f1abc4c4889" name="End" type="End"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="90" /><outputs><output type="collection" name="Worksheet Names" narrative="A collection of worksheet names found in the specified workbook" stage="Worksheet Names" /></outputs></stage><stage stageid="7e4ae954-86d5-4183-88b2-d307fecfc6a9" name="Start" type="Start"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook." stage="workbookname" /></inputs><onsuccess>9bc4bc33-6a3a-43e0-86e0-7b209978508a</onsuccess></stage><stage stageid="9bc4bc33-6a3a-43e0-86e0-7b209978508a" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="-45" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>bbd37070-c589-4f9c-8d03-11f2982c59f4</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="bbd37070-c589-4f9c-8d03-11f2982c59f4" name="Get Worksheets" type="Code"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="collection" name="Worksheet Names" stage="Worksheet Names" /></outputs><onsuccess>ef85b34d-5145-4f90-96a4-0f1abc4c4889</onsuccess><code><![CDATA[Dim wb As Object = GetWorkbook(Handle, WorkbookName)
Dim sheets as Object = wb.Sheets

Worksheet_Names = New DataTable()
Worksheet_Names.Columns.Add("Name", GetType(String))

If sheets IsNot Nothing Then
	For Each sheet as Object in sheets
		Worksheet_Names.Rows.Add(New Object() {sheet.Name})
	Next
End If]]></code></stage><stage stageid="cff86abf-c0f2-493d-942f-759ce2830ff8" name="handle" type="Data"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-135" y="0" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e5d53720-b610-4e5c-bf49-94cbcaf29e20" name="workbookname" type="Data"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-135" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd45f86-2f78-4a96-8e74-62414e4094e7" name="Worksheet Names" type="Collection"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="255" y="15" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9d637f02-8e13-4c65-a606-5756018a9e8c" name="Worksheet Exists" type="SubSheetInfo"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><narrative>Checks if a worksheet exists in a workbook.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="54725352-a686-4ebc-88d8-80fa81af39bc" name="End" type="End"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="15" y="225" /><outputs><output type="flag" name="Worksheet Exists" narrative="Indicates whether or not the named worksheet exists" stage="Worksheet Exists" /></outputs></stage><stage stageid="4cd78f5f-29a7-4f71-ab51-5c93e2e50ba3" name="Start" type="Start"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet of interest; it will be checked for existence" stage="Worksheet Name" /></inputs><onsuccess>b4bad8df-ac04-4c0f-88cf-21bd3dc6707a</onsuccess></stage><stage stageid="4126c650-c062-413d-b6b3-501c8743b400" name="handle" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-180" y="0" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a19213a7-dbb4-4a78-b929-7c0ec2f48fa7" name="workbookname" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-180" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4bad8df-ac04-4c0f-88cf-21bd3dc6707a" name="Get Worksheet Names" type="SubSheet"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="-45" w="90" h="60" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." expr="[workbookname]" /></inputs><outputs><output type="collection" name="Worksheet Names" narrative="A collection of worksheet names found in the specified workbook" stage="Worksheet Names" /></outputs><onsuccess>3124d4f1-6d19-450e-8d71-01e6c2cac8d9</onsuccess><processid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</processid></stage><stage stageid="920cf97d-74a9-441c-9e2b-2c47c023ac33" name="Worksheet Names" type="Collection"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="255" y="-45" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3124d4f1-6d19-450e-8d71-01e6c2cac8d9" name="For Each Name" type="LoopStart"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="45" w="90" h="30" /><onsuccess>0e40b339-b952-445b-a957-6d2d0a1bdbac</onsuccess><groupid>7adde929-95a8-4bdb-8362-2dcf58807cb2</groupid><looptype>ForEach</looptype><loopdata>Worksheet Names</loopdata></stage><stage stageid="27d57e09-d2fa-496d-a5c6-d382be881ad1" name="Next" type="LoopEnd"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="135" w="90" h="30" /><onsuccess>aea2b1ba-e24b-4929-a0be-bc2ad811f277</onsuccess><groupid>7adde929-95a8-4bdb-8362-2dcf58807cb2</groupid></stage><stage stageid="4198f8b9-1418-4bbc-a984-4049f1b78df6" name="Worksheet Name" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="180" y="-135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e40b339-b952-445b-a957-6d2d0a1bdbac" name="Matches?" type="Decision"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="90" /><decision expression="[Worksheet Name] = [Worksheet Names.Name]" /><ontrue>f284f63f-fccf-4df8-ab7d-d7ef8aca1fb1</ontrue><onfalse>27d57e09-d2fa-496d-a5c6-d382be881ad1</onfalse></stage><stage stageid="f284f63f-fccf-4df8-ab7d-d7ef8aca1fb1" name="Found" type="Calculation"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="15" y="90" /><onsuccess>54725352-a686-4ebc-88d8-80fa81af39bc</onsuccess><calculation expression="True" stage="Worksheet Exists" /></stage><stage stageid="f5a7d39b-3edc-4984-89dc-f88f02b5f747" name="Worksheet Exists" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-60" y="90" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aea2b1ba-e24b-4929-a0be-bc2ad811f277" name="Not Found" type="Calculation"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="225" /><onsuccess>54725352-a686-4ebc-88d8-80fa81af39bc</onsuccess><calculation expression="False" stage="Worksheet Exists" /></stage><stage stageid="a1d81278-4fd7-4ee6-a878-8ec4dcde4793" name="Get Worksheet Range As Collection" type="SubSheetInfo"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><narrative>Returns a Collection containing the data from the specified worksheet range.</narrative><display x="-135" y="-105" w="360" h="120" /></stage><stage stageid="6f2ee451-c914-4c38-8e19-4d3e3a519dfd" name="End" type="End"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="60" /><outputs><output type="collection" name="Data" narrative="The spreadsheet data from the specified range, as a collection" stage="worksheetcollection" /></outputs></stage><stage stageid="fa5759e6-b7e3-42d1-8297-90953ec4a343" name="handle" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="832f8dbf-c88e-4488-89ec-d0782439fc34" name="workbookname" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7a36655-443b-482f-809b-eb738682ee98" name="Start" type="Start"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="-120" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="StartCell" narrative="The starting cell of the range of interest" stage="Start Cell" /><input type="text" name="EndCell" narrative="The end cell of the range of interest" stage="End Cell" /><input type="flag" name="Use Header" narrative="Optional. This flag states if the Excel collection uses a header, or not. Default value is True." stage="Use Header" /><input type="text" name="fetchDataWithMethod" narrative="Optional. Text value that specifies the Excel property that should be checked for the contents of a cell. The possible options are 'Text', 'Value', or 'Value2'. The different options reference different representations of the contens of a cell depending on the value (ex. formatting of dates/currency). For further details, see Microsoft's documentation concerning the Range object. Default value is 'Value'." stage="fetchDataWithMethod" /><input type="flag" name="Use Clipboard" narrative="Optional. Flag value that controls whether the range should be copied to the clipboard and parsed into the output Collection. In some cases, this can result in faster processing. Default value is False." stage="Use Clipboard" /></inputs><onsuccess>58d3ca4f-4467-492d-b85a-fd7ab4271110</onsuccess></stage><stage stageid="680eac96-2bd0-4d02-a62b-ac7bf684dae9" name="GetWorksheetRangeAsCollection" type="Code"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="0" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="text" name="End Cell" expr="[End Cell]" /><input type="flag" name="Use Header" expr="[Use Header]" /><input type="text" name="fetchDataWithMethod" expr="[fetchDataWithMethod]" /><input type="flag" name="Use Clipboard" expr="[Use Clipboard]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /></outputs><onsuccess>6f2ee451-c914-4c38-8e19-4d3e3a519dfd</onsuccess><code><![CDATA[Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname)
Dim r as Object
r = ws.Range(Start_Cell & ":" & End_Cell)

If Use_Clipboard Then
	r.Select()
	r.Copy()

	Dim data As String = GetClipboardText()

	worksheetCollection = ParseDelimSeparatedVariables(data, vbTab, Nothing, Use_Header)
Else
	worksheetCollection = GetWorksheetUsedRangeAsDataTable(r, Use_Header, fetchDataWithMethod, False)
End If
]]></code></stage><stage stageid="706da482-84a4-4e78-a1ba-002f80123e3f" name="worksheetname" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1ec36df-f335-48a9-a0f4-e3f39d6c987d" name="worksheetcollection" type="Collection"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="345" y="-15" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8054b9c8-5245-4a77-a058-949faeec00a7" name="Start Cell" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-210" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9f43b65-bd92-44fa-b0fe-cf798aaf49be" name="End Cell" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-210" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="40717bdb-980d-46a2-8ed8-4c3c283a98ff" name="Use Header" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-405" y="-555" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1a437a6b-8cfe-4bc1-a7d3-ca5a2e026477" name="Remove Blank Rows" type="SubSheetInfo"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><narrative>Removes blank rows in the active excel workbook. The entire row must consist of blank cells.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c883a67c-5093-45d2-82c8-680cf35c2c0e" name="Start" type="Start"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>1e0e5735-5bc9-43dc-85c9-4e8735def67f</onsuccess></stage><stage stageid="7023c112-819d-4c9c-82f3-84ab84c9f560" name="End" type="End"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="90" /></stage><stage stageid="1e0e5735-5bc9-43dc-85c9-4e8735def67f" name="Activate Workbook" type="SubSheet"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="" /></inputs><onsuccess>4fa6c603-9d6a-4077-ba95-9d213394ee06</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="890b79a0-986e-4982-a010-99e17a8f7173" name="handle" type="Data"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><display x="225" y="-105" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="4fa6c603-9d6a-4077-ba95-9d213394ee06" name="Delete blank rows" type="Code"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="15" w="180" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7023c112-819d-4c9c-82f3-84ab84c9f560</onsuccess><code><![CDATA[Dim worksheet As Object
worksheet = GetWorkbook(handle,Nothing).ActiveSheet

Const xlCellTypeLastCell As Integer = 11 
Dim FirstRow As Integer = 1
Dim LastRow As Integer = worksheet.Cells.SpecialCells(xlCellTypeLastCell).Row

For i As Integer = LastRow To FirstRow Step -1
	If worksheet.Application.CountA(worksheet.Rows(i)) = 0 Then
		worksheet.Rows(i).Delete
	End If
Next]]></code></stage><stage stageid="7ea085b3-60ed-4690-9b58-044e3adac69b" name="Move Worksheet" type="SubSheetInfo"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><narrative>Moves the specified worksheet to another workbook.
</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="48fad533-06e9-41b7-b213-bfea2423c61c" name="Start" type="Start"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Source Workbook" narrative="The name of the source workbook which contains the sheet required." stage="Source Workbook" /><input type="text" name="Source Worksheet" narrative="The name of the source worksheet which is to be moved." stage="Source Worksheet" /><input type="text" name="Destination Workbook" narrative="The name of the destination workbook which the worksheet will be moved to." stage="Destination Workbook" /><input type="number" name="Destination Position" narrative="The destination position to move the worksheet to." stage="Destination Position" /><input type="flag" name="Copy" narrative="The true or false flag to decide if the moved worksheet will be copied." stage="Copy" /></inputs><onsuccess>b950e637-fb25-4932-b970-65e4ee21dd1d</onsuccess></stage><stage stageid="51274535-b09a-4b0b-a9bc-fff82557aa0a" name="Handle" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6336e057-ac6a-4b57-b789-906100be58cc" name="Source Workbook" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="51bf5410-80ae-4517-8ee8-1ccf54a61e2f" name="Source Worksheet" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="467b75ec-f03c-460e-a57d-d6852ab35293" name="Destination Workbook" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ad740a0-b0e5-483c-9247-2b766533c852" name="Source Worksheet Exists" type="SubSheet"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="-30" w="90" h="60" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." expr="[Source Workbook]" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet of interest; it will be checked for existence" expr="[Source Worksheet]" /></inputs><outputs><output type="flag" name="Worksheet Exists" narrative="Indicates whether or not the named worksheet exists" stage="Worksheet Exists" /></outputs><onsuccess>efca1a70-2f20-4dda-b071-825a986958a6</onsuccess><processid>eacc4634-9985-4a1d-9773-8f79928708ee</processid></stage><stage stageid="4702c382-1a44-441c-9cd1-83281efd10ff" name="Worksheet Exists" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="efca1a70-2f20-4dda-b071-825a986958a6" name="Worksheet Exists?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="45" w="90" h="60" /><decision expression="[Worksheet Exists]" /><ontrue>e804939a-8a40-4803-89cd-b10e57a97583</ontrue><onfalse>5d46a63f-e90b-4432-8c62-52d2e2380065</onfalse></stage><stage stageid="e804939a-8a40-4803-89cd-b10e57a97583" name="Move Named Worksheet" type="Code"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="120" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="SourceWorkbook" expr="[Source Workbook]" /><input type="text" name="SourceWorksheet" expr="[Source Worksheet]" /><input type="text" name="DestinationWorkbook" expr="[Destination Workbook]" /><input type="number" name="DestinationPosition" expr="[Destination Position]" /><input type="flag" name="Copy" expr="[Copy]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>764ea205-800b-4ab5-adc1-273a46ad93b6</onsuccess><code><![CDATA[Dim dBook, sSheet As Object
Dim p As Integer

Try

dBook = GetWorkbook(Handle, DestinationWorkbook)
sSheet = GetWorksheet(Handle, SourceWorkbook, SourceWorksheet)

p = Math.Max(1, DestinationPosition)
p = Math.Min(dBook.Worksheets.Count, p)

If DestinationPosition > p Then
	If Copy Then
		sSheet.Copy(After:=dBook.Worksheets(p))
	Else
		sSheet.Move(After:=dBook.Worksheets(p))
	End If
Else
	If Copy Then
		sSheet.Copy(Before:=dBook.Worksheets(p))
	Else
		sSheet.Move(Before:=dBook.Worksheets(p))
	End If
End If

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	dBook = Nothing
	sSheet = Nothing
End Try]]></code></stage><stage stageid="38d819d9-2dec-4ae8-afe3-76da44096935" name="End2" type="End"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="270" /></stage><stage stageid="cb823085-c462-43b7-81d0-3ad7f1e026dd" name="Success" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="81e05f5d-ac29-4885-b6cd-fd5a308fcc44" name="Message" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="270" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="764ea205-800b-4ab5-adc1-273a46ad93b6" name="Success?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="195" w="90" h="60" /><decision expression="[Success]" /><ontrue>38d819d9-2dec-4ae8-afe3-76da44096935</ontrue><onfalse>65eda7a6-ce00-4372-9fc9-26931328aba4</onfalse></stage><stage stageid="7b25db9b-d103-4ba0-a8a5-468a16e50dd7" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="345" y="195" /><exception type="" detail="&quot;Failed to copy worksheet: &quot; &amp; [Message]" /></stage><stage stageid="87c0d87a-ef13-4eb7-8e10-085ab67dc0a0" name="Destination Position" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3e46008f-172e-42b3-b4b3-e7221f0ef6d8" name="Copy and Paste Worksheet Range" type="SubSheetInfo"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><narrative>Office 2013 onwards
There are known issues when attempting to read and write data using the Excel VBO with the application set to run in background mode. These issues can be overcome by using the Show action</narrative><display x="-270" y="-120" w="300" h="120" /></stage><stage stageid="979c420e-1748-448e-9334-e238c47503a1" name="Copy" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="120" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5d46a63f-e90b-4432-8c62-52d2e2380065" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="240" y="45" /><exception type="" detail="&quot;Source worksheet not found&quot;" /></stage><stage stageid="b470a541-1a6d-4c08-936a-94d2c6c99aa8" name="Start" type="Start"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Source Workbook" narrative="The name of the source workbook which is be copied." stage="Source Workbook" /><input type="text" name="Source Worksheet" narrative="The name of the source worksheet which is to be copied." stage="Source Worksheet" /><input type="text" name="Source Range" narrative="The range of cells which will be copied." stage="Source Range" /><input type="text" name="Destination Workbook" narrative="The name of the destination workbook which the worksheet will be copied to." stage="Destination Workbook" /><input type="text" name="Destination Worksheet" narrative="The name of the destination worksheet which the range of cell will be copied to." stage="Destination Worksheet" /><input type="text" name="Destination Range" narrative="The destination range of cells." stage="Destination Range" /></inputs><onsuccess>11afaed8-560c-4915-b3eb-04f45158a941</onsuccess></stage><stage stageid="b4598457-7e50-432e-ae29-7d081367e298" name="Source Workbook" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc6e0465-0f54-401c-964f-974f43802264" name="Source Worksheet" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18b0fe7d-0b86-4fd0-bcd9-6c80841ae464" name="Destination Workbook" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11afaed8-560c-4915-b3eb-04f45158a941" name="Paste Worksheet" type="Code"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Source Range" expr="[Source Range]" /><input type="text" name="Destination Workbook" expr="[Destination Workbook]" /><input type="text" name="Destination Worksheet" expr="[Destination Worksheet]" /><input type="text" name="Destination Range" expr="[Destination Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>8136ae2b-8fb0-4945-8016-b5b9eae4c2d2</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, destination, cells, cell As Object

Try

sw = GetWorkbook(Handle, Source_Workbook)
dw = GetWorkbook(Handle, Destination_Workbook)

ss = GetWorksheet(Handle, Source_Workbook, Source_Worksheet)
ds = GetWorksheet(Handle, Destination_Workbook, Destination_Worksheet)

sw.Activate()
ss.Activate()
excel = ss.Application
sheet = excel.ActiveSheet
cell = excel.ActiveCell

If Source_Range="" Then
	cells = sheet.Cells
	Destination_Range = "A1"
Else
	cells = sheet.Range(Source_Range)
End If

cells.Select()
source = excel.Selection
source.Copy()
cell.Select()

dw.Activate()
ds.Activate()
sheet = excel.ActiveSheet
cell = excel.ActiveCell
destination = sheet.Range(Destination_Range)
destination.Select()
sheet.Paste()
cell.Select()

My.Computer.Clipboard.Clear()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	destination = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="70304b7a-b551-4a52-b52d-924f11d328a7" name="End2" type="End"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="61bc4bd1-c8ab-4fe3-993e-a7e30fcaf9ef" name="Success" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2e558b45-ad3b-459a-978c-048e7f555c4a" name="Message" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8136ae2b-8fb0-4945-8016-b5b9eae4c2d2" name="Success?" type="Decision"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>70304b7a-b551-4a52-b52d-924f11d328a7</ontrue><onfalse>470e1a49-496c-497e-b59a-537f730059cb</onfalse></stage><stage stageid="470e1a49-496c-497e-b59a-537f730059cb" name="Exception" type="Exception"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to copy worksheet: &quot; &amp; [Message]" /></stage><stage stageid="2a17d158-14b5-4cec-aa84-2b6789585973" name="Destination Worksheet" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="124d4f6c-b7b5-4935-8d7a-71a253571261" name="Handle" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b950e637-fb25-4932-b970-65e4ee21dd1d" name="Source Worksheet Number?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><decision expression="IsNumber([Source Worksheet])" /><ontrue>eba296d1-0f89-4c61-892c-b25b40f3f618</ontrue><onfalse>9ad740a0-b0e5-483c-9247-2b766533c852</onfalse></stage><stage stageid="8b56215b-b4e5-4a95-a49d-179871dd1d2b" name="Move Numbered Worksheet" type="Code"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="120" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="SourceWorkbook" expr="[Source Workbook]" /><input type="number" name="SourceWorksheet" expr="[Source Worksheet Number]" /><input type="text" name="DestinationWorkbook" expr="[Destination Workbook]" /><input type="number" name="DestinationPosition" expr="[Destination Position]" /><input type="flag" name="Copy" expr="[Copy]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e9db38cf-4c64-49fa-a46b-f2dfa31dfe18</onsuccess><code><![CDATA[Dim sBook, dBook As Object
Dim sSheet As Object
Dim p As Integer

Try

sBook = GetWorkbook(Handle, SourceWorkbook)
dBook = GetWorkbook(Handle, DestinationWorkbook)

sSheet = sBook.Worksheets(SourceWorksheet)

p = Math.Max(1, DestinationPosition)
p = Math.Min(sBook.Worksheets.Count, p)

If DestinationPosition > p Then
	If Copy Then
		sSheet.Copy(After:=dBook.Worksheets(p))
	Else
		sSheet.Move(After:=dBook.Worksheets(p))
	End If
Else
	If Copy Then
		sSheet.Copy(Before:=dBook.Worksheets(p))
	Else
		sSheet.Move(Before:=dBook.Worksheets(p))
	End If
End If

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sBook = Nothing
	dBook = Nothing
	sSheet = Nothing
End Try]]></code></stage><stage stageid="e9db38cf-4c64-49fa-a46b-f2dfa31dfe18" name="anchor7" type="Anchor"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="195" w="10" h="10" /><onsuccess>764ea205-800b-4ab5-adc1-273a46ad93b6</onsuccess></stage><stage stageid="65eda7a6-ce00-4372-9fc9-26931328aba4" name="Copy?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="240" y="195" w="90" h="60" /><decision expression="[Copy]" /><ontrue>7b25db9b-d103-4ba0-a8a5-468a16e50dd7</ontrue><onfalse>32d3772b-fe03-4a13-a415-62b4fdd5fa8f</onfalse></stage><stage stageid="32d3772b-fe03-4a13-a415-62b4fdd5fa8f" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="240" y="270" /><exception type="" detail="&quot;Failed to move worksheet: &quot; &amp; [Message]" /></stage><stage stageid="eba296d1-0f89-4c61-892c-b25b40f3f618" name="Source Workbook Number" type="Calculation"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>8b56215b-b4e5-4a95-a49d-179871dd1d2b</onsuccess><calculation expression="[Source Worksheet]" stage="Source Worksheet Number" /></stage><stage stageid="2cc989f3-1c41-4289-98fb-383b0c88ed74" name="Source Worksheet Number" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09bbef8a-09b2-4a43-925d-b1a0b88e692b" name="Get Worksheet Position" type="SubSheetInfo"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4235fac3-2295-4511-828e-090e9c888d38" name="End" type="End"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="number" name="Position" narrative="The output data - the position of the worksheet." stage="Position" /></outputs></stage><stage stageid="46d026ab-934f-4e60-8d1f-68344ac1b103" name="Handle" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3d97151-6742-41e9-9b9a-08ce6b9700d1" name="Workbook" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7ec78a25-f322-4161-8872-54815ffbc0f0" name="Worksheet" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ccd25c1-379e-41cf-92fd-2d02ac1fc7ac" name="Start" type="Start"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet of interest; it will be checked for existence" stage="Worksheet" /></inputs><onsuccess>244c946c-e677-4da7-8d5a-de244ec07eea</onsuccess></stage><stage stageid="244c946c-e677-4da7-8d5a-de244ec07eea" name="Get Worksheet Position" type="Code"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Position" stage="Position" /></outputs><onsuccess>27d60ef1-833c-44f5-b5ab-0aefb2c0581c</onsuccess><code><![CDATA[Dim wb, ws As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = wb.Worksheets
Position = ws(Worksheet).Index

Success = True

Catch e As Exception
   position = -1
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
End Try]]></code></stage><stage stageid="f13a2dde-4da4-4811-a0dd-f3f0bb009354" name="Position" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32b13d14-acc8-406c-8d15-9ffdc7355c5d" name="Source Range" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5fa73a8e-f525-4d57-a0ff-9df54a1d2d63" name="Destination Range" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f1da6ce-caa1-4a5c-b622-70602b8ad49e" name="Select" type="SubSheetInfo"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><narrative>Selects cells of a worksheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="30e9f460-bd3e-4273-bb7c-77fedbfe445f" name="End" type="End"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="a24031db-2c21-4624-9a0b-6643f3e75247" name="Handle" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa9504d1-c2d1-49a6-a6f2-cf95da7eeb12" name="Workbook" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcba2fd7-c2e3-4661-a6c4-be512624d70c" name="Worksheet" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f78616ed-e974-46dd-ace5-c44a1b800c11" name="Start" type="Start"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet." stage="Worksheet" /><input type="text" name="Cell Reference" narrative="The reference of cells that is selected." stage="Cell Reference" /></inputs><onsuccess>34677bae-38d3-4518-917f-c883f9c1677d</onsuccess></stage><stage stageid="92300230-c4b8-4530-9378-f98dfd556895" name="Cell Reference" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34677bae-38d3-4518-917f-c883f9c1677d" name="Select Cells" type="Code"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Reference" expr="[Cell Reference]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>2cb73eba-be13-4568-a11a-02f3a20b9dfe</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
range = sheet.Range(Reference)
range.Select()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
	excel = Nothing
	sheet = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="2cb73eba-be13-4568-a11a-02f3a20b9dfe" name="Success?" type="Decision"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>30e9f460-bd3e-4273-bb7c-77fedbfe445f</ontrue><onfalse>7cb606b3-cd0e-46f3-bd05-fd635aa9d2d4</onfalse></stage><stage stageid="7cb606b3-cd0e-46f3-bd05-fd635aa9d2d4" name="Exception" type="Exception"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to select row: &quot; &amp; [Message]" /></stage><stage stageid="3e5f45b4-d1b1-4dc1-8be0-29a9b4a55c53" name="Success" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34efe5b1-fcdd-4221-a651-006b1110ebbd" name="Message" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8189dfa8-421a-45da-9d7c-26ac377bc514" name="Delete" type="SubSheetInfo"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><narrative>Delete cells from the workbook.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a3f17004-6131-48f2-b0a8-e602f24b599e" name="End" type="End"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="195" /></stage><stage stageid="6d0b1914-39fd-4e17-b7b4-55faafd45af7" name="Handle" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="75588f1d-b4d2-4c8c-a51f-61c822a68abb" name="Workbook" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad8ce293-a3a3-43ca-9b8f-1d680fbdc03e" name="Start" type="Start"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Shift (Left or Up)" narrative="The shift type for cells to be deleted." stage="Shift" /></inputs><onsuccess>97daebd3-2794-4944-af67-9698bbaa77b3</onsuccess></stage><stage stageid="57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd" name="Delete Selection" type="Code"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Shift Type" expr="[Shift Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>6f1da154-330d-490b-b615-df266c6767fa</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.Delete(Shift:=[Shift_Type])

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="6f1da154-330d-490b-b615-df266c6767fa" name="Success?" type="Decision"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><decision expression="[Success]" /><ontrue>a3f17004-6131-48f2-b0a8-e602f24b599e</ontrue><onfalse>bb18bdc9-f544-4157-a6ba-e289c8f33c43</onfalse></stage><stage stageid="bb18bdc9-f544-4157-a6ba-e289c8f33c43" name="Exception" type="Exception"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="225" y="120" /><exception type="" detail="&quot;Failed to delete selection: &quot; &amp; [Message]" /></stage><stage stageid="d0c4907b-2b85-424d-a6ef-8bcfb43d3f72" name="Success" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="150" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9dbebe22-4f86-499f-8f29-155baf2cc42d" name="Message" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2110b138-01f6-47af-befd-7a71637b5844" name="Shift" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97daebd3-2794-4944-af67-9698bbaa77b3" name="Shift Left?" type="Decision"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><decision expression="Trim(Upper([Shift]))=&quot;LEFT&quot;" /><ontrue>6e608312-7a91-4039-8f0a-90ccaac7d3cc</ontrue><onfalse>8a8e9a33-5eca-485a-adeb-e5a43592d6d4</onfalse></stage><stage stageid="6e608312-7a91-4039-8f0a-90ccaac7d3cc" name="Shift Type" type="Calculation"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="-30" /><onsuccess>57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd</onsuccess><calculation expression="-4159" stage="Shift Type" /></stage><stage stageid="4095b231-4d4f-4c98-b74d-6134fb63b9af" name="Shift Type" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="120" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a8e9a33-5eca-485a-adeb-e5a43592d6d4" name="Shift Type" type="Calculation"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd</onsuccess><calculation expression="-4162" stage="Shift Type" /></stage><stage stageid="27122991-d4c6-4811-a366-7fd47a11da5c" name="Copy" type="SubSheetInfo"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><narrative>Copy cells from the workbook.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="bba0e0d4-6894-469c-a9b8-1f07855dadc9" name="End" type="End"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="364a6306-d747-4c70-84ae-4128d8938fbc" name="Handle" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f0139001-74d1-4ab8-a517-4329434df1e5" name="Workbook" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58d750a5-2e0e-4aaa-951a-76aaf6b973da" name="Start" type="Start"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /></inputs><onsuccess>d8005fde-9fe5-47f9-a980-e4beae15815a</onsuccess></stage><stage stageid="a8acd5cc-0955-4896-b87a-80091b060926" name="Success?" type="Decision"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>bba0e0d4-6894-469c-a9b8-1f07855dadc9</ontrue><onfalse>6ceb186e-fea0-48a8-a72d-f104f83699c6</onfalse></stage><stage stageid="6ceb186e-fea0-48a8-a72d-f104f83699c6" name="Exception" type="Exception"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to copy selection: &quot; &amp; [Message]" /></stage><stage stageid="4f25dc7f-bd6f-495d-90e7-0d561dba2662" name="Success" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a8da6c3-ceed-4a32-8e4d-473b53a57602" name="Message" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8005fde-9fe5-47f9-a980-e4beae15815a" name="Copy Selection" type="Code"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>a8acd5cc-0955-4896-b87a-80091b060926</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application
range = excel.Selection
range.Copy

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="044c591e-e63e-4f13-80b8-de4217a78b3b" name="Paste" type="SubSheetInfo"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><narrative>Paste text into cells of a workbook.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1ebf6405-9e3a-45f8-be9c-fdd70f254b34" name="End" type="End"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="195" /></stage><stage stageid="3f23548e-a9f9-48c6-93c3-fbd8fa4f8d8d" name="Handle" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0acf7ad6-162d-4e2d-9a03-a6ebc54eb526" name="Workbook" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d4b5681-cffa-432d-be94-08d4ddf16986" name="Start" type="Start"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="flag" name="Values Only" narrative="True or false flag to decide whether to paste the values only." stage="Values Only" /></inputs><onsuccess>0d27a545-71b3-4a27-843b-8ed69b1648ce</onsuccess></stage><stage stageid="360c1bdb-1960-4486-ad05-8ec4485ef0ec" name="Success?" type="Decision"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><decision expression="[Success]" /><ontrue>1ebf6405-9e3a-45f8-be9c-fdd70f254b34</ontrue><onfalse>4830e942-edaf-4bd2-8922-9cffafc084ad</onfalse></stage><stage stageid="4830e942-edaf-4bd2-8922-9cffafc084ad" name="Exception" type="Exception"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="225" y="120" /><exception type="" detail="&quot;Failed to paste from clipboard: &quot; &amp; [Message]" /></stage><stage stageid="77b051c2-e570-49a3-8708-b42785a2517f" name="Success" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da93fc46-495b-4511-a724-a1cc7d70cffa" name="Message" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="24bf06a1-fd8f-4cd3-bab6-e05552f8bdba" name="Paste Values" type="Code"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Paste Option" expr="[Paste Option]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>360c1bdb-1960-4486-ad05-8ec4485ef0ec</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.PasteSpecial(Paste:=Paste_Option, Operation:=-4142, SkipBlanks:=False, Transpose:=False)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
   range = Nothing
End Try]]></code></stage><stage stageid="ba04d5a5-b0f7-4979-af44-2f0fee5237f9" name="Write To Clipboard" type="SubSheetInfo"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><narrative>Writes text to clipboard so that it can be copied.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1587c068-8225-4476-b636-9403f8acd84a" name="Start" type="Start"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Value" narrative="The text that is to be copied to clipboard." stage="Value" /></inputs><onsuccess>2279ba0c-3963-48f8-b813-4b0f53f47471</onsuccess></stage><stage stageid="a82e0657-86e9-4273-bd0f-2065d5f70254" name="End" type="End"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="eda7181f-a720-4b63-9d69-86221881d965" name="Value" type="Data"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2279ba0c-3963-48f8-b813-4b0f53f47471" name="Write To Clipboard" type="Code"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Value" expr="[Value]" /></inputs><onsuccess>a82e0657-86e9-4273-bd0f-2065d5f70254</onsuccess><code><![CDATA[
SetClipboardText(Value)
]]></code></stage><stage stageid="79b62074-ec0d-49c6-a258-61823cc8a849" name="Values Only" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0d27a545-71b3-4a27-843b-8ed69b1648ce" name="Values Only?" type="Decision"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><decision expression="[Values Only]" /><ontrue>5bd5a242-a414-4d49-b093-0eb8d3978f8a</ontrue><onfalse>f98e8dcf-bff1-418a-9963-4878022c7391</onfalse></stage><stage stageid="f98e8dcf-bff1-418a-9963-4878022c7391" name="Paste Option" type="Calculation"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="-30" /><onsuccess>24bf06a1-fd8f-4cd3-bab6-e05552f8bdba</onsuccess><calculation expression="-4104" stage="Paste Option" /></stage><stage stageid="8e80a8c9-867f-46fa-ace9-d251af38eeed" name="Paste Option" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd5a242-a414-4d49-b093-0eb8d3978f8a" name="Paste Option" type="Calculation"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>24bf06a1-fd8f-4cd3-bab6-e05552f8bdba</onsuccess><calculation expression="-4163" stage="Paste Option" /></stage><stage stageid="7f2dfa02-938c-4179-9e22-216057d33f43" name="Cut" type="SubSheetInfo"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><narrative>Cut cells from the workbook.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f2f20301-ebd9-4fbd-9b94-ca2074e69294" name="End" type="End"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="d29233ea-0e94-44a4-864c-f32568e42c4b" name="Handle" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59232dab-20a4-4e84-8a43-e2016ef6a74c" name="Workbook" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d6c212b-fd48-44cf-a931-8c99060d29cc" name="Start" type="Start"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /></inputs><onsuccess>3dcf0167-85d1-4170-b214-86784cbcab65</onsuccess></stage><stage stageid="581ece97-ebdc-4855-8fdf-45290b4e587d" name="Success?" type="Decision"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>f2f20301-ebd9-4fbd-9b94-ca2074e69294</ontrue><onfalse>797b7b44-cd61-4d3c-8874-82e44868ea1b</onfalse></stage><stage stageid="797b7b44-cd61-4d3c-8874-82e44868ea1b" name="Exception" type="Exception"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to cut selection: &quot; &amp; [Message]" /></stage><stage stageid="3556655c-d270-4054-a989-b2f44854a7ba" name="Success" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9e9b9ba3-e800-4df7-bc87-db6b36f846c9" name="Message" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dcf0167-85d1-4170-b214-86784cbcab65" name="Cut Selection" type="Code"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>581ece97-ebdc-4855-8fdf-45290b4e587d</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application
range = excel.Selection
range.Cut

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="fc13a15a-74aa-47dc-af68-38bea19af981" name="Protect Workbook" type="SubSheetInfo"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><narrative>Protects a workbook so that it cannot be modified.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0e32102b-7c0a-4f3e-9fe7-cc267fede407" name="Handle" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="03b0377d-35e5-4a7d-b16c-756d690843ee" name="Workbook" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1610a1c-3532-4a88-8732-39cbfb4495f4" name="Start" type="Start"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="password" name="Password" narrative="The password of the workbook." stage="Password" /></inputs><onsuccess>e47e5f86-b7d0-409e-bf2a-6673cf28bac7</onsuccess></stage><stage stageid="de93c65e-11ae-4507-b8bf-da3f09910f82" name="Password" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="e47e5f86-b7d0-409e-bf2a-6673cf28bac7" name="Protect Workbook" type="Code"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="password" name="Password" expr="[Password]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>09dd5e11-1dd3-4f18-bbe0-ed52d1f79fb0</onsuccess><code><![CDATA[Dim wb As Object

Try

wb = GetWorkbook(Handle, Workbook)
wb.Protect(Password, True, True)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
End Try]]></code></stage><stage stageid="6a177cf9-5ec0-481d-84e9-c5d72177038d" name="Hide Worksheet" type="SubSheetInfo"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><narrative>Hides worksheet so that is not visible.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0cc70266-582a-410c-9c3a-29ff9dfb795e" name="Handle" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4cf25a3a-b4dd-4b80-8339-06b9d63e56e6" name="Workbook" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e8889824-2e30-472c-bb9a-4daad82560f3" name="Worksheet" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2d9d6921-9f68-4152-be57-8b0df6472eda" name="Start" type="Start"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet." stage="Worksheet" /></inputs><onsuccess>298fe33e-bd86-4109-8540-f1abe8d02eb8</onsuccess></stage><stage stageid="4a51d886-d307-4904-8ce4-98191c734a17" name="End" type="End"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="09dd5e11-1dd3-4f18-bbe0-ed52d1f79fb0" name="Success?" type="Decision"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>4a51d886-d307-4904-8ce4-98191c734a17</ontrue><onfalse>fbeb4a74-fc5f-431f-b150-15549afc2a22</onfalse></stage><stage stageid="fbeb4a74-fc5f-431f-b150-15549afc2a22" name="Exception" type="Exception"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to protect workbook: &quot; &amp; [Message]" /></stage><stage stageid="298fe33e-bd86-4109-8540-f1abe8d02eb8" name="Hide Worksheet" type="Code"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>66ad2075-9b87-44be-9c6d-0a702d752f57</onsuccess><code><![CDATA[Dim ws As Object

Try

ws = GetWorkSheet(Handle, Workbook, Worksheet)
ws.Visible = False

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	ws = Nothing
End Try]]></code></stage><stage stageid="c2e5c7e9-93a1-489e-a870-523042f050f1" name="End" type="End"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="66ad2075-9b87-44be-9c6d-0a702d752f57" name="Success?" type="Decision"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>c2e5c7e9-93a1-489e-a870-523042f050f1</ontrue><onfalse>7dca362f-2e45-443b-adc7-9075f02fc717</onfalse></stage><stage stageid="7dca362f-2e45-443b-adc7-9075f02fc717" name="Exception" type="Exception"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to protehide worksheet: &quot; &amp; [Message]" /></stage><stage stageid="c3b30035-3883-4740-9cf0-49e967ad6306" name="Success" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff6900f6-3524-4b24-be71-4d12c2d4c77e" name="Message" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cea8af9d-95ea-4c09-9932-adc8cc633db6" name="Success" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7888130-7082-4f05-8864-3f0709675831" name="Message" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b9509a6-dfc6-4f25-9474-dba6e8b7ed20" name="Hide Other Worksheets" type="SubSheetInfo"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><narrative>Hide all other worksheets so that they are not visible.</narrative><display x="-480" y="-1020" w="150" h="90" /></stage><stage stageid="a81bb6df-46b8-4641-8531-802be8934741" name="Handle" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-945" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f349c5cb-454b-448c-b225-5c474ae4e52d" name="Workbook" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-915" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="999117c1-6fa6-4172-9512-78106c277a38" name="Worksheet" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-885" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6444d8d9-7f26-4eb5-ab31-c98706e6209a" name="Start" type="Start"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="-270" y="-1020" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet." stage="Worksheet" /></inputs><onsuccess>c5ca2626-02e2-4413-9476-9958c1b7b717</onsuccess></stage><stage stageid="c5ca2626-02e2-4413-9476-9958c1b7b717" name="Hide Other Worksheets" type="Code"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="-270" y="-960" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>36529e74-e353-4cbd-b6ff-3591c0390efd</onsuccess><code><![CDATA[Dim wb As Object

Try

wb = GetWorkbook(Handle, Workbook)

For Each ws As Object In wb.Worksheets
	ws.Visible = (ws.Name = Worksheet)
Next

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
End Try]]></code></stage><stage stageid="52e20387-128e-4f5c-b182-7d28a9005a71" name="End" type="End"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="-270" y="-810" /></stage><stage stageid="36529e74-e353-4cbd-b6ff-3591c0390efd" name="Success?" type="Decision"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="-270" y="-885" w="90" h="60" /><decision expression="[Success]" /><ontrue>52e20387-128e-4f5c-b182-7d28a9005a71</ontrue><onfalse>c5840684-3348-4ee6-a024-dda79500a851</onfalse></stage><stage stageid="c5840684-3348-4ee6-a024-dda79500a851" name="Exception" type="Exception"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-165" y="-885" /><exception type="" detail="&quot;Failed to hide worksheets: &quot; &amp; [Message]" /></stage><stage stageid="089eef49-c020-4aea-929e-4d1ae4282215" name="Success" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-840" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="370e2ccf-3010-44ea-9155-06babd5e856c" name="Message" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-480" y="-810" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4996af5e-0cc1-4e24-aedf-20320350469e" name="Import CSV" type="SubSheetInfo"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><narrative>Import CSV worksheets into a workbook using a path.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b4b14657-a0f4-4c85-9466-5146878dfbe7" name="Handle" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bbfe7495-0fef-4c22-a251-88166b8485d4" name="Workbook" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3c0e661b-9b74-4d25-9a8b-1da52f957ed2" name="Worksheet" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8df3e95e-4a03-4e0a-a649-37fb1d17ff41" name="Start" type="Start"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="Destination Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Destination Workbook" narrative="The name of the workbook that the CSV is imported to." stage="Workbook" /><input type="text" name="Destination Worksheet" narrative="The name of the worksheet that the CSV is imported to." stage="Worksheet" /><input type="text" name="Destination Range" narrative="The destination range of where the CSV will be imported into the worksheet," stage="Range" /><input type="text" name="Source File Path" narrative="The file path of the CSV file to be imported." stage="Path" /><input type="text" name="Source Text Qualifier" narrative="The source text of the CSV to be imported." stage="Qualifier" /><input type="text" name="Source File Delimiter" narrative="The delimiter used in the CSV file. Default delimiter is the comma." stage="Delimiter" /><input type="number" name="Encoding" narrative="Optional. The numeric value of the code page that applies to the encoding of the CSV file. Default encoding for Excel on Windows is 1252 (Western European)." stage="Encoding" /></inputs><onsuccess>a09cfa98-b04d-472f-ad84-87e6a0bdb011</onsuccess></stage><stage stageid="7803cce6-3095-4d46-9cd2-793181eb080d" name="Import CSV" type="Code"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="105" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /><input type="text" name="Path" expr="[Path]" /><input type="number" name="Qualifier" expr="[Qualifier Code]" /><input type="text" name="Delimiter" expr="[Delimiter]" /><input type="number" name="Encoding" expr="[Encoding]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>91f84fae-ca36-4b8b-8221-bc3e95cd2ef3</onsuccess><code><![CDATA[Dim dw, ds, dr, qt As Object

Try

dw = GetWorkbook(Handle, Workbook)
ds = GetWorksheet(Handle, Workbook, Worksheet)
dr = ds.Range(Range)
qt = ds.QueryTables.Add(Connection:="TEXT;" & Path, Destination:=dr)

With qt
	.FieldNames = True
	.RowNumbers = False
	.FillAdjacentFormulas = False
	.PreserveFormatting = True
	.RefreshOnFileOpen = False
	.RefreshStyle = 1 'xlInsertDeleteCells
	.SavePassword = False
	.SaveData = True
	.AdjustColumnWidth = True
	.RefreshPeriod = 0
	.TextFilePromptOnRefresh = False
	.TextFilePlatform = Convert.ToInt32(Encoding)
	.TextFileStartRow = 1
	.TextFileParseType = 1 'xlDelimited
	.TextFileTextQualifier = Qualifier
	.TextFileConsecutiveDelimiter = False
	.TextFileTrailingMinusNumbers = True
End With

' Set the CSV delimiter.
If (Delimiter = " ") Then
	qt.TextFileSpaceDelimiter = True
ElseIf (Delimiter = Constants.vbTab) Then 
	qt.TextFileTabDelimiter = True
ElseIf (Delimiter = ";") Then
	qt.TextFileSemicolonDelimiter = True
ElseIf (Delimiter = ",") Then
	qt.TextFileCommaDelimiter = True
Else
	qt.TextFileOtherDelimiter = Delimiter
End If

qt.Refresh(False)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	dw = Nothing
	ds = Nothing
	dr = Nothing
	qt = Nothing
End Try]]></code></stage><stage stageid="bfe990bf-be29-4c21-ac04-96a798ab1827" name="End" type="End"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="240" /></stage><stage stageid="91f84fae-ca36-4b8b-8221-bc3e95cd2ef3" name="Success?" type="Decision"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="165" w="90" h="60" /><decision expression="[Success]" /><ontrue>bfe990bf-be29-4c21-ac04-96a798ab1827</ontrue><onfalse>6aaf6a41-be76-442d-9c2b-06905c4e0355</onfalse></stage><stage stageid="6aaf6a41-be76-442d-9c2b-06905c4e0355" name="Exception" type="Exception"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="225" y="165" /><exception type="" detail="&quot;Failed to import CSV: &quot; &amp; [Message]" /></stage><stage stageid="af967b8b-4ec8-4202-ac07-6acbf9d12d46" name="Success" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="270" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5335f808-6164-4249-9a2c-682294b9834c" name="Message" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="300" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="955e0188-d711-476b-b15b-1362ba3b0ea4" name="Path" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cef84711-b0a0-4f04-a09d-a6e9637ea2cb" name="Qualifier" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="120" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a09cfa98-b04d-472f-ad84-87e6a0bdb011" name="Double Quote Qualifier?" type="Decision"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><decision expression="[Qualifier]=&quot;&quot;&quot;&quot;" /><ontrue>b0e18e5b-791a-492a-b6c6-112ed2cdf10f</ontrue><onfalse>6e036392-ff83-4dfa-94fe-ff1ed03cd9bc</onfalse></stage><stage stageid="b0e18e5b-791a-492a-b6c6-112ed2cdf10f" name="Qualifier Code" type="Calculation"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="-30" /><onsuccess>7803cce6-3095-4d46-9cd2-793181eb080d</onsuccess><calculation expression="1" stage="Qualifier Code" /></stage><stage stageid="f9eb7145-ee8c-41cc-8ea2-2417adbcd435" name="Qualifier Code" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fc2b8ffb-c597-4ede-8134-1cc80a2c3293" name="Qualifier Code" type="Calculation"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="105" /><onsuccess>7803cce6-3095-4d46-9cd2-793181eb080d</onsuccess><calculation expression="-4142" stage="Qualifier Code" /></stage><stage stageid="6e036392-ff83-4dfa-94fe-ff1ed03cd9bc" name="Note2" type="Note"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><narrative>Assume no text qualifier</narrative><display x="15" y="45" w="90" h="60" /><onsuccess>fc2b8ffb-c597-4ede-8134-1cc80a2c3293</onsuccess></stage><stage stageid="70744683-2ca9-4e9a-89b9-194945f98e32" name="Range" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c8e00b5-ec48-479b-8abf-6a6658752cb5" name="Get Worksheet Name" type="SubSheetInfo"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><narrative>Gets the name of the worksheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2af2843d-00f3-464f-ab67-305ae6ccf858" name="End" type="End"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="text" name="Worksheet" narrative="The output data - the name of the worksheet." stage="Worksheet" /></outputs></stage><stage stageid="26c465a5-f001-4ff8-ac21-28437489e85f" name="Handle" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2de7e6b6-6118-4b3f-ba2b-179ba64d95d8" name="Workbook" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ee8f628-7829-42f7-ac8c-672d78be654f" name="Worksheet" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c752debc-3eea-4935-a460-f8eb77039d5d" name="Start" type="Start"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="number" name="Worksheet Position" narrative="The position of the worksheet." stage="Position" /></inputs><onsuccess>ba712112-b784-4f87-a7ff-5a8721aca35d</onsuccess></stage><stage stageid="ba712112-b784-4f87-a7ff-5a8721aca35d" name="Get Worksheet" type="Code"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Position" expr="[Position]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="text" name="Worksheet" stage="Worksheet" /></outputs><onsuccess>39f8ebfd-a1e8-4517-add5-653f475fe8eb</onsuccess><code><![CDATA[Dim wb, ws As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = wb.Worksheets(Position)
Worksheet = ws.Name

Success = True

Catch e As Exception
   position = -1
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
End Try]]></code></stage><stage stageid="2cbe9309-244f-45ae-8716-0d02bf738530" name="Position" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27d60ef1-833c-44f5-b5ab-0aefb2c0581c" name="Success?" type="Decision"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>4235fac3-2295-4511-828e-090e9c888d38</ontrue><onfalse>8edc5ff8-0139-409d-ba63-7f23bf726964</onfalse></stage><stage stageid="8edc5ff8-0139-409d-ba63-7f23bf726964" name="Exception" type="Exception"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to get worksheet position: &quot; &amp; [Message]" /></stage><stage stageid="39f8ebfd-a1e8-4517-add5-653f475fe8eb" name="Success?" type="Decision"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><decision expression="[Success]" /><ontrue>2af2843d-00f3-464f-ab67-305ae6ccf858</ontrue><onfalse>636399b4-ec2b-41a7-ac41-27e98637df4c</onfalse></stage><stage stageid="636399b4-ec2b-41a7-ac41-27e98637df4c" name="Exception" type="Exception"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="120" y="30" /><exception type="" detail="&quot;Failed to get worksheet name: &quot; &amp; [Message]" /></stage><stage stageid="69b153d1-9bd9-4c51-8b96-d45c1112bbfb" name="Success" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="120" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="464ca930-cf54-4147-8041-1007cc2416b6" name="Message" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="150" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="def46f81-3f9f-421d-91cf-f12583e956d3" name="Success" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="120" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1195aa37-1cbe-4f02-9d00-c39f3e304cfc" name="Message" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="150" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5222003b-5cb9-4669-bc35-96d41b028249" name="Insert" type="SubSheetInfo"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><narrative>Insert cells into the workbook. Shift existing cells either Down or Right.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="7c868cff-a594-49f6-bde7-fc3ba2cd17c6" name="End" type="End"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="195" /></stage><stage stageid="6c34b4fa-4824-48bf-ae2a-b709a25cec17" name="Handle" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dc53e03-3a4f-4ca9-ba70-17573564d976" name="Workbook" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89909450-cca0-4546-bbbc-32cbd4c609bc" name="Start" type="Start"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Shift" narrative="The shift type to be used to insert cells. Supported values are 'Down' or 'Right'." stage="Shift" /></inputs><onsuccess>1f31ede9-3b32-4aaf-9b55-573cb227a850</onsuccess></stage><stage stageid="dc1f9d40-b099-44c3-a2c1-e782413b0914" name="Insert" type="Code"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="45" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Shift Type" expr="[Shift Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>be039ecb-6427-4a80-8a91-9b69561fc2de</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.Insert(Shift:=[Shift_Type])

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="be039ecb-6427-4a80-8a91-9b69561fc2de" name="Success?" type="Decision"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><decision expression="[Success]" /><ontrue>7c868cff-a594-49f6-bde7-fc3ba2cd17c6</ontrue><onfalse>741cc1d1-3936-4201-ad74-e95993e64b92</onfalse></stage><stage stageid="741cc1d1-3936-4201-ad74-e95993e64b92" name="Exception" type="Exception"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="225" y="120" /><exception type="" detail="&quot;Failed to delete selection: &quot; &amp; [Message]" /></stage><stage stageid="aac1165a-4574-4834-a68e-18db8cdd0216" name="Success" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="150" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52ea365d-8434-45cb-97ba-cd7c741b7c7c" name="Message" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd2ee59b-4044-4f2c-8439-05e1a9b23c7d" name="Shift" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f31ede9-3b32-4aaf-9b55-573cb227a850" name="Shift Right?" type="Decision"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><decision expression="Trim(Upper([Shift]))=&quot;RIGHT&quot;" /><ontrue>594ef012-6d63-4256-a43c-dd84c172ad15</ontrue><onfalse>21ff25a4-b431-43fb-af46-02fff92627e7</onfalse></stage><stage stageid="594ef012-6d63-4256-a43c-dd84c172ad15" name="Shift Type" type="Calculation"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="-30" /><onsuccess>dc1f9d40-b099-44c3-a2c1-e782413b0914</onsuccess><calculation expression="-4161" stage="Shift Type" /></stage><stage stageid="c07375e4-4e0d-4a0d-b7b2-d1bab9884769" name="Shift Type" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="120" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="21ff25a4-b431-43fb-af46-02fff92627e7" name="Shift Type" type="Calculation"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>dc1f9d40-b099-44c3-a2c1-e782413b0914</onsuccess><calculation expression="-4121" stage="Shift Type" /></stage><stage stageid="53f2c5f2-ac8f-40c2-ace8-24614c6d3676" name="Run Macro" type="SubSheetInfo"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><narrative>Runs the specified macro.

Depending on how the macro has been created the name will be one of the following:

A. Just the macro name
e.g. MyMacro

B. The workbook and macro name
e.g. MyWorkbook.xls!MyMacro

C. The workbook, worksheet and the macro name
e.g. 'MyWorkbook.xls!'MyWorksheet.MyMacro</narrative><display x="-225" y="-15" w="300" h="210" /></stage><stage stageid="da9401ad-8267-4f76-bb0d-02d380427eb5" name="Start" type="Start"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Macro Name" narrative="The name of the macro to run" stage="Macro Name" /></inputs><onsuccess>a19d33b9-0a8b-4fb1-b333-7fb65c7733ab</onsuccess></stage><stage stageid="0a6413b8-4ce8-4399-b3e2-974e44d812af" name="End" type="End"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="a19d33b9-0a8b-4fb1-b333-7fb65c7733ab" name="Run Macro" type="Code"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Macro Name" expr="[Macro Name]" /></inputs><onsuccess>0a6413b8-4ce8-4399-b3e2-974e44d812af</onsuccess><code><![CDATA[GetInstance(Handle).Run(Macro_Name)]]></code></stage><stage stageid="669163d5-5b66-446d-84fc-ddaaccf6ecc8" name="Handle" type="Data"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="165" y="-105" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d95761c1-c5f3-46a0-8b86-7f90e58418cc" name="Macro Name" type="Data"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="165" y="-60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58d3ca4f-4467-492d-b85a-fd7ab4271110" name="Activate Worksheet" type="SubSheet"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="-60" w="150" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookname]" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetname]" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>680eac96-2bd0-4d02-a62b-ac7bf684dae9</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="31fdd089-280c-4f33-ba2b-a9b52b556682" name="Open Active Instance" type="Block"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="105" y="-255" w="360" h="375" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c478137a-cdb0-4cd8-bb73-fe4c052d6200" name="Timeout" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="60" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="9474db50-6935-47fa-b862-4aa1a49143f8" name="CheckTimeout" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-165" w="120" h="30" /><outputs><output type="flag" name="TimeoutOccoured" stage="Timeout Occoured" /></outputs><onsuccess>6af35f22-949f-47dd-8517-78b00d73f8d9</onsuccess><code><![CDATA[TimeoutOccoured = TypeOf mLastException Is TimeoutException
mLastException = Nothing]]></code></stage><stage stageid="6af35f22-949f-47dd-8517-78b00d73f8d9" name="Timeout Occoured?" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-120" w="90" h="30" /><decision expression="[Timeout Occoured]" /><ontrue>40a1c81a-4d1f-484f-bcde-c2cc59d83dbd</ontrue><onfalse>59ebf811-1faf-4486-8630-6d2de19027f5</onfalse></stage><stage stageid="40a1c81a-4d1f-484f-bcde-c2cc59d83dbd" name="Anchor1" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="570" y="-120" w="10" h="10" /><onsuccess>567674ba-270a-4107-ada5-1dae59125522</onsuccess></stage><stage stageid="3bd76d6f-b60f-4a9d-9293-19a63314f33e" name="Timeout Occoured" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4fa207ba-9e59-4717-8a0e-f28210974ff9" name="Timeout" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="e87e0c42-73bb-43a9-9fb1-0c07d02391e1" name="Timeout" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="45" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="04901364-93ea-4b62-a8ea-471525e3d12d" name="Timeout" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-465" y="255" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="c14b670d-b87c-43c9-a54f-7653da70eb83" name="Timeout" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="150" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="7cef178b-10af-4ed1-8400-e41a9640bc73" name="Timeout" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="60" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="3a73f260-90db-458b-8d72-ef07a38548f1" name="Timeout" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="-195" y="105" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="684b23a1-3d16-4db8-a54b-5925cf13321d" name="Use Header" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-210" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="540511e6-4dd9-4ee3-aae0-3e91eb7ba602" name="Block1" type="Block"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-105" y="-105" w="225" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="52ab75fb-77a6-43f8-aca2-7c737cf981e1" name="Recover1" type="Recover"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="75" y="-75" /><onsuccess>2a14c8db-bc75-4836-8ade-7d151108a9ca</onsuccess></stage><stage stageid="2a14c8db-bc75-4836-8ade-7d151108a9ca" name="Resume1" type="Resume"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="75" y="-15" /><onsuccess>a7383095-97e9-4fa8-90e0-ad186e9df285</onsuccess></stage><stage stageid="e62d208c-6a0f-45e5-b5ce-cd856e6bf574" name="Write Collection (Fast)" type="SubSheetInfo"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><narrative>Writes the given collection into the specified sheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="93418764-66cc-420b-bb2a-a2ba7ac299be" name="Start" type="Start"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the specified collection should be written. The default of zero indicates the currently active instance." stage="handle" /><input type="collection" name="Collection" narrative="The collection containing the data which should be written to the worksheet." stage="collection" /><input type="text" name="Workbook Name" narrative="The name of the workbook within which the data should be written. The default empty value indicates the current workbook within the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the given data should be written. The default empty value indicates the current sheet within the specified workbook." stage="worksheetname" /><input type="text" name="Cell Reference" narrative="The reference at which the collection should be written." stage="cellref" /><input type="flag" name="Include Column Names" narrative="True to indicate that the column names from the collection should be written out as the first row; False to ignore the column names and just write out the data." stage="includecolnames" /></inputs><onsuccess>8cf2308d-902f-4e39-b977-6be869aa201a</onsuccess></stage><stage stageid="5041fd1b-35c4-41ca-92c8-8cf05412c275" name="handle" type="Data"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-285" y="0" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="83f339fd-81bd-4aa4-aa48-7fdd8c018fb1" name="collection" type="Collection"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-165" y="45" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="59f2d423-c89d-4686-9ae6-e001f504d128" name="worksheetname" type="Data"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-285" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dbae1352-79e6-4e5b-ab02-cffb8c8664d2" name="workbookname" type="Data"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-285" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ebcaadcb-758e-4d04-8c51-8f7579a075ff" name="includecolnames" type="Data"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-165" y="90" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8cf2308d-902f-4e39-b977-6be869aa201a" name="Activate Worksheet" type="SubSheet"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookname]" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetname]" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>b5c3a893-fa53-49d4-ade1-2e9383f9ba3c</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="cb595037-fe82-4f6a-a76d-c90d5f18e9c4" name="cellref" type="Data"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-165" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b5c3a893-fa53-49d4-ade1-2e9383f9ba3c" name="WriteColl (Fast)" type="Code"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><loginhibit /><display x="15" y="15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="cellref" expr="[cellref]" /><input type="collection" name="collection" expr="[collection]" /><input type="flag" name="includecolnames" expr="[includecolnames]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>41b95a5c-291e-406e-a071-a75e38a482a0</onsuccess><code><![CDATA[Dim ws, cref as Object
Dim c, r, colNum, rowNum As Integer

Try
	ws = GetWorksheet(handle, workbookname, worksheetname)
	cref = ws.Range(cellref)
	rowNum = cref.row
	colNum = cref.column
	Dim arr(collection.Rows.Count, collection.Columns.Count) As Object

	For r = 0 to collection.Rows.Count - 1
		For c = 0 to collection.Columns.Count - 1
			arr(r, c)= collection.Rows(r).Item(c)
		Next
	Next

	' Write column headers
	If includecolnames Then
		c = 0
		For Each col as DataColumn in collection.Columns
			Try
				ws.Cells(rowNum, colNum + c).Value = col.ColumnName
			Catch ex as Exception
				Exit For
			End Try
			c += 1
		Next
		rowNum += 1
	End If

	' Write rows
	ws.Range(ws.Cells(rowNum, colNum), ws.Cells((collection.Rows.Count-1) + rowNum, (collection.Columns.Count-1)+ colNum)).Value = arr 
	Success = True
Catch e as Exception
	Success = False
	Message = e.Message
Finally
	ws = Nothing
	cref = Nothing
End Try]]></code></stage><stage stageid="7ec3ddc0-6068-417b-a9bd-cba993c4a283" name="Message" type="Data"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-285" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a8877252-7c79-4db7-b503-a89a9915dac9" name="Success" type="Data"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="-165" y="135" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0cb065f1-89cd-4c5c-b942-5452b285a70b" name="End2" type="End"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><loginhibit /><display x="15" y="165" /></stage><stage stageid="41b95a5c-291e-406e-a071-a75e38a482a0" name="Success?" type="Decision"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><loginhibit /><display x="15" y="90" w="90" h="60" /><decision expression="[Success]" /><ontrue>0cb065f1-89cd-4c5c-b942-5452b285a70b</ontrue><onfalse>f1eba8d7-99e1-4ec6-b5ef-f32fbd68203c</onfalse></stage><stage stageid="f1eba8d7-99e1-4ec6-b5ef-f32fbd68203c" name="Exception" type="Exception"><subsheetid>e5cf6d9a-2d16-40d6-ad95-b7df275166d7</subsheetid><display x="120" y="90" /><exception type="" detail="&quot;Failed to write collection: &quot; &amp; [Message]" /></stage><stage stageid="cd273ed8-ef95-4a0a-a611-165d2f216e34" name="Find in Worksheet" type="SubSheetInfo"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><narrative>Searches for the specified text within the specified Worksheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c97ab81c-a9f3-4bd5-a8ef-cca413e5bc4c" name="End" type="End"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="15" y="195" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Matches" stage="Matches" /></outputs></stage><stage stageid="d21fdca8-6138-4903-b5ec-857deb6eba59" name="Start" type="Start"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the Excel instance to work with. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Search Text" narrative="The text to search for." stage="Search Text" /><input type="text" name="Workbook Name" narrative="The name of the workbook that contains the specific worksheet to search. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the specific worksheet to search for the specified text. If not worksheet name is specified, the currently active worksheet will be searched." stage="worksheetname" /><input type="text" name="Search Range" narrative="The specific range of cells to search. If no value is specified, the entire worksheet will be searched." stage="Search Range" /><input type="text" name="Search In" narrative="Specifies the type of data, within the worksheet, to search in. Possible values are: C (comments), F (formulas), or V (values). If not specified, the default is V (values)." stage="Search In" /><input type="text" name="Search Order" narrative="Specifies whether the search should be conducted by rows or columns. Possible values are R (rows) or C (columns). The default search order is by rows." stage="Search Order" /><input type="flag" name="Match Case" narrative="Flag indicating that the search should be case sensitive. The default is case insensitive." stage="Match Case" /></inputs><onsuccess>cfd0f80f-6d3f-4cd0-8ab5-5eaf1227f927</onsuccess></stage><stage stageid="cfd0f80f-6d3f-4cd0-8ab5-5eaf1227f927" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e0668b66-2be8-4201-8aa2-8535ba70ce85</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="79e66651-9143-4ac5-8dc3-767610be881e" name="Search for Text" type="Code"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="15" y="60" w="120" h="30" /><inputs><input type="number" name="Handle" expr="[handle]" /><input type="text" name="Workbook" expr="[workbookname]" /><input type="text" name="Worksheet" expr="[worksheetname]" /><input type="text" name="searchRange" expr="[Search Range]" /><input type="text" name="searchText" expr="[Search Text]" /><input type="text" name="startingCell" expr="[Starting Cell]" /><input type="text" name="searchIn" expr="[Search In]" /><input type="text" name="searchOrder" expr="[Search Order]" /><input type="flag" name="matchCase" expr="[Match Case]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Matches" stage="Matches" /></outputs><onsuccess>77ac8581-f547-4d70-b3eb-57ff85627973</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet, range, cell As Object
Dim firstAddress as String
Dim cells as new DataTable()

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet

' Build the DataTable/Collection definition.
cells.Columns.Add("Cell", GetType(String))

' What range do we search?
If (Len(Trim(searchRange)) > 0) Then
	range = ws.Range(searchRange)
Else
	range = ws.UsedRange
End If

' Set the search order value.
Dim order as Integer = 0
If (searchOrder.Trim().Substring(0,1).ToUpper() = "C") Then
	order = 2	' xlByColumns
Else
	order = 1	' xlByRows
End If

' Determine what type of data we'll be searching in - Comments, Formulas, or Values.
' The initial char of the Search In value (capitalised)
Dim searchLoc as String = searchIn.Trim().Substring(0,1).ToUpper()

' The excel enum representing the XlFindLookIn enum.
' Note: setting to zero is just to nix a duff compiler warning
Dim xlFLI as Integer = 0

' xlFindLookIn enum values from: 
' https://docs.microsoft.com/en-us/office/vba/api/excel.xlfindlookin

' Get the search location.
Select Case searchLoc
	Case "C"
		xlFLI = -4144 ' Excel.XlFindLookIn.xlComments
	Case "F"
		xlFLI = -4123 ' Excel.XlFindLookIn.xlFormulas
	Case Else
		xlFLI = -4163 ' Excel.XlFindLookIn.xlValues
End Select

Try
	Success = True
	With range 
        cell = .Find(What:=searchText, LookIn:=xlFLI, SearchOrder:=order, MatchCase:=matchCase) 
        If Not cell Is Nothing Then 
            firstAddress = cell.Address
            Do 
				' Add cell address to the DataTable.
                cells.Rows.Add(cell.Address)

				' Continue the search.
				cell = .FindNext(cell) 

				' Compare the next cell address to the first cell address to make sure we haven't looped around on the range.
				If cell.Address = firstAddress Then
					Exit Do
				End If
            Loop While Not cell Is Nothing
        End If 
    End With

	Matches = cells

Catch e As Exception
    Success = False
    Message = e.Message
Finally
    wb = Nothing
    ws = Nothing
    excel = Nothing
    sheet = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="f69c5259-faa1-4362-a105-9d5e3020f536" name="handle" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="184d1026-042a-4862-9dd1-9d0717a0820d" name="workbookname" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d41ca947-f3d8-406e-a58e-4427e651f360" name="worksheetname" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="be227952-ca62-4dc8-abce-ea8447cc86c6" name="Search Range" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1aa3caf-afb4-47b4-b3e6-373ba90ed7c5" name="Search Text" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e3d40b6-b631-4d89-90b4-d49c7b7cf809" name="Success" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="300" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="d79ed901-9a68-4315-88e8-1c0982ad618f" name="Message" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><narrative>If an error is encountered, this may be set with a message related to the error.</narrative><display x="-195" y="330" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77ac8581-f547-4d70-b3eb-57ff85627973" name="Success?" type="Decision"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="15" y="120" /><decision expression="[Success]" /><ontrue>c97ab81c-a9f3-4bd5-a8ef-cca413e5bc4c</ontrue><onfalse>803d9536-862e-46e7-9aed-33b06d0dcd05</onfalse></stage><stage stageid="67bdc896-0f67-437d-892a-132464280b84" name="Starting Cell" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="602620d5-28ab-4419-996c-ad874f494531" name="Output" type="Block"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="-270" y="270" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="7c8aebfc-a3d2-4e5f-ad69-f23ad0774b99" name="Input" type="Block"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="300" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="803d9536-862e-46e7-9aed-33b06d0dcd05" name="Set Error Message" type="Calculation"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="120" y="120" /><onsuccess>c97ab81c-a9f3-4bd5-a8ef-cca413e5bc4c</onsuccess><calculation expression="&quot;Failed to find the value '&quot; &amp; [Search Text] &amp; &quot;' within the worksheet [&quot; &amp; [worksheetname] &amp; &quot;].&quot;" stage="Message" /></stage><stage stageid="e0668b66-2be8-4201-8aa2-8535ba70ce85" name="Search Text?" type="Decision"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><narrative>Check to see if search text was specified.</narrative><display x="15" y="0" /><decision expression="Len(Trim([Search Text])) &gt; 0" /><ontrue>79e66651-9143-4ac5-8dc3-767610be881e</ontrue><onfalse>886d5950-60d3-4ce0-be91-c7b8adaaf3a9</onfalse></stage><stage stageid="886d5950-60d3-4ce0-be91-c7b8adaaf3a9" name="Invalid Search Text" type="Exception"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="150" y="0" w="120" h="30" /><exception localized="yes" type="Invalid Input Parameter" detail="&quot;Empty search text. Please enter the text to search for.&quot;" /></stage><stage stageid="094a0449-4c08-4a48-88fd-c9707b3d2772" name="Matches" type="Collection"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="-195" y="360" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1dae262e-9648-4b50-aa98-687c2308f3a4" name="Local Items" type="Block"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="-270" y="405" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="2ac8694c-b01a-4159-8d8e-3d62cf910627" name="Search In" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">V</initialvalue><private /><alwaysinit /></stage><stage stageid="4236ae4b-4f52-4f47-bff9-6d4294d39512" name="Match Case" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><loginhibit /><display x="-195" y="225" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="308e6d0e-3835-4a47-b4e8-58364733951f" name="Search Order" type="Data"><subsheetid>e482f617-15cc-46a4-bf04-a70da83313aa</subsheetid><display x="-195" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">R</initialvalue><private /><alwaysinit /></stage><stage stageid="8d6f2cf2-7215-432a-b40f-f7bff46d0f52" name="Replace in Worksheet" type="SubSheetInfo"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><narrative>Use this action to replace the specified text with new text within the specified worksheet.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5b08e0b6-5a20-44c6-9d33-fb199b05eda3" name="End" type="End"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="15" y="150" /><outputs><output type="flag" name="Success" narrative="A flag indicating whether the action completed successfully or failed." stage="Success" /><output type="text" name="Message" narrative="Information associated with any errors that were encountered." stage="Message" /><output type="number" name="Number of Changes" narrative="The total number of cells that were impacted. Note: This may not equal the total number of changes. If there are multiple occurrences of the old text in a single cell, those changes will only be counted once." stage="Count of Changed Cells" /></outputs></stage><stage stageid="11aa12c4-8618-4cfe-8a07-eb6bc82ce8e4" name="Start" type="Start"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the Excel instance to work with. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Old Text" narrative="The old text that should be replaced." stage="Old Text" /><input type="text" name="New Text" narrative="The new text that will replace the old text." stage="New Text" /><input type="text" name="Workbook Name" narrative="The name of the workbook that contains the specific worksheet to search. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the specific worksheet to search for the specified text. If not worksheet name is specified, the currently active worksheet will be searched." stage="worksheetname" /><input type="text" name="Search Range" narrative="The specific range of cells to search. If no value is specified, the entire worksheet will be searched." stage="Search Range" /><input type="text" name="Search Order" narrative="Specifies whether the search should be conducted by rows or columns. Possible values are R (rows) or C (columns). The default search order is by rows." stage="Search Order" /><input type="flag" name="Match Case" narrative="Flag indicating that the search should be case sensitive. The default is case insensitive." stage="Match Case" /></inputs><onsuccess>5c0e58aa-6261-4cb5-9f5b-1f4d0a646461</onsuccess></stage><stage stageid="5c0e58aa-6261-4cb5-9f5b-1f4d0a646461" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>b03b3aec-195a-4f39-9ef5-b8910eea7627</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="b03b3aec-195a-4f39-9ef5-b8910eea7627" name="Replace Text" type="Code"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="15" y="15" w="120" h="30" /><inputs><input type="number" name="Handle" expr="[handle]" /><input type="text" name="Workbook" expr="[workbookname]" /><input type="text" name="Worksheet" expr="[worksheetname]" /><input type="text" name="searchRange" expr="[Search Range]" /><input type="text" name="oldText" expr="[Old Text]" /><input type="text" name="newText" expr="[New Text]" /><input type="text" name="startingCell" expr="[Starting Cell]" /><input type="text" name="searchOrder" expr="[Search Order]" /><input type="flag" name="matchCase" expr="[Match Case]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Count of Changed Cells" stage="Count of Changed Cells" /></outputs><onsuccess>c8b40711-9e15-4699-a80d-81ccf9e17e27</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet, range As Object
Dim count As Long

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet

' What range do we search?
If (Len(Trim(searchRange)) > 0) Then
	range = ws.Range(searchRange)
Else
	range = ws.UsedRange
End If

' Set the search order value.
Dim order as Integer = 0
If (searchOrder.Trim().Substring(0,1).ToUpper() = "C") Then
	order = 2	' xlByColumns
Else
	order = 1	' xlByRows
End If

Try
	Success = True
	With range 
		' Get a rough count of the number of cells that will impacted. We say this is a rough count because if there are multiple occurences of the old text
		' in one cell it only counts 1 time.
		count = excel.WorksheetFunction.CountIf(range, "*" & oldText & "*")

		' Perform the replacement.
		range.Replace(What:=oldText, Replacement:=newText, SearchOrder:=order, MatchCase:=False)
    End With

	Count_of_Changed_Cells = count

Catch e As Exception
    Success = False
    Message = e.Message
Finally
    wb = Nothing
    ws = Nothing
    excel = Nothing
    sheet = Nothing
End Try]]></code></stage><stage stageid="0a220277-bb4b-4871-a4e1-1dc9f4670b95" name="handle" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="56cb5793-a761-4f3c-a038-ea30d717936a" name="workbookname" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc7e6696-17f4-47da-a79f-ecdd1d66948b" name="worksheetname" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3823d484-892f-47b4-9bbb-15519497bc5b" name="Search Range" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f6d65993-9df6-4745-befd-05a22f571485" name="Old Text" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3e761e26-4b4e-4050-af6f-8800c5ed1588" name="Success" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="300" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="017c4339-745a-44c8-91d7-00d3e20ac411" name="Message" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><narrative>If an error is encountered, this may be set with a message related to the error.</narrative><display x="-195" y="330" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c8b40711-9e15-4699-a80d-81ccf9e17e27" name="Success?" type="Decision"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="15" y="75" /><decision expression="[Success]" /><ontrue>5b08e0b6-5a20-44c6-9d33-fb199b05eda3</ontrue><onfalse>04c67c49-6a4f-4b15-92a2-6b55a30b9196</onfalse></stage><stage stageid="abad8d4c-dca3-46ca-8ba8-4c71b28e02a7" name="Starting Cell" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="29f4029a-a58b-48a7-bf41-8a9ec909d601" name="Output" type="Block"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="-270" y="270" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="bbdba9cb-c5ce-4179-9a14-9f000e5fa967" name="Input" type="Block"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="300" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="04c67c49-6a4f-4b15-92a2-6b55a30b9196" name="Set Error Message" type="Calculation"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="120" y="75" /><onsuccess>5b08e0b6-5a20-44c6-9d33-fb199b05eda3</onsuccess><calculation expression="&quot;Failed to find the value '&quot; &amp; [Old Text] &amp; &quot;' within the worksheet [&quot; &amp; [worksheetname] &amp; &quot;].&quot;" stage="Message" /></stage><stage stageid="e0a4afd6-9b40-45ff-b4d5-3ad26ed30af6" name="Local Items" type="Block"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="-270" y="405" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="279a3827-6615-4d56-bea7-fcbd128a200f" name="Match Case" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="-195" y="225" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="baeeac00-a6b3-4088-aeb8-fe25822aed32" name="Search Order" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">R</initialvalue><private /><alwaysinit /></stage><stage stageid="9931ca6d-9947-4611-86ad-cef20cc54983" name="New Text" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="69b09d3e-9ec4-4a83-b65b-9afbdcad95e9" name="Count of Changed Cells" type="Data"><subsheetid>c50b67c1-fd97-4305-ab25-db7e94ab4f0c</subsheetid><loginhibit /><display x="-195" y="360" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="15df2702-bbe6-41d5-a0c6-15b5aefb004f" name="Export as PDF" type="SubSheetInfo"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><narrative>Export the given workbook, using the given file name, as a PDF.

Params :
- handle : Number : The integer identifying the instance on which the workbook resides. Default (0) indicates the current instance.
- Workbook Name : Text : The name of the workbook which should be saved. Default ("") indicates the active workbook.
- File Name : Text : The path and name of the file to which the workbook should be saved.
- Export Active Sheet Only : Flag : Indicates whether the active sheet is the only item that should be exported or the entire workbook. Default value is False meaning the entire workbook will be exported.

Output :

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-225" y="-165" w="330" h="210" /></stage><stage stageid="17799c4c-2dea-4e8a-9106-995c332cd265" name="Start" type="Start"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be exported." stage="workbookname" /><input type="text" name="File Name" narrative="The full path and filename to which the workbook should be exported." stage="filename" /><input type="flag" name="Export Active Sheet Only" narrative="A flag indicating that only the active sheet should be exported, otherwise the entire workbook is exported. Default is False." stage="activesheetonly" /></inputs><onsuccess>7af79136-20dd-4790-9aff-8c0dfbb0e009</onsuccess></stage><stage stageid="a0334e80-14c7-453b-9654-8eb822296dd0" name="End" type="End"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="7af79136-20dd-4790-9aff-8c0dfbb0e009" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" narrative="The integer representing an Excel instance" expr="[handle]" /><input type="text" name="workbookname" friendlyname="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" expr="[workbookname]" /></inputs><onsuccess>b2de43d8-b5a7-4277-8a0b-66d60bfff329</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="b2de43d8-b5a7-4277-8a0b-66d60bfff329" name="Export as PDF" type="Code"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><loginhibit /><display x="15" y="15" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="filename" expr="[filename]" /><input type="flag" name="activesheetonly" expr="[activesheetonly]" /></inputs><onsuccess>a0334e80-14c7-453b-9654-8eb822296dd0</onsuccess><code><![CDATA[Dim wb as Object = GetWorkbook(handle, workbookname)
Dim excel as Object = wb.Application

' For details, google XlFileFormat Enumeration
Dim xlTypePDF As Integer = 0

excel.DisplayAlerts = False

' Are we exporting the entire workbook or just the active sheet?
If (activesheetonly) Then
	wb.ActiveSheet.ExportAsFixedFormat (xlTypePDF, filename)
Else
	wb.ExportAsFixedFormat (xlTypePDF, filename)
End If

excel.DisplayAlerts = True]]></code></stage><stage stageid="19363b9b-68ec-4ad0-8cc9-645c44fd1a99" name="handle" type="Data"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><display x="-180" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0532242b-90d7-444c-8b8d-3bcea59654d9" name="workbookname" type="Data"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><display x="-180" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e91a963a-cbf2-4af4-baff-c20d5e245e4c" name="filename" type="Data"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><display x="-180" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad03280b-e879-4567-8815-4820f33625b6" name="activesheetonly" type="Data"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><display x="-180" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2b484054-8298-4c53-a396-84d8b674f287" name="Input" type="Block"><subsheetid>9367543b-9548-4abf-a4e3-8a13f9829c8c</subsheetid><loginhibit /><display x="-255" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c89362aa-542c-4f29-bc14-f81514e23c35" name="password" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aef77a23-3c04-4def-98f1-2fa5f1611d84" name="password" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-135" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3bc20f8b-cca9-40e2-8ec5-9f11e1c65aed" name="password" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="08456461-68ec-4c21-80b3-5b21e341d0f4" name="Note3" type="Note"><loginhibit /><narrative>Version: 10.6.0</narrative><display x="0" y="-195" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="6497408a-1b11-4a4f-a1f8-089f209fd638" name="Sort Column" type="SubSheetInfo"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><narrative>Sort a column in ascending or descending order.</narrative><display x="30" y="15" w="210" h="90" /></stage><stage stageid="ee8cce5d-3db1-4d9f-9939-c9861fe8facf" name="Start" type="Start"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="255" y="30" /><inputs><input type="number" name="Handle" narrative="An integer value that indicates the specific Excel instance where the Workbook resides." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the Workbook that contains the worksheet with the column that needs to be sorted." stage="Workbook Name" /><input type="text" name="Worksheet" narrative="The name of the Worksheet that contains the column that needs to be sorted." stage="Worksheet Name" /><input type="text" name="Column Reference" narrative="The reference to the column that needs to be sorted." stage="Column Reference" /><input type="text" name="Sort Order" narrative="A value indicating the sort order to apply to the colum. Supported values include: 'ASC' for asecending or 'DSC' for descending. Default value is 'ASC'." stage="Sort Order" /><input type="flag" name="Has Header" narrative="A flag indicating whether the column includes a header field. Set to True if there are headers. Default value is False." stage="Has Header" /></inputs><onsuccess>78f6e0f8-7a8d-4364-9541-89c6a77df809</onsuccess></stage><stage stageid="fe243f3c-126f-473e-80ee-aa70e9ff876e" name="End" type="End"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="375" y="150" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, further details may be found here." stage="Error Message" /></outputs></stage><stage stageid="e5a1838e-ff09-4b02-bc70-4a405176b874" name="Set Column Sort Order" type="Code"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="255" y="150" w="120" h="30" /><inputs><input type="number" name="handle" expr="[Handle]" /><input type="text" name="workbookname" expr="[Workbook Name]" /><input type="text" name="worksheetname" expr="[Worksheet Name]" /><input type="text" name="colReference" expr="[Column Reference]" /><input type="text" name="sortOrder" expr="[Sort Order]" /><input type="flag" name="hasHeader" expr="[Has Header]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="errorMessage" stage="Error Message" /></outputs><onsuccess>fe243f3c-126f-473e-80ee-aa70e9ff876e</onsuccess><code><![CDATA[Dim ws as Object  = GetWorksheet(handle, workbookname, worksheetname)

' Initialize output.
success = true
errorMessage = ""

Try
	' Determine whether we're ascending/descending and whether there are headers or not.
	If (sortOrder.ToUpper() = "ASC") Then
		If (hasHeader = True) Then
			ws.UsedRange.Sort(Key1:= ws.Range(colReference), Order1:= 1, Header:= 1)
		Else
			ws.UsedRange.Sort(Key1:= ws.Range(colReference), Order1:= 1, Header:= 2)
		End If
	Else
		If (hasHeader = True) Then
			ws.UsedRange.Sort(Key1:= ws.Range(colReference), Order1:= 2, Header:= 1)
		Else
			ws.UsedRange.Sort(Key1:= ws.Range(colReference), Order1:= 2, Header:= 2)
		End If
	End If

Catch ex as exception
	success = false
	errorMessage = ex.message

End Try]]></code></stage><stage stageid="a595c9b2-f063-4977-898d-2ae97cd32e63" name="Handle" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><display x="30" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c98840f-861e-4455-9979-70b1fd4120c7" name="Workbook Name" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><display x="30" y="135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="353d8260-aa70-4694-9215-7388edf3adad" name="Worksheet Name" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><display x="30" y="165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ce46769-1e59-4cd1-ba34-1c288ee75197" name="Error Message" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><display x="30" y="360" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a955982-3333-4975-8f71-77b156ca83a0" name="Sort Order" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><display x="30" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">ASC</initialvalue><private /><alwaysinit /></stage><stage stageid="29a5cbfa-5f27-4991-a091-b214c95f4a76" name="Has Header" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><display x="30" y="225" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f3dfee76-0208-4b26-9b87-125f176d08a0" name="Column Reference" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><display x="30" y="255" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="099cf5dd-0fa3-468f-b922-31b39e64baa7" name="Output Variables" type="Block"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="-45" y="300" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="720a0294-ad31-4927-9b4d-e607c97487d3" name="Input" type="Block"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="-45" y="75" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="3853722b-e1de-4c59-9d69-db944dcd0a35" name="Local Data" type="Block"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="-45" y="405" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="6e63a982-6c12-4256-8d68-06c4670746ef" name="Success" type="Data"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="30" y="330" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="78f6e0f8-7a8d-4364-9541-89c6a77df809" name="Proper Sort Order?" type="Decision"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="255" y="90" w="90" h="30" /><decision expression="(Upper(Trim([Sort Order])) = &quot;ASC&quot;) OR (Upper(Trim([Sort Order])) = &quot;DSC&quot;)" /><ontrue>e5a1838e-ff09-4b02-bc70-4a405176b874</ontrue><onfalse>09c31fde-eb99-4b6c-8bee-0f2a25743e88</onfalse></stage><stage stageid="09c31fde-eb99-4b6c-8bee-0f2a25743e88" name="Input Error" type="MultipleCalculation"><subsheetid>85caf92e-2249-4026-bcf7-ece74a7caf06</subsheetid><loginhibit /><display x="375" y="90" /><onsuccess>fe243f3c-126f-473e-80ee-aa70e9ff876e</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Please review and correct your input. Supported values for 'Sort Order' are 'ASC' or 'DSC'.&quot;" stage="Error Message" /></steps></stage><stage stageid="97abeab8-bd76-43d2-b83c-50c698ffa284" name="Autofit Column(s)" type="SubSheetInfo"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><narrative>Changes the width of one or more columns to fit the contents (AutoFit).</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="1a542456-200e-452c-8596-4f2206b0b5f8" name="End" type="End"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><loginhibit /><display x="45" y="15" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this may contain additional information." stage="Error Message" /></outputs></stage><stage stageid="4a32f9aa-b3b1-4bcb-ae9f-0d3aa85fe83f" name="Handle" type="Data"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7e857d4d-27ad-4f06-8b28-5e4401e7fbae" name="Workbook" type="Data"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aae0f1ed-8a9d-48c2-9e10-29d80f091c23" name="Worksheet" type="Data"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="afcd3363-7efc-46f5-87f1-4e0b54d7f571" name="Range" type="Data"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a016e40-4809-4521-8e80-1827e47c281e" name="Start" type="Start"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><loginhibit /><display x="45" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="An integer vlue that identifies the specific Excel instance that contains the workbook and worksheet containing the columns to be AutoFit." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the specific workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet that contains the columns to be autofit." stage="Worksheet" /><input type="text" name="Column Range" narrative="The column(s) to be AutoFit." stage="Range" /></inputs><onsuccess>19ee9c6f-3d43-41bd-a0d1-e3eac7c0cfd6</onsuccess></stage><stage stageid="19ee9c6f-3d43-41bd-a0d1-e3eac7c0cfd6" name="Autofit Columns" type="Code"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><loginhibit /><display x="45" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>1a542456-200e-452c-8596-4f2206b0b5f8</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet As Object
success = True

Try
	wb = GetWorkbook(Handle, Workbook)
	ws = GetWorksheet(Handle, Workbook, Worksheet)

	wb.Activate()
	ws.Activate()

	excel = ws.Application
	sheet = excel.ActiveSheet

	ws.Columns(Range).AutoFit
Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	sheet = Nothing
	ws = Nothing
	wb = Nothing
	excel = Nothing

End Try]]></code></stage><stage stageid="c6f21c42-0650-4ad2-922a-cc6a87d1223e" name="Input" type="Block"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b87fcdd8-7eb0-41f4-9492-cc4b49d1bac2" name="Success" type="Data"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><display x="-120" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1181ede1-24a7-4298-83ac-d1db8a029697" name="Error Message" type="Data"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><display x="-120" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="26ffa866-4f05-4d14-a7c5-bd5fafb896cd" name="Output" type="Block"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="25e5ebf2-4a4d-42ba-a0e9-8f9fd9eea7c7" name="Local Data" type="Block"><subsheetid>f64e2c87-4d60-49c6-9dab-d8ba1f4a0e32</subsheetid><loginhibit /><display x="-195" y="195" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="05d4b5ef-aa8c-4a4b-854c-29fe3762bf15" name="Autofill" type="SubSheetInfo"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><narrative>Performs an autofill on the cells in the specified range.</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="2f2e58c7-aaeb-4784-a3a7-cfdc9bbeaceb" name="End" type="End"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><loginhibit /><display x="60" y="0" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this may contain additional information." stage="Error Message" /></outputs></stage><stage stageid="336b6dbd-86c4-48ff-b911-c019e7a22122" name="Handle" type="Data"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50fd287c-5eef-4778-912c-9514c81f3ee0" name="Workbook" type="Data"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c428e102-8a04-4ac1-a33e-6726b1a2250d" name="Worksheet" type="Data"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3899bcc0-cf2f-4031-b365-a9aab6ca8a0e" name="Start" type="Start"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="An integer that identifies the instance of Excel containing the workbook." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet that contains the columns." stage="Worksheet" /><input type="text" name="Source Range" narrative="The source range used to populate the target range." stage="Source Range" /><input type="text" name="Target Range" narrative="The target range to be auto-filled." stage="Target Range" /></inputs><onsuccess>d9be00aa-876d-40b7-bfb1-3e25b466c85b</onsuccess></stage><stage stageid="41076221-6c78-43c4-83af-47a10b75a0ab" name="Source Range" type="Data"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff20598f-cdab-48fd-bc0a-85531179366d" name="Target Range" type="Data"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9be00aa-876d-40b7-bfb1-3e25b466c85b" name="Autofill" type="Code"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="SourceRange" expr="[Source Range]" /><input type="text" name="TargetRange" expr="[Target Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>2f2e58c7-aaeb-4784-a3a7-cfdc9bbeaceb</onsuccess><code><![CDATA[Dim ws, excel As Object
Success = True
Error_Message = ""

Try
	ws = GetWorksheet(Handle, Workbook, Worksheet)

	ws.Activate()

	excel = ws.Application

	ws.Range(SourceRange).Select
	excel.Selection.AutoFill(Destination:=ws.Range(TargetRange), Type:=0)

Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	ws = Nothing
	excel = Nothing

End Try]]></code></stage><stage stageid="f964ab5f-71d5-4743-9e6f-11ebf9f3aac9" name="Input" type="Block"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0a03b734-9779-4e60-9a8b-b488a20dfaf1" name="Success" type="Data"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><display x="-120" y="150" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32ffe8c5-a22f-4333-a01b-ffc1c57a2f03" name="Error Message" type="Data"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><display x="-120" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58f5ffcf-db0f-436a-a401-b880e8cb28f5" name="Output" type="Block"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><loginhibit /><display x="-195" y="120" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="6ea46e81-cb7c-46c2-8900-fe10afb1f2f7" name="Local Data" type="Block"><subsheetid>7d1a63d8-1c2b-4b13-80b8-348c65b8a56b</subsheetid><loginhibit /><display x="-195" y="225" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="758bacce-b04f-44d0-b29b-42538ae3d1bd" name="Turn on Autofilter" type="SubSheetInfo"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><narrative>Turn on autofilter, allow filteration of detected header cells</narrative><display x="-150" y="-135" w="150" h="90" /></stage><stage stageid="04e2b3d9-3ed8-48e0-91f9-4c6a1c5e6e72" name="End" type="End"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="30" y="15" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this should contain additional information." stage="Error Message" /></outputs></stage><stage stageid="74045603-a920-465b-a2d3-4614cc68228f" name="Handle" type="Data"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><display x="-150" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eb4e0872-5483-4de7-bcb4-74d7b1c8532b" name="Workbook" type="Data"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><display x="-150" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="25e4122e-fdd8-4d3d-b3b5-d97f802f65f1" name="Worksheet" type="Data"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><display x="-150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fe731d22-b356-49a8-ba1f-b4fb78c1df03" name="Start" type="Start"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="30" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="An integer value indicating the running instance of Excel that contains the specific workbook." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet to enable AutoFilter on." stage="Worksheet" /><input type="text" name="Range" narrative="The range of columns to enable AutoFilter on." stage="Range" /></inputs><onsuccess>2170db73-c179-4e6c-b7b0-75b8a878c881</onsuccess></stage><stage stageid="2170db73-c179-4e6c-b7b0-75b8a878c881" name="Turn On Autofilter" type="Code"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="30" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="error_message" stage="Error Message" /></outputs><onsuccess>04e2b3d9-3ed8-48e0-91f9-4c6a1c5e6e72</onsuccess><code><![CDATA[Dim ws As Object
success = True
error_message = ""

Try
	ws = GetWorksheet(Handle, Workbook, Worksheet)
	ws.Activate()
	ws.Range(Range).AutoFilter

Catch ex As Exception
	success = False
	error_message = ex.Message
	
Finally
	ws = Nothing

End Try]]></code></stage><stage stageid="ec3e1507-f698-4131-89d7-c0c1c19e7c49" name="Input" type="Block"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="-225" y="-75" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="38a084bd-0c5b-4210-8baa-5b2fd469c852" name="Output" type="Block"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="-225" y="90" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="3ac6c674-0c38-409e-9012-b17c2822e748" name="Local Data" type="Block"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="-225" y="195" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="74b9514e-c419-4a4d-9e01-48542d8e96c5" name="Success" type="Data"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="-150" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2b0584f5-ae88-4e9d-9eae-0103f1b06513" name="Error Message" type="Data"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><loginhibit /><display x="-150" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="efe98c79-4cb7-4103-a4e5-388c15e85bbe" name="Range" type="Data"><subsheetid>e172f6c0-22cb-43ca-a9f6-97382cdb1ce9</subsheetid><display x="-150" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3128faa3-ba36-4697-9d9f-7b95935ed415" name="Turn off Autofilter" type="SubSheetInfo"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><narrative>Remove the autofilter from the specified range.</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="b78f9a5c-d66d-4ee4-97a2-56498fc12dc2" name="End" type="End"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="45" y="15" /><outputs><output type="flag" name="Success" narrative="A flag indicating the success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, more information may be available here." stage="Error Message" /></outputs></stage><stage stageid="18b1cea9-3540-4693-b7f9-c4d38ae2100d" name="Start" type="Start"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="45" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet containing the range of columns to enable AutoFilter on." stage="Worksheet" /></inputs><onsuccess>cdc64483-80d2-424a-8b57-bdcc2e4cc91e</onsuccess></stage><stage stageid="cdc64483-80d2-424a-8b57-bdcc2e4cc91e" name="Turn Off Autofilter" type="Code"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="45" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>b78f9a5c-d66d-4ee4-97a2-56498fc12dc2</onsuccess><code><![CDATA[Dim ws As Object
Success = True
Error_Message = ""

Try
	ws = GetWorksheet(Handle, Workbook, Worksheet)
	ws.Activate()
	ws.AutoFilterMode = False

Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	ws = Nothing

End Try]]></code></stage><stage stageid="b343d51d-46c0-433b-88ce-33d11f9b7fd4" name="Handle" type="Data"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f3f61a08-5d2a-4115-8d97-13e281036a78" name="Workbook" type="Data"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1ea4fbd6-468f-451c-bd20-732b38b8509a" name="Worksheet" type="Data"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f466bc90-58b4-4400-bc69-3b5c56225313" name="Input" type="Block"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d1aa995c-5c99-4c9b-83e0-1335208fd6aa" name="Output" type="Block"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="-195" y="60" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="bd7347ff-0a57-4aa8-baf5-c52347827cb3" name="Local Data" type="Block"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="8c62bb6a-54b6-4925-8aad-3b8bb703de5e" name="Success" type="Data"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="-120" y="90" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2d0e4d0e-6318-4cc3-b705-b1a32bcb61a4" name="Error Message" type="Data"><subsheetid>04319f8f-404b-4311-b6e3-21912e409349</subsheetid><loginhibit /><display x="-120" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b8d6b032-7490-40b8-b839-45c2682cc295" name="Run Macro with Parallel Thread" type="SubSheetInfo"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><narrative>This action uses a separate thread to look for a pop-up dialog created by the specified macro. 

NOTE: The timeout value should be greater than the estimated time it takes for the macro to complete processing.</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="eec45cd4-d46e-4c33-897b-6e723b07c472" name="End" type="End"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ae774a92-439d-43e2-8f29-2a371def3258" name="Start Thread for Dialog Box" type="Code"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><loginhibit /><display x="15" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Timeout Period" expr="[Timeout]" /></inputs><onsuccess>763d6375-f484-4a0d-aef3-f3ff6fad6e3e</onsuccess><code><![CDATA[Timeout = Timeout_Period
Dim ThreadDialogBox As New System.Threading.Thread(AddressOf WaitForConfirmationDialog)
ThreadDialogBox.Start()]]></code></stage><stage stageid="de80c64a-e21c-4ee0-9e69-37fca5c98bcf" name="Start" type="Start"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><loginhibit /><display x="15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Macro Name" narrative="The name of the Excel macro to run." stage="Macro Name" /><input type="number" name="Timeout" narrative="The number of seconds to wait for the macro to complete." stage="Timeout" /><input type="number" name="Handle" narrative="The Excel instance handle." stage="Handle" /></inputs><onsuccess>ae774a92-439d-43e2-8f29-2a371def3258</onsuccess></stage><stage stageid="4633eba6-2570-478b-9459-382a9be0e6d6" name="Macro Name" type="Data"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="53fa4817-b0e1-4ad0-a3ff-0965a6fb2e8c" name="Handle" type="Data"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="763d6375-f484-4a0d-aef3-f3ff6fad6e3e" name="Run Macro" type="SubSheet"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" friendlyname="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="Macro Name" friendlyname="Macro Name" narrative="The name of the macro to run" expr="[Macro Name]" /></inputs><onsuccess>eec45cd4-d46e-4c33-897b-6e723b07c472</onsuccess><processid>4229da44-68c0-4b51-9d2c-08be4a9d6727</processid></stage><stage stageid="0203aee0-8ef3-40fd-8867-02e9a522634a" name="Timeout" type="Data"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><display x="-195" y="45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>20</initialvalue><private /><alwaysinit /></stage><stage stageid="d49156d9-3137-4dfd-9aa8-2c0175004b83" name="Input" type="Block"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="69d458da-733d-406d-9911-5bbd723b6428" name="Output" type="Block"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><loginhibit /><display x="-285" y="90" w="180" h="75" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="0fc11e9a-3254-44ce-b682-2b7982f48ab1" name="Local Data" type="Block"><subsheetid>14e69a88-1cd0-44b7-84d6-0fb16cf3872d</subsheetid><loginhibit /><display x="-285" y="180" w="180" h="75" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="9807513a-7aa1-4c4e-a5ea-a298309f5948" name="Add Sort to Autofilter" type="SubSheetInfo"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><narrative>Add a sort mechanism, either Ascending or Descending to Autofilter Column</narrative><display x="-120" y="-120" w="150" h="90" /></stage><stage stageid="fa9ccea5-71e1-4ff1-b821-f256eeded9ff" name="End" type="End"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="135" y="105" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this should contain additional information." stage="Error Message" /></outputs></stage><stage stageid="203156a4-7fbb-48d2-b495-7b6791c28333" name="Handle" type="Data"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><display x="-120" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3ac291ed-f6d3-4a5f-901e-a385666fb20a" name="Workbook" type="Data"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><display x="-120" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="778a9cb0-c275-4739-b57d-0010c1b6b7c3" name="Worksheet" type="Data"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><display x="-120" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7be8755-2def-42bb-a007-2eda4ff3f074" name="Start" type="Start"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="75" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="number" name="Column Number" stage="Field" /><input type="flag" name="Ascending" stage="Ascending" /></inputs><onsuccess>57ece947-e311-4d12-9fee-f13665ebd664</onsuccess></stage><stage stageid="af7b1af9-1e31-4334-9a97-b43ebf6b9797" name="Field" type="Data"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><display x="-120" y="60" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="156d1b85-5482-41ad-aa60-f9d671c732e8" name="Add Sort ASC" type="Code"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><narrative>ws.Range("A1").AutoFilter.Sort.SortFields.Add(Key:= Field, SortOn:= 0, Order:= 1, DataOption:= 0)

With ws.Range("A1").AutoFilter.Sort
	.Header = 1
	.MatchCase = False
	.Orientation = 1
	.SortMethod = 1
	.Apply
End With</narrative><display x="75" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="number" name="Field" expr="[Field]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error_Message" stage="Error Message" /></outputs><onsuccess>fa9ccea5-71e1-4ff1-b821-f256eeded9ff</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet As Object
Success = True
Error_Message = ""

Try
	wb = GetWorkbook(Handle, Workbook)
	ws = GetWorksheet(Handle, Workbook, Worksheet)

	wb.Activate()
	ws.Activate()

	excel = ws.Application
	sheet = excel.ActiveSheet

	With wb
		With .Worksheets(Worksheet)
			With .Cells(1, 1).CurrentRegion
				.Cells.Sort(Key1:=.Columns(Field), Order1:= 1, Orientation:= 1, Header:= 1)
			End With
		End With
	End With

Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	sheet = Nothing
	ws = Nothing
	wb = Nothing
	excel = Nothing

End Try]]></code></stage><stage stageid="54ca2aa4-052d-4f1f-af0c-c6048ec2c176" name="Ascending" type="Data"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><display x="-120" y="90" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="57ece947-e311-4d12-9fee-f13665ebd664" name="ASC" type="Decision"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="75" y="-30" /><decision expression="[Ascending]" /><ontrue>156d1b85-5482-41ad-aa60-f9d671c732e8</ontrue><onfalse>2d172ee8-bd0f-451f-ae09-79468058838e</onfalse></stage><stage stageid="d13e6199-fe97-474e-bceb-a9296d045136" name="Add Sort DESC" type="Code"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="number" name="Field" expr="[Field]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error_Message" stage="Error Message" /></outputs><onsuccess>fa9ccea5-71e1-4ff1-b821-f256eeded9ff</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet As Object
Success = True
Error_Message = ""

Try
	wb = GetWorkbook(Handle, Workbook)
	ws = GetWorksheet(Handle, Workbook, Worksheet)

	wb.Activate()
	ws.Activate()

	excel = ws.Application
	sheet = excel.ActiveSheet

	With wb
		With .Worksheets(Worksheet)
			With .Cells(1, 1).CurrentRegion
				.Cells.Sort(Key1:=.Columns(Field), Order1:= 2, Orientation:= 1, Header:= 1)
			End With
		End With
	End With

Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	sheet = Nothing
	ws = Nothing
	wb = Nothing
	excel = Nothing

End Try]]></code></stage><stage stageid="2d172ee8-bd0f-451f-ae09-79468058838e" name="Anchor2" type="Anchor"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="195" y="-30" w="10" h="10" /><onsuccess>d13e6199-fe97-474e-bceb-a9296d045136</onsuccess></stage><stage stageid="59b161b3-a1f1-4784-a062-61e880dedea4" name="Input" type="Block"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="-195" y="-60" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="39e642f8-1e3d-4a7c-bddf-a57787d6035b" name="Output" type="Block"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="-195" y="135" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="0308f69b-4d18-443f-9cca-c2f6dd96ab46" name="Local Data" type="Block"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="-195" y="240" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="faf492db-982a-4004-a045-fff8b802e1ea" name="Success" type="Data"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="-120" y="165" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="382ad941-a4bd-4f3e-9c8a-acc4c4fcb0bd" name="Error Message" type="Data"><subsheetid>6871bfde-213a-4018-a6cc-f12fd5e77b3b</subsheetid><loginhibit /><display x="-120" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="87624bb1-1db0-40de-aec9-50f701d9a059" name="Delimiter" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><narrative>Default delimiter is the comma.</narrative><display x="-195" y="150" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">,</initialvalue><private /><alwaysinit /></stage><stage stageid="52d1e96e-2407-4b9b-9cee-c96d508f6d94" name="Format Range" type="SubSheetInfo"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><narrative>Sets the format of the cells, within the specified range, to that specified.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6df534c2-d5e8-453c-b4f4-1bddf0c25001" name="Start" type="Start"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><loginhibit /><display x="-45" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Format" narrative="The format required for the range of cells - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /><input type="text" name="Start Cell" stage="Start Cell" /><input type="text" name="End Cell" stage="End Cell" /></inputs><onsuccess>2b1ca958-8654-4157-b77f-74484e5bf6f3</onsuccess></stage><stage stageid="7269ff0c-186c-44e3-a24c-0ab5ad5bb1ab" name="format" type="Data"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1fc5ab72-134e-4a54-b886-dad88d9d6e63" name="handle" type="Data"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="eb7e60ed-6ee8-46a5-afbd-9c7628b18d25" name="End" type="End"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><loginhibit /><display x="-45" y="60" /></stage><stage stageid="031e6fcd-7a59-4c68-8aa2-c37d2daa6852" name="FormatRange" type="Code"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><inputs><input type="text" name="format" expr="[format]" /><input type="text" name="startcell" expr="[Start Cell]" /><input type="text" name="endcell" expr="[End Cell]" /><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>eb7e60ed-6ee8-46a5-afbd-9c7628b18d25</onsuccess><code><![CDATA[Dim range as Object

Try
	range = GetWorkbook(handle,Nothing).ActiveSheet.Range(startcell,endcell)
	range.NumberFormat = format
	range.Value = range.Value

Catch ex As Exception

Finally
	range = Nothing

End Try]]></code></stage><stage stageid="2b1ca958-8654-4157-b77f-74484e5bf6f3" name="Activate Workbook" type="SubSheet"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>031e6fcd-7a59-4c68-8aa2-c37d2daa6852</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="3f4077b4-9588-4f39-8637-f808bf63d9bf" name="Start Cell" type="Data"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4043df12-e517-40ee-ba45-65161fbe3f44" name="End Cell" type="Data"><subsheetid>4cbee4d2-707f-4ea2-9490-8f3cd719d5b7</subsheetid><display x="-195" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="725a1b54-7b8f-4231-850a-51e09269ccc9" name="Autocalculate" type="SubSheetInfo"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><narrative>Used to disable or enable the automatic calculation feature of Excel. This can be used to address latency in Excel when updating the value of cells that impact calculations.</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="77d672a9-ba1d-49f0-8189-de32ad1b1d12" name="End" type="End"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><loginhibit /><display x="60" y="0" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this may contain additional information." stage="Error Message" /></outputs></stage><stage stageid="635a4c6c-8532-4072-8d1e-c39076d639e5" name="Handle" type="Data"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="39c935f9-fbe2-40d0-aeb9-b96dfa9050ed" name="Workbook" type="Data"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0c178b25-8410-4953-9974-49fd1c5e901e" name="Start" type="Start"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="An integer that identifies the instance of Excel containing the workbook." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="flag" name="Enabled" narrative="Flag indicating whether automatic calculation should be enabled or not." stage="Enabled" /></inputs><onsuccess>08832292-d35e-42fe-9e7e-1bf5df3fcb28</onsuccess></stage><stage stageid="08832292-d35e-42fe-9e7e-1bf5df3fcb28" name="Autocalculate" type="Code"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="flag" name="Enabled" expr="[Enabled]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>77d672a9-ba1d-49f0-8189-de32ad1b1d12</onsuccess><code><![CDATA[Dim wb, excel As Object
Dim xlCalculationAutomatic As Integer = -4105
Dim xlCalculationManual As Integer = -4135
Success = True
Error_Message = ""

Try
	wb = GetWorkbook(Handle, Workbook)
	wb.Activate()
	excel = wb.Application
	If (Enabled) Then
		excel.Calculation = xlCalculationAutomatic
	Else
		excel.Calculation = xlCalculationManual
	End If

Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	wb = Nothing
	excel = Nothing

End Try]]></code></stage><stage stageid="3082b1a4-cae3-4f61-80a5-638565654cc9" name="Input" type="Block"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="456805c6-ff44-4404-928c-99978f685be8" name="Success" type="Data"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><display x="-120" y="90" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fd0e817-4c54-432a-bab8-d7c4489af397" name="Error Message" type="Data"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><display x="-120" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0cefe998-0eba-4eaa-9353-77980a994bb3" name="Output" type="Block"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><loginhibit /><display x="-195" y="60" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="4e9cccc8-30d7-4a41-9a37-77705d6394e1" name="Local Data" type="Block"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="7e299320-3d02-4cae-9288-7fe0382eeb35" name="Enabled" type="Data"><subsheetid>89fcf96f-29b4-4541-9afd-111eb51cb2af</subsheetid><display x="-120" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0ea37f3f-a375-452e-ae4d-a22ebabac4c6" name="Text to Columns" type="SubSheetInfo"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><narrative>Parses a column of cells that contain text into several destination columns.</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="31890884-103b-45b0-98cf-97fa70cd824c" name="End" type="End"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="45" y="195" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the actions." stage="Success" /><output type="text" name="Error Message" narrative="If the action failed, this may contain additional information about the failure." stage="Error Message" /></outputs></stage><stage stageid="abff826d-153c-429d-862e-644c04b415fb" name="Start" type="Start"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="45" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The numeric identifier of the specific instance of Excel." stage="Handle" /><input type="text" name="Source Workbook" narrative="The name of the workbook that contains the source worksheet." stage="Source Workbook" /><input type="text" name="Source Worksheet" narrative="The name of the worksheet that contains the source data column." stage="Source Worksheet" /><input type="text" name="Source Range" narrative="The range of the source column of data." stage="Source Range" /><input type="text" name="Destination Workbook" narrative="Optional. The name of the workbook that contains the destination worksheet where the new columns should be created." stage="Destination Workbook" /><input type="text" name="Destination Worksheet" narrative="Optional. The name of the worksheet where the new columns will be created." stage="Destination Worksheet" /><input type="text" name="Destination Range" narrative="Optional. The range of the destination columns where the parsed data will be stored." stage="Destination Range" /><input type="number" name="Source Format" narrative="Optional. A number that indicates the format of the text to be split into columns. Supported values include 1 = Delimited or 2 = Fixed Width. Default value is 1." stage="Source Format" /><input type="number" name="Text Qualifier" narrative="Optional. A number that specifies whether to use single, double, or no quotes as the text qualifier. Support values include 1 = Double Quotes, 2 = Single Quote, or 0 = No delimiter. Default value is 1." stage="Text Qualifier" /><input type="flag" name="Consecutive Delimiter" narrative="Optional. True to have Excel consider consecutive delimiters as one delimiter. The default value is False." stage="Consecutive Delimiter" /><input type="flag" name="Tab Delimiter" narrative="Optional. True to have DataType be xlDelimited and to have the tab character be a delimiter. The default value is False." stage="Tab Delimiter" /><input type="flag" name="Semicolon Delimiter" narrative="Optional. True to have DataType be xlDelimited and to have the semicolon be a delimiter. The default value is False." stage="Semicolon Delimiter" /><input type="flag" name="Comma Delimiter" narrative="Optional. True to have DataType be xlDelimited and to have the comma be a delimiter. The default value is False." stage="Comma Delimiter" /><input type="flag" name="Space Delimiter" narrative="Optional. True to have DataType be xlDelimited and to have the space character be a delimiter. The default value is False." stage="Space Delimiter" /><input type="flag" name="Other Delimiter" narrative="Optional. True to have DataType be xlDelimited and to have the character specified by the OtherChar argument be a delimiter. The default value is False." stage="Other Delimiter" /><input type="text" name="Other Character" narrative="Optional unless 'Other Delimiter' is True; the delimiter character when Other is True. If more than one character is specified, only the first character of the string is used; the remaining characters are ignored." stage="Other Character" /><input type="text" name="Field Info" narrative="Optional. An array containing parse information for the individual columns of data. The interpretation depends on the value of DataType." stage="Field Info" /><input type="text" name="Decimal Separator" narrative="Optional. The decimal separator that Microsoft Excel uses when recognizing numbers. The default setting is the system setting." stage="Decimal Separator" /><input type="text" name="Thousands Separator" narrative="Optional. The thousands separator that Excel uses when recognizing numbers. The default setting is the system setting." stage="Thousands Separator" /><input type="flag" name="Trailing Minus Numbers" narrative="Optional. Numbers that begin with a minus character." stage="Trailing Minus Numbers" /></inputs><onsuccess>f517ef25-1014-40d2-9db9-8678081ac488</onsuccess></stage><stage stageid="e9f3f454-f7f5-45f0-962a-be019b920433" name="Text to Columns" type="Code"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="45" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="sourceWorkbook" expr="[Source Workbook]" /><input type="text" name="sourceWorksheet" expr="[Source Worksheet]" /><input type="text" name="sourceRange" expr="[Source Range]" /><input type="text" name="destinationWorkbook" expr="[Destination Workbook]" /><input type="text" name="destinationWorksheet" expr="[Destination Worksheet]" /><input type="text" name="destinationRange" expr="[Destination Range]" /><input type="number" name="sourceFormat" expr="[Source Format]" /><input type="number" name="textQualifier" expr="[Text Qualifier]" /><input type="flag" name="consecutiveDelimiter" expr="[Consecutive Delimiter]" /><input type="flag" name="tabDelimiter" expr="[Tab Delimiter]" /><input type="flag" name="semicolonDelimiter" expr="[Semicolon Delimiter]" /><input type="flag" name="commaDelimiter" expr="[Comma Delimiter]" /><input type="flag" name="spaceDelimiter" expr="[Space Delimiter]" /><input type="flag" name="otherDelimiter" expr="[Other Delimiter]" /><input type="text" name="otherCharacter" expr="[Other Character]" /><input type="text" name="fieldInfo" expr="[Field Info]" /><input type="text" name="decimalSeparator" expr="[Decimal Separator]" /><input type="text" name="thousandsSeparator" expr="[Thousands Separator]" /><input type="flag" name="trailingMinusNumbers" expr="[Trailing Minus Numbers]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>31890884-103b-45b0-98cf-97fa70cd824c</onsuccess><code><![CDATA[Dim sourceWS, destinationWS  As Object
Dim sourceRNG, destinationRNG As Object

' Convert the FieldInfo string into a two dimensional array of integers.
Dim fieldInfoArray As Object = Nothing
If (FieldInfo.Trim().Length > 0) Then
	Dim pattern As String = "(\s*\d+,\s*\d+)"
	Dim tempArray(1, Regex.Matches(FieldInfo, pattern).Count - 1) As Integer
	Dim index As Integer = 0
	For Each i As Match In Regex.Matches(FieldInfo, pattern)
		Dim numArray As String() = Strings.Split(i.Value, ",")
		Dim pos As Integer = Convert.ToInt32(numArray(0))
		Dim format As Integer = Convert.ToInt32(numArray(1))
		tempArray(index, 0) = pos
		tempArray(index, 1) = format
		index += 1
	Next
	fieldInfoArray = tempArray
End If

' We perform this initial set in order to get around a stupid error the compiler throws up about the variable being used before it's set.
destinationRNG = Nothing

Try
	sourceWS = GetWorksheet(Handle, sourceWorkbook, sourceWorksheet)
	sourceRNG = sourceWS.Range(sourceRange)

	If (Len(Trim(destinationRange)) > 0) Then
		destinationWS = GetWorksheet(Handle, destinationWorkbook, destinationWorksheet)
		destinationRNG = destinationWS.Range(destinationRange)
	End If

	sourceRNG.TextToColumns(Destination:= IIf (Not destinationRNG Is Nothing, destinationRNG, Type.Missing), 
		ConsecutiveDelimiter:=consecutiveDelimiter, 
		DataType:=sourceFormat, 
		TextQualifier:=textQualifier, 
		Tab:=tabDelimiter, 
		Semicolon:=semicolonDelimiter, 
		Comma:=commaDelimiter, 
		Space:=spaceDelimiter, 
		Other:=otherDelimiter,
		OtherChar:= IIf (otherDelimiter = True, otherCharacter, Type.Missing),
		FieldInfo:= IIf (Not fieldInfoArray Is Nothing, fieldInfoArray, Type.Missing),
		DecimalSeparator:= IIf (Len(Trim(decimalSeparator)) > 0, decimalSeparator, Type.Missing),
		ThousandsSeparator:= IIf (Len(Trim(thousandsSeparator)) > 0, thousandsSeparator, Type.Missing),
		TrailingMinusNumbers:=trailingMinusNumbers)

	Success = True

Catch e As Exception
	Success = False
	Error_Message = e.Message
Finally
	sourceRNG = Nothing
	destinationRNG = Nothing
	sourceWS = Nothing
	destinationWS = Nothing
End Try]]></code></stage><stage stageid="2389d5c2-7b7c-4bf1-80bf-65aa642c101b" name="Handle" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f5f6bf4c-e029-4a97-be88-60271308dedc" name="Input" type="Block"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="-435" y="-75" w="390" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="09049c7d-5d09-49a0-ac66-1ba7ca4ba603" name="Output" type="Block"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="-195" y="180" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="269b919e-9208-475e-904c-033599d08a6f" name="Local Data" type="Block"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="-195" y="285" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="9d0b33d9-884e-42a7-8f57-1a1299e4cb8f" name="Success" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="-120" y="210" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f514a70-e8f7-46b3-bcb0-a80328465623" name="Error Message" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="-120" y="240" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b15cd706-acf0-4018-851d-96f87b2fd80a" name="Source Workbook" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-120" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="acfa116c-550a-4815-99ef-86593f87567b" name="Source Worksheet" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-120" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7001e9da-7880-47e7-b6a5-2eab7e6d1bdb" name="Destination Workbook" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="761a5f30-e213-402f-896e-f273eaaec378" name="Destination Worksheet" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-120" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="db05fabf-5a61-43db-874b-a8c14ace59ca" name="Source Format" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-240" y="-45" w="120" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="c367eb88-f695-48eb-ac78-da5b197415f8" name="Text Qualifier" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-360" y="-45" w="120" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="9b8e4fc2-6cf0-4c21-86d9-98e3c736419f" name="Consecutive Delimiter" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-360" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5b74fe7d-6df9-48e3-8d0e-cbca56ba1c60" name="Tab Delimiter" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-240" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="25392853-8e5e-47c4-8b0d-1e08c502bc10" name="Semicolon Delimiter" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-240" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="cfc0fcaa-ef4f-42b5-a4a0-b43ba8395317" name="Comma Delimiter" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-240" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="b0a145fa-6230-4692-ae91-96a16facc76f" name="Space Delimiter" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-240" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="58aaccc3-b5af-480a-ac1e-40cf8df083c9" name="Other Delimiter" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-240" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="1eb876ab-c463-4845-85f8-5c36d7f2ab29" name="Other Character" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-240" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1779517-b714-440f-9328-2ccf6d995f29" name="Field Info" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-360" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="405f619c-8580-401c-aa4a-58064d6cc58c" name="Decimal Separator" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-360" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14d8bca2-82b6-44e0-95b4-3a2895c83ccf" name="Thousands Separator" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-360" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0aa24acf-b631-4d16-b70d-fb121d849c39" name="Trailing Minus Numbers" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-360" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ba154756-0d98-4614-92dc-134d81bfab91" name="Source Range" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c8936ef7-7911-4920-a3af-4b34a3be6b3f" name="Destination Range" type="Data"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><display x="-120" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7765ee4-23fd-4eff-9f80-d3f160e4b4f9" name="Activate Source Workbook" type="SubSheet"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="45" y="75" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="[Source Workbook]" /></inputs><onsuccess>e9f3f454-f7f5-45f0-962a-be019b920433</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="f517ef25-1014-40d2-9db9-8678081ac488" name="Check Required Input" type="Decision"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="45" y="-45" w="120" h="30" /><decision expression="(Len(Trim([Source Workbook])) &gt; 0) AND (Len(Trim([Source Worksheet])) &gt; 0) AND (Len(Trim([Source Range])) &gt; 0)" /><ontrue>6d8692cc-f71b-4ec1-82be-47962d8555ba</ontrue><onfalse>7f4d1656-fc9a-4594-86a1-d2e9187de33f</onfalse></stage><stage stageid="7f4d1656-fc9a-4594-86a1-d2e9187de33f" name="Set Required Input Error Details" type="MultipleCalculation"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="180" y="-45" w="90" h="30" /><onsuccess>11e69e62-4c8c-497d-9f51-bff39cb34e7e</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Please review and correct your input. Values must be provided for 'Handle', 'Source Workbook', 'Source Worksheet', and 'Source Range'.&quot;" stage="Error Message" /></steps></stage><stage stageid="6d8692cc-f71b-4ec1-82be-47962d8555ba" name="Check Optional Numeric Input" type="Decision"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="45" y="15" w="120" h="30" /><decision expression="([Text Qualifier] &gt; -1 AND [Text Qualifier] &lt; 3) AND ([Source Format] &gt; 0 AND [Source Format] &lt; 3)" /><ontrue>c7765ee4-23fd-4eff-9f80-d3f160e4b4f9</ontrue><onfalse>86742c39-755a-4003-8366-63a22d9f9148</onfalse></stage><stage stageid="86742c39-755a-4003-8366-63a22d9f9148" name="Set Optional Input Error Details" type="MultipleCalculation"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="180" y="15" w="90" h="30" /><onsuccess>11e69e62-4c8c-497d-9f51-bff39cb34e7e</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Please review and correct your input. The value(s) entered for 'Source Format' and/or 'Text Qualifier' are not within the supported range.&quot;" stage="Error Message" /></steps></stage><stage stageid="11e69e62-4c8c-497d-9f51-bff39cb34e7e" name="Anchor4" type="Anchor"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="240" y="-15" w="10" h="10" /><onsuccess>1d4d6aaa-6224-4f25-af98-fda9c07f3cc3</onsuccess></stage><stage stageid="1d4d6aaa-6224-4f25-af98-fda9c07f3cc3" name="Anchor3" type="Anchor"><subsheetid>3f24f536-12d6-47ea-a894-656b1fe4903f</subsheetid><loginhibit /><display x="240" y="195" w="10" h="10" /><onsuccess>31890884-103b-45b0-98cf-97fa70cd824c</onsuccess></stage><stage stageid="3384c13b-5055-44ca-a146-28716fda6177" name="Set Value of Cells in Range" type="SubSheetInfo"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><narrative>Sets the value of the cells in the specified range.</narrative><display x="-165" y="-120" w="150" h="90" /></stage><stage stageid="8ed8575d-19be-42e8-aeb7-8040c39c81f7" name="Start" type="Start"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook" narrative="The name of the workbook that contains the worksheet and range of cells." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet that contains the range of cells to update." stage="Worksheet" /><input type="text" name="Range" narrative="The range of cells to be updated." stage="Range" /><input type="text" name="Value" narrative="The value to write to the cells in the range." stage="Value" /></inputs><onsuccess>ee6e00d9-d1de-45a8-9444-c8131cdaacd8</onsuccess></stage><stage stageid="f4d17e55-8e43-457c-bb41-f56d89ac16ed" name="End" type="End"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><loginhibit /><display x="15" y="15" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error is encountered, this may contain additional information about the error." stage="Error Message" /></outputs></stage><stage stageid="ee6e00d9-d1de-45a8-9444-c8131cdaacd8" name="Set Value of Cells in Range" type="Code"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="wbName" expr="[Workbook]" /><input type="text" name="wsName" expr="[Worksheet]" /><input type="text" name="rangeRef" expr="[Range]" /><input type="text" name="value" expr="[Value]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="errorMsg" stage="Error Message" /></outputs><onsuccess>f4d17e55-8e43-457c-bb41-f56d89ac16ed</onsuccess><code><![CDATA[Dim ws, range As Object

' Initialize output.
success = true
errorMsg = ""

Try
	ws = GetWorksheet(handle, wbName, wsName)
	range = ws.Range(rangeRef)

	For Each c As Object In range.Cells
		c.Value = value
	Next
	
Catch ex As Exception
	success = False
	errorMsg = ex.Message

Finally
	range = Nothing
	ws = Nothing

End Try
]]></code></stage><stage stageid="4bdfbecb-422c-40c3-b051-604b159256dd" name="handle" type="Data"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><display x="-165" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="5c4fb658-c36f-4683-bc0c-9d76a4466ff7" name="Range" type="Data"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><display x="-165" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="31a40f6f-b921-4da4-b572-6d424e86eb11" name="Value" type="Data"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><display x="-165" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6890df2-34a0-4ec0-9012-c45401a7ae59" name="Workbook" type="Data"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><display x="-165" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1a2c8e3-2ca4-4876-aadb-b59935130dbe" name="Worksheet" type="Data"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><display x="-165" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ab5edd88-ff7f-4a67-9a5e-20be3481dbb4" name="Success" type="Data"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><display x="-165" y="165" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e2eac952-c58b-47e4-9344-56fc760793b8" name="Error Message" type="Data"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><display x="-165" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3bb7233a-f7bb-4b20-a31a-eec93fb273a4" name="Input" type="Block"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><loginhibit /><display x="-240" y="-60" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ba03f544-e061-4c9c-8dbc-22859a6eb140" name="Output" type="Block"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><loginhibit /><display x="-240" y="135" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="87fdfd00-68f6-4f9f-95cd-c8b9fb922ac6" name="Local Data" type="Block"><subsheetid>2515fa45-d11d-4317-b6cb-6941183e0b6b</subsheetid><loginhibit /><display x="-240" y="240" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="96d7d265-099f-489c-ad91-ddb3c7ed4403" name="Merge Cells" type="SubSheetInfo"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><narrative>Merge the specified range of cells into one.

WARNING: Merging cells only keeps the upper-left value and discards other values.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="fe5a4211-a9b1-4b88-877a-35b16aeab7eb" name="Start" type="Start"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook" narrative="The name of the workbook that contains the worksheet and range of cells." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet that contains the range of cells to merge." stage="Worksheet" /><input type="text" name="Range" narrative="The range of cells to be merged." stage="Range" /></inputs><onsuccess>6605554a-15a3-4e33-80ec-aa1815d2ca38</onsuccess></stage><stage stageid="3940f2d3-dafc-496f-b5c6-d6dc6b43b47e" name="handle" type="Data"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7e9b6f4e-b863-406d-aae5-ec06144bf8fd" name="Workbook" type="Data"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2acc2789-59b9-4165-acc2-6cd201c48634" name="Worksheet" type="Data"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a4566c6-01a0-4d85-a313-d5472bd697da" name="Range" type="Data"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1f4923d-0b78-495c-9c28-17ce2252be22" name="Success" type="Data"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><display x="-195" y="150" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="755227c4-90df-4119-b4b5-1e966ed6c8a9" name="Error Message" type="Data"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><display x="-195" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8477b7fd-fb62-450a-a4aa-300a0e4e4d81" name="Input" type="Block"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="49079d73-8d91-4642-9cf8-5e7acace5330" name="Output" type="Block"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="a3ee552b-5c05-4393-a5b9-3d8d76ff1326" name="Local Data" type="Block"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><loginhibit /><display x="-270" y="225" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="6605554a-15a3-4e33-80ec-aa1815d2ca38" name="Merge Cells" type="Code"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="wbName" expr="[Workbook]" /><input type="text" name="wsName" expr="[Worksheet]" /><input type="text" name="rangeRef" expr="[Range]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="text" name="errorMsg" stage="Error Message" /></outputs><onsuccess>1fa412f1-0ad4-42a9-88a1-94e13887541a</onsuccess><code><![CDATA[Dim ws As Object
Dim wb as Object = GetWorkbook(handle, wbName)
Dim app as Object = wb.Application

' Initialize output.
success = true
errorMsg = ""

Try
	ws = GetWorksheet(handle, wbName, wsName)
	ws.Activate()

	app.DisplayAlerts = False
	ws.Range(rangeRef).Merge
	app.DisplayAlerts = True

Catch ex As Exception
	success = False
	errorMsg = ex.Message

Finally
	app = Nothing
	ws = Nothing
	wb = Nothing

End Try
]]></code></stage><stage stageid="1fa412f1-0ad4-42a9-88a1-94e13887541a" name="End" type="End"><subsheetid>36a8fb06-38cb-48cd-a2d3-e86aa1feb062</subsheetid><loginhibit /><display x="15" y="15" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error is encountered, this may contain additional information about the error." stage="Error Message" /></outputs></stage><stage stageid="dc8d388e-ec05-4d7b-9e5e-c0a912071c0d" name="Encoding" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>number</datatype><initialvalue>1252</initialvalue><private /><alwaysinit /></stage><stage stageid="77c60097-f610-4092-ac04-702df9bc03d2" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="-255" y="-15" /><decision expression="[Timeout]&gt;=10" /><ontrue>52c31124-7463-40b9-8d24-9ffebe12e167</ontrue><onfalse>beb69159-e29a-439b-9627-2a8e0cf505c6</onfalse></stage><stage stageid="beb69159-e29a-439b-9627-2a8e0cf505c6" name="Invalid Timeout" type="Exception"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-120" y="-15" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="881471f2-60a8-496c-a7bb-061f5b4fee56" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="15" y="-180" /><decision expression="[Timeout]&gt;=10" /><ontrue>9e0df7e0-ab34-4a97-9f69-db66c88ff5f4</ontrue><onfalse>5857c1c0-8416-47d5-a20d-e5232f9fd00f</onfalse></stage><stage stageid="5857c1c0-8416-47d5-a20d-e5232f9fd00f" name="Invalid Timeout" type="Exception"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="150" y="-180" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="4bdf7ada-ff18-4eed-9f46-3240faaaac65" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="15" y="-135" /><decision expression="[Timeout]&gt;=10" /><ontrue>ab6f627b-d630-4bdd-b840-7aac26b5806f</ontrue><onfalse>a3a21ee9-f1f8-4f2b-b364-d182d1a24282</onfalse></stage><stage stageid="a3a21ee9-f1f8-4f2b-b364-d182d1a24282" name="Invalid Timeout" type="Exception"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="150" y="-135" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="d222e8b3-0deb-428a-9231-161fe8d2167e" name="Timeout" type="Data"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-195" y="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="219d05b8-5f6e-40a8-9305-f08edb637792" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="-30" y="-150" /><decision expression="[Timeout]&gt;=10" /><ontrue>9dbc3256-ac5d-4bb3-880c-a4aaaaf33bc5</ontrue><onfalse>49945688-8c17-40cd-a5f2-8adfff1be320</onfalse></stage><stage stageid="49945688-8c17-40cd-a5f2-8adfff1be320" name="Invalid Timeout" type="Exception"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><display x="105" y="-150" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&gt;=10" /></stage><stage stageid="86673c4b-ea74-4c51-aae2-1069c4fd639c" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="15" y="-210" /><decision expression="[Timeout]&gt;=10" /><ontrue>b06ec4ea-540a-4321-a1f9-a645f288eb9e</ontrue><onfalse>b7c49f40-9903-4eb8-a07d-b1f49a51ee18</onfalse></stage><stage stageid="b7c49f40-9903-4eb8-a07d-b1f49a51ee18" name="Invalid Timeout" type="Exception"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="150" y="-210" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="a3000589-df5e-4c49-98e3-ee641b9e997a" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="15" y="-300" /><decision expression="[Timeout]&gt;=10" /><ontrue>a08aa147-8eee-4f21-a683-142cb1680af6</ontrue><onfalse>dea8dffa-a449-49e0-a44b-5df38c5847f4</onfalse></stage><stage stageid="dea8dffa-a449-49e0-a44b-5df38c5847f4" name="Invalid Timeout" type="Exception"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="150" y="-300" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="83cf0bf5-da78-448f-bb3a-f5184c0afcde" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="15" y="-150" /><decision expression="[Timeout]&gt;=10" /><ontrue>7fa4c0ab-6c38-4a55-915a-48e7ce529979</ontrue><onfalse>e8feec42-2a0f-4b5d-bc66-0ac0fd06afa3</onfalse></stage><stage stageid="e8feec42-2a0f-4b5d-bc66-0ac0fd06afa3" name="Invalid Timeout" type="Exception"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="150" y="-150" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="6c313d7f-4b28-4078-b01c-56353f9836bf" name="Timeout" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-195" y="150" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="fd8a42eb-d770-43de-8865-4ed77dcfd229" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="-15" y="-120" /><decision expression="[Timeout]&gt;=10" /><ontrue>ec111fc5-c308-4507-8b78-8fa3a8cfa136</ontrue><onfalse>235aa72a-0499-432a-ba00-6a435fb2ade7</onfalse></stage><stage stageid="235aa72a-0499-432a-ba00-6a435fb2ade7" name="Invalid Timeout" type="Exception"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="120" y="-120" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="0765a6a0-7841-4acc-b5db-3594af9c5549" name="Timeout" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="6bf2f1a9-5017-4f48-8eeb-dc0866f9a0c3" name="Timeout" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue>30</initialvalue><private /><alwaysinit /></stage><stage stageid="cd62beef-12a7-445d-a0e7-80705347fe60" name="Timeout &gt;= 10 seconds" type="Decision"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="60" y="-150" /><decision expression="[Timeout]&gt;=10" /><ontrue>4a719c51-85b9-4750-9593-bf0e3166edfc</ontrue><onfalse>9483016e-3e69-443b-afb5-49659da21945</onfalse></stage><stage stageid="9483016e-3e69-443b-afb5-49659da21945" name="Invalid Timeout" type="Exception"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="195" y="-150" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="db3a97bd-7915-4a52-8aba-8a5897f95dc2" name="Timeout &gt;=10 seconds" type="Decision"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><narrative>Is the timeout value greater than or equal to 10 </narrative><display x="-15" y="-135" /><decision expression="[Timeout]&gt;=10" /><ontrue>ba67509b-7301-4ce1-a467-e9970249b392</ontrue><onfalse>ecc13e10-a645-40ae-bbda-cb9176a93c64</onfalse></stage><stage stageid="ecc13e10-a645-40ae-bbda-cb9176a93c64" name="Invalid Timeout" type="Exception"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="120" y="-135" w="90" h="30" /><exception localized="yes" type="Invalid Timeout Value" detail="[Timeout]&lt;10" /></stage><stage stageid="b3c74574-e6dd-45a4-8226-1da4c7050b53" name="Timeout" type="Data"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><display x="-195" y="-15" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd70916e-fcf9-418d-9aba-edb540f69191" name="Timeout" type="Data"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><display x="-285" y="15" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cf41fa12-e7b1-464b-803d-05b9df2b3f78" name="Create Pivot Table" type="SubSheetInfo"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><narrative>Creates a pivot table in existing or new worksheet from defined source data range. Applies name to pivot table for future manipulation</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ff60d64a-fcf8-45fd-b92d-ed522cbd14e9" name="End" type="End"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="-45" y="75" /></stage><stage stageid="08322a76-65a7-471a-92d2-e563704d78e4" name="Handle" type="Data"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc49bc05-13a4-462d-b20f-fb94d1e9e2fa" name="Workbook" type="Data"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de50542a-9263-4031-a90b-1634b680073c" name="Worksheet" type="Data"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="69d0e81d-186f-432a-9171-0f72d58d6c2b" name="Start" type="Start"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="-45" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="flag" name="New Worksheet" stage="New Worksheet" /><input type="text" name="Placement Cell" stage="Placement Cell" /><input type="text" name="Source Data Range" stage="Range" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /></inputs><onsuccess>5c9a96fd-e4f7-4283-8f7a-954f59b2cc96</onsuccess></stage><stage stageid="55424919-f92e-4030-8dd4-ee8a7bc18306" name="Create Pivot Table - New Worksheet" type="Code"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="-45" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="PlacementCell" expr="[Placement Cell]" /></inputs><onsuccess>ff60d64a-fcf8-45fd-b92d-ed522cbd14e9</onsuccess><code><![CDATA[Dim wb, ws, NewSheet As Object

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()

NewSheet = wb.Sheets.Add()

wb.PivotCaches.Create(SourceType:=1, SourceData:= ws.Range(Range)).CreatePivotTable(TableDestination:= NewSheet.Range(PlacementCell), TableName:= PivotTableName)]]></code></stage><stage stageid="fb5eff3b-358c-4a17-bd20-e041c2510483" name="New Worksheet" type="Data"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43d7423b-e4a2-48eb-adcf-3496d5732ca4" name="Placement Cell" type="Data"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">A1</initialvalue><private /><alwaysinit /></stage><stage stageid="6e049d0a-2f70-4023-8ff0-d67627589766" name="Create Pivot Table - Existing Worksheet" type="Code"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="60" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="PlacementCell" expr="[Placement Cell]" /></inputs><onsuccess>cbe5941a-b54f-40e4-aee7-e46ffbdf2567</onsuccess><code><![CDATA[Dim wb, ws As Object

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()

wb.PivotCaches.Create(SourceType:=1, SourceData:= ws.Range(Range)).CreatePivotTable(TableDestination:= ws.Range(PlacementCell), TableName:= PivotTableName)]]></code></stage><stage stageid="5c9a96fd-e4f7-4283-8f7a-954f59b2cc96" name="New Worksheet" type="Decision"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="-45" y="-45" /><decision expression="[New Worksheet]" /><ontrue>55424919-f92e-4030-8dd4-ee8a7bc18306</ontrue><onfalse>36c5f46f-aa39-4f5f-a017-743ad2769378</onfalse></stage><stage stageid="36c5f46f-aa39-4f5f-a017-743ad2769378" name="Anchor3" type="Anchor"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="60" y="-45" w="10" h="10" /><onsuccess>6e049d0a-2f70-4023-8ff0-d67627589766</onsuccess></stage><stage stageid="cbe5941a-b54f-40e4-aee7-e46ffbdf2567" name="End" type="End"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="60" y="75" /></stage><stage stageid="a1988233-67a9-434d-86c3-8112551de966" name="Range" type="Data"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c99553c-0805-4c5b-b396-b6ac6b64c58d" name="Pivot Table Name" type="Data"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c163343c-7046-41cf-b720-d7b883a4a38b" name="Add Columns to Pivot Table" type="SubSheetInfo"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><narrative>Add field to Columns construct of pivot tables</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="62603bfe-edff-4454-bf56-1945f29e8e10" name="End" type="End"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><loginhibit /><display x="-45" y="30" /></stage><stage stageid="1665f829-d3a5-4e3f-b710-ff4d98f98c08" name="Add Columns" type="Code"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><loginhibit /><display x="-45" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="Field" expr="[Field]" /><input type="number" name="Position" expr="[Position]" /></inputs><onsuccess>62603bfe-edff-4454-bf56-1945f29e8e10</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

With ws.PivotTables(PivotTableName).PivotFields(Field)
	.Orientation = 2
	.Position = Position
End With]]></code></stage><stage stageid="f9051438-d0d0-4898-a798-be726f0650c7" name="Handle" type="Data"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="419cf64a-b5b0-43a7-9b90-e6226c2613ee" name="Workbook" type="Data"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb73eff4-7535-4140-8b72-3d5125986997" name="Worksheet" type="Data"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4e9b587-f1ab-4b56-ad1a-a17be841c6fc" name="Start" type="Start"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><loginhibit /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /><input type="text" name="Field Name" stage="Field" /><input type="number" name="Position" stage="Position" /></inputs><onsuccess>1665f829-d3a5-4e3f-b710-ff4d98f98c08</onsuccess></stage><stage stageid="3c00bfc4-5662-4bdb-ad37-d368449de450" name="Pivot Table Name" type="Data"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5fc81cd2-2862-4af5-8f82-4ab6e793088e" name="Field" type="Data"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd889bd8-63cd-40bd-a90a-11483ebb9be1" name="Position" type="Data"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c8c9a18a-c787-4ac8-9e6a-94efaf994834" name="Input" type="Block"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="9510c231-3b18-4e22-ae54-3327cbdde8ed" name="Output" type="Block"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><loginhibit /><display x="-270" y="180" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="4b69264d-e9dc-4829-9f35-9a16e2a81257" name="Local Data" type="Block"><subsheetid>f34a2620-a7e1-44fc-9f69-2b85749540b1</subsheetid><loginhibit /><display x="-270" y="255" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="2654d22d-4479-45d6-805d-c9809bd4e25c" name="Add Criteria to Page Field Filter for Pivot Table" type="SubSheetInfo"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><narrative>Add filter criteria to page filter in pivot table construct</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0a78af2e-f3de-41b1-b0e7-9c041b7b6a45" name="End" type="End"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><loginhibit /><display x="-30" y="30" /></stage><stage stageid="859b40c3-78ed-42be-88e9-c312e20ea0ff" name="Add Criteria to PT" type="Code"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><loginhibit /><display x="-30" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="Criteria" expr="[Criteria]" /><input type="text" name="Field" expr="[Field]" /></inputs><onsuccess>0a78af2e-f3de-41b1-b0e7-9c041b7b6a45</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

ws.PivotTables(PivotTableName).PivotFields(Field).CurrentPage = Criteria]]></code></stage><stage stageid="e6ef9481-7ef4-4b47-97ca-bbf9c1cdf1ad" name="Handle" type="Data"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a39c216-f823-4d79-8bcc-6129f5f7fcbe" name="Workbook" type="Data"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9042a20d-bb46-4fda-8e68-b96c3099f967" name="Worksheet" type="Data"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18e8c289-7309-4e1a-aa5c-dba52acc29d8" name="Start" type="Start"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><loginhibit /><display x="-30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /><input type="text" name="Field" stage="Field" /><input type="text" name="Criteria" stage="Criteria" /></inputs><onsuccess>859b40c3-78ed-42be-88e9-c312e20ea0ff</onsuccess></stage><stage stageid="9b5e17d8-5175-425b-88ed-e56f200215e6" name="Pivot Table Name" type="Data"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b67e9abb-d4ed-4075-a1f3-f8f454642192" name="Criteria" type="Data"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd07d7bc-f1e6-40ea-aed4-bbd73da068d9" name="Field" type="Data"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1a19d4c9-c968-4717-a41c-fd47f48a0d8f" name="Input" type="Block"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1f0ef04a-3376-47ad-94f1-c113da8edc78" name="Output" type="Block"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><loginhibit /><display x="-270" y="180" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="83e0f835-7467-41e7-a4f9-eba5fe1f8da9" name="Local Data" type="Block"><subsheetid>3e571153-3704-4ebc-a8f7-ba8a54720a4a</subsheetid><loginhibit /><display x="-270" y="255" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="ce9405ae-ffdd-4b22-9b74-15903ea7bcd6" name="Add Page Field to Pivot Table" type="SubSheetInfo"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><narrative>Add field to Filters construct of pivot table</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="093c9ae9-e254-4fec-bf9e-60a6394d76f3" name="End" type="End"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="42b31f6b-dcfb-4131-aa32-8d4a0937bfc8" name="Add Page Field" type="Code"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="Field" expr="[Field]" /><input type="number" name="Position" expr="[Position]" /></inputs><onsuccess>093c9ae9-e254-4fec-bf9e-60a6394d76f3</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

With ws.PivotTables(PivotTableName).PivotFields(Field)
	.Orientation = 3
	.Position = Position
End With]]></code></stage><stage stageid="4d10791d-37f1-4962-be69-ef8b12f83112" name="Handle" type="Data"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d32f00f5-112a-4960-a6db-e41919633fce" name="Workbook" type="Data"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f689760a-b479-4d04-a3b0-5897a6b28df3" name="Worksheet" type="Data"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="00895de3-7ce0-40ff-a54b-98f5c294ee70" name="Start" type="Start"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /><input type="text" name="Field Name" stage="Field" /><input type="number" name="Position" stage="Position" /></inputs><onsuccess>42b31f6b-dcfb-4131-aa32-8d4a0937bfc8</onsuccess></stage><stage stageid="b730c48f-b11f-4c3e-b8f0-4583be9054b6" name="Pivot Table Name" type="Data"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="467d6376-6780-4bf4-9bf3-8505228f334d" name="Field" type="Data"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f30c96fd-6170-4a0f-9698-3a648a761ff5" name="Position" type="Data"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><display x="-120" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2014aacd-89d8-4206-ab01-38e97931aa1d" name="Input" type="Block"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d94dabf3-bc50-48ca-a6fa-2082ed25d440" name="Output" type="Block"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><loginhibit /><display x="-195" y="150" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="f6e9ba26-766c-4753-955d-feba1665e2b0" name="Local Data" type="Block"><subsheetid>e776b77e-ba8a-4476-a423-a758df1b7a14</subsheetid><loginhibit /><display x="-195" y="225" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="553e4374-4718-47a7-8364-a2b8f5b106e5" name="Add Row Labels to Pivot Table" type="SubSheetInfo"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><narrative>Add Field to Rows Section of Pivot Table configuration</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="146a4c40-a1e4-4d11-8c94-da61a38f432e" name="End" type="End"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="18a3b57c-ede0-4da8-adee-48e16e2fb729" name="Add Row Labels" type="Code"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="Field" expr="[Field]" /><input type="number" name="Position" expr="[Position]" /></inputs><onsuccess>146a4c40-a1e4-4d11-8c94-da61a38f432e</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

With ws.PivotTables(PivotTableName).PivotFields(Field)
	.Orientation = 1
	.Position = Position
End With]]></code></stage><stage stageid="1a01e9d1-76fa-4d7c-b379-2e6af0f78fdd" name="Handle" type="Data"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a47a2d1a-820e-408b-8fdc-263da4cb772f" name="Workbook" type="Data"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3717f076-e654-4b33-b4eb-8cab67d211de" name="Worksheet" type="Data"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d93faa59-036e-434a-ab93-7a17661793d1" name="Start" type="Start"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /><input type="text" name="Field Name" stage="Field" /><input type="number" name="Position" stage="Position" /></inputs><onsuccess>18a3b57c-ede0-4da8-adee-48e16e2fb729</onsuccess></stage><stage stageid="eba44603-930a-4141-975d-f7e632020f0e" name="Pivot Table Name" type="Data"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="36cbea9c-dab8-4fcb-8e0e-807b4327c4a6" name="Field" type="Data"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b29261c-38f8-496b-b584-77ca5f142b23" name="Position" type="Data"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><display x="-120" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8d839451-53f4-4973-95ec-2b13aa877092" name="Input" type="Block"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a3f863da-a10a-454e-90d8-ecec077a7ba3" name="Output" type="Block"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><loginhibit /><display x="-195" y="150" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="db0358c6-8958-4173-ab4d-078bd5280e67" name="Local Data" type="Block"><subsheetid>e4828db4-dcd4-49ac-9f50-9e19ef766270</subsheetid><loginhibit /><display x="-195" y="225" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="2d5dcf83-9a9f-4ecc-9c68-841b160c9742" name="Add Values to Pivot Table" type="SubSheetInfo"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><narrative>Add field to Values construct of pivot table</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="b162e48f-9852-4980-ae86-f1a105a52b0b" name="End" type="End"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="80c86800-81ca-46f5-9231-6af7d2f5cabf" name="Add Values" type="Code"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="Field" expr="[Field]" /><input type="number" name="Position" expr="[Position]" /></inputs><onsuccess>b162e48f-9852-4980-ae86-f1a105a52b0b</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

With ws.PivotTables(PivotTableName).PivotFields(Field)
	.Orientation = 4
	.Position = Position
End With]]></code></stage><stage stageid="6078a94d-dfb7-4f36-bf19-f017f6c6090e" name="Handle" type="Data"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2b386d3d-b0ce-49e3-8ec4-dff0ea0f126f" name="Workbook" type="Data"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e41034b2-479a-4b80-9300-68e3796cbc86" name="Worksheet" type="Data"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f96af88a-dd85-4383-a0c8-9b7005b23add" name="Start" type="Start"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /><input type="text" name="Field Name" stage="Field" /><input type="number" name="Position" stage="Position" /></inputs><onsuccess>80c86800-81ca-46f5-9231-6af7d2f5cabf</onsuccess></stage><stage stageid="854ca291-f37b-435a-bf3a-342a80b5561b" name="Pivot Table Name" type="Data"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a128fb59-9c69-4bf4-b5fa-6578f7357010" name="Field" type="Data"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1fd588e9-49f9-4112-9f58-9b0caa166c40" name="Position" type="Data"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><display x="-120" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b1e9f0a-ae70-4742-a07a-50fddd58efa1" name="Input" type="Block"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8e7ac7ce-e76f-45ed-9fae-8b976a6b0ba5" name="Output" type="Block"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><loginhibit /><display x="-195" y="150" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="e83f4f4e-fbb6-4cfc-955d-d7b0235079f2" name="Local Data" type="Block"><subsheetid>693ae5d5-9309-4b1a-8e20-e1fad3301537</subsheetid><loginhibit /><display x="-195" y="225" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="2c510926-88f5-4ed9-8928-1bff0e175b09" name="Amend Pivot Table Data Source" type="SubSheetInfo"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><narrative>Change the data source of a pivot table and refreshes it</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="0da27d6e-fd78-425c-9024-6aa60254a470" name="End" type="End"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="c9519478-46df-4d78-acf4-e63c933d5b54" name="Handle" type="Data"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df9d9223-a9de-4490-9a58-98feb1feb2f1" name="Workbook" type="Data"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ac991d80-ccd6-434b-bc8f-98e89ec0393b" name="Worksheet" type="Data"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fa15271e-cfb0-4bc4-80d3-bd129f518fb1" name="Start" type="Start"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Source Data Range" stage="Range" /><input type="text" name="Source Data Worksheet" stage="Data Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /></inputs><onsuccess>9a3366b1-136c-400d-8f06-c5813ca47273</onsuccess></stage><stage stageid="dc037063-2aab-48bb-bf94-13dc884241c1" name="Range" type="Data"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b479602-25e0-4089-b8a9-5431ae948dec" name="Pivot Table Name" type="Data"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><display x="-120" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a3366b1-136c-400d-8f06-c5813ca47273" name="Amend Pivot Table Data Source" type="Code"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="DataWorksheet" expr="[Data Worksheet]" /></inputs><onsuccess>0da27d6e-fd78-425c-9024-6aa60254a470</onsuccess><code><![CDATA[Dim wb, ws, wd As Object
Dim excel, sheet As Object
Dim rng As String

wb = GetWorkbook(Handle, Workbook)
wd = wb.Worksheets(DataWorksheet)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()

excel = wb.Application
sheet = excel.ActiveSheet

rng = sheet.Range(Range).Address(ReferenceStyle:=-4150)
rng = wd.Name & "!" & rng


ws.Activate()
sheet = excel.ActiveSheet
sheet.PivotTables(PivotTableName).SourceData = rng
sheet.PivotTables(PivotTableName).RefreshTable
'ws.PivotTables(PivotTableName).SourceData = rng
'ws.PivotTables(PivotTableName).RefreshTable]]></code></stage><stage stageid="3e55540e-793c-40a3-ba56-4efdffd80f46" name="Data Worksheet" type="Data"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0761d5a2-2dca-4329-8536-278ca653d065" name="Input" type="Block"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b5609609-f550-4084-b2aa-0aeb965e5d27" name="Output" type="Block"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><loginhibit /><display x="-195" y="150" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="b732db3f-c403-4392-a801-285aa6e343c7" name="Local Data" type="Block"><subsheetid>7f5467c9-fc00-4e1a-934a-2f9bc3c8332b</subsheetid><loginhibit /><display x="-195" y="225" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="4ac3a348-8de0-4a1a-b515-24902f704cd7" name="List Pivot Table Names" type="SubSheetInfo"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><narrative>List all pivot table names within worksheet</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="e128502e-f745-4bec-ab55-7883d6ef8d75" name="End" type="End"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><loginhibit /><display x="60" y="15" /><outputs><output type="collection" name="Pivot Tables" stage="Pivot Tables" /></outputs></stage><stage stageid="a4196844-5313-4c90-bf3b-a9bcce4379fa" name="Handle" type="Data"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd28231-3ce8-4ab0-a6a9-01223ffa5a35" name="Workbook" type="Data"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ca677690-0f55-4c61-b7cd-2d32cdec910d" name="Worksheet" type="Data"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="33933460-c0f2-4cf1-ba4c-baad17f39d18" name="Start" type="Start"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><loginhibit /><display x="60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>6cfb2dc6-6fea-4453-84bd-feeec389d72d</onsuccess></stage><stage stageid="6cfb2dc6-6fea-4453-84bd-feeec389d72d" name="List Pivot Tables" type="Code"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><loginhibit /><narrative>	Table.Rows.Add(pt.Name)</narrative><display x="60" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="collection" name="PivotTables" stage="Pivot Tables" /></outputs><onsuccess>e128502e-f745-4bec-ab55-7883d6ef8d75</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet As Object

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()

excel = ws.Application
sheet = excel.ActiveSheet

Dim Table As New DataTable
Table.Columns.Add("Name", GetType(String))

Dim pt as Object

For Each pt In wb.Worksheets(Worksheet).PivotTables
		Table.Rows.Add(pt.Name)
Next


PivotTables = Table]]></code></stage><stage stageid="bc01702c-4626-44ba-9b04-e8b5faa5ed89" name="Pivot Tables" type="Collection"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><display x="-120" y="90" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="702856ab-1dba-4495-a4a3-66f2760e64b4" name="Input" type="Block"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="88fd4e81-6e4e-499b-b23a-d137db441bef" name="Output" type="Block"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="-270" y="210" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="2f7019d4-d2a2-4742-b511-55d51e30ef81" name="Local Data" type="Block"><subsheetid>5b257bb9-b590-42a9-9e2f-7750668252e2</subsheetid><loginhibit /><display x="-270" y="285" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="0e7e7070-309b-4c4f-b45e-2ee4f07cac6d" name="Input" type="Block"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ce3b66c5-73b2-476a-a7b3-fe82258a6672" name="Output" type="Block"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><loginhibit /><display x="-195" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="81a745ff-6329-4057-af00-fa15a46d6990" name="Local Data" type="Block"><subsheetid>c8ae2169-fd46-4133-ac4d-5e0b2617eba5</subsheetid><loginhibit /><display x="-195" y="135" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="9307f554-feff-4ff6-bf37-b2607c5a7129" name="Remove Field from Pivot Table" type="SubSheetInfo"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><narrative>Removes field from pivot table construct (Sets to hidden)</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="7137ae27-3f3e-49c3-8ae3-8cbae15362e1" name="End" type="End"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="826fbfb5-8b59-4aad-9934-b01e72bed8f1" name="Handle" type="Data"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4c0a1e12-1206-4e51-9ffa-42703dafb1bd" name="Workbook" type="Data"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef082f4c-3a96-47c5-9898-e4c77de0a589" name="Worksheet" type="Data"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bebc7542-9f10-4ae4-9ec3-bf4922836e62" name="Start" type="Start"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /><input type="text" name="Field Name" stage="Field" /></inputs><onsuccess>09682b91-e9e9-4499-a99f-0df7cadba3a6</onsuccess></stage><stage stageid="b0025835-c228-43dd-8b23-84633c4bb3a5" name="Pivot Table Name" type="Data"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcae9827-f6a5-4b15-8439-f0e4b8154ae3" name="Field" type="Data"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09682b91-e9e9-4499-a99f-0df7cadba3a6" name="Remove Field from Pivot" type="Code"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /><input type="text" name="Field" expr="[Field]" /></inputs><onsuccess>7137ae27-3f3e-49c3-8ae3-8cbae15362e1</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

ws.PivotTables(PivotTableName).PivotFields(Field).Orientation = 0]]></code></stage><stage stageid="3a67c166-9da6-4f28-a651-c6897c1d77cb" name="Input" type="Block"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2407c057-79cb-4a99-a8cb-d8ad9e92ade4" name="Output" type="Block"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><loginhibit /><display x="-195" y="120" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="f8876809-06a9-4222-8579-8fefe2c0cdab" name="Local Data" type="Block"><subsheetid>bb78ea40-8f26-48ab-bae2-fbb6ad0e9ea4</subsheetid><loginhibit /><display x="-195" y="195" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="69cb92ed-7aad-4b04-bfd7-a4989c9a6390" name="Remove Pivot Table" type="SubSheetInfo"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><narrative>Removes pivot table from worksheet</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="ccd79bd6-1ab1-4fc1-b305-b1bad0edd09c" name="End" type="End"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="cf6aac10-cb61-418b-9db4-cd3035974e2c" name="Remove Pivot" type="Code"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /></inputs><onsuccess>ccd79bd6-1ab1-4fc1-b305-b1bad0edd09c</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

ws.PivotTables(PivotTableName).TableRange2.Clear]]></code></stage><stage stageid="c9beff2c-bbd9-4266-81b2-9521be366c76" name="Handle" type="Data"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c8ec1977-1c5a-44ea-8d81-e9420c4edec1" name="Workbook" type="Data"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4cfd13ec-e4a5-4dba-9148-7bbcb00e59f0" name="Worksheet" type="Data"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ab8dcbca-7165-4714-89c0-6c99b5f13eec" name="Start" type="Start"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /></inputs><onsuccess>cf6aac10-cb61-418b-9db4-cd3035974e2c</onsuccess></stage><stage stageid="3ce204d0-d9df-4913-af93-35e66f7cd2fe" name="Pivot Table Name" type="Data"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0a4dbfe3-8081-4ef5-823a-863b87b23ff1" name="Input" type="Block"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f9ab1bf1-e597-4736-8d85-17bdf367d07a" name="Output" type="Block"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="cd04c12e-97fa-4b45-8c41-1aac0f32d984" name="Local Data" type="Block"><subsheetid>8a04bea6-656a-4cda-8b78-130a55f9a0bc</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="690ebaf4-bc46-4a12-83eb-3dc1abd28b51" name="Font - Bold" type="SubSheetInfo"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><narrative>Bold font from provided cell or range of cells</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="026cfcca-a191-44f9-a642-8f60fbcbb648" name="End" type="End"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="2287b5a4-621a-4a0f-b270-fd6c542fb300" name="Handle" type="Data"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="547e6e81-cb2b-4400-87e6-9183a85008ad" name="Workbook" type="Data"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="39918769-1911-455a-b99e-28f27a33bfc7" name="Worksheet" type="Data"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cfe08f6a-697a-4748-8d69-4209e54e3540" name="Start" type="Start"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Range" stage="Range" /></inputs><onsuccess>fec6a6dd-79bd-451b-99c7-bfc1ef7723cb</onsuccess></stage><stage stageid="fec6a6dd-79bd-451b-99c7-bfc1ef7723cb" name="Bold" type="Code"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /></inputs><onsuccess>026cfcca-a191-44f9-a642-8f60fbcbb648</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

ws.Range(Range).Font.Bold = True]]></code></stage><stage stageid="12f6ef7a-87c2-4a3c-9485-846ac23d88ff" name="Range" type="Data"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c01ce5ff-23cd-41e5-8887-abdb296d693b" name="Input" type="Block"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="87019682-c1af-42df-94ab-7b3240e0644f" name="Output" type="Block"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="6f7b03fe-02a8-4b29-8d8c-e43aade14f16" name="Local Data" type="Block"><subsheetid>8e069f50-f85d-46c0-af8f-12fc0ed754bf</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="cf6bfe8e-b570-426a-8c23-27a29122a323" name="Font - Remove Bold" type="SubSheetInfo"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><narrative>Unbold font from provided cell or range of cells</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="ff07caea-f8be-4838-bc3a-d9171edb4e0b" name="End" type="End"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="f219f040-07f2-488a-bce7-49d465dfee55" name="Handle" type="Data"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f358f85-90fa-49c2-8ea1-aa5e9ca5b076" name="Workbook" type="Data"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2b97e408-043c-41b6-bf39-b18419e0fbff" name="Worksheet" type="Data"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f8b1908c-30f3-4ee8-9ea1-a5ddd36c62c0" name="Remove Bold" type="Code"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /></inputs><onsuccess>ff07caea-f8be-4838-bc3a-d9171edb4e0b</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)

ws.Activate()

ws.Range(Range).Font.Bold = False]]></code></stage><stage stageid="436d0895-cac7-4eff-a2e2-b551f265cc37" name="Start" type="Start"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Range" stage="Range" /></inputs><onsuccess>f8b1908c-30f3-4ee8-9ea1-a5ddd36c62c0</onsuccess></stage><stage stageid="3062f7ee-c829-493f-b1a4-2e75c55d6724" name="Range" type="Data"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8dfff9e9-bf0f-4e92-9b39-4961daada741" name="Input" type="Block"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="3dac0c07-afdc-43ba-82e7-801bc21144d8" name="Output" type="Block"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="e9a63093-9e7b-4420-b0cd-3d895e9455f0" name="Local Data" type="Block"><subsheetid>5a40fe34-dabd-45a5-9bc8-42e0db460f5e</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="eb0fff27-094f-4368-ade9-78bb6497619e" name="Copy Chart to Clipboard" type="SubSheetInfo"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><narrative>Copies an image of an Excel Chart to the Clipboard so that it can be pasted into another Office Object (Excel, Word, PowerPoint).</narrative><display x="-255" y="-60" w="330" h="120" /></stage><stage stageid="4a16f8e9-68d6-43ae-a4a2-58728e63e613" name="handle" type="Data"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><display x="-270" y="255" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7729d2e6-2c70-4ce6-8ad5-1e5a56f50ae3" name="Start" type="Start"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="Source Workbook" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="Source Worksheet" /><input type="text" name="Chart Name" stage="Chart Name" /></inputs><onsuccess>64687cee-3264-4ab7-9112-acd7c74cd7ae</onsuccess></stage><stage stageid="64687cee-3264-4ab7-9112-acd7c74cd7ae" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="15" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" expr="[handle]" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" expr="[Source Workbook]" /></inputs><onsuccess>253b772b-3e54-4207-8e3e-acc141df661f</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="0b0f1fa5-9d83-4483-a952-410e80de08a2" name="No Such Sheet" type="Exception"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><display x="165" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [Source Worksheet] &amp; &quot;' on the workbook '&quot; &amp; [Source Workbook] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="83cedc1a-bff8-4cc7-9aaf-0ca00a18c9b8" name="Source Workbook" type="Data"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><display x="-375" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a6a17c98-c1e3-4bb9-865d-8489ac018f67" name="Source Worksheet" type="Data"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><display x="-375" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9feca113-808a-45b0-88f9-a621f8c8498d" name="Chart Name" type="Data"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><display x="-375" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f15d82b7-1491-4c93-bf0d-8e5da17f28a1" name="Success" type="Data"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><display x="-180" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fdcc4cc1-4154-4403-bea0-5a9ba4852de8" name="Message" type="Data"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><display x="-180" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="253b772b-3e54-4207-8e3e-acc141df661f" name="Copy Chart" type="Code"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="15" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Chart Name" expr="[Chart Name]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>dee86630-3842-4057-ad92-4cda81c2b179</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, workbook, cells, cell As Object

Try

	sw = GetWorkbook(CInt(Handle), Source_Workbook)
	ss = GetWorksheet(CInt(Handle), Source_Workbook, Source_Worksheet)
	sw.Activate()
	ss.Activate()
	excel = ss.Application
	sheet = excel.ActiveSheet
	workbook = excel.ActiveWorkbook
	cell = excel.ActiveCell

	workbook.Charts(Chart_Name).CopyPicture (1, 2, 1)

	Success = True
	Message = Chart_Name & " successfully copied to clipboard"

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="4af4b5cb-fd20-4487-97de-cc4f82ec3854" name="Block1" type="Block"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="-75" y="-60" w="285" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="773cf087-0392-4657-8ead-633443534f33" name="Recover1" type="Recover"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="165" y="-30" /><onsuccess>867102c7-a4d6-47e3-9043-07aa1d2bd5b0</onsuccess></stage><stage stageid="867102c7-a4d6-47e3-9043-07aa1d2bd5b0" name="Resume1" type="Resume"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="165" y="45" /><onsuccess>0b0f1fa5-9d83-4483-a952-410e80de08a2</onsuccess></stage><stage stageid="dee86630-3842-4057-ad92-4cda81c2b179" name="End" type="End"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="15" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Was Operation Successful" stage="Success" /><output type="text" name="Message" narrative="Message (Success or Detailed Exception Msg)" stage="Message" /></outputs></stage><stage stageid="0bbe4ccb-d7ab-42ae-aceb-d4bab6b8c239" name="Input Variables" type="Block"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="-465" y="30" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="3ffb8aec-8b43-4eda-9fd1-cdeedd4ddd1e" name="Local Variables" type="Block"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="-360" y="225" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFFFF" /></stage><stage stageid="22bf6252-7775-4027-866c-da7b464c03ab" name="Output Variables" type="Block"><subsheetid>f14b96b9-42a3-45e6-bf7b-285cb99d1bcf</subsheetid><loginhibit /><display x="-270" y="30" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="8b4d753e-f082-4ac0-8725-426bc8326fac" name="Draw Chart from Range" type="SubSheetInfo"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><narrative>Inserts a new Chart Sheet into the Active Workbook based on input range.</narrative><display x="-225" y="-105" w="270" h="90" /></stage><stage stageid="7aa8cd2b-05a8-40f8-b7c9-bcd306b3eb7a" name="End" type="End"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Was Operation Successful" stage="Success" /><output type="text" name="Message" narrative="Message (Success or Detailed Exception Msg)" stage="Message" /></outputs></stage><stage stageid="d5171f1c-810d-4524-a4e0-369012967f93" name="handle" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-270" y="180" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="80e6140a-b42e-4757-9f7d-f7a3308607ab" name="Start" type="Start"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="Source Workbook" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="Source Worksheet" /><input type="text" name="Worksheet Range" narrative="The starting and ending Cell Values for the Data to be charted (Example &quot;A1:D25&quot;" stage="Source Range" /><input type="number" name="Chart Type" narrative="This is a number indicating the Chart Type (List can be found at (https://docs.microsoft.com/en-us/office/vba/api/excel.xlcharttype)." stage="Chart Type" /><input type="text" name="Chart Name" narrative="The Name of the Chart.  The chart will be stored in a sheet with this name." stage="Chart Name" /></inputs><onsuccess>85242402-ae7b-46be-be21-e24a3457c242</onsuccess></stage><stage stageid="85242402-ae7b-46be-be21-e24a3457c242" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="15" y="-60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" expr="[handle]" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" expr="[Source Workbook]" /></inputs><onsuccess>cae7df5e-88c2-4dda-bca8-660f573f410b</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="9634e2a3-6158-4080-9a66-94c532de66ea" name="No Such Sheet" type="Exception"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="165" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [Source Worksheet] &amp; &quot;' on the workbook '&quot; &amp; [Source Workbook] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="a6c3ebda-5186-4a69-be74-e451b4fe46d8" name="Source Workbook" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-375" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Sample Revenue.xlsx</initialvalue><private /><alwaysinit /></stage><stage stageid="88f8a6ae-dd27-49cd-92c2-bc4c87f90be5" name="Source Worksheet" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-375" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Sheet1</initialvalue><private /><alwaysinit /></stage><stage stageid="aa495443-d802-4dda-b8e9-ef385902610f" name="Source Range" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-375" y="45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">A1:D2</initialvalue><private /><alwaysinit /></stage><stage stageid="f35a7a64-54e8-451f-8e1d-900a76c3f63f" name="Chart Name" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-375" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Revenue History</initialvalue><private /><alwaysinit /></stage><stage stageid="97911884-f082-4c1b-8a43-12a6f9261466" name="Chart Type" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-375" y="75" w="150" h="30" /><datatype>number</datatype><initialvalue>51</initialvalue><private /><alwaysinit /></stage><stage stageid="b8d5f941-5664-4edd-aac3-de8ed911f043" name="Success" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-180" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad53dbbe-d0b9-4367-823b-8dd01f332aad" name="Message" type="Data"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><display x="-180" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cae7df5e-88c2-4dda-bca8-660f573f410b" name="Draw Chart" type="Code"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="15" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Source Range" expr="[Source Range]" /><input type="text" name="Chart Name" expr="[Chart Name]" /><input type="number" name="Chart Type" expr="[Chart Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7aa8cd2b-05a8-40f8-b7c9-bcd306b3eb7a</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, workbook, cells, cell As Object

Try

	sw = GetWorkbook(CInt(Handle), Source_Workbook)
	ss = GetWorksheet(CInt(Handle), Source_Workbook, Source_Worksheet)
	sw.Activate()
	ss.Activate()
	excel = ss.Application
	sheet = excel.ActiveSheet
	workbook = excel.ActiveWorkbook
	cell = excel.ActiveCell

	Dim newChart = workbook.Sheets.Add(Type:=-4109)
	newChart.ChartType = Chart_Type
	newChart.SetSourceData(Source:=workbook.Sheets(Source_Worksheet).Range(Source_Range))
	newChart.Name = Chart_Name
	newChart.Move(After:=ss)

	Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="ba985912-bdfa-4197-87a6-68459d4def7d" name="Block1" type="Block"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="-75" y="-90" w="285" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ca97572a-a1d6-4cdd-91be-f97ef4a656db" name="Recover1" type="Recover"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="165" y="-60" /><onsuccess>7c4195b7-525e-44fa-b399-65a4806789a1</onsuccess></stage><stage stageid="7c4195b7-525e-44fa-b399-65a4806789a1" name="Resume1" type="Resume"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="165" y="15" /><onsuccess>9634e2a3-6158-4080-9a66-94c532de66ea</onsuccess></stage><stage stageid="b90e2700-b89e-4f2b-9ca3-b89504243c9e" name="Input Variables" type="Block"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="-465" y="-45" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="fd4645bc-3288-4c36-aff5-f44300ab73bb" name="Local Variables" type="Block"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="-360" y="150" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFFFF" /></stage><stage stageid="a0b1ca21-966b-4085-84b3-7dc8bd5ad06c" name="Output Variables" type="Block"><subsheetid>47c650bd-a9a2-4d1b-aaaa-3d34ab436fa6</subsheetid><loginhibit /><display x="-270" y="-45" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="94a6a697-4b00-4b44-a09d-bd6339e84d3c" name="Font - Lowercase" type="SubSheetInfo"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><narrative>Transform font case in cell or range of cells to lowercase</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="38b61baf-5790-48db-b0d7-91dda080e21e" name="End" type="End"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><loginhibit /><display x="15" y="15" /></stage><stage stageid="ad18c1e7-00b8-478f-9876-e29a86c7787b" name="Handle" type="Data"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d5ca2634-879d-4160-b0a0-ffdad29a760e" name="Workbook" type="Data"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><display x="240" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0c111883-ed92-46df-926e-a3642f02be8c" name="Worksheet" type="Data"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><display x="180" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1af9539c-f8c5-4eb5-8047-e7adff910703" name="Input Parameters" type="Block"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><loginhibit /><display x="75" y="-135" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="800080" /></stage><stage stageid="89ea75eb-54e9-4bac-8c5d-2e9d0f4cdde8" name="Start" type="Start"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Range" stage="Range" /></inputs><onsuccess>733efbb6-e3b6-4ea1-848b-23b5b2743b04</onsuccess></stage><stage stageid="4e5e3d5a-d0e6-4d9b-8600-1a57194c72db" name="Range" type="Data"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><display x="300" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="733efbb6-e3b6-4ea1-848b-23b5b2743b04" name="Lowercase" type="Code"><subsheetid>b4bda15a-3641-4358-a6d1-748f6db06fab</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /></inputs><onsuccess>38b61baf-5790-48db-b0d7-91dda080e21e</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet As Object

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()

excel = ws.Application
sheet = excel.ActiveSheet

Dim c As Object

For each c in ws.Range(Range)
	c.Value = LCase(c.value)
Next c]]></code></stage><stage stageid="8e4e0be8-b2e4-4b21-a033-6d971158b0ca" name="Font - Uppercase" type="SubSheetInfo"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><narrative>Transform font case in cell or range of cells to uppercase</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="79cac9f7-70f0-4615-b577-43660f9df030" name="End" type="End"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><loginhibit /><display x="15" y="15" /></stage><stage stageid="3255a254-0a9a-4cdb-a1b2-2353ba1dd7a7" name="Handle" type="Data"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><display x="105" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5e655db-2fbf-46df-a3f0-7689fe71adf1" name="Workbook" type="Data"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><display x="225" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54d3aa44-2f22-4394-959d-4cb9e24a51fa" name="Worksheet" type="Data"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><display x="165" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73ff140f-40a8-4966-a64a-67d370467eb4" name="Input Parameters" type="Block"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><loginhibit /><display x="60" y="-135" w="270" h="60" /><font family="Segoe UI" size="10" style="Regular" color="800080" /></stage><stage stageid="e5ae7b4e-3d28-4ebf-a1dc-69ca4d24ca3d" name="Start" type="Start"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Range" stage="Range" /></inputs><onsuccess>15976af6-8c14-4e11-9767-d30b7552ad6d</onsuccess></stage><stage stageid="2ba468bf-d101-4ed2-9142-a49bf1de3563" name="Range" type="Data"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><display x="285" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="15976af6-8c14-4e11-9767-d30b7552ad6d" name="Uppercase" type="Code"><subsheetid>f32cf2e8-7958-440b-a0f3-10d2c9fc5b18</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /></inputs><onsuccess>79cac9f7-70f0-4615-b577-43660f9df030</onsuccess><code><![CDATA[Dim wb, ws, excel, sheet As Object

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()

excel = ws.Application
sheet = excel.ActiveSheet

Dim c As Object

For each c in ws.Range(Range)
	c.Value = UCase(c.value)
Next c]]></code></stage><stage stageid="255cbf8a-f677-4678-90a8-14e26e4b946e" name="Save Chart as Image File" type="SubSheetInfo"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><narrative>Saves an image of a Chart to a file.</narrative><display x="-270" y="-105" w="330" h="90" /></stage><stage stageid="55580e7d-0637-4eb7-8fda-b2023880d01d" name="handle" type="Data"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><display x="-285" y="180" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1bf24107-23a7-4e9a-af44-892f226e6701" name="Start" type="Start"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="Source Workbook" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="Source Worksheet" /><input type="text" name="Chart Name" narrative="The name of the chart to be saved" stage="Chart Name" /><input type="text" name="Save To File" narrative="The name of the file that will be saved" stage="Destination File" /></inputs><onsuccess>acdf5d37-5374-4c8b-8bf8-23dd6e59f1d3</onsuccess></stage><stage stageid="acdf5d37-5374-4c8b-8bf8-23dd6e59f1d3" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="15" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" expr="[handle]" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" expr="[Source Workbook]" /></inputs><onsuccess>5c9a9a9a-4628-4acd-95bc-c7b2472de164</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="da08650c-d7a7-4468-a08d-33704e179d80" name="No Such Sheet" type="Exception"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><display x="165" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [Source Worksheet] &amp; &quot;' on the workbook '&quot; &amp; [Source Workbook] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="f1296915-90e4-4d33-8507-1e4a2efa7a3e" name="Source Workbook" type="Data"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><display x="-375" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="693bda7f-b741-49fb-a72e-9d4dcda8a3b7" name="Source Worksheet" type="Data"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><display x="-375" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="109e02c1-425a-48e3-ab9e-d547e5588fea" name="Chart Name" type="Data"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><display x="-375" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2ddd874a-6b6a-4034-bb9b-18bb7f69ada1" name="Success" type="Data"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><display x="-180" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="16ac9613-78c5-4c39-baab-9f8d2f1a2c6b" name="Message" type="Data"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c9a9a9a-4628-4acd-95bc-c7b2472de164" name="Copy Chart to File" type="Code"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="15" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Chart Name" expr="[Chart Name]" /><input type="text" name="Destination File" expr="[Destination File]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>a00f5d6c-ff06-4ecd-ace1-6841801751f9</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, workbook, cells, cell As Object

Try

	sw = GetWorkbook(CInt(Handle), Source_Workbook)
	ss = GetWorksheet(CInt(Handle), Source_Workbook, Source_Worksheet)
	sw.Activate()
	ss.Activate()
	excel = ss.Application
	sheet = excel.ActiveSheet
	workbook = excel.ActiveWorkbook
	cell = excel.ActiveCell

	workbook.Charts(Chart_Name).Export(Destination_File)
  
	Success = True
	Message = Chart_Name & " successfully saved"

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="1a7e3169-a52b-4506-be15-387013bef269" name="Block1" type="Block"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="-75" y="-60" w="285" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="088eff1b-a323-4d24-9e58-6ee1f2a2d717" name="Recover1" type="Recover"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="165" y="-30" /><onsuccess>ee1b504c-d1dc-4f67-8eb6-c6fac342682d</onsuccess></stage><stage stageid="ee1b504c-d1dc-4f67-8eb6-c6fac342682d" name="Resume1" type="Resume"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="165" y="45" /><onsuccess>da08650c-d7a7-4468-a08d-33704e179d80</onsuccess></stage><stage stageid="fb64ee07-af15-4f7c-a70d-d59e8372f6a5" name="Destination File" type="Data"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><narrative>Full Path Name designating where the file is to be stored</narrative><display x="-375" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a00f5d6c-ff06-4ecd-ace1-6841801751f9" name="End" type="End"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="15" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Was Operation Successful" stage="Success" /><output type="text" name="Message" narrative="Message (Success or Detailed Exception Msg)" stage="Message" /></outputs></stage><stage stageid="cac35bd9-7533-421e-a1f7-df4c584f848d" name="Input Variables" type="Block"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="-465" y="-45" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FFFF00" /></stage><stage stageid="5fdbce74-64ac-483b-b74b-b91a11c9f377" name="Local Variables" type="Block"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="-375" y="150" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFFFF" /></stage><stage stageid="161f40aa-2186-4bec-8e20-31c95114cc1b" name="Output Variables" type="Block"><subsheetid>9c95435d-a34c-46cc-b90d-ab2ae7a3ec91</subsheetid><loginhibit /><display x="-270" y="-45" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="c3a8d33b-3bdc-4fac-91d7-971b2300edb6" name="Add AdvancedFilter" type="SubSheetInfo"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><narrative>Adds an autofilter with its associated criteria.</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="46a8bc53-3e34-4a28-ac5e-48c538c8d784" name="End" type="End"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="45" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs></stage><stage stageid="aa026abb-f63d-4085-81ef-c99241871b46" name="Handle" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b1602f8-1955-40dd-861f-6ec84a20dd94" name="Workbook" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e7bcdc36-34b3-46e7-a520-07d806027d91" name="Worksheet" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f65e06a7-12be-4426-9eff-7f534839c5ea" name="Start" type="Start"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="45" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="An integer value indicating the Excel instance that contains the specific workbook." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet that contains the columns with AutoFilter criteria." stage="Worksheet" /><input type="text" name="CriteriaRange" narrative="The criteria range. If this argument is omitted, there are no criteria." stage="CriteriaRange" /><input type="text" name="CopyToRange" narrative="The destination range for the copied rows if Action is xlFilterCopy. Otherwise, this argument is ignored." stage="CopyToRange" /><input type="number" name="Action" narrative="One of the constants of XlFilterAction specifying whether to make a copy or filter the list in place." stage="XLFilterAction" /><input type="flag" name="Unique" narrative="True to filter unique records only. False to filter all records that meet the criteria. The default value is False." stage="Unique" /><input type="text" name="ListRange" narrative="The data range to be filtered" stage="ListRange" /></inputs><onsuccess>b86099d8-5e90-4bd8-8aff-cc60223e7af9</onsuccess></stage><stage stageid="b86099d8-5e90-4bd8-8aff-cc60223e7af9" name="Advanced Filter" type="Code"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="45" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="CriteriaRange" expr="[CriteriaRange]" /><input type="text" name="CopyToRange" expr="[CopyToRange]" /><input type="number" name="Action" expr="[XLFilterAction]" /><input type="flag" name="Unique" expr="[Unique]" /><input type="text" name="ListRange" expr="[ListRange]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>46a8bc53-3e34-4a28-ac5e-48c538c8d784</onsuccess><code><![CDATA[Dim ws As Object
Success = True
Error_Message = ""

Try
	ws = GetWorksheet(Handle, Workbook, Worksheet)
	ws.Activate()

	ws.Range(ListRange).AdvancedFilter(Action:= CType(Action, Integer), CriteriaRange:=ws.Range(CriteriaRange), CopyToRange:=ws.Range(CopyToRange), Unique:=Unique )

Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	ws = Nothing

End Try]]></code></stage><stage stageid="86201a2c-2bc4-48f6-aa8d-438e0246e4cc" name="CriteriaRange" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><display x="-120" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a2635d5-9b49-420c-a90c-067459c331e8" name="Input" type="Block"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="270" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="fccf02c7-e898-499a-b0c2-e414f766efb8" name="Output" type="Block"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="-195" y="210" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="aa0dba4f-ec81-46d0-a2dd-add74d4ac4ed" name="Local Data" type="Block"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="-195" y="315" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="14b0833b-b3a9-49d1-8885-db2384687b16" name="Success" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="-120" y="240" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="311b1fb0-0e1e-4976-beac-17039f5aad43" name="Error Message" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="-120" y="270" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd5f9c71-398a-4c58-833e-f317a594c08c" name="CopyToRange" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><display x="-120" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bf82bee9-2e42-4a81-abeb-90947b3afb0f" name="XLFilterAction" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><display x="-120" y="135" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cbb76531-dd64-44d1-9a4c-1c1bfb4374fd" name="Unique" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><display x="-120" y="165" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="9a52f559-368d-4e40-a187-72f84dbe8761" name="XLFilterAction" type="Note"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><loginhibit /><narrative>xlFilterCopy = 2 Result = Copy filtered data to new location.
xlFilterInPlace = 1 Result = Leave data in place.

https://learn.microsoft.com/en-us/office/vba/api/excel.xlfilteraction

CriteriaRange (Optional) The criteria range. If this argument is omitted, there are no criteria.

CopyToRange (Optional) The destination range for the copied rows if Action is xlFilterCopy. Otherwise, this argument is ignored.

Unique (Optional) True to filter unique records only. False to filter all records that meet the criteria. The default value is False.</narrative><display x="-465" y="60" w="480" h="240" /><font family="Segoe UI" size="14" style="Regular" color="3366FF" /></stage><stage stageid="b5503eb0-9810-4aa7-9fe4-c4072594b90f" name="ListRange" type="Data"><subsheetid>b120a3cb-4e9c-449d-bb4c-b29f7fe6f810</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f1f001d-e690-4af4-9df7-28cbac03c62a" name="Add Criteria to Autofilter" type="SubSheetInfo"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><narrative>Adds a text filter critera to autofilter</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a2f28cd4-0d40-4cb2-a3c2-42453e6942c4" name="End" type="End"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-15" y="195" /><outputs><output type="flag" name="Success" narrative="A flag indicating whether the action suceeded or failed." stage="Success" /><output type="text" name="Error Message" narrative="If the action failed, additional information may be included here." stage="Error Message" /></outputs></stage><stage stageid="215de173-0b25-4f5e-afcc-7022b6be05fa" name="Start" type="Start"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="An integer value indicating the Excel instance that contains the specific workbook." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the workbook." stage="Workbook" /><input type="text" name="Worksheet" narrative="The name of the worksheet that contains the columns with AutoFilter criteria." stage="Worksheet" /><input type="text" name="Range" narrative="The range of columns, with AutoFiter enabled, to add the criteria to. Default value is 'A1'." stage="Range" /><input type="number" name="Field" narrative="The integer offset of the field on which you want to base the filter (from the left of the list; the leftmost field is field one)." stage="Field" /><input type="text" name="Criteria" narrative="The criteria (a string; for example, &quot;101&quot;). Use &quot;=&quot; to find blank fields, &quot;&lt;&gt;&quot; to find non-blank fields, and &quot;&gt;&lt;&quot; to select (No Data) fields in data types. If this argument is omitted, the criteria is set to 'All'." stage="Criteria" /><input type="number" name="Operator" narrative="An numeric value, from 1 - 11, specifying the type of filter. See https://learn.microsoft.com/en-us/office/vba/api/excel.xlautofilteroperator for details about supported values. Default value is 1 (xlAnd)." stage="Operator" /><input type="text" name="Criteria2" narrative="The second criteria (a string). Used with 'Criteria' and 'Operator' to construct compound criteria. Also used as single criteria on date fields filtering by date, month or year. Followed by an Array detailing the filtering Array(Level, Date). Where Level is 0-2 (year,month,date) and Date is one valid Date inside the filtering period." stage="Criteria2" /></inputs><onsuccess>b49d6316-6177-4479-8cfe-f432d8259869</onsuccess></stage><stage stageid="c6dce5c3-f4f6-49dd-9289-6be3d412b321" name="Add Criteria" type="Code"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-15" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="number" name="FieldValue" expr="[Field]" /><input type="text" name="CriteriaValue" expr="[Criteria]" /><input type="text" name="RangeValue" expr="[Range]" /><input type="number" name="OperatorValue" expr="[Operator]" /><input type="text" name="Criteria2Value" expr="[Criteria2]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>a2f28cd4-0d40-4cb2-a3c2-42453e6942c4</onsuccess><code><![CDATA[Dim ws As Object
Success = True
Error_Message = ""

Try
	ws = GetWorksheet(Handle, Workbook, Worksheet)
	ws.Activate()
	If String.IsNullOrEmpty(Criteria2Value) Then
		ws.Range(RangeValue).AutoFilter(Field:= FieldValue, Criteria1:= CriteriaValue)
	Else
		ws.Range(RangeValue).AutoFilter(Field:= FieldValue, Criteria1:= CriteriaValue, Operator:= OperatorValue, Criteria2:= Criteria2Value)
	End If

Catch ex As Exception
	Success = False
	Error_Message = ex.Message

Finally
	ws = Nothing

End Try]]></code></stage><stage stageid="b49d6316-6177-4479-8cfe-f432d8259869" name="Valid Operator?" type="Decision"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><narrative>See https://learn.microsoft.com/en-us/office/vba/api/excel.xlautofilteroperator for details about supported values.</narrative><display x="-15" y="75" w="90" h="30" /><decision expression="([Operator] &gt;= 1) AND ([Operator] &lt;= 11)" /><ontrue>c6dce5c3-f4f6-49dd-9289-6be3d412b321</ontrue><onfalse>81cc5d36-8355-44ec-b13c-131a515ff3a6</onfalse></stage><stage stageid="81cc5d36-8355-44ec-b13c-131a515ff3a6" name="Set Failure" type="MultipleCalculation"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="90" y="75" /><onsuccess>1f527133-860e-4c1d-8938-fbab4eb74b28</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Please review and correct your input. The value of 'Operator' must be between 1 and 11 inclusive. See https://learn.microsoft.com/en-us/office/vba/api/excel.xlautofilteroperator for details about supported values.&quot;" stage="Error Message" /></steps></stage><stage stageid="1f527133-860e-4c1d-8938-fbab4eb74b28" name="Anchor5" type="Anchor"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="90" y="195" w="10" h="10" /><onsuccess>a2f28cd4-0d40-4cb2-a3c2-42453e6942c4</onsuccess></stage><stage stageid="fa1639e1-5b5a-4bda-906f-e79cace5659c" name="Handle" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef0fd560-c121-43a3-a3ba-6445b627f55e" name="Workbook" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="31b7c065-3c22-4fb9-ae63-b1c6c44b98a0" name="Worksheet" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="91c2267f-8e4a-4506-8f6e-99480ff24c5f" name="Field" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="70e649e7-a9c5-4701-97a2-d74b7068854c" name="Criteria" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="26593e69-bb7a-49ad-bc27-ea03a4d96968" name="Input" type="Block"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="270" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5aeb3db3-7fc2-4fc4-8c0c-59ac7d45eb2d" name="Output" type="Block"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-270" y="240" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="19e23961-ea47-43b8-ba02-e17b8a1b0561" name="Local Data" type="Block"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-270" y="345" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="9a3f2dbe-5548-432e-acbe-09ae90c2bfa5" name="Success" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-195" y="270" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ebdf2ac5-f952-4c73-8178-990a281a1c9d" name="Error Message" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-195" y="300" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a527cb5e-873f-4ca5-96f2-0a46b1d52314" name="Range" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><loginhibit /><display x="-195" y="75" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">A1</initialvalue><private /><alwaysinit /></stage><stage stageid="98854520-75dc-4a23-9618-dc053de0ca77" name="Operator" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="42bddc64-99a7-4711-b551-2667d0b11023" name="Criteria2" type="Data"><subsheetid>ff693b16-4c78-4161-a40d-e818901cb594</subsheetid><display x="-195" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1cd75c36-38ce-4437-988f-0f80d22bb01b" name="Get Worksheet Visible Range As Collection" type="SubSheetInfo"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><narrative>Retrieves a range of cells that are not hidden in a worksheet.</narrative><display x="-270" y="-135" w="150" h="90" /></stage><stage stageid="1b238cce-f45c-4662-a7c6-b46a639a21f4" name="End" type="End"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="collection" name="Data" narrative="The collection containing the data from the specified worksheet - the column IDs will be gleaned from the first row on the sheet being retrieved." stage="worksheetcollection" /></outputs></stage><stage stageid="c7f82067-61ee-4f47-aab1-8cb6931bae26" name="handle" type="Data"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bd8109df-a122-459b-9c32-68bacdfed400" name="workbookname" type="Data"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f26084c-d60a-4d7e-8078-09d630c01a18" name="Start" type="Start"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><loginhibit /><display x="15" y="-285" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="flag" name="First Row Is Header" narrative="Optional: Flag indicating that the first row of the worksheet is a header row. Default is False." stage="firstRowIsHeader" /><input type="text" name="Start Cell" narrative="Optional. Describes the start of a range." stage="Start Cell" /><input type="text" name="End Cell" narrative="Optional. Describes the end of a range." stage="End Cell" /></inputs><onsuccess>83ce4b2c-3860-4bd0-9b07-a4db8897c3bd</onsuccess></stage><stage stageid="344c9ce2-46ee-468f-ac97-561fde48b7ec" name="GetVisibleRangeAsCollection" type="Code"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><loginhibit /><display x="15" y="-120" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="flag" name="firstRowIsHeader" expr="[firstRowIsHeader]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="text" name="End Cell" expr="[End Cell]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>dc71d65f-a3a7-4c8e-a75e-d8d1804d53a7</onsuccess><code><![CDATA[Dim ws as Object = GetWorksheet( _
 handle, workbookname, worksheetname)
ws.Activate()

sheetexists = ws IsNot Nothing
' No sheet? No entry.
If Not sheetexists Then Return

Dim lastCellRef as String = End_Cell
If lastCellRef = "" Then
	Dim lastCell as Object = ws.UsedRange.SpecialCells(11)
	lastCellRef = GetColumnName(lastCell.Column) + lastCell.Row.ToString()
End If

Dim r as Object = _
 ws.UsedRange.SpecialCells(12).Range(Start_Cell & ":" & lastCellRef)
r.Select()
r.Copy()

Dim data As String = GetClipboardText()

worksheetCollection = ParseDelimSeparatedVariables( _
 data, vbTab, Nothing, firstRowIsHeader)]]></code></stage><stage stageid="83ce4b2c-3860-4bd0-9b07-a4db8897c3bd" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>344c9ce2-46ee-468f-ac97-561fde48b7ec</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="2d26c12a-8b29-4ff0-8160-4d137fcb03ca" name="worksheetname" type="Data"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7e885e0e-e2fd-44d9-9aac-07f178a60361" name="worksheetcollection" type="Collection"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><display x="-345" y="-15" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="dc71d65f-a3a7-4c8e-a75e-d8d1804d53a7" name="Sheet Exists?" type="Decision"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><decision expression="[sheetexists]" /><ontrue>1b238cce-f45c-4662-a7c6-b46a639a21f4</ontrue><onfalse>3ab4149a-4e4e-4df4-a94d-a3dc02c0ea58</onfalse></stage><stage stageid="3ab4149a-4e4e-4df4-a94d-a3dc02c0ea58" name="No Such Sheet" type="Exception"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><display x="165" y="-15" w="90" h="30" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b2c1649d-a477-4a48-becb-45100f368622" name="sheetexists" type="Data"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="15da9e09-9dc7-4412-b0ef-3973d6f032f2" name="firstRowIsHeader" type="Data"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><display x="-345" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="30d2a51f-1f3a-4e4e-9b24-4038b498adcc" name="fetchDataWithMethod" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-285" y="-465" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Value</initialvalue><private /><alwaysinit /></stage><stage stageid="b0c6a8f4-61f2-483e-8eb2-56efbf8ebaa6" name="fetchDataWithMethod" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Value</initialvalue><private /><alwaysinit /></stage><stage stageid="0cc43dc5-a399-4a1a-8228-d588d3c3ce12" name="Start Cell" type="Data"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><loginhibit /><display x="-345" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">A1</initialvalue><private /><alwaysinit /></stage><stage stageid="cd5c8df6-ed12-4c7b-bac2-1f23cb681299" name="End Cell" type="Data"><subsheetid>b812a5de-1df1-4f91-88d3-f1ea07312258</subsheetid><loginhibit /><display x="-345" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d61533d3-c2cd-497f-b144-5848ab13a72b" name="Run Macro - From Text File" type="SubSheetInfo"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d1fb4414-7ffd-4ca9-8e9b-979a0e99bce0" name="End" type="End"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><loginhibit /><display x="60" y="90" /></stage><stage stageid="ba031de9-9cb7-4ff1-b5ce-9ffe89bc47db" name="Handle" type="Data"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><loginhibit /><display x="-285" y="15" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="8ff5faba-e60d-43e5-957e-c211dc26322a" name="Macro Name" type="Data"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><loginhibit /><display x="-90" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="44457b37-1ff0-4c3a-a2ab-99423c7afd3d" name="Macro_Text_File_Path" type="Data"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><loginhibit /><display x="-180" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3b6f3163-5ebc-4d8f-b9a6-467504098036" name="SaveWBAsMacroEnabled" type="Data"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><display x="-240" y="60" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="32c81ec5-106f-41d1-9f33-6efcfee46531" name="WorksheetPath" type="Data"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><display x="-195" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4cf3bc81-ba25-4d5f-a7a2-88a7b1553d96" name="DestinationWorksheetPath" type="Data"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><display x="-120" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5fe8f3f3-bdc5-4d83-a44c-887701f9907f" name="Run Macro - From Text File" type="Code"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><loginhibit /><narrative>A macro, created elsewhere (on another Excel system) can be imported and run inside this action.</narrative><display x="60" y="-15" w="90" h="30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Macro Text Filepath" expr="[Macro_Text_File_Path]" /><input type="text" name="Macro Name" expr="[Macro Name]" /><input type="flag" name="Save Workbook As Macro Enabled" expr="[SaveWBAsMacroEnabled]" /><input type="text" name="WorksheetPath" expr="[WorksheetPath]" /><input type="text" name="DestinationWorkSheetPath" expr="[DestinationWorksheetPath]" /></inputs><onsuccess>d1fb4414-7ffd-4ca9-8e9b-979a0e99bce0</onsuccess><code><![CDATA['GetInstance(Handle).Run(Macro_Name)
RunMacroFromTextFile(Handle,Worksheetpath,DestinationWorksheetPath, Macro_Text_FilePath, Macro_Name, Save_WorkBook_As_Macro_Enabled)

]]></code></stage><stage stageid="44f6dbff-fcf0-4012-b729-4b4661a2898a" name="Inputs" type="Block"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><loginhibit /><display x="-345" y="-15" w="315" h="150" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="60e116a4-aa9b-44b9-86a4-0befa1dee414" name="Start" type="Start"><subsheetid>27474cd9-9fc3-48de-ba4d-edaff65efde2</subsheetid><loginhibit /><display x="60" y="-120" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Macro Name" narrative="The name of the macro to run" stage="Macro Name" /><input type="text" name="MacroTextFile" narrative="The file containing the macro to be loaded." stage="Macro_Text_File_Path" /><input type="flag" name="SaveAsMacroEnabled" narrative="Save the resulting workbook as macro enabled." stage="SaveWBAsMacroEnabled" /><input type="text" name="WorksheetPath" narrative="The originating Worksheet" stage="WorksheetPath" /><input type="text" name="DestinationWorksheetPath" narrative="The worksheet name to save to." stage="DestinationWorksheetPath" /></inputs><onsuccess>5fe8f3f3-bdc5-4d83-a44c-887701f9907f</onsuccess></stage><stage stageid="eedc132a-3702-4f87-b758-6a0ba9baee82" name="Get Cell Visibility" type="SubSheetInfo"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><narrative>Gets the visibility of the specified cell. Note that this has the side-effect of making the specified cell active.</narrative><display x="-195" y="-105" w="270" h="90" /></stage><stage stageid="41368f74-eef5-4f87-afbd-50a52cd52ee2" name="Start" type="Start"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." stage="cellref" /></inputs><onsuccess>420cbc43-9f25-4a47-b4db-0f714b1d4260</onsuccess></stage><stage stageid="adbd729a-5569-46c6-b91f-6ffa0752376f" name="End" type="End"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="flag" name="Row is Hidden" narrative="Flag indicates if the row the cell belongs to is hidden (True) or visible (False)" stage="Row is Hidden" /><output type="flag" name="Column is Hidden" narrative="Flag indicates if the column the cell belongs to is hidden (True) or visible (False)" stage="Column is Hidden" /></outputs></stage><stage stageid="55396b8d-c2a2-41e6-94a6-ed93a9c4a2fa" name="cellref" type="Data"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="78eeaa1f-6bc1-49dd-adfa-f8d46d17e19f" name="Get Cell Visibility" type="Code"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="flag" name="rowIsHidden" stage="Row is Hidden" /><output type="flag" name="columnIsHidden" stage="Column is Hidden" /></outputs><onsuccess>adbd729a-5569-46c6-b91f-6ffa0752376f</onsuccess><code><![CDATA[rowIsHidden = GetInstance(handle).ActiveCell.EntireRow.Hidden
columnIsHidden = GetInstance(handle).ActiveCell.EntireColumn.Hidden]]></code></stage><stage stageid="9c798bbb-8d93-47a9-bda8-09fa344a2d01" name="Go To Cell" type="SubSheet"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>78eeaa1f-6bc1-49dd-adfa-f8d46d17e19f</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="47a8ba92-338e-4634-910a-d7e62c7f2a36" name="handle" type="Data"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="420cbc43-9f25-4a47-b4db-0f714b1d4260" name="cellref empty?" type="Decision"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>80c74dd4-66a2-42ff-8f1f-69bdeffdc564</ontrue><onfalse>9c798bbb-8d93-47a9-bda8-09fa344a2d01</onfalse></stage><stage stageid="80c74dd4-66a2-42ff-8f1f-69bdeffdc564" name="anchor3" type="Anchor"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><onsuccess>47920930-96d1-46bd-b5a3-2b4ec9b1dcd7</onsuccess></stage><stage stageid="47920930-96d1-46bd-b5a3-2b4ec9b1dcd7" name="anchor4" type="Anchor"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><onsuccess>78eeaa1f-6bc1-49dd-adfa-f8d46d17e19f</onsuccess></stage><stage stageid="6fc50c20-d4d8-4dd6-b00a-19b21f2aeab5" name="Row is Hidden" type="Data"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><narrative>Flag indicates if the row the cell belongs to is hidden (True) or visible (False)</narrative><display x="-195" y="60" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9d5c56fb-a6a9-4522-aecd-51943d5db754" name="Column is Hidden" type="Data"><subsheetid>260abf59-2d83-4e6b-a613-611a8bd9cba5</subsheetid><loginhibit /><narrative>Flag indicates if the column the cell belongs to is hidden (True) or visible (False)</narrative><display x="-195" y="105" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1a9bed7-efbe-4486-85b8-21c6c3368694" name="Refresh Pivot Table" type="SubSheetInfo"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><narrative>Refresh the named Pivot Table.</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="2d080b66-3e91-44ef-a6a6-cd57cc98eb7d" name="End" type="End"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="7e38bea0-ffec-4d18-b2ae-f665d6116e59" name="Refresh Pivot" type="Code"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="PivotTableName" expr="[Pivot Table Name]" /></inputs><onsuccess>2d080b66-3e91-44ef-a6a6-cd57cc98eb7d</onsuccess><code><![CDATA[Dim ws As Object

ws = GetWorksheet(Handle, Workbook, Worksheet)
ws.Activate()

ws.PivotTables(PivotTableName).PivotCache.Refresh
]]></code></stage><stage stageid="4f1aa3bc-94dd-4937-b196-1b7a90ed1adf" name="Handle" type="Data"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c7d5b04-1336-4402-b2bb-6af6f1a5c24e" name="Workbook" type="Data"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><display x="-120" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="76ec6aea-eb8a-4b62-91e4-a8c6f8a11ba8" name="Worksheet" type="Data"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c177bee7-7540-475b-beb5-5fd37067ec2c" name="Start" type="Start"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Pivot Table Name" stage="Pivot Table Name" /></inputs><onsuccess>7e38bea0-ffec-4d18-b2ae-f665d6116e59</onsuccess></stage><stage stageid="bb69341a-331c-415a-8a94-99d4ed4a53d4" name="Pivot Table Name" type="Data"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><display x="-120" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f721cd88-051e-483c-ace3-fd06a2b942e8" name="Input" type="Block"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1f9aa3bb-91d9-485b-9977-c4411260b869" name="Output" type="Block"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="b8854c92-8434-4b94-9741-ef688df82af7" name="Local Data" type="Block"><subsheetid>bc036c29-0dac-4e29-8cb8-3b8080859934</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="28d67989-207c-4643-b456-576eb56270a9" name="Refresh All" type="SubSheetInfo"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><narrative>Refreshes all external data ranges and Pivot Table reports in the specified workbook.</narrative><display x="-120" y="-135" w="150" h="90" /></stage><stage stageid="2aa8b658-383b-4004-a629-f56339ecf4f0" name="End" type="End"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><loginhibit /><display x="60" y="0" /></stage><stage stageid="ff58ebec-40ad-448e-83aa-a857c3d5c3e8" name="Refresh All" type="Code"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><loginhibit /><display x="60" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><onsuccess>2aa8b658-383b-4004-a629-f56339ecf4f0</onsuccess><code><![CDATA[Dim wb As Object

wb = GetWorkbook(Handle, Workbook)
wb.Activate()

wb.RefreshAll
]]></code></stage><stage stageid="17b01461-dbce-4c58-9d8b-e07d39140075" name="Handle" type="Data"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><display x="-120" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c00c8ae5-9269-4cb6-9d56-bd7529add0d3" name="Workbook" type="Data"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><display x="-120" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56c4d0fb-7039-41d3-ae6d-44bd15a90770" name="Start" type="Start"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><loginhibit /><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="Unique handle to a specific Excel instance." stage="Handle" /><input type="text" name="Workbook" narrative="The name of the specific workbook." stage="Workbook" /></inputs><onsuccess>ff58ebec-40ad-448e-83aa-a857c3d5c3e8</onsuccess></stage><stage stageid="2542a814-db9f-4f1d-8455-fb713072a319" name="Input" type="Block"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><loginhibit /><display x="-195" y="-75" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a9b2d2a9-3659-491d-ab90-d70e9e605365" name="Output" type="Block"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="18acf1bb-bb3c-460f-b571-55f5f14343b1" name="Local Data" type="Block"><subsheetid>8bf9be03-0eb7-4a7b-9288-4701615470f7</subsheetid><loginhibit /><display x="-195" y="105" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="a65e325f-a089-4517-8ba4-11ecd001b14a" name="Note2" type="Note"><narrative>© 2024 Blue Prism Limited
Licensed under Blue Prism Asset Terms for Modifiable Assets
https://portal.blueprism.com/agreements
</narrative><display x="255" y="-90" w="330" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="0cf72e02-07b3-4456-82b2-44040b0458b0" name="handle" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-165" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c09b26bd-8693-4299-ba42-f4e3475ffa07" name="workbookname" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-165" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eb6bbebe-af2f-4664-84f8-8ead327dbb59" name="worksheetname" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-165" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d77112d1-f4e4-4a99-9156-0c64c9be06a0" name="worksheetcollection" type="Collection"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-300" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4a9ee557-2344-4bd2-9eb3-ea5ae4438451" name="sheetexists" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-165" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a172c462-0660-4e65-aef6-59287833aefb" name="GetWorksheetAsCollection" type="Code"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="flag" name="useClipboard" expr="[Use Clipboard]" /><input type="text" name="fetchDataMethod" expr="[fetchDataWithMethod]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>b6d0da26-0322-4b43-b1d5-304466ff29fb</onsuccess><code><![CDATA[Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname, False)

' Do we have a sheet?
sheetexists = ws IsNot Nothing
' No sheet? No entry.
If Not sheetexists Then Return

If useClipboard Then
	ws.Activate()
	ws.UsedRange.Select()
	ws.UsedRange.Copy()

	Dim data As String = GetClipboardText()
	
	worksheetCollection = ParseDelimSeparatedVariables(data, vbTab, Nothing, True)

Else
	worksheetCollection = GetWorksheetUsedRangeAsDataTable(ws.UsedRange, True, fetchDataMethod, True)
End If
]]></code></stage><stage stageid="04495052-ce6f-4eb2-b11e-51ad681174a0" name="Use Clipboard" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-210" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="238df824-de2e-451d-9184-d37cf09b53c7" name="File Format" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="195" w="120" h="30" /><datatype>number</datatype><initialvalue>51</initialvalue><private /><alwaysinit /></stage><stage stageid="53105855-14d6-4f8b-8f5d-85c415ebe167" name="File Format" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-135" y="0" w="120" h="30" /><datatype>number</datatype><initialvalue>51</initialvalue><private /><alwaysinit /></stage><stage stageid="ade853f4-9989-4ae3-9064-c0357d011a86" name="Update Links" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-360" y="-30" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4f0b701c-3eef-4b3c-b0f6-2341dccc2fc2" name="Get Workbook Sensitivity Label Info" type="SubSheetInfo"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><narrative>Retrieves the Sensitivity Label information assigned to the specified Workbook.</narrative><display x="-180" y="-255" w="180" h="90" /></stage><stage stageid="31b145ff-68b2-4a8a-8cb7-116534f1e4d4" name="End" type="End"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><loginhibit /><display x="15" y="-105" /><outputs><output type="text" name="ActionId" narrative="A lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="ActionId" /><output type="number" name="AssignmentMethod" narrative="Indicates how the label was applied." stage="AssignmentMethod" /><output type="number" name="ContentBits" narrative="Bitmask that describes the types of content marking that should be applied to a file. CONTENT_HEADER = 0X1, CONTENT_FOOTER = 0X2, WATERMARK = 0X4, ENCRYPT = 0x8" stage="ContentBits" /><output type="flag" name="IsEnabled" narrative="Indicates whether the classification represented by this label is enabled on the document." stage="IsEnabled" /><output type="text" name="Justification" narrative="Text required during label downgrade that justifies the downgraded." stage="Justification" /><output type="text" name="LabelId" narrative="LabelId is a unique identifier for each label in an organization. It's returned as a lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="LabelId" /><output type="text" name="LabelName" narrative="Label unique name within the organization. It does not necessarily correspond to display name." stage="LabelName" /><output type="text" name="SetDate" narrative="Represents timestamp when the label was set. The date string is formatted in Extended ISO 8601 Date Format." stage="SetDate" /><output type="text" name="SiteId" narrative="SiteId is a unique identifier for each organization in Active Azure Directory. It's returned as a lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="SiteId" /></outputs></stage><stage stageid="cfeddc0b-dac0-441e-85a6-4b11b3572ffd" name="Start" type="Start"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><loginhibit /><display x="15" y="-285" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /></inputs><onsuccess>5f02dd2f-4b8b-4f13-a5c9-846e0a5c6d0b</onsuccess></stage><stage stageid="5f02dd2f-4b8b-4f13-a5c9-846e0a5c6d0b" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><loginhibit /><display x="15" y="-225" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>78268dce-9339-4047-8357-ae53a088ae30</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="2bfc714b-f577-4911-a11a-4a6100853db0" name="handle" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="842bebed-8de0-4e66-8ff1-7bc4e652d344" name="workbookname" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="78268dce-9339-4047-8357-ae53a088ae30" name="GetWorkbookSensitivityLabelInfo" type="Code"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><loginhibit /><display x="15" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="text" name="ActionId" stage="ActionId" /><output type="number" name="AssignmentMethod" stage="AssignmentMethod" /><output type="number" name="ContentBits" stage="ContentBits" /><output type="flag" name="IsEnabled" stage="IsEnabled" /><output type="text" name="Justification" stage="Justification" /><output type="text" name="LabelId" stage="LabelId" /><output type="text" name="LabelName" stage="LabelName" /><output type="text" name="SetDate" stage="SetDate" /><output type="text" name="SiteId" stage="SiteId" /></outputs><onsuccess>31b145ff-68b2-4a8a-8cb7-116534f1e4d4</onsuccess><code><![CDATA[Dim wb As Object = GetWorkbook(handle, workbookname)
Dim excel As Object = wb.Application

Dim labelInfo = wb.SensitivityLabel.getlabel()
ActionId = labelInfo.ActionId
AssignmentMethod = labelInfo.AssignmentMethod
ContentBits = labelInfo.ContentBits
IsEnabled = labelInfo.IsEnabled
Justification = labelInfo.Justification
LabelId = labelInfo.LabelId
LabelName = labelInfo.LabelName
SetDate = labelInfo.SetDate
SiteId = labelInfo.SiteId
]]></code></stage><stage stageid="55337353-a2c2-4bb7-9d75-c65a56e76cef" name="Input" type="Block"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><loginhibit /><display x="-270" y="-195" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7d131169-5ab2-431f-bf9c-ceb08ec5c5c5" name="Local" type="Block"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><loginhibit /><display x="-270" y="-90" w="180" h="75" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="14020d30-d764-406b-bf71-dc2af42f6d1c" name="Output" type="Block"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><loginhibit /><display x="-270" y="0" w="180" h="300" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="47b1788a-a7b2-4a4e-baeb-0b03782b1d74" name="ActionId" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="418c300f-736c-47e0-a85c-6ab42f6b8ed1" name="AssignmentMethod" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="60" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="061841e3-0ea0-4354-b1e8-de3857d294b0" name="ContentBits" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="90" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c76a8a82-2c2a-4530-b3c4-9eac8c31ab25" name="IsEnabled" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="242a5600-8904-4af4-847a-bc657dca8eed" name="Justification" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7a9ec690-93f5-4755-97a8-559209e4d8cd" name="LabelId" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b421d1b0-ac5b-44b6-88e9-b49e693b67b7" name="LabelName" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b2e13610-6a91-4ce3-ac45-e414fc167468" name="SiteId" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="270" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0ff3c18f-5297-45fa-8872-ac0b5e51cc84" name="SetDate" type="Data"><subsheetid>cc781b4b-9c18-49dd-b0f7-53a0ce978337</subsheetid><display x="-180" y="240" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7a8d0181-77d7-4b36-8082-c5dd554435a2" name="Set Workbook Sensitivity Label Info" type="SubSheetInfo"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><narrative>Set or override the Sensitivity Label on the specified Workbook. 

NOTE: In most cases, downgrading an existing Sensitivity Label requires that you specify a justification for the downgrade.</narrative><display x="-180" y="-255" w="180" h="90" /></stage><stage stageid="d8f2d2b2-132a-47b2-979e-c660116697fd" name="End" type="End"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="60" y="-90" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this may contain additional information about the issue." stage="Error Message" /></outputs></stage><stage stageid="5590b0fa-1bd4-4d2f-81b6-1bd4cb54103e" name="Start" type="Start"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="60" y="-285" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="LabelId" narrative="LabelId is a unique identifier for each label in an organization. It's returned as a lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="LabelId" /><input type="text" name="SiteId" narrative="SiteId is a unique identifier for each organization in Active Azure Directory. It's returned as a lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="SiteId" /><input type="text" name="Justification" narrative="Optional: Text required during label downgrade that justifies the downgrade. If you are moving to a less stringent label, and you do not provide a justification, the downgrade will fail." stage="Justification" /></inputs><onsuccess>d4d4872f-8936-4fa5-8a82-7c8edbf7b989</onsuccess></stage><stage stageid="d4d4872f-8936-4fa5-8a82-7c8edbf7b989" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="60" y="-225" w="150" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>f58a89ee-984b-4364-8d4e-556b7584aa95</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="30b8dbe4-053f-4fa8-b466-80245041b53b" name="handle" type="Data"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><display x="-180" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="fe92c6b4-6fc8-4d88-87b6-ab6d01abd482" name="workbookname" type="Data"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><display x="-180" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f58a89ee-984b-4364-8d4e-556b7584aa95" name="SetWorkbookSensitivityLabelInfo" type="Code"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="60" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="LabelId" expr="[LabelId]" /><input type="text" name="SiteId" expr="[SiteId]" /><input type="text" name="Justification" expr="[Justification]" /></inputs><onsuccess>d8f2d2b2-132a-47b2-979e-c660116697fd</onsuccess><code><![CDATA[Dim wb As Object = GetWorkbook(handle, workbookname)
Dim excel As Object = wb.Application

If Justification.Trim().Length > 0 Then 
	wb.SensitivityLabel = Nothing
Else
	Dim labelInfo = wb.SensitivityLabel.CreateLabelInfo()
	labelInfo.ActionId = 1 ' Priviledged/Manual
	labelInfo.LabelId = LabelId
	labelInfo.SiteId = SiteId
	labelInfo.Justification = Justification
	labelInfo.SetDate = Now()

	wb.SensitivityLabel.SetLabel(labelInfo, labelInfo)
End If
]]></code></stage><stage stageid="6d8a71ae-cd1f-446b-8b4c-0fd891da1330" name="Input" type="Block"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="-270" y="-195" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="79bbe36c-ffe4-4800-99bc-162c5e0947b9" name="Local" type="Block"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="-270" y="0" w="180" h="75" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="d7f96f43-4c62-4e29-8be9-2bbcdc235922" name="Output" type="Block"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="-270" y="90" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="8b822ecc-22e9-428c-8cda-61ddcb06d785" name="Justification" type="Data"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><display x="-180" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09efeaec-51c3-4fe6-a00d-045a3399c52c" name="LabelId" type="Data"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><display x="-180" y="-105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="61a45f4c-fe2c-4f17-8f2f-31f01ea1657d" name="SiteId" type="Data"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><display x="-180" y="-75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="98c6536f-b425-4dd3-a5dc-31420da1fedb" name="Block2" type="Block"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="-30" y="-195" w="255" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="b2e1fb7f-763f-4b93-903d-1c6506e7cd8a" name="Recover2" type="Recover"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="180" y="-165" /><onsuccess>c126a741-73b1-4863-a47a-bbde39000414</onsuccess></stage><stage stageid="f840b313-24d5-4923-b6d1-0392194a1c66" name="Success" type="Data"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="-180" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1ffacecd-9429-4c6d-a57a-520c3c8bc9de" name="Error Message" type="Data"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="-180" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c126a741-73b1-4863-a47a-bbde39000414" name="Set Error" type="MultipleCalculation"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="285" y="-165" /><onsuccess>be177722-2d74-4bd9-90ae-810e7d7a1d6d</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="ExceptionDetail()" stage="Error Message" /></steps></stage><stage stageid="be177722-2d74-4bd9-90ae-810e7d7a1d6d" name="Resume2" type="Resume"><subsheetid>9d88cd26-6c39-4eb2-8993-8cbb2eb4384a</subsheetid><loginhibit /><display x="285" y="-90" /><onsuccess>d8f2d2b2-132a-47b2-979e-c660116697fd</onsuccess></stage><stage stageid="b92acae7-8037-4f31-9b2f-bd091747e897" name="Use Clipboard" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-300" y="-75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="956c5f77-0843-4e7c-ae5c-de4c43b7a89b" name="fetchDataWithMethod" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-300" y="-120" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Value</initialvalue><private /><alwaysinit /></stage></process></object>
        <object id="c28cdbe1-9417-4ded-80c1-19fc3f6ab7f0" name="MS Outlook Email VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="MS Outlook Email VBO" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="Business Object for interacting with Microsoft Outlook email functions using the NetOffice library." byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>ec75c4f1-6276-470b-b23f-9a88eb7a0f96</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-180</camerax><cameray>-75</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="The Object requires the NetOffice library, an optional install starting with Blue Prism v7.3." /></preconditions><endpoint narrative="" /><subsheet subsheetid="810b21b7-6b6b-4c7b-be10-b0c5f2911afc" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>-54</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="70ac6311-ee68-4bb2-a827-4e29330f8019" type="Normal" published="True"><name>Check Folder Exists</name><view><camerax>25</camerax><cameray>7</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c99a9bb4-1c93-420d-9165-5da9fd1132fa" type="Normal" published="True"><name>Clear Email Flag</name><view><camerax>-8</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b0d1179c-f3a5-4040-8d6d-a191324a3fe7" type="Normal" published="True"><name>Create Folder</name><view><camerax>6</camerax><cameray>20</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5734e4af-7917-40d8-b0b6-83d8e1872074" type="Normal" published="True"><name>Delete Email</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bca6ce7c-1d99-4e01-8f69-55a1b2e74904" type="Normal" published="True"><name>Flag Email for Follow-up</name><view><camerax>5</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9bf4e24d-5759-4357-97f1-adc1c08c843a" type="Normal" published="True"><name>Forward Email</name><view><camerax>-54</camerax><cameray>26</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b99c4e4e-9b25-4018-97fe-5036b2d73a10" type="Normal" published="True"><name>Get Item Count</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7756da40-e4db-4cf5-a679-a1c186117e01" type="Normal" published="True"><name>Get Items in Folder</name><view><camerax>0</camerax><cameray>292</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ac45a686-fb8b-4e92-bf3a-44701b796f4d" type="Normal" published="True"><name>GetReportItem</name><view><camerax>55</camerax><cameray>61</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a2bc0172-492f-4781-b7ed-1f1d550da3ba" type="Normal" published="True"><name>Get Received Items (Basic)</name><view><camerax>-44</camerax><cameray>233</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f28aad59-a89a-4a9c-98ab-d31d6b69d9a5" type="Normal" published="True"><name>Get Received Items (Advanced)</name><view><camerax>-265</camerax><cameray>53</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ea004198-e1fb-44bc-b549-bf8f7fa06631" type="Normal" published="True"><name>Get Received Items (Expert)</name><view><camerax>-107</camerax><cameray>27</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7aafcecd-5e8f-49d4-9987-73958f3cedc3" type="Normal" published="True"><name>Get Sent Items (Basic)</name><view><camerax>27</camerax><cameray>157</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d9c8a6c7-f973-45af-b333-8166a34297c7" type="Normal" published="True"><name>Get Sent Items (Advanced)</name><view><camerax>-164</camerax><cameray>58</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="43fde12c-9d96-4cdd-a342-88204c037438" type="Normal" published="True"><name>Get Sent Items (Expert)</name><view><camerax>-70</camerax><cameray>56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="204201c2-30d3-467a-b6fb-4e0010b046af" type="Normal" published="True"><name>Mark Email As Read</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2d1820f0-98e4-4a10-8361-8f5322babcee" type="Normal" published="True"><name>Mark Email As Unread</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="61b6fc18-b98a-4456-9381-8c8cfe9f6f60" type="Normal" published="True"><name>Move Email to Inbox Sub Folder</name><view><camerax>-8</camerax><cameray>65</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="99868840-5db6-4220-a829-09f39f098dd4" type="Normal" published="True"><name>Move Item</name><view><camerax>-8</camerax><cameray>65</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ea4f00dc-5f1f-485c-9470-53569c6d86a7" type="Normal" published="True"><name>Quit Outlook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="77072a83-9be3-4451-b8f2-80c13ff8d7ee" type="Normal" published="True"><name>Read from MSG</name><view><camerax>-38</camerax><cameray>-15</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3b884489-6e5d-4971-8c86-a30390386901" type="Normal" published="True"><name>Read from EML</name><view><camerax>-133</camerax><cameray>176</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="78125029-0b28-4ee1-a064-c3a9e70ad7ca" type="Normal" published="True"><name>Reply All to Email</name><view><camerax>-25</camerax><cameray>34</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f6f16944-bdad-4ff4-a5df-b687b904183c" type="Normal" published="True"><name>Reply to Email</name><view><camerax>0</camerax><cameray>115</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f" type="Normal" published="True"><name>Save Attachment</name><view><camerax>20</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="758f4938-75a1-4157-b0f7-2d9b99144d61" type="Normal" published="True"><name>Save Attachments</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2e6fb66c-9607-4731-829c-e3dfd4510a95" type="Normal" published="True"><name>Save Email As File</name><view><camerax>21</camerax><cameray>-5</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e0b58522-643b-42ad-8fdd-4cb5246c5558" type="Normal" published="True"><name>Send Email</name><view><camerax>-54</camerax><cameray>112</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3197fd97-dec4-46b2-b715-a5c551dced94" type="Normal" published="True"><name>Send Email - With OBO</name><view><camerax>-12</camerax><cameray>70</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a7325c36-6141-472d-a4f9-2332df3b4177" type="Normal" published="True"><name>Set Profile</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fb0dd28d-2875-4ec6-b6d5-475120ac222c" type="Normal" published="False"><name>Internal_Get Items</name><view><camerax>-25</camerax><cameray>-6</cameray><zoom version="2">1.5625</zoom></view></subsheet><subsheet subsheetid="09bca601-4952-4f53-be91-af04a4b48a77" type="Normal" published="True"><name>Send and Receive</name><view><camerax>-98</camerax><cameray>-14</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6e1bb675-6699-4e10-b51e-cadda382ba40" type="Normal" published="True"><name>Add Custom Message to Email Body</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="12a4fdb8-c315-45b9-a598-2a46b1433aec" type="Normal" published="True"><name>Add Reminder to Email Item</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c3f6b9ae-7abb-4efc-bd43-6c77dd197e37" type="Normal" published="True"><name>Assign Category to Email</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4c62076f-5e25-4050-ab86-2326e2619bc8" type="Normal" published="True"><name>Reply All Email - With OBO</name><view><camerax>-54</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3b2c9184-6d4b-4864-af4b-655bf9b0398c" type="Normal" published="True"><name>Reply To Email - With OBO</name><view><camerax>-54</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="72d471a3-047f-457c-b72a-b8026ed0c984" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>2f4e925d-3b3b-4bbb-b2db-a1e713c23ee5</onsuccess></stage><stage stageid="2f4e925d-3b3b-4bbb-b2db-a1e713c23ee5" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="bf10fbf6-c2a1-4b51-9a5b-9919863cc24b" name="Stage1" type="ProcessInfo"><display x="-180" y="-75" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>OfficeApi.dll</reference><reference>NetOffice.dll</reference><reference>OutlookApi.dll</reference><reference>System.Windows.Forms.dll</reference><reference>System.Net.dll</reference><reference>System.Core.dll</reference><reference>System.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>Microsoft.VisualBasic</import><import>Microsoft.Win32</import><import>System.Collections</import><import>System.Collections.Generic</import><import>System.Linq</import><import>System.IO</import><import>System.Text</import><import>System.Text.RegularExpressions</import><import>NetOffice</import><import>NetOffice.OutlookApi</import><import>NetOffice.OutlookApi.Enums</import><import>NetOffice.OfficeApi.Enums</import><import>System.Windows.Forms</import><import>System.Net.Mail</import><import>System.Net.Mime</import><import>System.Globalization</import><import>System.Diagnostics</import><import>System.Threading</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA['*******************************
' GLOBAL METHODS
'******************************* 
Function GetFolderFromPath(ByVal FolderPath As String) As NetOffice.OutlookApi.MAPIFolder 
	Dim olApp As New NetOffice.OutlookApi.Application
	Dim TestFolder As NetOffice.OutlookApi.MAPIFolder 
    Dim FoldersArray() As String 
    Dim i As Integer 
 
    On Error GoTo GetFolder_Error 
    If Left(FolderPath, 2) = "\\" Then 
        FolderPath = Right(FolderPath, Len(FolderPath) - 2) 
    End If 
    
    ' Convert folderpath to array 
    FoldersArray = Split(FolderPath, "\") 
    TestFolder = olApp.Session.Folders.item(FoldersArray(0)) 
    If Not TestFolder Is Nothing Then 
        For i = 1 To UBound(FoldersArray, 1) 
            Dim SubFolders As NetOffice.OutlookApi.Folders 
            SubFolders = TestFolder.Folders 
            TestFolder = SubFolders.item(FoldersArray(i)) 
            If TestFolder Is Nothing Then 
                GetFolderFromPath = Nothing 
            End If 
        Next 
    End If 
     
	' Return the TestFolder 
    GetFolderFromPath = TestFolder 
    Exit Function 
 
GetFolder_Error: 
    GetFolderFromPath = Nothing 
    Exit Function 
End Function 

' Added this code for reading in eml files.
' It could be used to do a lot more if needed.
Public Class BPMailMessage
    Inherits MailMessage

    Public DeliveredTo As MailAddress

    Public ReturnPath As MailAddress

    Public DeliveryDate As Date

	Public SentDate As Date

    Public MessageId As String

    Public MimeVersion As String

    Public ContentId As String

    Public ContentDescription As String

    Public ContentDisposition As ContentDisposition

    Public TransferType As String

    Public ContentTransferEncoding As TransferEncoding
   
    Public ContentType As ContentType

    Public MediaMainType As String


    Public MediaSubType As String

    Public ContentStream As Stream
   
    Public Entities As List(Of BPMailMessage)
  
    Public Parent As BPMailMessage
   
    Public TopParent As BPMailMessage
 
    Public RawContent As String
 
    Public UnknownHeaderLines As List(Of String)
	public Sensitivity As String

	public Importance As String
  
    Public Sub New()
        'for the moment, we assume to be at the top
        'should this entity become a child, TopParent will be overwritten
        TopParent = Me
        Entities = New List(Of BPMailMessage)()
        UnknownHeaderLines = New List(Of String)()
    End Sub

  
    Public Sub SetContentDisposition(headerLineContent As String)
        ' example Content-Disposition: inline; filename="PilotsEy.gif"; size=7242; creation-date="Thu, 13 Nov 2008 14:03:50 GMT"; modification-date="Thu, 13 Nov 2008 14:03:50 GMT"
        Dim saParms = headerLineContent.Split(New Char() {";"c}, StringSplitOptions.RemoveEmptyEntries)
        If saParms.Length = 0 Then
            ContentDisposition = New ContentDisposition("inline")
            Return
        End If

        ' do the type and create the object
        ContentDisposition = New ContentDisposition(saParms(0).Trim())

        ' now for the parms (skip the first array value since the RFC says is has to be the type and is done already)
        For i As Integer = 1 To saParms.Length - 1
            Dim saNameValue = saParms(i).Split(New Char() {"="c})
            If saNameValue.Length <> 2 Then Continue For   ' shouldn't happen
            Dim sName As String = saNameValue(0).Trim().ToLower()
            Dim sValue As String = saNameValue(1).Trim()
            sValue = sValue.Replace("""", "")
            Select Case sName
                Case "filename"
                    ContentDisposition.FileName = sValue
                Case "size"
                    ContentDisposition.Size = Long.Parse(sValue)
                Case "creation-date"
                    ContentDisposition.CreationDate = Date.Parse(sValue)
                Case "modification-date"
                    ContentDisposition.ModificationDate = Date.Parse(sValue)
                Case "read-date"
                    ContentDisposition.ReadDate = Date.Parse(sValue)
            End Select
        Next
    End Sub

 
    Public Sub SetContentTypeFields(contentTypeString As String)
        contentTypeString = contentTypeString.Trim()
        'set content type
        If Equals(contentTypeString, Nothing) OrElse contentTypeString.Length < 1 Then
            ContentType = New ContentType("text/plain; charset=us-ascii")
        Else
            ContentType = New ContentType(contentTypeString)
        End If

        'set encoding (character set)
        If Equals(ContentType.CharSet, Nothing) Then
            BodyEncoding = Encoding.ASCII
        Else
            Try
                BodyEncoding = Encoding.GetEncoding(ContentType.CharSet)
            Catch
                BodyEncoding = Encoding.ASCII
            End Try
        End If

        'set media main and sub type
        If Equals(ContentType.MediaType, Nothing) OrElse ContentType.MediaType.Length < 1 Then
            'no mediatype found
            ContentType.MediaType = "text/plain"
        Else
            Dim mediaTypeString As String = ContentType.MediaType.Trim().ToLowerInvariant()
            Dim slashPosition = ContentType.MediaType.IndexOf("/")
            If slashPosition < 1 Then
                'only main media type found
                MediaMainType = mediaTypeString
               ' Debugger.Break() 'didn't have a sample email to test this
                If Equals(MediaMainType, "text") Then
                    MediaSubType = "plain"
                Else
                    MediaSubType = ""
                End If
            Else
                'also submedia found
                MediaMainType = mediaTypeString.Substring(0, slashPosition)
                If mediaTypeString.Length > slashPosition Then
                    MediaSubType = mediaTypeString.Substring(slashPosition + 1)
                Else
                    If Equals(MediaMainType, "text") Then
                        MediaSubType = "plain"
                    Else
                        MediaSubType = ""
                      '  Debugger.Break() 'didn't have a sample email to test this
                    End If
                End If
            End If
        End If

        IsBodyHtml = Equals(MediaSubType, "html")
    End Sub


   
    Public Function CreateChildEntity() As BPMailMessage
        Dim child As BPMailMessage = New BPMailMessage()
        child.Parent = Me
        child.TopParent = TopParent
        child.ContentTransferEncoding = ContentTransferEncoding
        Return child
    End Function

    Public Shared Function CreateFromFile(sEmlPath As String) As BPMailMessage
        Dim mimeDecoder As BPMimeReader = New BPMimeReader()
        Return mimeDecoder.GetEmail(sEmlPath)
    End Function

    Public Shared Function CreateFromFile(mimeDecoder As BPMimeReader, sEmlPath As String) As BPMailMessage
        Return mimeDecoder.GetEmail(sEmlPath)
    End Function

    Public Shared Function CreateFromStream(EmailStream As Stream) As BPMailMessage
        Dim mimeDecoder As BPMimeReader = New BPMimeReader()
        Return mimeDecoder.GetEmail(EmailStream)
    End Function

    Public Shared Function CreateFromStream(mimeDecoder As BPMimeReader, EmailStream As Stream) As BPMailMessage
        Return mimeDecoder.GetEmail(EmailStream)
    End Function
End Class

    Public Class BPMimeReader
        ''' <summary>
        ''' Reader for Email streams
        ''' </summary>
        Protected EmailStreamReader As StreamReader

        ''' <summary>
        ''' char 'array' for carriage return / line feed
        ''' </summary>
        Protected CRLF As String = Microsoft.VisualBasic.Constants.vbCrLf

        'character array 'constants' used for analysing MIME
        '----------------------------------------------------------
        Private Shared BlankChars As Char() = {" "c}

        Private Shared BracketChars As Char() = {"("c, ")"c}
        Private Shared ColonChars As Char() = {":"c}
        Private Shared CommaChars As Char() = {","c}
        Private Shared EqualChars As Char() = {"="c}
        Private Shared ForwardSlashChars As Char() = {"/"c}
        Private Shared SemiColonChars As Char() = {";"c}

        Private Shared WhiteSpaceChars As Char() = {" "c, Microsoft.VisualBasic.Strings.ChrW(9)}
        Private Shared NonValueChars As Char() = {""""c, "("c, ")"c}

        'Help for debugging
        '------------------
        ''' <summary>
        ''' used for debugging. Collects all unknown header lines for all (!) emails received
        ''' </summary>
        Public Shared isCollectUnknowHeaderLines As Boolean = True

        ''' <summary>
        ''' list of all unknown header lines received, for all (!) emails
        ''' </summary>
        Public Shared AllUnknowHeaderLines As List(Of String) = New List(Of String)()

#If UNEEDED_CODE
        /// <summary>
        /// Set this flag, if you would like to get also the email in the raw US-ASCII format
        /// as received.
        /// Good for debugging, but takes quiet some space.
        /// </summary>
        public bool IsCollectRawEmail
        {
            get { return isGetRawEmail; }
            set { isGetRawEmail = value; }
        }
        private bool isGetRawEmail = false;
#End If

        ' MimeReader Constructor
        '---------------------------

        ''' <summary>
        ''' constructor
        ''' </summary>
        Public Sub New()
        End Sub

        ''' <summary>
        ''' Gets an email from the supplied Email Stream and processes it.
        ''' </summary>
        ''' <paramname="sEmlPath">string that designates the path to a .EML file</param>
        ''' <returns>RxMailMessage or null if email not properly formatted</returns>
        Public Function GetEmail(sEmlPath As String) As BPMailMessage
            Dim mm As BPMailMessage = Nothing
            Using EmailStream As Stream = File.Open(sEmlPath, FileMode.Open)
                mm = GetEmail(EmailStream)
            End Using

            Return mm
        End Function

      
        Public Function GetEmail(EmailStream As Stream) As BPMailMessage
            EmailStreamReader = New StreamReader(EmailStream, Encoding.ASCII)

            'prepare message, set defaults as specified in RFC 2046
            'although they get normally overwritten, we have to make sure there are at least defaults
            Dim Message As BPMailMessage = New BPMailMessage()
            Message.ContentTransferEncoding = TransferEncoding.SevenBit
            Message.TransferType = "7bit"

            'convert received email into RxMailMessage
            Dim MessageMimeReturnCode = Me.ProcessMimeEntity(Message, "")

            If MessageMimeReturnCode = MimeEntityReturnCode.bodyComplete OrElse MessageMimeReturnCode = MimeEntityReturnCode.parentBoundaryEndFound Then
                ' I've seen EML files that don't have a "To: entity but have "x-receiver:" entity set to the recipient. check and use that if need be
                If Message.To.Count = 0 Then
                    ' do something with
                    Dim sTo As String = Message.Headers("x-receiver")
                    If Not String.IsNullOrEmpty(sTo) Then Message.To.Add(sTo)
                End If

                ' From: maybe also but never have seen it missing
                If Message.From Is Nothing Then
                    ' do something with
                    Dim sFrom As String = Message.Headers("x-sender")
                    If Not String.IsNullOrEmpty(sFrom) Then Message.From = New MailAddress(sFrom)
                End If

                'TraceFrom("email with {0} body chars received", Message.Body.Length);
                Return Message
            End If
            Return Nothing
        End Function

        Private Sub callGetEmailWarning(warningText As String, ParamArray warningParameters As Object())
            Dim warningString As String
            Try
                warningString = String.Format(warningText, warningParameters)
            Catch __unusedException1__ As System.Exception
                'some strange email address can give string.Format() a problem
                warningString = warningText
            End Try
            'CallWarning("GetEmail", "", "Problem EmailNo {0}: " + warningString, messageNo);
        End Sub

        ''' <summary>
        ''' indicates the reason how a MIME entity processing has terminated
        ''' </summary>
        Private Enum MimeEntityReturnCode
            undefined = 0 'meaning like null
            bodyComplete 'end of message line found
            parentBoundaryStartFound
            parentBoundaryEndFound
            problem 'received message doesn't follow MIME specification
        End Enum

        'buffer used by every ProcessMimeEntity() to store  MIME entity
        Private MimeEntitySB As StringBuilder = New StringBuilder(100000)

        ''' <summary>
        ''' Process a MIME entity
        '''
        ''' A MIME entity consists of header and body.
        ''' Separator lines in the body might mark children MIME entities
        ''' </summary>
        Private Function ProcessMimeEntity(message As BPMailMessage, parentBoundaryStart As String) As MimeEntityReturnCode
            Dim hasParentBoundary = parentBoundaryStart.Length > 0
            Dim parentBoundaryEnd = parentBoundaryStart & "--"
            Dim boundaryMimeReturnCode As MimeEntityReturnCode

            'some format fields are inherited from parent, only the default for
            'ContentType needs to be set here, otherwise the boundary parameter would be
            'inherited too !
            message.SetContentTypeFields("text/plain; charset=us-ascii")

            'get header
            '----------
            Dim completeHeaderField As String = Nothing     'consists of one start line and possibly several continuation lines
            Dim response As String = string.Empty

            ' read header lines until empty line is found (end of header)
            While True
                If Not readMultiLine(response) Then
                    callGetEmailWarning("incomplete MIME entity header received")
                    'empty this message
                    While readMultiLine(response)
                    End While
                   ' Debugger.Break() 'didn't have a sample email to test this
                    Return MimeEntityReturnCode.problem
                End If

                If response.Length < 1 Then
                    'empty line found => end of header
                    If Not Equals(completeHeaderField, Nothing) Then
                        Me.ProcessHeaderField(message, completeHeaderField)
                    Else
                        'there was only an empty header.
                    End If
                    Exit While
                End If

                'check if there is a parent boundary in the header (wrong format!)
                If hasParentBoundary AndAlso parentBoundaryFound(response, parentBoundaryStart, parentBoundaryEnd, boundaryMimeReturnCode) Then
                    callGetEmailWarning("MIME entity header  prematurely ended by parent boundary")
                    'empty this message
                    While readMultiLine(response)
                    End While
                   ' Debugger.Break() 'didn't have a sample email to test this
                    Return boundaryMimeReturnCode
                End If
                'read header field
                'one header field can extend over one start line and multiple continuation lines
                'a continuation line starts with at least 1 blank (' ') or tab
                If response(0) = " "c OrElse response(0) = Microsoft.VisualBasic.Strings.ChrW(9) Then
                    'continuation line found.
                    If Equals(completeHeaderField, Nothing) Then
                        callGetEmailWarning("Email header starts with continuation line")
                        'empty this message
                        While readMultiLine(response)
                        End While
                       ' Debugger.Break() 'didn't have a sample email to test this
                        Return MimeEntityReturnCode.problem
                    Else
                        ' append space, if needed, and continuation line
                        If completeHeaderField(completeHeaderField.Length - 1) <> " "c Then
                            'previous line did not end with a whitespace
                            'need to replace CRLF with a ' '
                            completeHeaderField += " "c.ToString() & response.TrimStart(WhiteSpaceChars)
                        Else
                            'previous line did end with a whitespace
                            completeHeaderField += response.TrimStart(WhiteSpaceChars)
                        End If
                    End If
                Else
                    'a new header field line found
                    If Equals(completeHeaderField, Nothing) Then
                        'very first field, just copy it and then check for continuation lines
                        completeHeaderField = response
                    Else
                        'new header line found
                        Me.ProcessHeaderField(message, completeHeaderField)

                        'save the beginning of the next line
                        completeHeaderField = response
                    End If
                End If
            End While 'end while read header lines

            'process body
            '------------

            MimeEntitySB.Length = 0  'empty StringBuilder. For speed reasons, reuse StringBuilder defined as member of class
            Dim BoundaryDelimiterLineStart As String = Nothing
            Dim isBoundaryDefined = False
            If Not Equals(message.ContentType.Boundary, Nothing) Then
                isBoundaryDefined = True
                BoundaryDelimiterLineStart = "--" & message.ContentType.Boundary
            End If
            'prepare return code for the case there is no boundary in the body
            boundaryMimeReturnCode = MimeEntityReturnCode.bodyComplete

            'read body lines
            While readMultiLine(response)
                'check if there is a boundary line from this entity itself in the body
                If isBoundaryDefined AndAlso Equals(response.TrimEnd(), BoundaryDelimiterLineStart) Then
                    'boundary line found.
                    'stop the processing here and start a delimited body processing
                    Return Me.ProcessDelimitedBody(message, BoundaryDelimiterLineStart, parentBoundaryStart, parentBoundaryEnd)
                End If

                'check if there is a parent boundary in the body
                If hasParentBoundary AndAlso parentBoundaryFound(response, parentBoundaryStart, parentBoundaryEnd, boundaryMimeReturnCode) Then
                    'a parent boundary is found. Decode the content of the body received so far, then end this MIME entity
                    'note that boundaryMimeReturnCode is set here, but used in the return statement
                    Exit While
                End If

                'process next line
                MimeEntitySB.Append(response & CRLF)
            End While

            'a complete MIME body read
            'convert received US ASCII characters to .NET string (Unicode)
            Dim TransferEncodedMessage As String = MimeEntitySB.ToString()
            Dim isAttachmentSaved = False
            Select Case message.ContentTransferEncoding
                Case TransferEncoding.SevenBit
                    'nothing to do
                    Me.saveMessageBody(message, TransferEncodedMessage)

                Case TransferEncoding.Base64
                    'convert base 64 -> byte[]
                    Dim bodyBytes = Convert.FromBase64String(TransferEncodedMessage)
                    message.ContentStream = New MemoryStream(bodyBytes, False)

                    If Equals(message.MediaMainType, "text") Then
                        'convert byte[] -> string
                        message.Body = Me.DecodeByteArryToString(bodyBytes, message.BodyEncoding)
                    ElseIf Equals(message.MediaMainType, "image") OrElse Equals(message.MediaMainType, "application") Then
                        Me.SaveAttachment(message)
                        isAttachmentSaved = True
                    End If

                Case TransferEncoding.QuotedPrintable
                    Me.saveMessageBody(message, BPQuotedPrintable.Decode(TransferEncodedMessage))
                Case Else
                    'no need to raise a warning here, the warning was done when analising the header
                    Me.saveMessageBody(message, TransferEncodedMessage)
            End Select

            If message.ContentDisposition IsNot Nothing AndAlso Equals(message.ContentDisposition.DispositionType.ToLowerInvariant(), "attachment") AndAlso Not isAttachmentSaved Then
                Me.SaveAttachment(message)
                isAttachmentSaved = True
            End If
            Return boundaryMimeReturnCode
        End Function

        ''' <summary>
        ''' Check if the response line received is a parent boundary
        ''' </summary>
        Private Function parentBoundaryFound(response As String, parentBoundaryStart As String, parentBoundaryEnd As String,  ByRef boundaryMimeReturnCode As MimeEntityReturnCode) As Boolean
            boundaryMimeReturnCode = MimeEntityReturnCode.undefined
            If Equals(response, Nothing) OrElse response.Length < 2 OrElse response(0) <> "-"c OrElse response(1) <> "-"c Then
                'quick test: reponse doesn't start with "--", so cannot be a separator line
                Return False
            End If
            If Equals(response, parentBoundaryStart) Then
                boundaryMimeReturnCode = MimeEntityReturnCode.parentBoundaryStartFound
                Return True
            ElseIf Equals(response, parentBoundaryEnd) Then
                boundaryMimeReturnCode = MimeEntityReturnCode.parentBoundaryEndFound
                Return True
            End If
            Return False
        End Function

        ''' <summary>
        ''' Convert one MIME header field and update message accordingly
        ''' </summary>
        Private Sub ProcessHeaderField(message As BPMailMessage, headerField As String)
            Dim headerLineType As String
            Dim headerLineContent As String
            Dim separatorPosition = headerField.IndexOf(":"c)
            If separatorPosition < 1 Then
                ' header field type not found, skip this line
                callGetEmailWarning("character ':' missing in header format field: '{0}'", headerField)
            Else
                'process header field type
                headerLineType = headerField.Substring(0, separatorPosition).ToLowerInvariant()
                headerLineContent = headerField.Substring(separatorPosition + 1).Trim(WhiteSpaceChars)
                If Equals(headerLineType, "") OrElse Equals(headerLineContent, "") Then
                    '1 of the 2 parts missing, drop the line
                    Return
                End If
                ' add header line to headers
                message.Headers.Add(headerLineType, headerLineContent)

                'interpret if possible
                Select Case headerLineType.ToLower()
                    Case "bcc"
                        Me.AddMailAddresses(headerLineContent, message.Bcc)

                    Case "cc"
                        Me.AddMailAddresses(headerLineContent, message.CC)

                    Case "content-description"
                        message.ContentDescription = headerLineContent

                    Case "content-disposition"
                        'message.ContentDisposition = new ContentDisposition(headerLineContent);
                        message.SetContentDisposition(headerLineContent)

                    Case "content-id"
                        message.ContentId = headerLineContent

                    Case "content-transfer-encoding"
                        message.TransferType = headerLineContent
                        message.ContentTransferEncoding = ConvertToTransferEncoding(headerLineContent)

                    Case "content-type"
                        message.SetContentTypeFields(headerLineContent)

                    Case "delivery-date"
                        message.DeliveryDate = ConvertToDateTime(headerLineContent)
					case "date"
						message.SentDate = ConvertToDateTime(headerLineContent)

                    Case "delivered-to"
                        message.DeliveredTo = ConvertToMailAddress(headerLineContent)

                    Case "from"
                        Dim address = ConvertToMailAddress(headerLineContent)
                        If address IsNot Nothing Then message.From = address

                    Case "message-id"
                        message.MessageId = headerLineContent

                    Case "mime-version"
                        'message.BodyEncoding = new Encoding();
                        message.MimeVersion = headerLineContent

                    Case "sender"
                        message.Sender = ConvertToMailAddress(headerLineContent)

                    Case "subject"
                        message.Subject = headerLineContent

                                            
                    Case "received"

                    Case "reply-to"
                        message.ReplyToList.Add(ConvertToMailAddress(headerLineContent))

                    Case "return-path"
                        message.ReturnPath = ConvertToMailAddress(headerLineContent)

                    Case "to"
                        Me.AddMailAddresses(headerLineContent, message.To)

					case "sensitivity"
						message.Sensitivity = headerLineContent

					case "importance"
						message.Importance = headerLineContent
                    Case Else
                        message.UnknownHeaderLines.Add(headerField)
                        If isCollectUnknowHeaderLines Then
                            AllUnknowHeaderLines.Add(headerField)
                        End If
                End Select
            End If
        End Sub

        ''' <summary>
        ''' find individual addresses in the string and add it to address collection
        ''' </summary>
        ''' <paramname="Addresses">string with possibly several email addresses</param>
        ''' <paramname="AddressCollection">parsed addresses</param>
        Private Sub AddMailAddresses(Addresses As String, AddressCollection As MailAddressCollection)
            Dim adr As MailAddress
            Try
                ' I copped out on this regex - trying to figure out how to do it in just a single regex was giving me a headache
                ' just replace the comma that's inside quotes with a char (^c) thats not going to occur in a legal email name (or the 2183 RFC for that matter)
                Dim regexObj As Regex = New Regex("""[^""]*""")
                Dim mc3 = regexObj.Matches(Addresses)
                For Each match As Match In mc3
                    Dim sQuotedString = match.Value.Replace(","c, Microsoft.VisualBasic.ChrW(3))
                    Addresses = Addresses.Replace(match.Value, sQuotedString)
                Next
                Dim AddressSplit = Addresses.Split(","c)
                For Each adrString As String In AddressSplit
                    ' be sure to add the comma back if it was replaced
                    adr = Me.ConvertToMailAddress(adrString.Replace(Microsoft.VisualBasic.ChrW(3), ","c))
                    If adr IsNot Nothing Then
                        AddressCollection.Add(adr)
                    End If
                Next

            Catch
               ' Debugger.Break() 'didn't have a sample email to test this
				Throw
            End Try
        End Sub

        ''' <summary>
        ''' Tries to convert a string into an email address
        ''' </summary>
        Public Function ConvertToMailAddress(address As String) As MailAddress
            ' just remove the quotes since they are not valid in email addresses and the MailAdress parser doesn't need them.
            ' this will handles both
            ' ->>>    "name@host.com"
            ' and
            ' ->>>    "LName,FName (name@host.com)" <name@host.com>
            ' formats
            address = address.Replace("""", "")
            address = address.Trim()
            If Equals(address, "<>") Then
                'empty email address, not recognised a such by .NET
                Return Nothing
            End If
            Try
                'return new MailAddress(address.Trim(new char[] { '"' }));
                Return New MailAddress(address)
            Catch
                callGetEmailWarning("address format not recognized: '" & address.Trim() & "'")
            End Try
            Return Nothing
        End Function

        Private culture As IFormatProvider = New CultureInfo("en-US", True)

        ''' <summary>
        ''' Tries to convert string to date
        ''' If there is a run time error, the smallest possible date is returned
        ''' <example>Wed, 04 Jan 2006 07:58:08 -0800</example>
        ''' </summary>
        Public Function ConvertToDateTime([date] As String) As Date
            Dim ReturnDateTime As Date
            Try
                'sample; 'Wed, 04 Jan 2006 07:58:08 -0800 (PST)'
                'remove day of the week before ','
                'remove date zone in '()', -800 indicates the zone already

                'remove day of week
                Dim cleanDateTime = [date]
                Dim DateSplit = cleanDateTime.Split(CommaChars, 2)
                If DateSplit.Length > 1 Then
                    cleanDateTime = DateSplit(1)
                End If

                'remove time zone (PST)
                DateSplit = cleanDateTime.Split(BracketChars)
                If DateSplit.Length > 1 Then
                    cleanDateTime = DateSplit(0)
                End If

                'convert to DateTime
                If Not Date.TryParse(cleanDateTime, culture, DateTimeStyles.AdjustToUniversal Or DateTimeStyles.AllowWhiteSpaces, ReturnDateTime) Then
                    'try just to convert the date
                    Dim DateLength = cleanDateTime.IndexOf(":"c) - 3
                    cleanDateTime = cleanDateTime.Substring(0, DateLength)

                    If Date.TryParse(cleanDateTime, culture, DateTimeStyles.AdjustToUniversal Or DateTimeStyles.AllowWhiteSpaces, ReturnDateTime) Then
                        callGetEmailWarning("got only date, time format not recognised: '" & [date] & "'")
                    Else
                        callGetEmailWarning("date format not recognised: '" & [date] & "'")
                       ' Debugger.Break()  'didn't have a sample email to test this
                        Return Date.MinValue
                    End If
                End If

            Catch
                callGetEmailWarning("date format not recognised: '" & [date] & "'")
                Return Date.MinValue
            End Try
            Return ReturnDateTime
        End Function


        Private Function ConvertToTransferEncoding(TransferEncodingString As String) As TransferEncoding
            ' here, "bit8" is marked as "bit7" (i.e. no transfer encoding needed)
            ' "binary" is illegal in SMTP
            ' something like "7bit" / "8bit" / "binary" / "quoted-printable" / "base64"
            Select Case TransferEncodingString.Trim().ToLowerInvariant()
                Case "7bit", "8bit"
                    Return TransferEncoding.SevenBit

                Case "quoted-printable"
                    Return TransferEncoding.QuotedPrintable

                Case "base64"
                    Return TransferEncoding.Base64

                Case "binary"
                    Throw New System.Exception("SMPT does not support binary transfer encoding")
                Case Else
                    callGetEmailWarning("not supported content-transfer-encoding: " & TransferEncodingString)
                    Return TransferEncoding.Unknown
            End Select
        End Function

        ''' <summary>
        ''' Copies the content found for the MIME entity to the RxMailMessage body and creates
        ''' a stream which can be used to create attachements, alternative views, ...
        ''' </summary>
        Private Sub saveMessageBody(message As BPMailMessage, contentString As String)
            message.Body = contentString
            Dim ascii = Encoding.ASCII
            Dim bodyStream As MemoryStream = New MemoryStream(ascii.GetBytes(contentString), 0, contentString.Length)
            message.ContentStream = bodyStream
        End Sub

        ''' <summary>
        ''' each attachement is stored in its own MIME entity and read into this entity's
        ''' ContentStream. SaveAttachment creates an attachment out of the ContentStream
        ''' and attaches it to the parent MIME entity.
        ''' </summary>
        Private Sub SaveAttachment(message As BPMailMessage)
            If message.Parent Is Nothing Then
               ' Debugger.Break() 'didn't have a sample email to test this
            Else
                Dim thisAttachment As System.Net.Mail.Attachment = New System.Net.Mail.Attachment(message.ContentStream, message.ContentType)

                'no idea why ContentDisposition is read only. on the other hand, it is anyway redundant
                If message.ContentDisposition IsNot Nothing Then
                    Dim messageContentDisposition As ContentDisposition = message.ContentDisposition
                    Dim AttachmentContentDisposition = thisAttachment.ContentDisposition
                    If messageContentDisposition.CreationDate > Date.MinValue Then
                        AttachmentContentDisposition.CreationDate = messageContentDisposition.CreationDate
                    End If
                    AttachmentContentDisposition.DispositionType = messageContentDisposition.DispositionType
                    AttachmentContentDisposition.FileName = messageContentDisposition.FileName
                    AttachmentContentDisposition.Inline = messageContentDisposition.Inline
                    If messageContentDisposition.ModificationDate > Date.MinValue Then
                        AttachmentContentDisposition.ModificationDate = messageContentDisposition.ModificationDate
                    End If

                    ' see note below
                    'AttachmentContentDisposition.Parameters.Clear();
                    If messageContentDisposition.ReadDate > Date.MinValue Then
                        AttachmentContentDisposition.ReadDate = messageContentDisposition.ReadDate
                    End If
                    If messageContentDisposition.Size > 0 Then
                        AttachmentContentDisposition.Size = messageContentDisposition.Size
                    End If

                    ' I think this is a bug. Setting the ContentDisposition values above had
                    ' already set the Parameters collection so I got an error when the attempt
                    ' was made to add the same parameter again
                    'foreach (string key in messageContentDisposition.Parameters.Keys)
                    '{
                    '    AttachmentContentDisposition.Parameters.Add(key, messageContentDisposition.Parameters[key]);
                    '}
                End If

                'get ContentId
                Dim contentIdString As String = message.ContentId
                If Not Equals(contentIdString, Nothing) Then
                    thisAttachment.ContentId = RemoveBrackets(contentIdString)
                End If
                thisAttachment.TransferEncoding = message.ContentTransferEncoding
                message.Parent.Attachments.Add(thisAttachment)
            End If
        End Sub

        ''' <summary>
        ''' removes leading '&lt;' and trailing '&gt;' if both exist
        ''' </summary>
        ''' <paramname="parameterString"></param>
        ''' <returns></returns>
        Private Function RemoveBrackets(parameterString As String) As String
            If Equals(parameterString, Nothing) Then
                Return Nothing
            End If
            If parameterString.Length < 1 OrElse parameterString(0) <> "<"c OrElse parameterString(parameterString.Length - 1) <> ">"c Then
               ' Debugger.Break() 'didn't have a sample email to test this
                Return parameterString
            Else
                Return parameterString.Substring(1, parameterString.Length - 2)
            End If
        End Function

        Private Function ProcessDelimitedBody(message As BPMailMessage, BoundaryStart As String, parentBoundaryStart As String, parentBoundaryEnd As String) As MimeEntityReturnCode
            Dim response As String= string.Empty

            If Equals(BoundaryStart.Trim(), parentBoundaryStart.Trim()) Then
                'Mime entity boundaries have to be unique
                callGetEmailWarning("new boundary same as parent boundary: '{0}'", parentBoundaryStart)
                'empty this message
                While readMultiLine(response)
                End While
                Return MimeEntityReturnCode.problem
            End If

            Dim ReturnCode As MimeEntityReturnCode
            Do
                'empty StringBuilder
                MimeEntitySB.Length = 0
                Dim ChildPart As BPMailMessage = message.CreateChildEntity()

                'recursively call MIME part processing
                ReturnCode = Me.ProcessMimeEntity(ChildPart, BoundaryStart)

                If ReturnCode = MimeEntityReturnCode.problem Then
                    'it seems the received email doesn't follow the MIME specification. Stop here
                    Return MimeEntityReturnCode.problem
                End If

                'add the newly found child MIME part to the parent
                Me.AddChildPartsToParent(ChildPart, message)
            Loop While ReturnCode <> MimeEntityReturnCode.parentBoundaryEndFound

            'disregard all future lines until parent boundary is found or end of complete message
            Dim boundaryMimeReturnCode As MimeEntityReturnCode
            Dim hasParentBoundary = parentBoundaryStart.Length > 0
            While readMultiLine(response)
                If hasParentBoundary AndAlso parentBoundaryFound(response, parentBoundaryStart, parentBoundaryEnd, boundaryMimeReturnCode) Then
                    Return boundaryMimeReturnCode
                End If
            End While

            Return MimeEntityReturnCode.bodyComplete
        End Function

        ''' <summary>
        ''' Add all attachments and alternative views from child to the parent
        ''' </summary>
        Private Sub AddChildPartsToParent(child As BPMailMessage, parent As BPMailMessage)
            'add the child itself to the parent
            parent.Entities.Add(child)

            'add the alternative views of the child to the parent
            If child.AlternateViews IsNot Nothing Then
                For Each childView As AlternateView In child.AlternateViews
                    parent.AlternateViews.Add(childView)
                Next
            End If

            'add the body of the child as alternative view to parent
            'this should be the last view attached here, because the POP 3 MIME client
            'is supposed to display the last alternative view
            If Equals(child.MediaMainType, "text") AndAlso child.ContentStream IsNot Nothing AndAlso child.Parent.ContentType IsNot Nothing AndAlso Equals(child.Parent.ContentType.MediaType.ToLowerInvariant(), "multipart/alternative") Then
                Dim thisAlternateView As AlternateView = New AlternateView(child.ContentStream)
                thisAlternateView.ContentId = Me.RemoveBrackets(child.ContentId)
                thisAlternateView.ContentType = child.ContentType
                thisAlternateView.TransferEncoding = child.ContentTransferEncoding
                parent.AlternateViews.Add(thisAlternateView)
            End If

            'add the attachments of the child to the parent
            If child.Attachments IsNot Nothing Then
                For Each childAttachment As System.Net.Mail.Attachment In child.Attachments
                    parent.Attachments.Add(childAttachment)
                Next
            End If
        End Sub

        ''' <summary>
        ''' Converts byte array to string, using decoding as requested
        ''' </summary>
        Public Function DecodeByteArryToString(ByteArry As Byte(), ByteEncoding As Encoding) As String
            If ByteArry Is Nothing Then
                'no bytes to convert
                Return Nothing
            End If
            Dim byteArryDecoder As Decoder
            If ByteEncoding Is Nothing Then
                'no encoding indicated. Let's try UTF7
               ' Debugger.Break() 'didn't have a sample email to test this
                byteArryDecoder = Encoding.UTF7.GetDecoder()
            Else
                byteArryDecoder = ByteEncoding.GetDecoder()
            End If
            Dim charCount = byteArryDecoder.GetCharCount(ByteArry, 0, ByteArry.Length)
            Dim bodyChars = New Char(charCount - 1) {}
            Dim charsDecodedCount = byteArryDecoder.GetChars(ByteArry, 0, ByteArry.Length, bodyChars, 0)
            'convert char[] to string
            Return New String(bodyChars)
        End Function

        ''' <summary>
        ''' read one line in multiline mode from the Email stream.
        ''' </summary>
        ''' <paramname="response">line received</param>
        ''' <returns>false: end of message</returns>
        ''' <returns></returns>
        Protected Function readMultiLine(ByRef response As String) As Boolean
            response = Nothing
            response = EmailStreamReader.ReadLine()
            If Equals(response, Nothing) Then Return False     ' if we can't read anymore from the stream then the stream is ended since this version is reading from a file and not the net

            'check for byte stuffing, i.e. if a line starts with a '.', another '.' is added, unless
            'it is the last line
            If response.Length > 0 AndAlso response(0) = "."c Then
                If Equals(response, ".") Then
                    'closing line found
                    Return False
                End If
                'remove the first '.'
                response = response.Substring(1, response.Length - 1)
            End If
            Return True
        End Function
    End Class

Public Class BPQuotedPrintable
    Private Shared Function HexDecoderEvaluator(m As Match) As String
        Dim hex = m.Groups(2).Value
        Dim iHex = Convert.ToInt32(hex, 16)
        Dim c As Char = Microsoft.VisualBasic.ChrW(iHex)
        Return c.ToString()
    End Function

    Private Shared Function HexDecoder(line As String) As String
        If Equals(line, Nothing) Then Throw New ArgumentNullException()

        'parse looking for =XX where XX is hexadecimal
        Dim re As Regex = New Regex("(\=([0-9A-F][0-9A-F]))", RegexOptions.IgnoreCase)
        Return re.Replace(line, New MatchEvaluator(AddressOf HexDecoderEvaluator))
    End Function

    ''' <summary>
    ''' decodes an entire file's contents into plain text that 
    ''' was encoded with quoted-printable.
    ''' </summary>
    ''' <paramname="filepath">
    ''' The path to the quoted-printable encoded file to decode.
    ''' </param>
    ''' <returns>The decoded string.</returns>
    ''' <exceptioncref="ObjectDisposedException">
    ''' A problem occurred while attempting to decode the 
    ''' encoded string.
    ''' </exception>
    ''' <exceptioncref="OutOfMemoryException">
    ''' There is insufficient memory to allocate a buffer for the
    ''' returned string. 
    ''' </exception>
    ''' <exceptioncref="ArgumentNullException">
    ''' A string is passed in as a null reference.
    ''' </exception>
    ''' <exceptioncref="IOException">
    ''' An I/O error occurs, such as the stream being closed.
    ''' </exception>  
    ''' <exceptioncref="FileNotFoundException">
    ''' The file was not found.
    ''' </exception>
    ''' <exceptioncref="SecurityException">
    ''' The caller does not have the required permission to open
    ''' the file specified in filepath.
    ''' </exception>
    ''' <exceptioncref="UnauthorizedAccessException">
    ''' filepath is read-only or a directory.
    ''' </exception>
    ''' <remarks>
    ''' Decodes a quoted-printable encoded file into a string
    ''' of unencoded text of any size.
    ''' </remarks>
    Public Shared Function DecodeFile(filepath As String) As String
        If Equals(filepath, Nothing) Then Throw New ArgumentNullException()

        Dim line As String, decodedHtml = ""
        Dim f As FileInfo = New FileInfo(filepath)

        If Not f.Exists Then Throw New FileNotFoundException()

        Dim sr As StreamReader = f.OpenText()
        Try
			line = sr.ReadLine()
            While Not line Is Nothing
                decodedHtml += Decode(line)
            End While

            Return decodedHtml
        Finally
            sr.Close()
            sr = Nothing
            f = Nothing
        End Try
    End Function


    ''' <summary>
    ''' Decodes a Quoted-Printable string of any size into 
    ''' it's original text.
    ''' </summary>
    ''' <paramname="encoded">
    ''' The encoded string to decode.
    ''' </param>
    ''' <returns>The decoded string.</returns>
    ''' <exceptioncref="ArgumentNullException">
    ''' A string is passed in as a null reference.
    ''' </exception>
    ''' <remarks>
    ''' Decodes a quoted-printable encoded string into a string
    ''' of unencoded text of any size.
    ''' </remarks>
    Public Shared Function Decode(encoded As String) As String
        If Equals(encoded, Nothing) Then Throw New ArgumentNullException()

        Dim line As String
        Dim sw As StringWriter = New StringWriter()
        Dim sr As StringReader = New StringReader(encoded)
        Try
			line = sr.ReadLine()
            While Not line is nothing
                If line.EndsWith("=") Then
                    sw.Write(HexDecoder(line.Substring(0, line.Length - 1)))
                Else
                    sw.WriteLine(HexDecoder(line))
                End If
                sw.Flush()
				line = sr.ReadLine()
            End While
            Return sw.ToString()
        Finally
            sw.Close()
            sr.Close()
            sw = Nothing
            sr = Nothing
        End Try
    End Function

    
End Class
]]></code></stage><stage stageid="0e25d23b-b518-4ba3-989e-4adf589c7dd3" name="Clean Up" type="SubSheetInfo"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a9d4d214-a0e7-4383-8e44-7a4f068d71cd" name="Start" type="Start"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>253513b1-e08e-49b0-a789-fb3659eeb650</onsuccess></stage><stage stageid="253513b1-e08e-49b0-a789-fb3659eeb650" name="End" type="End"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="7d086243-ce98-49a9-8674-b8ca5349db4c" name="Note1" type="Note"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="8c3c4d09-dac0-411e-8e05-4db606c12164" name="Save Email As File" type="SubSheetInfo"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><narrative>Stores a specified email as a ".msg" file on any file location (file path).

The Entry ID is the unique idenfier used to determine which email is to be saved.</narrative><display x="-195" y="-75" w="150" h="120" /></stage><stage stageid="2ff43150-6180-4cff-bf98-fd8d855bdbf9" name="Start" type="Start"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="File Path" narrative="Mandatory. The destination file path. Default blank." stage="File Path" /><input type="text" name="File Name" narrative="Mandatory. The File Name for the stored Email." stage="File Name" /></inputs><onsuccess>7287aac3-f380-41fd-99ed-1308db516359</onsuccess></stage><stage stageid="0ab2dc8d-39a7-4788-b7d2-7e6ff62b4cef" name="End" type="End"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="7287aac3-f380-41fd-99ed-1308db516359" name="Save As" type="Code"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="File Name" expr="[File Name]" /></inputs><onsuccess>0ab2dc8d-39a7-4788-b7d2-7e6ff62b4cef</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim item = olNamespace.GetItemFromID(Entry_ID)

item.SaveAs (File_Path & File_Name & ".msg")

olNamespace = Nothing 
olApp = Nothing ]]></code></stage><stage stageid="0d8dbc79-fe44-41e3-a7a5-5b60b74fa2cf" name="File Path" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="15416548-42aa-42e9-8a36-49d19e45e678" name="Internal_Get Items" type="SubSheetInfo"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative>Sub function used by multiple actions within VBO. Do not change or publish.

Uses the Restrict method to create a filtered list of folder items. Not intended for publication.

</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a6573dfb-b844-470c-bfe7-73c863da28d4" name="Start" type="Start"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" stage="Filter Expression" /><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" stage="Outlook Folder ID" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." stage="Sub Folder" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /><input type="flag" name="Prefer Plain Text Body" narrative="Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body." stage="Prefer Plain Text Body" /></inputs><onsuccess>d9ef3bca-bf49-4f84-9d4c-b3648951f323</onsuccess></stage><stage stageid="26935ec9-3f33-4a4d-982c-0e6b0a5edbc2" name="End" type="End"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /><output type="collection" name="Errors" narrative="Collection of any error messages that were captured while getting the list of mail items." stage="Errors" /></outputs></stage><stage stageid="d9ef3bca-bf49-4f84-9d4c-b3648951f323" name="Get Items" type="Code"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="Filter Expression" expr="[Filter Expression]" /><input type="number" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Sub Folder" expr="[Sub Folder]" /><input type="text" name="Account Display Name" expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" expr="[Shared Mailbox]" /><input type="flag" name="PreferPlainTextBody" expr="[Prefer Plain Text Body]" /></inputs><outputs><output type="collection" name="Items" stage="Items" /><output type="number" name="Item Count" stage="Item Count" /><output type="collection" name="Errors" stage="Errors" /></outputs><onsuccess>26935ec9-3f33-4a4d-982c-0e6b0a5edbc2</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim folder As NetOffice.OutlookApi.MAPIFolder = Nothing
Dim errorsTable As New Data.DataTable
errorsTable.Columns.Add("EntryID", Type.GetType("System.String"))
errorsTable.Columns.Add("Subject", Type.GetType("System.String"))
errorsTable.Columns.Add("Error", Type.GetType("System.String"))

If Not String.IsNullOrEmpty(Shared_Mailbox) Then
	' The interop library for Outlook seems a bit fickle. As a result we've implemented two different paths for getting the pointer to the shared mailbox.
	Try
		If Outlook_Folder_ID = 6 Then
			folder = olNamespace.Folders(Shared_Mailbox).Folders("Inbox")
		ElseIf Outlook_Folder_ID = 5 Then
			folder = olNamespace.Folders(Shared_Mailbox).Folders("Sent Items")
		End If
	Catch
		folder = Nothing
	End Try

	If folder Is Nothing Then
		Dim recipient = olNamespace.CreateRecipient(Shared_Mailbox)
		recipient.Resolve()
		If recipient.Resolved Then
			folder = olNamespace.GetSharedDefaultFolder(recipient, Outlook_Folder_ID)
		Else
			Dim ex1 As New System.Exception(VbCrlf + "Failed to resolve shared mailbox '" + Shared_Mailbox + "'.")
			Throw ex1
		End If
	End If
Else
	If Not String.IsNullOrEmpty(Account_Display_Name) Then
		Try
			Dim aa As List(Of NetOffice.OutlookApi.Account) = olNamespace.Accounts.Cast(Of Account).ToList()
			folder  = aa.Where(Function(x) x.DisplayName = Account_Display_Name).FirstOrDefault().DeliveryStore.GetDefaultFolder(Outlook_Folder_ID)
		Catch ex As System.Exception
			Dim ex1 As New System.Exception(VbCrlf + "Failed to retrieve default folder for Account Display Name '" + Account_Display_Name + "'." + VbCrlf + ex.Message)
			Throw ex1
		End Try
	Else
		folder = olNamespace.GetDefaultFolder(Outlook_Folder_ID)
	End If
End If

If Sub_Folder <> "" Then
	For each name as string in Sub_Folder.Split("\")
		folder = folder.Folders(name)
	Next
End If

'See https://msdn.microsoft.com/en-us/library/office/aa210946(v=office.11).aspx
'for mail item properties
Dim dataTable As New Data.DataTable
dataTable.Columns.Add("EntryID", Type.GetType("System.String"))
dataTable.Columns.Add("To", Type.GetType("System.String"))
dataTable.Columns.Add("CC", Type.GetType("System.String"))
dataTable.Columns.Add("Subject", Type.GetType("System.String"))
dataTable.Columns.Add("Body", Type.GetType("System.String"))
dataTable.Columns.Add("Attachments", Type.GetType("System.String"))
dataTable.Columns.Add("ReceivedOn", Type.GetType("System.DateTime"))
dataTable.Columns.Add("SentOn", Type.GetType("System.DateTime"))
dataTable.Columns.Add("SenderName", Type.GetType("System.String"))
dataTable.Columns.Add("SenderEmailAddress", Type.GetType("System.String"))
dataTable.Columns.Add("Unread", Type.GetType("System.Boolean"))
dataTable.Columns.Add("Sensitivity", Type.GetType("System.Int16"))
dataTable.Columns.Add("Importance", Type.GetType("System.Int16"))
dataTable.Columns.Add("Flag", Type.GetType("System.String"))
dataTable.Columns.Add("IsHTML", Type.GetType("System.Boolean"))

' Set the PrimaryKeys property to the array. We only use EntryID as the key.
Dim primaryKey(0) As Data.DataColumn
primaryKey(0) = dataTable.Columns(0)
dataTable.PrimaryKey = primaryKey

Dim folderItems = If(Filter_Expression <> "", folder.Items.Restrict(Filter_Expression), folder.Items)

For Each item As Object In folderItems
	Try
		If Not TypeOf item Is MailItem Then Continue For
		Dim row As Data.DataRow = dataTable.NewRow
		row("EntryID") = item.EntryID
		row("To") = item.To
		row("CC") = item.CC
		row("Subject") = item.Subject

		If (PreferPlainTextBody=False And item.BodyFormat = 2) Then
			row("Body") = item.HTMLBody
		ElseIf (PreferPlainTextBody=True) Then
			row("Body") = item.Body
		End If
		
		Dim attachments As String = ""
		For Each attachment As Object In item.Attachments
			If (attachment.Type = 1) Or (attachment.Type = 5) Or (attachment.Type = 6) Then
				attachments = attachments & "|" & attachment.FileName
			End If
		Next
		
		row("Attachments") = If (attachments.Length = 0, "", attachments.SubString(1))
		row("SentOn") = item.SentOn
		row("ReceivedOn") = item.ReceivedTime
		row("SenderName") = item.SenderName

		If item.SenderEmailType = "EX" Then
			Dim sender As AddressEntry = item.Sender
			If sender IsNot Nothing Then
				If sender.AddressEntryUserType = OlAddressEntryUserType.olExchangeDistributionListAddressEntry Then
					Dim exchDL As ExchangeDistributionList = sender.GetExchangeDistributionList
					If exchDL IsNot Nothing Then
						row("SenderEmailAddress") = exchDL.PrimarySmtpAddress
					End If
				Else
					Dim exchUser As ExchangeUser = sender.GetExchangeUser()
					If exchUser IsNot Nothing Then
						row("SenderEmailAddress") = exchUser.PrimarySmtpAddress
					End If
				End If
			End If
		Else
			row("SenderEmailAddress") = item.SenderEmailAddress
		End If

		row("Unread") = item.Unread
		row("Sensitivity") = item.Sensitivity
		row("Importance") = item.Importance
		row("Flag") = item.FlagRequest
		row("IsHTML") = (item.BodyFormat = 2)

		dataTable.Rows.Add(row)
		Item_Count += 1
	Catch ex As System.Exception
		Dim row As Data.DataRow = errorsTable.NewRow
		row("EntryID") = item.EntryID
		row("Subject") = item.Subject
		row("Error") = ex.Message
	End Try
Next
Items = dataTable
Errors = errorsTable

olNamespace = Nothing 
olApp = Nothing 
]]></code></stage><stage stageid="301b8904-3bcd-4b1b-805a-0a190d6a1f23" name="Item Count" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="563eaaf3-d093-48a1-89fe-5b6dcc312f81" name="Filter Expression" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d314f7c0-0af6-4cc5-a2e1-1b2cb29674d9" name="Entry ID" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5106a0ab-6cbb-410f-9e0d-113791019ded" name="Get Received Items (Advanced)" type="SubSheetInfo"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative>Lists Inbox items matching the filter provided

Eg1 [From]='Mike Coworker' AND [unread]=False

Eg2 [Unread]=True AND [ReceivedTime] &gt;= '2018/01/01'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="38a5b9e1-f5ae-4293-96b5-8e39f6ddad5f" name="Start" type="Start"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" stage="Filter Expression" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /><input type="flag" name="Prefer Plain Text Body" narrative="Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body." stage="Prefer Plain Text Body" /></inputs><onsuccess>bb657ac6-ea98-4042-8df8-0bfec4fe5f42</onsuccess></stage><stage stageid="88b1aeeb-8765-4f0c-98b3-a64aa3effa2c" name="Item Count" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e9952465-1c95-422d-9bfe-1735745d3012" name="Filter Expression" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4d97db59-defd-4f2b-80a0-50ae2c87c68e" name="Outlook Folder ID" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="bb657ac6-ea98-4042-8df8-0bfec4fe5f42" name="Internal_Get Items" type="SubSheet"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="[Sub Folder]" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" friendlyname="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." expr="[Shared Mailbox]" /><input type="flag" name="Prefer Plain Text Body" friendlyname="Prefer Plain Text Body" narrative="Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body." expr="[Prefer Plain Text Body]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /><output type="collection" name="Errors" friendlyname="Errors" narrative="Collection of any error messages that were captured while getting the list of mail items." stage="Errors" /></outputs><onsuccess>87fa8e80-f1f1-4329-8256-0224c2a2164c</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="036baecd-65dc-4916-9438-165b479478b1" name="Outlook Folder ID" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="7c584784-b258-4700-ae02-482668348ae9" name="Get Sent Items (Expert)" type="SubSheetInfo"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative>Lists Sent Items matching the query provided.

Eg1 @SQL=urn:schemas:httpmail:subject='Data Input'

Eg2 @SQL=urn:schemas:httpmail:displayto='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')"

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ecc59d78-3d95-4f68-8f6d-7dfa2ad7c6d4" name="Start" type="Start"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="DASL Query" narrative="Mandatory. A filter using a DASL query, eg @SQL=urn:schemas:httpmail:displayto='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')" stage="Filter Expression" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /><input type="flag" name="Prefer Plain Text Body" narrative="Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body." stage="Prefer Plain Text Body" /></inputs><onsuccess>ef7b49fa-9e40-4ce5-b6ac-67e5c3171164</onsuccess></stage><stage stageid="68c67a7a-d81f-4def-823b-761b317fc9f5" name="Item Count" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="78a90b2a-607e-4d8d-8f04-7c3a81e8bf63" name="Filter Expression" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="920c79f3-90b3-487b-a30c-4e95162d5ecb" name="Outlook Folder ID" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="ef7b49fa-9e40-4ce5-b6ac-67e5c3171164" name="Internal_Get Items" type="SubSheet"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" friendlyname="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." expr="[Shared Mailbox]" /><input type="flag" name="Prefer Plain Text Body" friendlyname="Prefer Plain Text Body" narrative="Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body." expr="[Prefer Plain Text Body]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /><output type="collection" name="Errors" friendlyname="Errors" narrative="Collection of any error messages that were captured while getting the list of mail items." stage="Errors" /></outputs><onsuccess>88475529-0d3e-40b9-8ead-79cedfbdf8c6</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="89de27c3-f759-42a1-956d-49dc91baa367" name="Send Email" type="SubSheetInfo"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><narrative>Sends an Email 

For a list of valid Sensitivity values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olsensitivity

For a list of valid Importance values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olimportance</narrative><display x="-195" y="-120" w="210" h="120" /></stage><stage stageid="2f285e28-d6bb-4e7b-be7b-2631c3a8ac84" name="End" type="End"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="15" y="120" /></stage><stage stageid="79296089-edc5-4338-bf95-6734ad47825d" name="Send Item" type="Code"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="To" expr="[To]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Message" expr="[Message]" /><input type="text" name="Attachments" expr="[Attachments]" /><input type="flag" name="Message Is HTML" expr="[Message Is HTML]" /><input type="number" name="Sensitivity" expr="[Sensitivity]" /><input type="number" name="Importance" expr="[Importance]" /><input type="text" name="Account Display Name" expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" expr="[Shared Mailbox]" /><input type="text" name="Voting Options" expr="[Voting Options]" /><input type="text" name="Vote Recipients" expr="[Vote Recipients]" /><input type="text" name="MIP Label GUID" expr="[MIP Label GUID]" /><input type="text" name="Tenant ID" expr="[Tenant ID]" /></inputs><onsuccess>2f285e28-d6bb-4e7b-be7b-2631c3a8ac84</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim mail = olApp.CreateItem(0)

Dim addressCount As Integer

If [To] <> "" Then
	Dim toAddresses = Split([To], ";")
	For addressCount = LBound(toAddresses) To UBound(toAddresses)
		Dim recipient = mail.Recipients.Add(toAddresses(addressCount)) 
		recipient.Resolve  
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
	Next 
	
End if

If CC <> "" Then
	Dim ccAddresses = Split([CC], ";")
	addressCount = 0
	For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
		Dim recipient = mail.Recipients.Add(ccAddresses(addressCount))
		recipient.Resolve
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC 
	Next

End If

If BCC <> "" Then
	Dim bccAddresses = Split([BCC], ";")
	addressCount = 0
	For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
		Dim recipient = mail.Recipients.Add(bccAddresses(addressCount))
		recipient.Resolve
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
	Next

End If

mail.Subject = Subject

If Message_Is_HTML Then
	mail.BodyFormat = 2
	mail.HTMLBody = Message
Else
	mail.BodyFormat = 1
	mail.Body = Message
End If

For Each att As String In Attachments.Split(";"c)
	If att = "" Then Continue For
	mail.Attachments.Add(att)
Next

If Sensitivity = Int(Sensitivity) AndAlso (Sensitivity >= 0 And Sensitivity <= 3)
	mail.Sensitivity = Sensitivity
Else
	mail.Sensitivity = 0
End If

If Importance = Int(Importance) AndAlso (Importance >= 0 And Importance <= 2) Then
	mail.Importance = Importance
Else
	mail.Importance = 1
End If

If Voting_Options <> "" Then
	mail.VotingOptions = Voting_Options

	' We only set the value of Vote Recipients if the use provided actual voting options.
	If Vote_Recipients <> "" Then
		Dim voteAddresses = Split([Vote_Recipients], ";")
		For addressCount = LBound(voteAddresses) To UBound(voteAddresses)
			Dim recipient = mail.ReplyRecipients.Add(voteAddresses(addressCount)) 
			recipient.Resolve  
			If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
		Next 
		
	End if

End If

If Not String.IsNullOrEmpty(Shared_Mailbox) Then
	mail.SentOnBehalfOfName = Shared_Mailbox
ElseIf Not String.IsNullOrEmpty(Account_Display_Name) Then
	Try
'		Dim _nameSpace As Microsoft.Office.Interop.Outlook.NameSpace = app.GetNameSpace("MAPI")
		Dim aa As List(Of Account) = olNamespace.Accounts.Cast(Of Account).ToList()
		Dim acct = aa.Where(Function(x) x.DisplayName = Account_Display_Name).FirstOrDefault()
		mail.SendUsingAccount(acct)
	Catch ex As System.Exception
		Dim ex1 As New System.Exception(VbCrlf + "Unable to find Account Display Name '" + Account_Display_Name + "'." + VbCrlf + ex.Message)
		Throw ex1
	End Try
End If

' Adds Information Protection Label with respect to pre-configured policy
If MIP_Label_GUID <> "" And Tenant_ID <> "" Then
	Dim timestamp = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ssZ")
	Dim MIP_Headers = "MSIP_Label_" + MIP_Label_GUID + "_Enabled=true; MSIP_Label_" + MIP_Label_GUID + "_SiteId=" + Tenant_ID + "; MSIP_Label_" + MIP_Label_GUID + "_SetDate=" + timestamp + "; MSIP_Label_" + MIP_Label_GUID + "_Method=Privileged; " 
	mail.PropertyAccessor.SetProperty("http://schemas.microsoft.com/mapi/string/{00020386-0000-0000-C000-000000000046}/MSIP_Labels", MIP_Headers)
End If

mail.Save
mail.Send

olNamespace = Nothing 
olApp = Nothing 
]]></code></stage><stage stageid="e8e74832-24e7-4d9b-977d-f3720a5f58a3" name="Subject" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9254c70d-8233-413f-a7c8-5b920c8d7595" name="To" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c4cefa2-e465-4d3a-adae-410a8e2d6b73" name="Message" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3106293e-e64d-4d13-9671-b39e8c6be771" name="Attachments" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9418ede2-db6d-4912-bcd8-209a495359dc" name="Save Attachments" type="SubSheetInfo"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><narrative>Downloads all attachments to a folder. 

The Entry ID is the unique idenfier used to determine which email is to be actioned.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f3f87040-02dc-44e3-94ac-4e94444ce722" name="End" type="End"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="15" y="15" /></stage><stage stageid="2e36171f-a7a2-4de1-b778-bd029753aad5" name="Start" type="Start"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." stage="Folder Path" /><input type="text" name="File Pattern" narrative="Optional, Default value is *.* but common cases inlcude &quot;*.docx&quot; , &quot;*.pdf&quot; , &quot;*.xlsx&quot; etc." stage="File Pattern" /><input type="flag" name="Ignore Embedded Images" narrative="Optional. Flag that dictates whether embedded images in an email, like company logos, are ignored. Default value is True (ignore)." stage="Ignore Embedded Images" /></inputs><onsuccess>0ec3c501-009c-4736-9511-3b84c98dcc66</onsuccess></stage><stage stageid="0ec3c501-009c-4736-9511-3b84c98dcc66" name="Save Attachments" type="Code"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="Folder Path" expr="[Folder Path]" /><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="File Pattern" expr="[File Pattern]" /><input type="flag" name="Ignore Embedded Images" expr="[Ignore Embedded Images]" /></inputs><onsuccess>f3f87040-02dc-44e3-94ac-4e94444ce722</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim item = olNamespace.GetItemFromID(Entry_ID)
If item Is Nothing Then Return

If Not Folder_Path.EndsWith("\") Then Folder_Path &="\"

If item.Attachments IsNot Nothing AndAlso item.Attachments.Count > 0 Then
	Dim PR_ATTACH_CONTENT_ID_W As String = "http://schemas.microsoft.com/mapi/proptag/0x3712001F"
	Dim PR_ATTACH_METHOD As String = "http://schemas.microsoft.com/mapi/proptag/0x37050003"
	Dim PR_ATTACH_FLAGS As String = "http://schemas.microsoft.com/mapi/proptag/0x3714000A"
	Dim MailAttachments As IEnumerable(Of NetOffice.OutlookApi.Attachment)
	Dim Attachments As Attachments = item.Attachments
	Dim embeddedImageNames As New List(Of string)()
	
	'************************************************************************************************
	' NOTE: There are multiple sections of logic defined below that attempt to deal with identifying 
	' and filtering out embedded images. These different approaches are necessary due to the various 
	' ways an image can be represented within an email.
	'************************************************************************************************

	MailAttachments = Attachments.Cast(Of NetOffice.OutlookApi.Attachment).Where(Function(x) x.FileName Like File_Pattern)

	' If the body format is HTML we need to get a list of all embedded images to ensure we don't save any when the Ignore Embedded Images flag is set.
	If ((Ignore_Embedded_Images) And (item.BodyFormat = OlBodyFormat.olFormatHTML))
		' Check for standard HTML <img>...</img> tags.
		For Each m As Match In Regex.Matches(item.HtmlBody, "<img.+?src=[""'](.+?)[""'].+?>", RegexOptions.IgnoreCase Or RegexOptions.Multiline)
			embeddedImageNames.Add(m.Groups(1).Value)
		Next

		' Check for VML <v:image>...</v:image> tags. This shouldn't be necessary as VML was deprecated back in 2011'ish, but it seems some companies
		' still use it in their Outlook email templates.
		For Each m As Match In Regex.Matches(item.HtmlBody, "<v:image.+?src=[""'](.+?)[""'].+?>", RegexOptions.IgnoreCase Or RegexOptions.Multiline)
			embeddedImageNames.Add(m.Groups(1).Value)
		Next		
	End If

	Dim AttachmentNameList As Dictionary(Of String, Short) = New Dictionary(Of String, Short)
	For Each MailAttachment As NetOffice.OutlookApi.Attachment In MailAttachments
		' If the Ignore_Embedded_Images flag is True and the body content type is HTML, we check to see if the CID (Content ID) of the attachement is found in the list of embedded images  
		If (Not Ignore_Embedded_Images) Or ((Ignore_Embedded_Images) And (Not embeddedImageNames.Contains("cid:" & MailAttachment.PropertyAccessor.GetProperty(PR_ATTACH_CONTENT_ID_W)))) Then
			If (MailAttachment.Type = 1 OrElse MailAttachment.Type = 5 OrElse MailAttachment.Type = 6) Then
				Dim FileNameSeq As Short = 0
				If AttachmentNameList.ContainsKey(MailAttachment.FileName) Then
					AttachmentNameList.TryGetValue(MailAttachment.FileName, FileNameSeq)
					FileNameSeq += 1
					AttachmentNameList.Item(MailAttachment.FileName) = FileNameSeq
				Else
					AttachmentNameList.Add(MailAttachment.FileName, FileNameSeq)
				End If
				Dim AttachmentFullName As String
				If FileNameSeq = 0 Then
					AttachmentFullName = Folder_Path & MailAttachment.FileName
				Else
					AttachmentFullName = Folder_Path & Path.GetFileNameWithoutExtension(MailAttachment.FileName) & " (" & CStr(FileNameSeq) & ")" & Path.GetExtension(MailAttachment.FileName)
				End If
				MailAttachment.SaveAsFile(AttachmentFullName)
			End If
		End If
	Next
End If

olNamespace = Nothing 
olApp = Nothing ]]></code></stage><stage stageid="38d69990-6a5f-40ce-a4bb-541e49726b64" name="Folder Path" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9f357ec6-15f4-4133-8da8-5061d4359d38" name="Entry ID" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a88d805-9f51-4298-9905-cb28610dae96" name="File Pattern" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">*.*</initialvalue><private /><alwaysinit /></stage><stage stageid="ad2e31ff-e5ef-4467-a348-13dc9a8a1acb" name="Save Attachment" type="SubSheetInfo"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><narrative>Downloads a specfic attachment to a folder. E.g. use cases are "*.txt" or "*.docx" etc.

The Entry ID is the unique idenfier used to determine which email is to be actioned.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a8e9b1e1-4b0f-487d-89a5-6cacb4092be4" name="End" type="End"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="2d1786e1-24e4-45da-b52c-bffa330fb007" name="Start" type="Start"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." stage="Folder Path" /><input type="text" name="File Name" narrative="Optional, Default value is *.* but common cases inlcude &quot;.docx&quot; , &quot;.pdf&quot; , &quot;.xlsx&quot; etc." stage="File Name" /></inputs><onsuccess>b1663b58-d99f-4f8e-9641-4b3db50ca615</onsuccess></stage><stage stageid="d2e8f631-485a-489a-8cbc-aac247d721f9" name="Folder Path" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d7649073-c4eb-42b1-aaa4-7c50430a5cf3" name="Entry ID" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b7a4371-4fa0-4a3e-a132-5315118f7cae" name="File Name" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">*.*</initialvalue><private /><alwaysinit /></stage><stage stageid="d9a607b6-73e8-49ec-b2bc-a8032c0ab747" name="Save Attachments" type="SubSheet"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." expr="[Entry ID]" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." expr="[Folder Path]" /><input type="text" name="File Pattern" friendlyname="File Pattern" narrative="Optional, Default value is *.* but common cases inlcude &quot;.docx&quot; , &quot;.pdf&quot; , &quot;.xlsx&quot; etc." expr="[File Name]" /><input type="flag" name="Ignore Embedded Images" friendlyname="Ignore Embedded Images" narrative="Optional. Flag that dictates whether embedded images in an email, like company logos, are ignored. Default value is True (ignore)." expr="True" /></inputs><onsuccess>a8e9b1e1-4b0f-487d-89a5-6cacb4092be4</onsuccess><processid>758f4938-75a1-4157-b0f7-2d9b99144d61</processid></stage><stage stageid="16e667f4-007c-48aa-91ad-4f253b96fc00" name="CC" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc158b15-69a9-4850-a4e2-d67f53c55d87" name="BCC" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="983656a5-d686-4ef0-ab54-aa50aa32e7d5" name="Delete Email" type="SubSheetInfo"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><narrative>Deletes a specific email item.

The Entry ID is the unique idenfier used to determine which email is to be deleted.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5f395532-0166-41e3-9087-6eb241347133" name="Start" type="Start"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>29bbbced-f689-4200-b43b-27e7b01a3c5d</onsuccess></stage><stage stageid="a191ef9e-e78a-4de9-901b-19e7ca766c72" name="End" type="End"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="29bbbced-f689-4200-b43b-27e7b01a3c5d" name="Delete" type="Code"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>a191ef9e-e78a-4de9-901b-19e7ca766c72</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim item = olNamespace.GetItemFromID(Entry_ID)

item.Delete

olNamespace = Nothing
olApp = Nothing
]]></code></stage><stage stageid="2d8d8f32-8e9d-49fc-a345-a25e3050ecac" name="Entry ID" type="Data"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1dcba3a-0e74-4632-809f-7b942c719eeb" name="Reply All to Email" type="SubSheetInfo"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><narrative>Reply to all Emails recipients of a specific email.

The &lt;Reply All to Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.

For a list of valid Sensitivity values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olsensitivity

For a list of valid Importance values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olimportance</narrative><display x="-195" y="-60" w="150" h="120" /></stage><stage stageid="91e5fe6f-95fe-4c43-aac6-317ccb565fa8" name="End" type="End"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="719856cc-820a-4771-b362-9f0d98896f7b" name="Start" type="Start"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /><input type="flag" name="IsHTML" narrative="Optional. True or False, default to True" stage="Message Is HTML" /><input type="number" name="Sensitivity" narrative="Optional. An integer between 0 to 3, default to 0." stage="Sensitivity" /><input type="number" name="Importance" narrative="Optional. An integer between 0 to 2, default to 1." stage="Importance" /><input type="text" name="Subject" narrative="Optional. Any text entered will override the default reply subject." stage="Subject" /><input type="text" name="Attachments" narrative="Optional. Semicolon--separated file paths. Default blank." stage="Attachments" /><input type="text" name="To" narrative="Optional. A semicolon delimited list of additional email addresses to include in the 'To' address of the reply. Example: Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;." stage="To" /><input type="text" name="CC" narrative="Optional. A semicolon delimited list of additional email addresses to include in the 'CC' address of the reply. Example: Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;." stage="CC" /><input type="text" name="BCC" narrative="Optional. A semicolon delimited list of additional email addresses to include in the 'BCC' address of the reply. Example: Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;." stage="BCC" /><input type="text" name="MIP Label GUID" narrative="Optional: The unique identifier associated with an MIP sensitivity label within your organization." stage="MIP Label GUID" /><input type="text" name="Tenant ID" narrative="Optional: Required when sending mail with an MIP sensitivity label." stage="Tenant ID" /></inputs><onsuccess>a5f3fe96-39cd-4d2f-ad7f-a03fe9295f96</onsuccess></stage><stage stageid="a5f3fe96-39cd-4d2f-ad7f-a03fe9295f96" name="Reply All" type="Code"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Message" expr="[Message]" /><input type="flag" name="Message_Is_HTML" expr="[Message Is HTML]" /><input type="number" name="Sensitivity" expr="[Sensitivity]" /><input type="number" name="Importance" expr="[Importance]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Attachments" expr="[Attachments]" /><input type="text" name="To" expr="[To]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="MIP Label GUID" expr="[MIP Label GUID]" /><input type="text" name="Tenant ID" expr="[Tenant ID]" /></inputs><onsuccess>91e5fe6f-95fe-4c43-aac6-317ccb565fa8</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim item = olNamespace.GetItemFromID(Entry_ID)
Dim reply = item.ReplyAll

Dim addressCount As Integer
If [To] <> "" Then
	Dim toAddresses = Split([To], ";")
	For addressCount = LBound(toAddresses) To UBound(toAddresses)
		Dim recipient = reply.Recipients.Add(toAddresses(addressCount)) 
		recipient.Resolve  
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
	Next 
End if

If CC <> "" Then
	Dim ccAddresses = Split([CC], ";")
	addressCount = 0
	For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
		Dim recipient = reply.Recipients.Add(ccAddresses(addressCount))
		recipient.Resolve
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC 
	Next
End If

If BCC <> "" Then
	Dim bccAddresses = Split([BCC], ";")
	addressCount = 0
	For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
		Dim recipient = reply.Recipients.Add(bccAddresses(addressCount))
		recipient.Resolve
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
	Next
End If

If Not String.IsNullOrEmpty(Subject) Then
	reply.Subject = Subject
End If

If Message_Is_HTML Then
	reply.BodyFormat = 2
	reply.HTMLBody = Message & vbCrLf & reply.HTMLBody
Else
	reply.BodyFormat = 1
	reply.Body = Message & vbCrLf & reply.Body
End If

For Each att As String In Attachments.Split(";"c)
	If att = "" Then Continue For
	reply.Attachments.Add(att)
Next

If Sensitivity = Int(Sensitivity) AndAlso (Sensitivity >= 0 And Sensitivity <= 3)
	reply.Sensitivity = Sensitivity
Else
	reply.Sensitivity = 0
End If

If Importance = Int(Importance) AndAlso (Importance >= 0 And Importance <= 2) Then
	reply.Importance = Importance
Else
	reply.Importance = 1
End If

' Adds Information Protection Label with respect to pre-configured policy
If MIP_Label_GUID <> "" And Tenant_ID <> "" Then
	Dim timestamp = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ssZ")
	Dim MIP_Headers = "MSIP_Label_" + MIP_Label_GUID + "_Enabled=true; MSIP_Label_" + MIP_Label_GUID + "_SiteId=" + Tenant_ID + "; MSIP_Label_" + MIP_Label_GUID + "_SetDate=" + timestamp + "; MSIP_Label_" + MIP_Label_GUID + "_Method=Privileged; " 
	reply.PropertyAccessor.SetProperty("http://schemas.microsoft.com/mapi/string/{00020386-0000-0000-C000-000000000046}/MSIP_Labels", MIP_Headers)
End If

reply.Send

olNamespace = Nothing 
olApp = Nothing 
]]></code></stage><stage stageid="c0de4880-e914-4cbd-9b40-fd4b87639b56" name="Entry ID" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4aa3eccc-d10e-460b-96ce-82f3d86a5c36" name="Message" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="502b5d9b-0ef4-4f7d-9e45-2740f2866f3a" name="Forward Email" type="SubSheetInfo"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><narrative>Forward Email to recipients (To/CC/BCC) including (Message) as input parameters.

The &lt;Forward Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.

For a list of valid Sensitivity values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olsensitivity

For a list of valid Importance values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olimportance</narrative><display x="-195" y="-75" w="210" h="150" /></stage><stage stageid="d398f6bf-9903-432b-9d08-93ca68a5ce15" name="End" type="End"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="b5542c2e-3ef3-4636-82e6-10fcb6b9f5ef" name="Entry ID" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd6ecc76-eb50-4203-95cd-c77e9fcf2ad5" name="Message" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9886ff21-e65d-440d-b60a-9869153650be" name="Forward" type="Code"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="To" expr="[To]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Message" expr="[Message]" /><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="flag" name="Message_Is_HTML" expr="[Message Is HTML]" /><input type="number" name="Sensitivity" expr="[Sensitivity]" /><input type="number" name="Importance" expr="[Importance]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Attachments" expr="[Attachments]" /><input type="text" name="MIP Label GUID" expr="[MIP Label GUID]" /><input type="text" name="Tenant ID" expr="[Tenant ID]" /></inputs><onsuccess>d398f6bf-9903-432b-9d08-93ca68a5ce15</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim item = olNamespace.GetItemFromID(Entry_ID)
Dim mail = item.Forward
Dim addressCount As Integer

If [To] <> "" Then
	Dim toAddresses = Split([To], ";")
	For addressCount = LBound(toAddresses) To UBound(toAddresses)
	Dim recipient = mail.Recipients.Add(toAddresses(addressCount)) 
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
	Next

End If

If CC <> "" Then
	Dim ccAddresses = Split([CC], ";")
	addressCount = 0
	For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
	Dim recipient = mail.Recipients.Add(ccAddresses(addressCount))
	recipient.Resolve	
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC
	Next

End If
	
If BCC <> "" Then
	Dim bccAddresses = Split([BCC], ";")
	addressCount = 0
	For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
	Dim recipient = mail.Recipients.Add(bccAddresses(addressCount))
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
	Next

End If

If String.IsNullOrEmpty(Subject) Then
	' Check to see if "FW:" has been added to the subject already (i.e. this is already a forwarded message).
	If (item.Subject.StartsWith("FW: ", 2))
		mail.Subject = item.Subject
	Else
		mail.Subject = "FW: " & item.Subject
	End If
Else
	' The user is overriding the subject value.
	mail.Subject = Subject
End If

' Capture the original sender info and add it at the beginning of the forwarded message body.
Dim originalInfo As New StringBuilder()
originalInfo.Append("<p>")
originalInfo.Append("<b>From:</b> " & item.SenderName & " &lt;" & item.SenderEmailAddress & "&gt;<br/>")
originalInfo.Append("<b>Sent:</b> " & Format(item.SentOn, "f") & "<br/>")
originalInfo.Append("<b>To:</b> ")

For Each addressee As Recipient In item.Recipients
	Dim smtpAddress As String = ""
	If addressee.AddressEntry.AddressEntryUserType = OlAddressEntryUserType.olExchangeDistributionListAddressEntry Then
		Dim exchDL As ExchangeDistributionList = addressee.AddressEntry.GetExchangeDistributionList
		If exchDL IsNot Nothing Then
			smtpAddress = exchDL.PrimarySmtpAddress
		End If
	Else
		Dim exchUser As ExchangeUser = addressee.AddressEntry.GetExchangeUser()
		If exchUser IsNot Nothing Then
			smtpAddress = exchUser.PrimarySmtpAddress
		End If
	End If

	' In case the addressee wasn't an Exchange user.
	If (smtpAddress = "") Then
		smtpAddress = addressee.Address
	End If

	originalInfo.Append(addressee.Name & " &lt;" & smtpAddress & "&gt;;")
Next

originalInfo.Append("<br/>")
originalInfo.Append("<b>Subject:</b> " & item.Subject)
originalInfo.Append("</p>")

If Message_Is_HTML Then
	mail.BodyFormat = 2
	mail.HTMLBody = Message & "<hr/>" & originalInfo.ToString() & item.HTMLBody
Else
	mail.BodyFormat = 1
	mail.Body = Message & "\n----------------------------------------------------------\n" & originalInfo.ToString() & "\n" & item.Body
End If

For Each att As String In Attachments.Split(";"c)
	If att = "" Then Continue For
	mail.Attachments.Add(att)
Next

If Sensitivity = Int(Sensitivity) AndAlso (Sensitivity >= 0 And Sensitivity <= 3)
	mail.Sensitivity = Sensitivity
Else
	mail.Sensitivity = 0
End If

If Importance = Int(Importance) AndAlso (Importance >= 0 And Importance <= 2) Then
	mail.Importance = Importance
Else
	mail.Importance = 1
End If

' Adds Information Protection Label with respect to pre-configured policy
If MIP_Label_GUID <> "" And Tenant_ID <> "" Then
	Dim timestamp = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ssZ")
	Dim MIP_Headers = "MSIP_Label_" + MIP_Label_GUID + "_Enabled=true; MSIP_Label_" + MIP_Label_GUID + "_SiteId=" + Tenant_ID + "; MSIP_Label_" + MIP_Label_GUID + "_SetDate=" + timestamp + "; MSIP_Label_" + MIP_Label_GUID + "_Method=Privileged; " 
	mail.PropertyAccessor.SetProperty("http://schemas.microsoft.com/mapi/string/{00020386-0000-0000-C000-000000000046}/MSIP_Labels", MIP_Headers)
End If

mail.Save
mail.Send

olNamespace = Nothing 
olApp = Nothing 
]]></code></stage><stage stageid="9a9158e0-2caf-4e8b-8277-bcfa3f0b8565" name="To" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fba137b6-ad3b-48a5-b887-6302a10956ec" name="CC" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d683ac76-a352-4994-89a5-d8a249f84648" name="BCC" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ed52409-4c74-4cd4-8b16-9e9d057097b4" name="Start" type="Start"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" stage="To" /><input type="text" name="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="CC" /><input type="text" name="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="BCC" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /><input type="flag" name="IsHTML" narrative="Optional. True or False, default to True" stage="Message Is HTML" /><input type="number" name="Sensitivity" narrative="Optional. An integer between 0 to 3, default to 0." stage="Sensitivity" /><input type="number" name="Importance" narrative="Optional. An integer between 0 to 2, default to 1." stage="Importance" /><input type="text" name="Subject" narrative="Optional. Any text entered will override the default forwarding subject." stage="Subject" /><input type="text" name="Attachments" narrative="Optional, Semicolon--separated file paths. Default blank." stage="Attachments" /><input type="text" name="MIP Label GUID" narrative="Optional: The unique identifier associated with an MIP sensitivity label within your organization." stage="MIP Label GUID" /><input type="text" name="Tenant ID" narrative="Optional: Required when sending mail with an MIP sensitivity label." stage="Tenant ID" /></inputs><onsuccess>9886ff21-e65d-440d-b60a-9869153650be</onsuccess></stage><stage stageid="c36190da-7569-4737-a401-bec5b006c53f" name="Start" type="Start"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" stage="To" /><input type="text" name="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="CC" /><input type="text" name="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="BCC" /><input type="text" name="Subject" narrative="Optional. Any alphanumeric value allowed." stage="Subject" /><input type="text" name="Message" narrative="Optional, HTML or plain text" stage="Message" /><input type="text" name="Attachments" narrative="Optional, Semicolon--separated file paths. Default blank." stage="Attachments" /><input type="flag" name="IsHTML" narrative="Optional. True or False, default to True" stage="Message Is HTML" /><input type="number" name="Sensitivity" narrative="Optional. An integer between 0 and 3, default to 0." stage="Sensitivity" /><input type="number" name="Importance" narrative="Optional. An integer between 0 and 2 default to 1." stage="Importance" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /><input type="text" name="Voting Options" narrative="Optional: A semicolon-delimited list of values. Example: “Cheese; Mushroom; Sausage; Combo; Veg Combo;”. " stage="Voting Options" /><input type="text" name="Vote Recipients" narrative="Optional: A semicolon-delimited list of email addresses that should receive the results of any votes." stage="Vote Recipients" /><input type="text" name="MIP Label GUID" narrative="Optional: The unique identifier associated with an MIP sensitivity label within your organization." stage="MIP Label GUID" /><input type="text" name="Tenant ID" narrative="Optional: Required when sending mail with an MIP sensitivity label." stage="Tenant ID" /></inputs><onsuccess>79296089-edc5-4338-bf95-6734ad47825d</onsuccess></stage><stage stageid="6e74a6d0-d073-418d-bcee-5efe9f5733bb" name="Sub Folder" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df4f0bad-ced5-4315-8edc-e3138d7a7123" name="Sub Folder" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80516df7-3359-4f2c-8547-9312e5b237c2" name="Items" type="Collection"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /><field name="Sensitivity" type="number" description="Sensitivity of an email" /><field name="Importance" type="number" description="Importance of an email" /><field name="Flag" type="text" description="Flag status of an email" /><field name="IsHTML" type="flag" description="True if an email is in HTML" /></collectioninfo></stage><stage stageid="88475529-0d3e-40b9-8ead-79cedfbdf8c6" name="End" type="End"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /><output type="collection" name="Errors" narrative="Collection of any error messages that were captured while getting the list of mail items." stage="Errors" /></outputs></stage><stage stageid="87fa8e80-f1f1-4329-8256-0224c2a2164c" name="End" type="End"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /><output type="collection" name="Errors" narrative="Collection of any error messages that were captured while getting the list of mail items." stage="Errors" /></outputs></stage><stage stageid="93f4c073-8a54-4ee0-9b01-776c516fec9d" name="Reply to Email" type="SubSheetInfo"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><narrative>Reply to Email sender of a specific email.

The &lt;Reply to Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.

For a list of valid Sensitivity values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olsensitivity

For a list of valid Importance values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olimportance</narrative><display x="-165" y="-60" w="150" h="120" /></stage><stage stageid="7273229e-a2d0-4468-a343-efaf656b1598" name="End" type="End"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="f68ab080-2e34-44d9-93af-67409139a21d" name="Start" type="Start"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /><input type="flag" name="IsHTML" narrative="Optional. True or False, default to True" stage="Message Is HTML" /><input type="number" name="Sensitivity" narrative="Optional. An integer between 0 to 3, default to 0." stage="Sensitivity" /><input type="number" name="Importance" narrative="Optional. An integer between 0 to 3, default to 1." stage="Importance" /><input type="text" name="Subject" narrative="Optional. Any text entered will override the default reply subject." stage="Subject" /><input type="text" name="Attachments" narrative="Optional, Semicolon--separated file paths. Default blank." stage="Attachments" /><input type="text" name="To" narrative="Optional. A semicolon delimited list of additional email addresses to include in the 'To' address of the reply. Example: Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;." stage="To" /><input type="text" name="CC" narrative="Optional. A semicolon delimited list of additional email addresses to include in the 'CC' address of the reply. Example: Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;." stage="CC" /><input type="text" name="BCC" narrative="Optional. A semicolon delimited list of additional email addresses to include in the 'BCC' address of the reply. Example: Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;." stage="BCC" /><input type="text" name="MIP Label GUID" narrative="Optional: The unique identifier associated with an MIP sensitivity label within your organization." stage="MIP Label GUID" /><input type="text" name="Tenant ID" narrative="Optional: Required when sending mail with an MIP sensitivity label." stage="Tenant ID" /></inputs><onsuccess>52a97793-74c5-49d7-b4fc-55d03d5b81a2</onsuccess></stage><stage stageid="52a97793-74c5-49d7-b4fc-55d03d5b81a2" name="Reply" type="Code"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Message" expr="[Message]" /><input type="flag" name="Message_Is_HTML" expr="[Message Is HTML]" /><input type="number" name="Sensitivity" expr="[Sensitivity]" /><input type="number" name="Importance" expr="[Importance]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Attachments" expr="[Attachments]" /><input type="text" name="To" expr="[To]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="MIP Label GUID" expr="[MIP Label GUID]" /><input type="text" name="Tenant ID" expr="[Tenant ID]" /></inputs><onsuccess>7273229e-a2d0-4468-a343-efaf656b1598</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim item = olNamespace.GetItemFromID(Entry_ID)
Dim reply = item.Reply

Dim addressCount As Integer
If [To] <> "" Then
	Dim toAddresses = Split([To], ";")
	For addressCount = LBound(toAddresses) To UBound(toAddresses)
		Dim recipient = reply.Recipients.Add(toAddresses(addressCount)) 
		recipient.Resolve  
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
	Next 
End if

If CC <> "" Then
	Dim ccAddresses = Split([CC], ";")
	addressCount = 0
	For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
		Dim recipient = reply.Recipients.Add(ccAddresses(addressCount))
		recipient.Resolve
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC 
	Next
End If

If BCC <> "" Then
	Dim bccAddresses = Split([BCC], ";")
	addressCount = 0
	For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
		Dim recipient = reply.Recipients.Add(bccAddresses(addressCount))
		recipient.Resolve
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
	Next
End If

If Not String.IsNullOrEmpty(Subject) Then
	reply.Subject = Subject
End If

If Message_Is_HTML Then
	reply.BodyFormat = 2
	reply.HTMLBody = Message & vbCrLf & reply.HTMLBody
Else
	reply.BodyFormat = 1
	reply.Body = Message & vbCrLf & reply.Body
End If

For Each att As String In Attachments.Split(";"c)
	If att = "" Then Continue For
	reply.Attachments.Add(att)
Next

If Sensitivity = Int(Sensitivity) AndAlso (Sensitivity >= 0 And Sensitivity <= 3)
	reply.Sensitivity = Sensitivity
Else
	reply.Sensitivity = 0
End If

If Importance = Int(Importance) AndAlso (Importance >= 0 And Importance <= 2) Then
	reply.Importance = Importance
Else
	reply.Importance = 1
End If

' Adds Information Protection Label with respect to pre-configured policy
If MIP_Label_GUID <> "" And Tenant_ID <> "" Then
	Dim timestamp = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ssZ")
	Dim MIP_Headers = "MSIP_Label_" + MIP_Label_GUID + "_Enabled=true; MSIP_Label_" + MIP_Label_GUID + "_SiteId=" + Tenant_ID + "; MSIP_Label_" + MIP_Label_GUID + "_SetDate=" + timestamp + "; MSIP_Label_" + MIP_Label_GUID + "_Method=Privileged; " 
	reply.PropertyAccessor.SetProperty("http://schemas.microsoft.com/mapi/string/{00020386-0000-0000-C000-000000000046}/MSIP_Labels", MIP_Headers)
End If

reply.Send

olNamespace = Nothing 
olApp = Nothing 
]]></code></stage><stage stageid="b129ab89-df26-4975-a3b1-30127f6e78af" name="Entry ID" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-165" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34d6dbc0-3597-4b72-8a65-5a90f164b75a" name="Message" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da3ecbf5-d75b-47d2-90f4-fa09e80b656b" name="Move Email to Inbox Sub Folder" type="SubSheetInfo"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>DEPRECATED - This action is deprecated as v6.10.4 of this VBO. You should use the newer 'Move Item' action.

Moves an email to a subfolder within the inbox folder.

The Entry ID is the unique idenfier used to determine which email is to be moved.

Example
Inbox to Inbox\SubFolder </narrative><display x="-180" y="-60" w="240" h="120" /></stage><stage stageid="9033fc52-da65-4e8d-92a5-b67a33a0379a" name="Start" type="Start"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Destination Folder" narrative="Mandatory. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Destination Folder" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account to move the email to. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Shared Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /></inputs><onsuccess>3fa82add-9fd2-4264-8fbe-02536dae2237</onsuccess></stage><stage stageid="5461bd38-d7d7-4a3c-b23b-35857aa8a5ef" name="End" type="End"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="New Entry ID" narrative="Returns the new Entry ID from the Moved Email Object" stage="New Entry ID" /></outputs></stage><stage stageid="3fa82add-9fd2-4264-8fbe-02536dae2237" name="Move" type="Code"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Destination Folder" expr="[Destination Folder]" /><input type="text" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Account Display Name" expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" expr="[Shared Mailbox]" /></inputs><outputs><output type="text" name="New Entry ID" stage="New Entry ID" /></outputs><onsuccess>5461bd38-d7d7-4a3c-b23b-35857aa8a5ef</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim folder As NetOffice.OutlookApi.MAPIFolder = Nothing
Dim item = olNamespace.GetItemFromID(Entry_ID)

If Shared_Mailbox <> "" Then
	' The interop library for Outlook seems a bit fickle. As a result we've implemented two different paths for getting the pointer to the shared mailbox.
	Try
		If Outlook_Folder_ID = 6 Then
			folder = olNamespace.Folders(Shared_Mailbox).Folders("Inbox")
		ElseIf Outlook_Folder_ID = 5 Then
			folder = olNamespace.Folders(Shared_Mailbox).Folders("Sent Items")
		End If
	Catch
		folder = Nothing
	End Try

	If folder Is Nothing Then
		Dim recipient = olNamespace.CreateRecipient(Shared_Mailbox)
		recipient.Resolve()
		If recipient.Resolved Then
			folder = olNamespace.GetSharedDefaultFolder(recipient, Outlook_Folder_ID)
		Else
			Dim ex1 As New System.Exception(VbCrlf + "Failed to resolve shared mailbox '" + Shared_Mailbox + "'.")
			Throw ex1
		End If
	End If
Else
	If Account_Display_Name <> "" Then
		Try
			Dim aa As List(Of Account) = olNamespace.Accounts.Cast(Of Account).ToList()
			folder  = aa.Where(Function(x) x.DisplayName = Account_Display_Name).FirstOrDefault().DeliveryStore.GetDefaultFolder(Outlook_Folder_ID)
		Catch ex As System.Exception
			Dim ex1 As New System.Exception(VbCrlf + "Failed to retrieve default folder for Account Display Name '" + Account_Display_Name + "'." + VbCrlf + ex.Message)
			Throw ex1
		End Try
	Else
		folder = olNamespace.GetDefaultFolder(Outlook_Folder_ID)
	End If
End If

If Destination_Folder <> "" Then
	For each name as string in Destination_Folder.Split("\")
		Try
			folder = folder.Folders(name)
		Catch ex As System.Exception
			Dim ex1 As New System.Exception(VbCrlf + "Failed to locate folder '" + name + "'." + VbCrlf + ex.Message)
			Throw ex1
		End Try
	Next
End If

New_Entry_ID = item.Move(folder).EntryID

olNamespace = Nothing 
olApp = Nothing 
]]></code></stage><stage stageid="18da11cb-f313-4820-b7e7-8c9bd6f12675" name="Entry ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-180" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41304024-3f20-476e-b6bf-1e12ff6ead9a" name="Outlook Folder ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>MS Outlook - OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-180" y="210" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="9d9afabb-e65b-471a-8a66-913480436037" name="Destination Folder" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><display x="-180" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa9964be-3e71-4206-88f6-74e09c1f1415" name="File Name" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30cb5e90-86c2-4790-9204-89ddbd70d778" name="Get Sent Items (Basic)" type="SubSheetInfo"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative>Lists Sent Items matching the parameters provided</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b4070f66-8405-4c2f-87f1-4d34a75561b8" name="Start" type="Start"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Sent To" narrative="Optional. The To display name, which might be a name (eg John Smith), an email address (eg admin@client.com), or a list (eg John Smith; Ann Jones; admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the To field." stage="Sent To" /><input type="text" name="Copied To" narrative="Optional. The CC display name, which might be a name (eg John Smith), an email address (eg admin@client.com), or a semi-colon separated list (eg John Smith; Ann Jones; admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the To field." stage="Copied To" /><input type="datetime" name="Sent Earliest" narrative="Optional. The earliest date to search from." stage="Sent Earliest" /><input type="datetime" name="Sent Latest" narrative="Optional. The latest date to search to." stage="Sent Latest" /><input type="text" name="Subject" narrative="Optional. Asterisk wildcard permitted, eg *Project Update for 'Project Update', 'RE: Project Update' etc." stage="Subject" /><input type="text" name="Message" narrative="Optional. Asterisk wildcard permitted, eg *Blue Prism*" stage="Message" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /><input type="flag" name="Prefer Plain Text Body" narrative="Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body." stage="Prefer Plain Text Body" /></inputs><onsuccess>69a5f33d-acd2-4bb9-9d2b-069cfc7fc32c</onsuccess></stage><stage stageid="905b5da3-5ab3-4c57-8c5f-33ed85e5c4a8" name="Item Count" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97127f0f-f77c-4b85-9c18-18e6556fbfa4" name="Outlook Folder ID" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="5097438d-04b5-4688-9fd5-c93dbe0d26c4" name="Internal_Get Items" type="SubSheet"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="285" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" friendlyname="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." expr="[Shared Mailbox]" /><input type="flag" name="Prefer Plain Text Body" friendlyname="Prefer Plain Text Body" narrative="Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body." expr="[Prefer Plain Text Body]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /><output type="collection" name="Errors" friendlyname="Errors" narrative="Collection of any error messages that were captured while getting the list of mail items." stage="Errors" /></outputs><onsuccess>20b10fc6-ced8-4cf1-b991-19fbff8e181a</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="20b10fc6-ced8-4cf1-b991-19fbff8e181a" name="End" type="End"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="345" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /><output type="collection" name="Errors" narrative="Collection of any error messages that were captured while getting the list of mail items." stage="Errors" /></outputs></stage><stage stageid="2fc294dd-0be1-48ae-85b7-f811d7015b19" name="Filter Expression" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="29639c3b-dcc7-4427-bc90-57319d2ae6e8" name="Sent Earliest" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="-45" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28d1cc10-ae57-4ea2-b01c-b9a8bded12ad" name="Sent Latest" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="0" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3d2888f-df21-47e3-8405-7f6f4564a71b" name="Clean" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="240" /><onsuccess>5097438d-04b5-4688-9fd5-c93dbe0d26c4</onsuccess><calculation expression="&quot;@SQL=&quot;&amp;Trim(Mid([Filter Expression], 6, Len([Filter Expression])))" stage="Filter Expression" /></stage><stage stageid="b1ccbeb8-4c66-4932-a81f-c8c55c156731" name="Copied To" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="67f7a5fe-f2d5-480e-be1c-6a18d5a79508" name="Sent To" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c54a3bb-1c08-4f3e-9ab2-3ceae0478554" name="Get Received Items (Basic)" type="SubSheetInfo"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative>Lists Inbox items matching the parameters provided</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b5946711-b185-44bd-b97e-cfe91f9b05a2" name="Item Count" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="300" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32bea08c-862f-440c-bc83-c05ca252286c" name="Internal_Get Items" type="SubSheet"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="420" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="[Sub Folder]" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" friendlyname="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." expr="[Shared Mailbox]" /><input type="flag" name="Prefer Plain Text Body" friendlyname="Prefer Plain Text Body" narrative="Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body." expr="[Prefer Plain Text Body]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /><output type="collection" name="Errors" friendlyname="Errors" narrative="Collection of any error messages that were captured while getting the list of mail items." stage="Errors" /></outputs><onsuccess>717dbab6-6472-4f2d-9370-0ae2d5893829</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="cc00500b-17df-437f-816e-59bd2b9b6a11" name="Outlook Folder ID" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="15" w="120" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="0a3d1d6c-696a-4e50-a124-af43552a1c59" name="Sub Folder" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="717dbab6-6472-4f2d-9370-0ae2d5893829" name="End" type="End"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="480" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /><output type="collection" name="Errors" narrative="Collection of any error messages that were captured while getting the list of mail items." stage="Errors" /></outputs></stage><stage stageid="fa7fc102-6824-4d83-9171-9b36913fb323" name="Subject" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0149c9d2-5846-4f23-8eb9-e639be1f7435" name="Start" type="Start"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Sender Name" narrative="Optional. The From display name, which might be a name (eg John Smith) or email address (eg admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the From field." stage="Sender Name" /><input type="text" name="Sender Email" narrative="Optional. The sender email address." stage="Sender Email" /><input type="datetime" name="Received Earliest" narrative="Optional. The earliest date to search from." stage="Received Earliest" /><input type="datetime" name="Received Latest" narrative="Optional. The latest date to search to." stage="Received Latest" /><input type="text" name="Subject" narrative="Optional. Asterisk wildcard permitted, eg *Project Update for 'Project Update', 'RE: Project Update' etc." stage="Subject" /><input type="text" name="Message" narrative="Optional. Asterisk wildcard permitted, eg *Blue Prism*" stage="Message" /><input type="flag" name="Include Read" narrative="Optional, default True" stage="Include Read" /><input type="flag" name="Include Unread" narrative="Optional, default True" stage="Include Unread" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /><input type="flag" name="Prefer Plain Text Body" narrative="Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body." stage="Prefer Plain Text Body" /></inputs><onsuccess>6b969896-5d1a-4f3c-9112-66df0d584150</onsuccess></stage><stage stageid="9d18dd85-49e7-4434-b66e-2f6bdedb4dad" name="Received Earliest" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="135" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3fc67bd-0f5c-4d13-bb51-0b378401d726" name="Received Latest" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="180" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f180ecf8-78fc-4b37-8a12-69b310abf874" name="Filter Expression" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b969896-5d1a-4f3c-9112-66df0d584150" name="Sender Name?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="-45" /><decision expression="[Sender Name]&lt;&gt;&quot;&quot;" /><ontrue>1eaeb40e-7ba5-4437-86fb-8490d10d7e99</ontrue><onfalse>4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20</onfalse></stage><stage stageid="1eaeb40e-7ba5-4437-86fb-8490d10d7e99" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="-45" /><onsuccess>4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:sendername LIKE '&quot;&amp;Replace([Sender Name], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="cf1214bb-b7fd-4fec-ab0b-dde176bcca9a" name="Clean Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="330" /><onsuccess>2bc9f050-ac4b-4e53-833b-77f8fd75e0ab</onsuccess><calculation expression="Trim(Mid([Filter Expression], 6, Len([Filter Expression])))" stage="Filter Expression" /></stage><stage stageid="0a1a6586-94ea-4da3-a8af-cb1ea4a13659" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="45" /><onsuccess>f24225cb-32e2-4f31-b9f8-f75390a670a9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:subject LIKE '&quot;&amp;Replace([Subject], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="747ae4c1-94e5-4288-a0cf-573663610ed9" name="Subject?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="45" /><decision expression="[Subject]&lt;&gt;&quot;&quot;" /><ontrue>0a1a6586-94ea-4da3-a8af-cb1ea4a13659</ontrue><onfalse>f24225cb-32e2-4f31-b9f8-f75390a670a9</onfalse></stage><stage stageid="4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20" name="Sender Email?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="0" /><decision expression="[Sender Email]&lt;&gt;&quot;&quot;" /><ontrue>9153efb4-8f18-48c4-9833-9f3364eeea6a</ontrue><onfalse>747ae4c1-94e5-4288-a0cf-573663610ed9</onfalse></stage><stage stageid="9153efb4-8f18-48c4-9833-9f3364eeea6a" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="0" /><onsuccess>747ae4c1-94e5-4288-a0cf-573663610ed9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:fromemail ci_phrasematch '&quot;&amp;Replace([Sender Email], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="a72f4464-acf3-4e70-825d-a0ae628fb772" name="Sender Name" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="-45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da4b8732-2d70-4ad2-8757-603e1aa7d769" name="Sender Email" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2bc9f050-ac4b-4e53-833b-77f8fd75e0ab" name="Filter Expression?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="375" /><decision expression="[Filter Expression]&lt;&gt;&quot;&quot;" /><ontrue>cf067e4c-9a82-41b9-acb9-9643cb195100</ontrue><onfalse>32bea08c-862f-440c-bc83-c05ca252286c</onfalse></stage><stage stageid="cf067e4c-9a82-41b9-acb9-9643cb195100" name="Prepend" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="375" /><onsuccess>32bea08c-862f-440c-bc83-c05ca252286c</onsuccess><calculation expression="&quot;@SQL=&quot;&amp;[Filter Expression]" stage="Filter Expression" /></stage><stage stageid="b7a34496-b13f-4bf8-a6ed-b14f0dbbfdb9" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="270" /><onsuccess>cf1214bb-b7fd-4fec-ab0b-dde176bcca9a</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:read=0&quot;" stage="Filter Expression" /></stage><stage stageid="e3df62cc-bf1a-4ea1-8c56-de279ca09c6b" name="Sent To?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="45" /><decision expression="[Sent To]&lt;&gt;&quot;&quot;" /><ontrue>efe53d68-d29a-4388-afbd-b2866cb03c87</ontrue><onfalse>4cc56a65-c57b-4daa-86ed-8033d486e7b9</onfalse></stage><stage stageid="efe53d68-d29a-4388-afbd-b2866cb03c87" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="45" /><onsuccess>4cc56a65-c57b-4daa-86ed-8033d486e7b9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:displayto LIKE '&quot;&amp;Replace([Sent To], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="3ac23120-2c22-4fc7-b0ef-bbbc45a030b1" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="135" /><onsuccess>ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:subject LIKE '&quot;&amp;Replace([Subject], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="4df1ab8f-9b5e-4224-976f-67c1073cabfb" name="Subject?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="135" /><decision expression="[Subject]&lt;&gt;&quot;&quot;" /><ontrue>3ac23120-2c22-4fc7-b0ef-bbbc45a030b1</ontrue><onfalse>ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b</onfalse></stage><stage stageid="4cc56a65-c57b-4daa-86ed-8033d486e7b9" name="Copied To?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="90" /><decision expression="[Copied To]&lt;&gt;&quot;&quot;" /><ontrue>9533d2e4-6aa7-4fd8-84aa-328875bd17d3</ontrue><onfalse>4df1ab8f-9b5e-4224-976f-67c1073cabfb</onfalse></stage><stage stageid="9533d2e4-6aa7-4fd8-84aa-328875bd17d3" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="90" /><onsuccess>4df1ab8f-9b5e-4224-976f-67c1073cabfb</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:displaycc LIKE '&quot;&amp;Replace([Copied To], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="c0a30ff4-3c4e-4a4b-81bc-22fad4bfb5e4" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="-45" /><onsuccess>e42900f2-2408-444c-b8c0-7077cfc7ab63</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&gt;='&quot; &amp; FormatDateTime([Sent Earliest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="69a5f33d-acd2-4bb9-9d2b-069cfc7fc32c" name="Earliest?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="-45" /><decision expression="IsDate([Sent Earliest])" /><ontrue>c0a30ff4-3c4e-4a4b-81bc-22fad4bfb5e4</ontrue><onfalse>e42900f2-2408-444c-b8c0-7077cfc7ab63</onfalse></stage><stage stageid="e42900f2-2408-444c-b8c0-7077cfc7ab63" name="Latest" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="0" /><decision expression="IsDate([Sent Latest])" /><ontrue>bbfb0329-e644-42ca-8e5b-91a771933be0</ontrue><onfalse>e3df62cc-bf1a-4ea1-8c56-de279ca09c6b</onfalse></stage><stage stageid="bbfb0329-e644-42ca-8e5b-91a771933be0" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="0" /><onsuccess>e3df62cc-bf1a-4ea1-8c56-de279ca09c6b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&lt;='&quot; &amp; FormatDateTime([Sent Latest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="f47c58b8-fa7d-43e4-9879-9489b3c45b64" name="Get Sent Items (Advanced)" type="SubSheetInfo"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative>Lists Sent Items matching the filter provided.

Eg1 [Subject]='Exception Report'

Eg2 [To]='Mike Colleague' OR [To]='Mike Coworker'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="120" /></stage><stage stageid="8eb9cd1f-4784-4a10-b9f5-9257375fa249" name="Start" type="Start"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [To]='Mike Colleague' AND [SentOn]&gt;='15 January 2018 09:00' AND [SentOn]&lt;='19 January 2018 17:00'" stage="Filter Expression" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /><input type="flag" name="Prefer Plain Text Body" narrative="Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body." stage="Prefer Plain Text Body" /></inputs><onsuccess>86fdf439-537b-402e-bf87-83a0aa0186aa</onsuccess></stage><stage stageid="0db44ad5-c704-4846-be43-d47afae7ddff" name="Item Count" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><display x="-195" y="225" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7038439e-d7a5-4958-a2a6-b7076ad6e877" name="Filter Expression" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8b0ade5-d70a-469c-b475-5e38be742df6" name="Outlook Folder ID" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="0" w="150" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="86fdf439-537b-402e-bf87-83a0aa0186aa" name="Internal_Get Items" type="SubSheet"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" friendlyname="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." expr="[Shared Mailbox]" /><input type="flag" name="Prefer Plain Text Body" friendlyname="Prefer Plain Text Body" narrative="Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body." expr="[Prefer Plain Text Body]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /><output type="collection" name="Errors" friendlyname="Errors" narrative="Collection of any error messages that were captured while getting the list of mail items." stage="Errors" /></outputs><onsuccess>9be25db3-9033-4941-81dc-97124e0e4917</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="9be25db3-9033-4941-81dc-97124e0e4917" name="End" type="End"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /><output type="collection" name="Errors" narrative="Collection of any error messages that were captured while getting the list of mail items." stage="Errors" /></outputs></stage><stage stageid="f223606b-95bb-4058-9217-4ed244648a97" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="135" /><onsuccess>b846e5cd-ed99-489e-9671-08f3d63a07ff</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&gt;='&quot; &amp; FormatDateTime([Received Earliest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="020266f4-5352-4942-9ca5-2b5b2c28ba9e" name="Earliest?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="135" /><decision expression="IsDate([Received Earliest])" /><ontrue>f223606b-95bb-4058-9217-4ed244648a97</ontrue><onfalse>b846e5cd-ed99-489e-9671-08f3d63a07ff</onfalse></stage><stage stageid="b846e5cd-ed99-489e-9671-08f3d63a07ff" name="Latest" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="180" /><decision expression="IsDate([Received Latest])" /><ontrue>46ee2d04-b46b-4315-bd1a-abadb043b648</ontrue><onfalse>4d51e55a-9744-4090-b1d2-83bc995adeb5</onfalse></stage><stage stageid="46ee2d04-b46b-4315-bd1a-abadb043b648" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="180" /><onsuccess>4d51e55a-9744-4090-b1d2-83bc995adeb5</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&lt;='&quot; &amp; FormatDateTime([Received Latest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="dd6e1514-fd6a-4d97-905d-55b4c8076300" name="Include Unread" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4931c0a2-5942-4727-aa8e-c354a58dc3d9" name="Include Read" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4d51e55a-9744-4090-b1d2-83bc995adeb5" name="Unread Only?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="225" /><decision expression="[Include Unread]=True AND [Include Read]=False" /><ontrue>b7a34496-b13f-4bf8-a6ed-b14f0dbbfdb9</ontrue><onfalse>1d38891a-a1cf-47ac-952b-2e4f9879a947</onfalse></stage><stage stageid="1d38891a-a1cf-47ac-952b-2e4f9879a947" name="Read Only?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="225" /><decision expression="[Include Read]=True AND [Include Unread]=False" /><ontrue>9ec12e81-08b4-4b01-a8ea-02ed52fafbf6</ontrue><onfalse>b8b8afa2-e3b6-490d-b4d1-b636fc831a96</onfalse></stage><stage stageid="9ec12e81-08b4-4b01-a8ea-02ed52fafbf6" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="270" /><onsuccess>59dcb54a-0ca1-49a8-9543-3581d721886e</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:read=1&quot;" stage="Filter Expression" /></stage><stage stageid="b8b8afa2-e3b6-490d-b4d1-b636fc831a96" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="150" y="225" w="10" h="10" /><onsuccess>faa2ec03-a715-4589-a137-e014002ddca2</onsuccess></stage><stage stageid="faa2ec03-a715-4589-a137-e014002ddca2" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="150" y="330" w="10" h="10" /><onsuccess>59dcb54a-0ca1-49a8-9543-3581d721886e</onsuccess></stage><stage stageid="59dcb54a-0ca1-49a8-9543-3581d721886e" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="330" w="10" h="10" /><onsuccess>cf1214bb-b7fd-4fec-ab0b-dde176bcca9a</onsuccess></stage><stage stageid="fd8830ea-eced-4fa2-8bbb-3537fca5a68b" name="Get Received Items (Expert)" type="SubSheetInfo"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative>Lists Inbox Items matching the filters provided.

Eg1 @SQL=urn:schemas:httpmail:fromname='Mike Colleague' AND urn:schemas:httpmail:read=0

Eg2 @SQL=urn:schemas:httpmail:fromname='The Boss' AND urn:schemas:httpmail:subject LIKE '%Urgent%'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="fcb20265-28c5-415d-a083-d217916df151" name="Start" type="Start"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="DASL Query" narrative="Mandatory. A filter using a DASL query, eg @SQL=urn:schemas:httpmail:fromname='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')" stage="Filter Expression" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /><input type="flag" name="Prefer Plain Text Body" narrative="Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body." stage="Prefer Plain Text Body" /></inputs><onsuccess>4828b977-8cfe-494b-9d2a-5ac65c8b6834</onsuccess></stage><stage stageid="b0aadff2-6a6a-4209-aea3-5c4ad4d2161d" name="Item Count" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea0ad1b6-12ef-43fb-b290-11b329c2ca27" name="Filter Expression" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef288d41-1da1-46bc-ad92-e063e9e51137" name="Outlook Folder ID" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="4828b977-8cfe-494b-9d2a-5ac65c8b6834" name="Internal_Get Items" type="SubSheet"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="[Sub Folder]" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" friendlyname="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." expr="[Shared Mailbox]" /><input type="flag" name="Prefer Plain Text Body" friendlyname="Prefer Plain Text Body" narrative="Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body." expr="[Prefer Plain Text Body]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /><output type="collection" name="Errors" friendlyname="Errors" narrative="Collection of any error messages that were captured while getting the list of mail items." stage="Errors" /></outputs><onsuccess>829daa3f-c9ac-41b0-b6c9-39caf538c87e</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="829daa3f-c9ac-41b0-b6c9-39caf538c87e" name="End" type="End"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /><output type="collection" name="Errors" narrative="Collection of any error messages that were captured while getting the list of mail items." stage="Errors" /></outputs></stage><stage stageid="d2fdf5b2-86dd-4f37-86cb-4bc8cc7b80b9" name="Sub Folder" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c56f0cd2-e7f6-4a5d-a859-901d8bd2b9a1" name="Mark Email As Read" type="SubSheetInfo"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><narrative>Marks a specific email as read.

The Entry ID is the unique idenfier used to determine which email is to be marked.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="649120fc-a08c-44c6-949e-01c69a4c4d56" name="Start" type="Start"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>55267a5b-cc4a-4cc5-b141-a7c9a032924a</onsuccess></stage><stage stageid="af27f0d8-4b35-4ebb-a259-04758f73dcc3" name="End" type="End"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="55267a5b-cc4a-4cc5-b141-a7c9a032924a" name="Mark Read" type="Code"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>af27f0d8-4b35-4ebb-a259-04758f73dcc3</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim item = olNamespace.GetItemFromID(Entry_ID)

item.Unread = False

olNamespace = Nothing 
olApp = Nothing 
]]></code></stage><stage stageid="84646f19-6d1f-4d92-a977-3058f4c582ff" name="Entry ID" type="Data"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1b9646e7-1b30-4f67-833a-3121344437ab" name="Mark Email As Unread" type="SubSheetInfo"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><narrative>Marks a specific email as unread.

The Entry ID is the unique idenfier used to determine which email is to be marked.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4868521a-c295-4724-960a-b8a60dceae6c" name="Start" type="Start"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>cdd6c065-c7eb-4ee3-b50c-48dddee9a3aa</onsuccess></stage><stage stageid="2b8b0ae1-c806-485b-9b87-0875c17ba062" name="End" type="End"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="cdd6c065-c7eb-4ee3-b50c-48dddee9a3aa" name="Mark Unread" type="Code"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>2b8b0ae1-c806-485b-9b87-0875c17ba062</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim item = olNamespace.GetItemFromID(Entry_ID)

item.Unread = True

olNamespace = Nothing 
olApp = Nothing ]]></code></stage><stage stageid="9e08a8d3-4d6c-49e8-856f-664eb6e5e175" name="Entry ID" type="Data"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7643fd53-5368-45a9-8412-89b5d574c204" name="Items" type="Collection"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /><field name="Sensitivity" type="number" description="Sensitivity of an email, from 0 to 3" /><field name="Importance" type="number" description="Importance of an email, from 0 to 2" /><field name="Flag" type="text" description="Flagged status of an email" /><field name="IsHTML" type="flag" description="True if an email is in HTML" /></collectioninfo></stage><stage stageid="4c60b4ac-e0f8-4ef7-870d-f88f5a6edade" name="Items" type="Collection"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /><field name="Sensitivity" type="number" description="Sensitivity of an email, from 0 to 3" /><field name="Importance" type="number" description="Importance of an email, from 0 to 2" /><field name="Flag" type="text" description="Flagged status of an email" /><field name="IsHTML" type="flag" description="True if an email is in HTML" /></collectioninfo></stage><stage stageid="4ee04419-4388-4a3a-87f2-06fbe4585fdf" name="Items" type="Collection"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><display x="-195" y="195" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /><field name="Sensitivity" type="number" description="Sensitivity of an email, from 0 to 3" /><field name="Importance" type="number" description="Importance of an email, from 0 to 2" /><field name="Flag" type="text" description="Flagged status of an email" /><field name="IsHTML" type="flag" description="True if an email is in HTML" /></collectioninfo></stage><stage stageid="c7be666f-19fe-421d-bb4d-95085817f37e" name="Items" type="Collection"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="270" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /><field name="Sensitivity" type="number" description="Sensitivity of an email, from 0 to 3" /><field name="Importance" type="number" description="Importance of an email, from 0 to 2" /><field name="Flag" type="text" description="Flagged status of an email" /><field name="IsHTML" type="flag" description="True if an email is in HTML" /></collectioninfo></stage><stage stageid="ecaed312-c8a9-4755-b673-bdf8ce1ba59d" name="Items" type="Collection"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /><field name="Sensitivity" type="number" description="Sensitivity of an email, from 0 to 3" /><field name="Importance" type="number" description="Importance of an email, from 0 to 2" /><field name="Flag" type="text" description="Flagged status of an email" /><field name="IsHTML" type="flag" description="True if an email is in HTML" /></collectioninfo></stage><stage stageid="2d58da80-f8b4-414e-80bb-2d87d9ce0cc4" name="Items" type="Collection"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /><field name="Sensitivity" type="number" description="Sensitivity of an email, from 0 to 3" /><field name="Importance" type="number" description="Importance of an email, from 0 to 2" /><field name="Flag" type="text" description="Flagged status of an email" /><field name="IsHTML" type="flag" description="True if an email is in HTML" /></collectioninfo></stage><stage stageid="dc080a71-625d-45b0-bf8d-1cf2a77b3b48" name="Note2" type="Note"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><narrative>NOT FOR PUBLICATION</narrative><display x="15" y="-135" w="210" h="30" /><font family="Segoe UI" size="20" style="Regular" color="FF0000" /></stage><stage stageid="0b72d21e-2753-42b8-846a-bae349f2c179" name="Message" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0c46c352-79de-438b-9ce3-422dcc0fb10b" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="180" /><onsuccess>a3d2888f-df21-47e3-8405-7f6f4564a71b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:textdescription LIKE '&quot;&amp;Replace([Message], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b" name="Message?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="180" /><decision expression="[Message]&lt;&gt;&quot;&quot;" /><ontrue>0c46c352-79de-438b-9ce3-422dcc0fb10b</ontrue><onfalse>a3d2888f-df21-47e3-8405-7f6f4564a71b</onfalse></stage><stage stageid="9eb8fa0d-8fa1-4fec-9689-c30cc9649f0a" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="90" /><onsuccess>020266f4-5352-4942-9ca5-2b5b2c28ba9e</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:textdescription LIKE '&quot;&amp;Replace([Message], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="f24225cb-32e2-4f31-b9f8-f75390a670a9" name="Message?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="90" /><decision expression="[Message]&lt;&gt;&quot;&quot;" /><ontrue>9eb8fa0d-8fa1-4fec-9689-c30cc9649f0a</ontrue><onfalse>020266f4-5352-4942-9ca5-2b5b2c28ba9e</onfalse></stage><stage stageid="b4632ee7-bf2b-4b55-9dca-e9a7fafca663" name="Message" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a24cb43c-102d-4964-a916-09e44168a4c1" name="Input" type="Block"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1fdeae66-adae-4ae5-bf8d-61ddb71fc904" name="Output" type="Block"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="-270" y="180" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="48aa1db4-2765-4c9e-a7b6-fb0989ed93f3" name="Subject" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8eb18cc7-2d34-4dba-bcd7-32cd82d688c9" name="Input" type="Block"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e48a94c8-7d5d-40ad-89d8-4d953b6791c3" name="Output" type="Block"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="-270" y="150" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="94557554-0d80-4cc4-ae14-8806264969e5" name="Input" type="Block"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="416d4ee0-5f16-4282-bec4-42328e03acb4" name="Output" type="Block"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="-270" y="165" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="42b922f9-dd32-475f-a8ec-67ad770ce8ad" name="Input" type="Block"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e6d1a1b7-3b51-4ee1-8756-585e34aa936d" name="Output" type="Block"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="-270" y="150" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="71f3829b-c755-4e45-a175-c3b7075af273" name="Input" type="Block"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="270" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e7e22486-0749-492f-8e67-586aa2c271ab" name="Output" type="Block"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="-270" y="240" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="1846bfcf-e7b1-48ca-83fe-bd2b5a1bcbeb" name="Input" type="Block"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5cd2cea7-99cf-42af-b4eb-7cf6b2d62958" name="Output" type="Block"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="-270" y="180" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="e33d69e8-faec-46fc-a225-2ac747bddd65" name="Input" type="Block"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="49f3281d-7765-48aa-8547-fc87ba0bd110" name="Output" type="Block"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="-270" y="180" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="5cfc97b8-86c5-4a5b-ae62-71e55abd988d" name="Input" type="Block"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="390" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="73da0a90-8718-4f31-a8dd-2a56a45265ed" name="Input" type="Block"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="-270" y="15" w="150" h="300" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ec957629-3e89-4cd3-963b-fb0ab19dc116" name="Input" type="Block"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="-240" y="30" w="150" h="300" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bbd7d428-080a-47f0-8431-837da5d25290" name="Input" type="Block"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="-270" y="15" w="150" h="300" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e15d0e55-ef6a-4836-bdb5-3ccf92b362fa" name="Input" type="Block"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><display x="-270" y="0" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e470b377-ed2e-449e-b7b1-5954285a57c1" name="Input" type="Block"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d24d2f3f-a3dd-4e54-8c2e-dd886cb74e42" name="Input" type="Block"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="07fac98a-a954-4be7-9aff-79b761ec658d" name="Input" type="Block"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="023dcb4e-5dbd-4015-a4a4-d9825ca509b2" name="Input" type="Block"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="-255" y="15" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="45c2b8cf-a653-4a26-bc25-a2009c8d3501" name="Input" type="Block"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ad7ba6e4-ef09-4fac-9dea-f535bb81aac2" name="Input" type="Block"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="dd8c58ce-3a4e-44a6-b4d8-248309fac791" name="Default" type="Block"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="-255" y="180" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="63823440-c2ee-48b1-a2db-527efc5b94f7" name="Note3" type="Note"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><narrative>API functions provided for the advanced filter expressions:

BCC = Returns a String representing the display list of blind carbon copy (BCC) names for a MailItem. Read/write.
Body = Returns or sets a String representing the clear-text body of the Outlook item. Read/write.
CC = Returns a String representing the display list of carbon copy (CC) names for a MailItem . Read/write.
CreationTime = Returns a Date indicating the creation time for the Outlook item. Read-only.
EntryID = Returns a String representing the unique Entry ID of the object. Read-only.
HTMLBody = Returns or sets a String representing the HTML body of the specified item. Read/write.
ReceivedTime = Returns a Date indicating the date and time at which the item was received. Read-only.
SenderEmailAddress = Returns a String that represents the e-mail address of the sender of the Outlook item. Read-only.
SenderName = Returns a String indicating the display name of the sender for the Outlook item. Read-only.
SentOn = Returns a Date indicating the date and time on which the Outlook item was sent. Read-only.
Subject = Returns or sets a String indicating the subject for the Outlook item. Read/write.
To = Returns or sets a semicolon-delimited String list of display names for the To recipients for the Outlook item. Read/write.
UnRead = Returns or sets a Boolean value that is True if the Outlook item has not been opened (read). Read/write.
</narrative><display x="-525" y="-45" w="480" h="210" /></stage><stage stageid="528d4d34-61bc-4a7b-b329-4bda0e6309fa" name="Note4" type="Note"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><narrative>Supported API DASL filters expressions:

urn:schemas:httpmail:attachmentfilename
urn:schemas:httpmail:bcc
urn:schemas:httpmail:cc
urn:schemas:httpmail:date
urn:schemas:httpmail:datereceived
urn:schemas:httpmail:displaycc
urn:schemas:httpmail:displayto
urn:schemas:httpmail:from
urn:schemas:httpmail:fromemail
urn:schemas:httpmail:fromname
urn:schemas:httpmail:hasattachment
urn:schemas:httpmail:importance
urn:schemas:httpmail:senderemail
urn:schemas:httpmail:sendername
urn:schemas:httpmail:subject
urn:schemas:httpmail:submitted
urn:schemas:httpmail:textdescription
urn:schemas:httpmail:to
</narrative><display x="-360" y="-45" w="150" h="210" /></stage><stage stageid="702f380f-35f2-4112-95d8-cdc6a3521101" name="Note3" type="Note"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><narrative>API functions provided for the advanced filter expressions:

BCC = Returns a String representing the display list of blind carbon copy (BCC) names for a MailItem. Read/write.
Body = Returns or sets a String representing the clear-text body of the Outlook item. Read/write.
CC = Returns a String representing the display list of carbon copy (CC) names for a MailItem . Read/write.
CreationTime = Returns a Date indicating the creation time for the Outlook item. Read-only.
EntryID = Returns a String representing the unique Entry ID of the object. Read-only.
HTMLBody = Returns or sets a String representing the HTML body of the specified item. Read/write.
ReceivedTime = Returns a Date indicating the date and time at which the item was received. Read-only.
SenderEmailAddress = Returns a String that represents the e-mail address of the sender of the Outlook item. Read-only.
SenderName = Returns a String indicating the display name of the sender for the Outlook item. Read-only.
SentOn = Returns a Date indicating the date and time on which the Outlook item was sent. Read-only.
Subject = Returns or sets a String indicating the subject for the Outlook item. Read/write.
To = Returns or sets a semicolon-delimited String list of display names for the To recipients for the Outlook item. Read/write.
UnRead = Returns or sets a Boolean value that is True if the Outlook item has not been opened (read). Read/write.
</narrative><display x="-525" y="-60" w="480" h="210" /></stage><stage stageid="13bf2bea-2785-44ac-bda2-1e04f3c2a1e1" name="Note4" type="Note"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><narrative>Supported API DASL filters expressions:

urn:schemas:httpmail:attachmentfilename
urn:schemas:httpmail:bcc
urn:schemas:httpmail:cc
urn:schemas:httpmail:date
urn:schemas:httpmail:datereceived
urn:schemas:httpmail:displaycc
urn:schemas:httpmail:displayto
urn:schemas:httpmail:from
urn:schemas:httpmail:fromemail
urn:schemas:httpmail:fromname
urn:schemas:httpmail:hasattachment
urn:schemas:httpmail:importance
urn:schemas:httpmail:senderemail
urn:schemas:httpmail:sendername
urn:schemas:httpmail:subject
urn:schemas:httpmail:submitted
urn:schemas:httpmail:textdescription
urn:schemas:httpmail:to
</narrative><display x="-360" y="-45" w="150" h="210" /></stage><stage stageid="b1663b58-d99f-4f8e-9641-4b3db50ca615" name="Clean Up" type="Calculation"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="-75" /><onsuccess>d9a607b6-73e8-49ec-b2bc-a8032c0ab747</onsuccess><calculation expression="Replace([File Name],&quot;&quot;&quot;&quot;,&quot;&quot;)" stage="File Name" /></stage><stage stageid="80208144-c05c-4b32-bd6a-de8320da32e5" name="New Entry ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><display x="-180" y="240" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6ac7c70b-7149-4e53-b9be-f394bb9b4884" name="Flag Email for Follow-up" type="SubSheetInfo"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><narrative>Flag Email for follow-up. 

For a list of valid MarkInterval values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olmarkinterval</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e201c8fb-eac5-4e56-8f83-9bc677527928" name="Start" type="Start"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="number" name="MarkInterval" narrative="Optional. An integer between 0 to 5, default to 0." stage="MarkInterval" /></inputs><onsuccess>4cfc4863-34f3-4898-9aaf-0d5a37f44f46</onsuccess></stage><stage stageid="a7379a45-a2eb-4de3-982a-96d1805c6c1d" name="End" type="End"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="aaabcfc7-710d-44e2-8f04-3b12d767bb4d" name="Clear Email Flag" type="SubSheetInfo"><subsheetid>c99a9bb4-1c93-420d-9165-5da9fd1132fa</subsheetid><narrative>Clear any flag on the mail item</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="67c5bcb9-a35b-4287-b931-cfc87368306e" name="Start" type="Start"><subsheetid>c99a9bb4-1c93-420d-9165-5da9fd1132fa</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>4b8f6338-6405-46e7-9f18-2e2918b390f8</onsuccess></stage><stage stageid="3373212f-21fd-44d6-8b84-9679826c6f29" name="End" type="End"><subsheetid>c99a9bb4-1c93-420d-9165-5da9fd1132fa</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="4cfc4863-34f3-4898-9aaf-0d5a37f44f46" name="Flag for Follow-up" type="Code"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="number" name="MarkInterval" expr="[MarkInterval]" /></inputs><onsuccess>a7379a45-a2eb-4de3-982a-96d1805c6c1d</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim item = olNamespace.GetItemFromID(Entry_ID)

If MarkInterval = Int(MarkInterval) AndAlso (MarkInterval >= 0 And MarkInterval <= 5)
	item.MarkAsTask(MarkInterval)
Else
	item.MarkAsTask(0)
End If

item.Save

olNamespace = Nothing 
olApp = Nothing 
]]></code></stage><stage stageid="b86f4163-c6c0-4e81-a3c2-a7eddbf259b4" name="Entry ID" type="Data"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="79bd743f-aa37-4b9b-a2cc-0cc57d3c04b0" name="Input" type="Block"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="4b8f6338-6405-46e7-9f18-2e2918b390f8" name="Clear Email Flag" type="Code"><subsheetid>c99a9bb4-1c93-420d-9165-5da9fd1132fa</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>3373212f-21fd-44d6-8b84-9679826c6f29</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")

Dim item = olNamespace.GetItemFromID(Entry_ID)

item.ClearTaskFlag()
item.Save

olNamespace = nothing
olApp = nothing	
]]></code></stage><stage stageid="df522988-f368-46a5-acc1-9f4a2edd9fab" name="Entry ID" type="Data"><subsheetid>c99a9bb4-1c93-420d-9165-5da9fd1132fa</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8cb9f58a-7fdb-4fa9-ac96-41b8f6efca67" name="Input" type="Block"><subsheetid>c99a9bb4-1c93-420d-9165-5da9fd1132fa</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d9f819c1-6e82-409d-8378-22685f242e9e" name="MarkInterval" type="Data"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="60" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f0fced85-9828-47cd-8d36-5595e09f0325" name="Message Is HTML" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="360" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="dd2e5107-00db-41de-aa81-7d5c28e9b323" name="Sensitivity" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="390" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a8c5f558-dd4e-4928-9b45-ea935c0f26fc" name="Importance" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="420" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="0c1ca27c-5896-4f09-b514-1c90764e1c11" name="Subject" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d6319c35-4ea7-4024-abce-d433764df19e" name="Default" type="Block"><subsheetid>bca6ce7c-1d99-4e01-8f69-55a1b2e74904</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="ad2b7a3b-e092-4f78-8418-27862772c3d3" name="Default" type="Block"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="-270" y="330" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="d5f3cad1-86e7-4f52-8253-127e4307edb7" name="Message Is HTML" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="375" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="ebb23ff2-a0f9-4a36-a8a2-c4ef904f823b" name="Sensitivity" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="405" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="624632d9-714f-467a-b804-53d1ec3db0f4" name="Importance" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="435" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="72450aab-62ff-462f-803b-8124062a48d9" name="Default" type="Block"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="-240" y="345" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="d3f52510-bde5-463c-9152-8f7927ee6775" name="Message Is HTML" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="360" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="bab4c897-535b-46c3-9e96-01838cb7a4fa" name="Sensitivity" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="390" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="841a6d43-09cd-4721-acbc-46a3d20373cb" name="Importance" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="420" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="8791fcb3-e67d-4ca9-940d-4c78c968ab22" name="Default" type="Block"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="-270" y="330" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="86b637f7-ca1c-4712-9d3a-b262db057ced" name="Message Is HTML" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="390" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="78dc1a2f-8326-4358-8af9-30c414f1615e" name="Sensitivity" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="420" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f77242d9-85e0-4e4e-94cb-abaa9725b439" name="Importance" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="450" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="bc6e7aad-77a4-4b11-95fb-57e9d4657493" name="Default" type="Block"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-270" y="360" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="b51c6e7e-4ce2-471b-8c49-48ff4fa379d5" name="Subject" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="833df9b5-6a05-4c01-961b-51ef388c8754" name="Subject" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="-165" y="120" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="61f0b391-b490-4e1e-8152-29067d824b97" name="Account Display Name" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1c75ef1e-1611-416f-9300-039e2269a265" name="Account Display Name" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3923afc3-03a2-42be-99c0-16cbf0442d50" name="Account Display Name" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4542312b-8b95-4508-b3d7-c72b68fe8ab8" name="Account Display Name" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7ffd53a-6854-4578-8735-34e54fd8c28b" name="Account Display Name" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a6b3924a-944a-4fd3-839b-1df5717f7d1f" name="Account Display Name" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c2086518-1060-48c9-ba60-7311221c3249" name="Account Display Name" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="75e46254-ea02-4402-b674-1e84a1e5da81" name="Account Display Name" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="db078ff7-ab55-4a2a-bfd7-0eb71d7c1c75" name="Account Display Name" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-180" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c5b6db12-f05c-4b8a-be08-14422844a314" name="Shared Mailbox" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e55c74d1-2b68-465c-8e57-796251a73ec9" name="Shared Mailbox" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f4fc9286-64de-4632-bb68-5e7b477003e8" name="Shared Mailbox" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e6a86018-1551-4c49-9e31-6d23439e09bc" name="Shared Mailbox" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-195" y="165" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54555edf-e9c5-4150-aabe-c5eb598ca03e" name="Shared Mailbox" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94561e3c-da3c-4491-ba60-553d82758cef" name="Shared Mailbox" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66d61d09-d06f-40fb-837b-99431f991866" name="Shared Mailbox" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ca8e6df3-2813-4f7d-9c7d-77c6a12d6584" name="GetReportItem" type="SubSheetInfo"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><narrative>The ReportItem object is similar to a MailItem object, and it contains a report (usually the non-delivery report) or error message from the mail transport system.

Unlike other Microsoft Outlook objects, you cannot create this object. Report items are created automatically when any report or error in general is received from the mail transport system.</narrative><display x="-180" y="-120" w="180" h="120" /></stage><stage stageid="afe0910a-c620-407a-b791-c7bbe7918bcb" name="Start" type="Start"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" stage="Outlook Folder ID" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." stage="Sub Folder" /><input type="flag" name="Include Read" narrative="Optional, default True" stage="Include Read" /><input type="flag" name="Include Unread" narrative="Optional, default True" stage="Include Unread" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /><input type="text" name="Filter Expression" narrative="Optional. A MAPI filter, eg [To]='Mike Colleague' AND [SentOn]&gt;='15 January 2018 09:00' AND [SentOn]&lt;='19 January 2018 17:00'" stage="Filter Expression" /></inputs><onsuccess>19dd192a-299e-470a-a1bf-fabe8e3df90a</onsuccess></stage><stage stageid="05fe8444-b117-41e9-9719-e9a19e2fc639" name="End" type="End"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="15" y="210" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="79791f98-80e8-4bbd-af58-3cc42f9dd1d8" name="Item Count" type="Data"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><display x="300" y="45" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11f00c62-0f42-4543-950c-69314a5decca" name="Filter Expression" type="Data"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><display x="-180" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc2a7e7b-aa2f-41a1-ac8f-f4a8927db86c" name="Outlook Folder ID" type="Data"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><narrative>OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-180" y="15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="e181d8da-473c-4419-b886-d0cfe35e11ec" name="Sub Folder" type="Data"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><display x="-180" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5438cb69-58c5-41e7-8a95-20a194d3dda1" name="Items" type="Collection"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><display x="300" y="0" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="5dc851a8-ba4b-4d77-bd07-854f20b39f40" name="Input" type="Block"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="-270" y="-45" w="180" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="20b069bf-9bc9-499f-b407-be88ecc161a3" name="Output" type="Block"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="210" y="-45" w="180" h="135" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="87925abe-a11e-46e8-b030-e9b215db6a64" name="Include Unread" type="Data"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><display x="-180" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="8ecc9c40-3cb2-4f29-9658-c9f6c3fcdf15" name="Include Read" type="Data"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><display x="-180" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="b91502bf-0fc4-4019-ba63-b271a8122155" name="Clean Expression" type="Calculation"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="75" y="75" /><onsuccess>ade4ed1e-24f6-4b0b-9e7f-e9966b0a0722</onsuccess><calculation expression="Trim(Mid([Filter Expression], 6, Len([Filter Expression])))" stage="Filter Expression" /></stage><stage stageid="ade4ed1e-24f6-4b0b-9e7f-e9966b0a0722" name="Filter Expression?" type="Decision"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="15" y="120" /><decision expression="[Filter Expression]&lt;&gt;&quot;&quot;" /><ontrue>e1074245-23a9-45ef-abe6-f923fce8d0f3</ontrue><onfalse>71b41d3a-1895-424d-8736-8aea3242084e</onfalse></stage><stage stageid="e1074245-23a9-45ef-abe6-f923fce8d0f3" name="Prepend" type="Calculation"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="90" y="120" /><onsuccess>71b41d3a-1895-424d-8736-8aea3242084e</onsuccess><calculation expression="&quot;@SQL=&quot;&amp;[Filter Expression]" stage="Filter Expression" /></stage><stage stageid="a0846534-df05-4db5-8010-8efd3e9548b7" name="Filter Expression" type="Calculation"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="15" y="-15" /><onsuccess>e96fd306-5175-4571-b19e-d179995c76a8</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:read=0&quot;" stage="Filter Expression" /></stage><stage stageid="19dd192a-299e-470a-a1bf-fabe8e3df90a" name="Unread Only?" type="Decision"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="[Include Unread]=True AND [Include Read]=False" /><ontrue>a0846534-df05-4db5-8010-8efd3e9548b7</ontrue><onfalse>557383e8-a127-4541-a5ad-845c74e0c639</onfalse></stage><stage stageid="557383e8-a127-4541-a5ad-845c74e0c639" name="Read Only?" type="Decision"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="90" y="-60" /><decision expression="[Include Read]=True AND [Include Unread]=False" /><ontrue>154d4c77-d534-4117-b239-334ba6492893</ontrue><onfalse>89b4d917-9077-4bee-b32c-777f754045a3</onfalse></stage><stage stageid="154d4c77-d534-4117-b239-334ba6492893" name="Filter Expression" type="Calculation"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="90" y="-15" /><onsuccess>d3fcdb69-a171-4fa9-bbe1-7bc2117be4f3</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:read=1&quot;" stage="Filter Expression" /></stage><stage stageid="89b4d917-9077-4bee-b32c-777f754045a3" name="Anchor1" type="Anchor"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="150" y="-60" w="10" h="10" /><onsuccess>2531d07e-0cc2-4184-9179-d7baa1eba7ad</onsuccess></stage><stage stageid="2531d07e-0cc2-4184-9179-d7baa1eba7ad" name="Anchor1" type="Anchor"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="150" y="30" w="10" h="10" /><onsuccess>d3fcdb69-a171-4fa9-bbe1-7bc2117be4f3</onsuccess></stage><stage stageid="d3fcdb69-a171-4fa9-bbe1-7bc2117be4f3" name="Anchor1" type="Anchor"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="90" y="30" w="10" h="10" /><onsuccess>e96fd306-5175-4571-b19e-d179995c76a8</onsuccess></stage><stage stageid="71b41d3a-1895-424d-8736-8aea3242084e" name="Get Report Items" type="Code"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="15" y="165" /><inputs><input type="text" name="Filter Expression" expr="[Filter Expression]" /><input type="number" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Sub Folder" expr="[Sub Folder]" /><input type="text" name="Account Display Name" expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" expr="[Shared Mailbox]" /></inputs><outputs><output type="collection" name="Items" stage="Items" /><output type="number" name="Item Count" stage="Item Count" /></outputs><onsuccess>05fe8444-b117-41e9-9719-e9a19e2fc639</onsuccess><code><![CDATA[Dim PR_SMTP_ADDRESS As String = "https://schemas.microsoft.com/mapi/proptag/0x39FE001E"
Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim folder As NetOffice.OutlookApi.MAPIFolder

If Not String.IsNullOrEmpty(Shared_Mailbox) Then
	Dim recipient = olNamespace.CreateRecipient(Shared_Mailbox)
    recipient.Resolve()
	If recipient.Resolved Then
		folder = olNamespace.GetSharedDefaultFolder(recipient, Outlook_Folder_ID)
	Else
		Dim ex1 As New System.Exception(VbCrlf + "Failed to resolve shared mailbox '" + Shared_Mailbox + "'.")
		Throw ex1
	End If
Else
	If Not String.IsNullOrEmpty(Account_Display_Name) Then
		Try
			Dim aa As List(Of Account) = olNamespace.Accounts.Cast(Of Account).ToList()
			folder  = aa.Where(Function(x) x.DisplayName = Account_Display_Name).FirstOrDefault().DeliveryStore.GetDefaultFolder(Outlook_Folder_ID)
		Catch ex As System.Exception
			Dim ex1 As New System.Exception(VbCrlf + "Failed to retrieve default folder for Account Display Name '" + Account_Display_Name + "'." + VbCrlf + ex.Message)
			Throw ex1
		End Try
	Else
		folder = olNamespace.GetDefaultFolder(Outlook_Folder_ID)
	End If
End If

If Sub_Folder <> "" Then
	For each name as string in Sub_Folder.Split("\")
		folder = folder.Folders(name)
	Next
End If

Dim dataTable As New Data.DataTable
dataTable.Columns.Add("EntryID", Type.GetType("System.String"))
dataTable.Columns.Add("Subject", Type.GetType("System.String"))
dataTable.Columns.Add("Body", Type.GetType("System.String"))
dataTable.Columns.Add("Unread", Type.GetType("System.Boolean"))

Dim folderItems = If(Filter_Expression <> "", folder.Items.Restrict(Filter_Expression), folder.Items)

For Each item As Object In folderItems
	If Not TypeOf item Is ReportItem Then Continue For
	Dim row As Data.DataRow = dataTable.NewRow
	row("EntryID") = item.EntryID
	row("Subject") = item.Subject
	row("Body") = item.Body
	row("Unread") = item.Unread
	dataTable.Rows.Add(row)
	Item_Count += 1
Next
Items = dataTable

olNamespace = Nothing 
olApp = Nothing 
]]></code></stage><stage stageid="950c06ad-073f-40b2-81af-6a8a29c8f290" name="Account Display Name" type="Data"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-180" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7b952101-d1bb-422d-affd-c7ea60502414" name="Shared Mailbox" type="Data"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-180" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4c26dc8a-358a-4e2e-9e10-f2cd671f3ba9" name="Note2" type="Note"><narrative>© 2024 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://portal.blueprism.com/agreements

Support URL

https://community.blueprism.com</narrative><display x="255" y="15" w="330" h="150" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="f18fbeef-eb3c-44c7-92d4-9c696ffcb182" name="Shared Mailbox" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><display x="-180" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b14359e-927d-4aa2-9607-151cf5399b1d" name="Shared Mailbox" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-195" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1da429d8-a398-4d27-bb05-1f952d92eb16" name="Get Item Count" type="SubSheetInfo"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><narrative>Returns the number of items in the default folder, of the specified type, for the specified account. Supported folder types include: Inbox, Sent Items, or Outbox.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="edb2c64c-865f-4304-9585-3526a7dde07a" name="Start" type="Start"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Shared Mailbox name or email address. Attempt to call Shared Mailbox is only initiated if a value is supplied." stage="Shared Mailbox" /><input type="text" name="Folder Type" narrative="The name of the folder type to check. Supported values are: 'Inbox', 'Sent Items', or 'Outbox'. " stage="Folder Type" /></inputs><onsuccess>e634b29b-3669-4f27-a0c7-d945f5170f82</onsuccess></stage><stage stageid="396b26fb-baeb-4dd3-a5a1-6ce758855cc7" name="End" type="End"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><loginhibit /><display x="135" y="105" /><outputs><output type="number" name="Item Count" narrative="The total number of items in the specified folder." stage="Item Count" /></outputs></stage><stage stageid="7f470e98-70dc-421a-b2f7-83413d5f9c2b" name="Get Item Count" type="Code"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><loginhibit /><display x="135" y="60" /><inputs><input type="text" name="Account Display Name" expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" expr="[Shared Mailbox]" /><input type="number" name="Folder ID" expr="[Folder ID]" /></inputs><outputs><output type="number" name="Item Count" stage="Item Count" /></outputs><onsuccess>396b26fb-baeb-4dd3-a5a1-6ce758855cc7</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim folder As NetOffice.OutlookApi.MAPIFolder

If Not String.IsNullOrEmpty(Shared_Mailbox) Then
	Dim recipient = olNamespace.CreateRecipient(Shared_Mailbox)
    recipient.Resolve()
	If recipient.Resolved Then
		folder = olNamespace.GetSharedDefaultFolder(recipient, Folder_ID)
	Else
		Dim ex1 As New System.Exception(VbCrlf + "Failed to resolve shared mailbox '" + Shared_Mailbox + "'.")
		Throw ex1
	End If
Else
	If Not String.IsNullOrEmpty(Account_Display_Name) Then
		Try
			Dim aa As List(Of Account) = olNamespace.Accounts.Cast(Of Account).ToList()
			folder  = aa.Where(Function(x) x.DisplayName = Account_Display_Name).FirstOrDefault().DeliveryStore.GetDefaultFolder(Folder_ID)
		Catch ex As System.Exception
			Dim ex1 As New System.Exception(VbCrlf + "Failed to retrieve default folder for Account Display Name '" + Account_Display_Name + "'." + VbCrlf + ex.Message)
			Throw ex1
		End Try
	Else
		folder = olNamespace.GetDefaultFolder(Folder_ID)
	End If
End If

Item_Count = folder.Items.Count

olNamespace = Nothing 
olApp = Nothing 
]]></code></stage><stage stageid="a7c88598-b69a-4f4e-9749-cdf9ad041412" name="Folder Type" type="Data"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><narrative>The type of the folder to count items for. We use the default folder for the specified type.</narrative><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b93159d3-8098-4436-a010-be833304973f" name="Folder ID" type="Data"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><loginhibit /><narrative>Default folder ID is 6 which equates to the Inbox.</narrative><display x="-195" y="120" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="dae7b9b9-f344-41c8-89ee-a921b6c5013e" name="Item Count" type="Data"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><display x="-195" y="195" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa6f5fee-dfce-4196-91db-9839cba2a7c0" name="Input" type="Block"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d6b4e353-dc4a-4e66-af0d-444e30df446c" name="Output" type="Block"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><loginhibit /><display x="-270" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="595e75e8-7dcb-482f-8c66-c0adcf738d9b" name="Account Display Name" type="Data"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5a936543-8408-4026-97ca-f6d6e905173a" name="Shared Mailbox" type="Data"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="47329083-e366-4540-8f56-d7528727a14b" name="Default" type="Block"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="e634b29b-3669-4f27-a0c7-d945f5170f82" name="Check Folder Name" type="ChoiceStart"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><loginhibit /><narrative>Ensure the specified folder name is supported.</narrative><display x="15" y="-60" /><groupid>c27bf98c-b2cf-4d28-87e0-56a2bb5b15f9</groupid><choices><choice expression="Lower(Trim([Folder Type])) = &quot;inbox&quot;"><name>Inbox</name><distance>60</distance><ontrue>3bb9e50e-f21e-4922-8263-e89ba55e4c64</ontrue></choice><choice expression="Lower(Trim([Folder Type])) = &quot;sent items&quot;"><name>Sent Items</name><distance>120</distance><ontrue>8453a3be-5546-456c-bf99-57a305021377</ontrue></choice><choice expression="Lower(Trim([Folder Type])) = &quot;outbox&quot;"><name>Outbox</name><distance>180</distance><ontrue>2a0f2eeb-8cae-4b7b-aa07-6e769c474926</ontrue></choice></choices></stage><stage stageid="71a7ca31-c2ab-4fe2-af86-31bed3f3729c" name="Otherwise1" type="ChoiceEnd"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><loginhibit /><display x="255" y="-60" /><onsuccess>947b0ee7-0b0e-4536-94ac-31be0e48c243</onsuccess><groupid>c27bf98c-b2cf-4d28-87e0-56a2bb5b15f9</groupid></stage><stage stageid="3bb9e50e-f21e-4922-8263-e89ba55e4c64" name="Inbox ID" type="Calculation"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><loginhibit /><display x="75" y="-15" /><onsuccess>7f470e98-70dc-421a-b2f7-83413d5f9c2b</onsuccess><calculation expression="6" stage="Folder ID" /></stage><stage stageid="8453a3be-5546-456c-bf99-57a305021377" name="Sent Items ID" type="Calculation"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><loginhibit /><display x="135" y="-15" /><onsuccess>7f470e98-70dc-421a-b2f7-83413d5f9c2b</onsuccess><calculation expression="5" stage="Folder ID" /></stage><stage stageid="2a0f2eeb-8cae-4b7b-aa07-6e769c474926" name="Outbox ID" type="Calculation"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><loginhibit /><display x="195" y="-15" /><onsuccess>7f470e98-70dc-421a-b2f7-83413d5f9c2b</onsuccess><calculation expression="4" stage="Folder ID" /></stage><stage stageid="947b0ee7-0b0e-4536-94ac-31be0e48c243" name="Unsupported Folder" type="Exception"><subsheetid>b99c4e4e-9b25-4018-97fe-5036b2d73a10</subsheetid><display x="345" y="-60" /><exception localized="yes" type="Invalid Input Parameter" detail="&quot;Folder '&quot; &amp; [Folder Type] &amp; &quot;' is not supported by this action. Only 'Inbox', 'Sent Items', and 'Outbox' are supported.&quot;" /></stage><stage stageid="eae57ca4-5ce5-4830-aa22-ce850fc3102d" name="Read from MSG" type="SubSheetInfo"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><narrative>Retreives data from MSG file</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="de83caea-b6b6-4b33-828c-b02484e19632" name="Start" type="Start"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="MSGFilePath" narrative="Path to MSG file" stage="MSGFilePath" /><input type="text" name="SaveAttachmentsPath" narrative="Path to save the attachments in MSG file" stage="SaveAttachmentsPath" /><input type="flag" name="SaveAttachments" narrative="Optional. True or False, default to False. Flag to indicate whether to save attachments" stage="SaveAttachments" /><input type="flag" name="HTMLFormat" stage="HTMLFormat" /></inputs><onsuccess>05375519-38ab-43b1-9156-529bac297155</onsuccess></stage><stage stageid="25ebcd04-627b-41b6-ab83-4b463210a9ab" name="End" type="End"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="text" name="attachments" narrative="| separated list of attachments" stage="attachments" /><output type="text" name="Body" narrative="Body Content" stage="Body" /><output type="number" name="Importance" narrative="Importance of the email" stage="Importance" /><output type="flag" name="IsHTML" narrative="Indicates if the body content is html" stage="IsHTML" /><output type="text" name="receivedOn" narrative="Received DateTime" stage="receivedOn" /><output type="text" name="recipientsCc" narrative="CC recipients list" stage="recipientsCc" /><output type="text" name="recipientsTo" narrative="TO recipients list" stage="recipientsTo" /><output type="text" name="SenderEmailAddress" narrative="Email ID of the Sender" stage="SenderEmailAddress" /><output type="text" name="SenderName" narrative="Name of the Sender" stage="SenderName" /><output type="number" name="Sensitivity" narrative="Sensitivity of the email" stage="Sensitivity" /><output type="text" name="sentOn" narrative="Sent DateTime" stage="sentOn" /><output type="text" name="subject" narrative="Subject of the email" stage="subject" /></outputs></stage><stage stageid="05375519-38ab-43b1-9156-529bac297155" name="Retrieve data from MSG" type="Code"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="MSGFilePath" expr="[MSGFilePath]" /><input type="text" name="SaveAttachmentsPath" expr="[SaveAttachmentsPath]" /><input type="flag" name="SaveAttachments" expr="[SaveAttachments]" /><input type="flag" name="HTMLFormat" expr="[HTMLFormat]" /></inputs><outputs><output type="text" name="recipientsTo" stage="recipientsTo" /><output type="text" name="recipientsCc" stage="recipientsCc" /><output type="text" name="sentOn" stage="sentOn" /><output type="text" name="SenderEmailAddress" stage="SenderEmailAddress" /><output type="text" name="subject" stage="subject" /><output type="text" name="Body" stage="Body" /><output type="text" name="receivedOn" stage="receivedOn" /><output type="number" name="Sensitivity" stage="Sensitivity" /><output type="number" name="Importance" stage="Importance" /><output type="flag" name="IsHTML" stage="IsHTML" /><output type="text" name="SenderName" stage="SenderName" /><output type="text" name="attachments" stage="attachments" /></outputs><onsuccess>25ebcd04-627b-41b6-ab83-4b463210a9ab</onsuccess><code><![CDATA[Dim PR_SMTP_ADDRESS As String = "https://schemas.microsoft.com/mapi/proptag/0x39FE001E"
Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim item As MailItem = olApp.CreateItemFromTemplate(MSGFilePath)
Dim oAttachments As Attachments = item.Attachments

For i As Integer = 1 To oAttachments.Count
	Dim oAttachment As NetOffice.OutlookApi.Attachment = oAttachments(i)
	If SaveAttachments Then
		oAttachment.SaveAsFile(SaveAttachmentsPath + oAttachment.FileName)
	End If
	If oAttachment.Type = 1 Then
		attachments = attachments & "|" & oAttachment.DisplayName
	End If
	oAttachment = Nothing
Next

recipientsTo=item.To
recipientsCc=item.Cc
sentOn=item.SentOn
subject=item.subject
SenderName = item.SenderName
receivedOn=item.ReceivedTime
IsHTML = (item.BodyFormat = 2)
Sensitivity = item.Sensitivity
Importance = item.Importance

If HTMLFormat = true Then
	Body=If((item.BodyFormat = 2), item.HTMLBody, item.Body)
Else
	Body = item.Body
End If

If item.SenderEmailType = "EX" Then
	Dim sender As AddressEntry = item.Sender
	If sender IsNot Nothing Then
		If sender.AddressEntryUserType = OlAddressEntryUserType.olExchangeUserAddressEntry OrElse sender.AddressEntryUserType = OlAddressEntryUserType.olExchangeRemoteUserAddressEntry Then
			Dim exchUser As ExchangeUser = sender.GetExchangeUser()
			If exchUser IsNot Nothing Then
				SenderEmailAddress = exchUser.PrimarySmtpAddress
			End If
		ElseIf sender.AddressEntryUserType = OlAddressEntryUserType.olExchangeDistributionListAddressEntry Then
			Dim exchDL As ExchangeDistributionList = sender.GetExchangeDistributionList
			If exchDL IsNot Nothing Then
				SenderEmailAddress = exchDL.PrimarySmtpAddress
			End If
		Else
			SenderEmailAddress = TryCast(sender.PropertyAccessor.GetProperty(PR_SMTP_ADDRESS), String)
		End If
	End If
Else
	SenderEmailAddress = item.SenderEmailAddress
End If

item = Nothing
olNamespace = Nothing 
olApp = Nothing 
]]></code></stage><stage stageid="02b0553f-4132-4485-a10c-674c93b8aec4" name="MSGFilePath" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="baab4745-448f-4c6a-9d4d-38d5951e1c17" name="recipientsTo" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54b4e183-95d4-41d5-82a8-1b6835c9721c" name="recipientsCc" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><display x="-195" y="285" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a218328-7687-443e-a028-9b01846393c7" name="sentOn" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><display x="-195" y="375" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d66195a3-c22a-4b0b-924e-cf10213d06ff" name="SenderEmailAddress" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><display x="-195" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c88ae575-d984-4de8-9881-d7a3fd480ee5" name="subject" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><display x="-195" y="330" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04572f30-dac5-48ce-9089-40c4c84a28e6" name="Body" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><display x="-195" y="420" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c20b22a-ff59-46d7-bd02-8dfd34d924ef" name="SaveAttachmentsPath" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3728cc14-40e0-4920-b6c4-44e2ab5b22f4" name="Input" type="Block"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="195" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1add309a-c173-433a-b875-7512a0cc5052" name="Output" type="Block"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><loginhibit /><display x="-270" y="165" w="150" h="555" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="5da5d0c6-8822-4e0c-86e9-9997191171b1" name="SaveAttachments" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="a73d7ccf-8044-4978-ae66-f5966daeb16c" name="receivedOn" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><display x="-195" y="465" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9113f50f-e0d2-41a3-ba08-b6cd1dc185a0" name="SenderName" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><display x="-195" y="510" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d09b3133-750c-4ec3-9eb0-6da52849d507" name="Sensitivity" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><loginhibit /><display x="-195" y="555" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c720c789-7e2a-44a5-8031-bf26df1f5711" name="Importance" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><loginhibit /><display x="-195" y="600" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e6d9f567-4f79-4226-91ee-e2b16f27237b" name="IsHTML" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><loginhibit /><display x="-195" y="645" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="18efb01b-f739-41ea-aff2-1799257812ae" name="attachments" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><display x="-195" y="690" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f369fba6-ff6e-42be-8a39-25aacac223ab" name="Check Folder Exists" type="SubSheetInfo"><subsheetid>70ac6311-ee68-4bb2-a827-4e29330f8019</subsheetid><narrative>Checks if a subfolder exists</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="daa89e66-7d9f-42b7-b328-845f04536b71" name="Start" type="Start"><subsheetid>70ac6311-ee68-4bb2-a827-4e29330f8019</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Root Folder to start the search. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" stage="Outlook Folder ID" /><input type="text" name="Sub Folder" narrative="The sub folder to look for in root folder. Note: Nested sub folders are not searched" stage="Sub Folder" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /></inputs><onsuccess>b7590bf2-0a83-4b27-9cdd-05bb21de145a</onsuccess></stage><stage stageid="0c4d5ac7-e45c-412c-8c14-4b1b57f64e5e" name="End" type="End"><subsheetid>70ac6311-ee68-4bb2-a827-4e29330f8019</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="FolderExists" narrative="Flag to indicate whether the sub folder exists" stage="FolderExists" /></outputs></stage><stage stageid="b7590bf2-0a83-4b27-9cdd-05bb21de145a" name="Check Folder Exists" type="Code"><subsheetid>70ac6311-ee68-4bb2-a827-4e29330f8019</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Sub Folder" expr="[Sub Folder]" /><input type="text" name="Account Display Name" expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" expr="[Shared Mailbox]" /></inputs><outputs><output type="flag" name="FolderExists" stage="FolderExists" /></outputs><onsuccess>0c4d5ac7-e45c-412c-8c14-4b1b57f64e5e</onsuccess><code><![CDATA[FolderExists=False

Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim folder As NetOffice.OutlookApi.MAPIFolder

If Not String.IsNullOrEmpty(Shared_Mailbox) Then
	Dim recipient = olNamespace.CreateRecipient(Shared_Mailbox)
    recipient.Resolve()
	If recipient.Resolved Then
		folder = olNamespace.GetSharedDefaultFolder(recipient, Outlook_Folder_ID)
	Else
		Dim ex1 As New System.Exception(VbCrlf + "Failed to resolve shared mailbox '" + Shared_Mailbox + "'.")
		Throw ex1
	End If
Else
	If Not String.IsNullOrEmpty(Account_Display_Name) Then
		Try
			Dim aa As List(Of Account) = olNamespace.Accounts.Cast(Of Account).ToList()
			folder  = aa.Where(Function(x) x.DisplayName = Account_Display_Name).FirstOrDefault().DeliveryStore.GetDefaultFolder(Outlook_Folder_ID)
		Catch ex As System.Exception
			Dim ex1 As New System.Exception(VbCrlf + "Failed to retrieve default folder for Account Display Name '" + Account_Display_Name + "'." + VbCrlf + ex.Message)
			Throw ex1
		End Try
	Else
		folder = olNamespace.GetDefaultFolder(Outlook_Folder_ID)
	End If
End If

For Each folderObj As NetOffice.OutlookApi.Folder In folder.folders
	If folderObj.name = Sub_Folder Then
		FolderExists=True
		Exit For           
	End If
Next

]]></code></stage><stage stageid="182c2da4-05dd-45a4-999a-6a691a5bff14" name="Outlook Folder ID" type="Data"><subsheetid>70ac6311-ee68-4bb2-a827-4e29330f8019</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="0" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="cc0f9366-081b-472e-b2e8-618a75989d2c" name="Sub Folder" type="Data"><subsheetid>70ac6311-ee68-4bb2-a827-4e29330f8019</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0ffd9cf2-defe-4469-b078-34ed5894898e" name="Input" type="Block"><subsheetid>70ac6311-ee68-4bb2-a827-4e29330f8019</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bb024c35-2fd6-4b4f-98f9-52bc1d8c24fe" name="Output" type="Block"><subsheetid>70ac6311-ee68-4bb2-a827-4e29330f8019</subsheetid><loginhibit /><display x="-270" y="135" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="9e753cac-fe15-48b0-a521-a1f2ac15ad53" name="Account Display Name" type="Data"><subsheetid>70ac6311-ee68-4bb2-a827-4e29330f8019</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dcea1b2-deba-4741-9cdd-8a946fc74912" name="Shared Mailbox" type="Data"><subsheetid>70ac6311-ee68-4bb2-a827-4e29330f8019</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bb48664c-04cd-473e-8a86-e1a7c5e93691" name="FolderExists" type="Data"><subsheetid>70ac6311-ee68-4bb2-a827-4e29330f8019</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4657ea7d-4fb9-423a-a9c6-36c8ac868a27" name="Create Folder" type="SubSheetInfo"><subsheetid>b0d1179c-f3a5-4040-8d6d-a191324a3fe7</subsheetid><narrative>Creates a folder in the specified root</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="aa6543f0-086a-459d-bb28-3807b1c60dc3" name="End" type="End"><subsheetid>b0d1179c-f3a5-4040-8d6d-a191324a3fe7</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="25081f55-514a-4006-abe7-70b9a59c4648" name="Outlook Folder ID" type="Data"><subsheetid>b0d1179c-f3a5-4040-8d6d-a191324a3fe7</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="49ec9eb3-e797-42e8-aa00-5b7dba03b409" name="Sub Folder" type="Data"><subsheetid>b0d1179c-f3a5-4040-8d6d-a191324a3fe7</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b657801-9fb9-440b-961b-2297f68eab3d" name="Input" type="Block"><subsheetid>b0d1179c-f3a5-4040-8d6d-a191324a3fe7</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="3f95fc7a-9457-4a62-9cca-c8f41ff499b6" name="Account Display Name" type="Data"><subsheetid>b0d1179c-f3a5-4040-8d6d-a191324a3fe7</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f7d24d0e-3d54-4eeb-9a54-a59a999be469" name="Shared Mailbox" type="Data"><subsheetid>b0d1179c-f3a5-4040-8d6d-a191324a3fe7</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a42a0400-e8a6-4178-9b96-e53cca9a2d8e" name="Start" type="Start"><subsheetid>b0d1179c-f3a5-4040-8d6d-a191324a3fe7</subsheetid><loginhibit /><display x="15" y="-120" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Root Folder. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" stage="Outlook Folder ID" /><input type="text" name="Sub Folder" narrative="Name of the folder to create" stage="Sub Folder" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /></inputs><onsuccess>830cee20-082f-4aad-a8ad-078affe7f8f8</onsuccess></stage><stage stageid="830cee20-082f-4aad-a8ad-078affe7f8f8" name="Create Folder" type="Code"><subsheetid>b0d1179c-f3a5-4040-8d6d-a191324a3fe7</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="number" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Sub Folder" expr="[Sub Folder]" /><input type="text" name="Account Display Name" expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" expr="[Shared Mailbox]" /></inputs><onsuccess>aa6543f0-086a-459d-bb28-3807b1c60dc3</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim FolderExists=False
Dim folder As NetOffice.OutlookApi.MAPIFolder

If Not String.IsNullOrEmpty(Shared_Mailbox) Then
	Dim recipient = olNamespace.CreateRecipient(Shared_Mailbox)
    recipient.Resolve()
	If recipient.Resolved Then
		folder = olNamespace.GetSharedDefaultFolder(recipient, Outlook_Folder_ID)
	Else
		Dim ex1 As New System.Exception(VbCrlf + "Failed to resolve shared mailbox '" + Shared_Mailbox + "'.")
		Throw ex1
	End If
Else
	If Not String.IsNullOrEmpty(Account_Display_Name) Then
		Try
			Dim aa As List(Of Account) = olNamespace.Accounts.Cast(Of Account).ToList()
			folder  = aa.Where(Function(x) x.DisplayName = Account_Display_Name).FirstOrDefault().DeliveryStore.GetDefaultFolder(Outlook_Folder_ID)
		Catch ex As System.Exception
			Dim ex1 As New System.Exception(VbCrlf + "Failed to retrieve default folder for Account Display Name '" + Account_Display_Name + "'." + VbCrlf + ex.Message)
			Throw ex1
		End Try
	Else
		folder = olNamespace.GetDefaultFolder(Outlook_Folder_ID)
	End If
End If

For Each folderObj As NetOffice.OutlookApi.Folder In folder.folders
	If folderObj.name = Sub_Folder Then
		FolderExists=True
		Exit For           
	End If
Next

If FolderExists=False Then
	folder.folders.add(Sub_Folder)
End If

olNamespace = Nothing
olApp = Nothing]]></code></stage><stage stageid="687b2ae3-2190-4517-9801-7fb8d57ed7ed" name="Note5" type="Note"><loginhibit /><narrative>Version: 10.4.6 (NetOffice)</narrative><display x="15" y="-165" w="180" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="df81fb35-a167-4082-b0db-06ae1fc344bc" name="Voting Options" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="225" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="92e83b84-421c-41e5-bf14-594ab9977f32" name="Move Item" type="SubSheetInfo"><subsheetid>99868840-5db6-4220-a829-09f39f098dd4</subsheetid><narrative>Moves an item (ex. email) from one folder to another using folder paths.
</narrative><display x="-180" y="-60" w="240" h="120" /></stage><stage stageid="f63dc4fd-d03d-4110-8db8-d2821c61c0b3" name="Start" type="Start"><subsheetid>99868840-5db6-4220-a829-09f39f098dd4</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory: An ID obtained from one of the 'Get Item' or 'Get Sent Item' actions in this object. Note: This is not a Mapiex ID." stage="Entry ID" /><input type="text" name="Destination Folder" narrative="Mandatory: The full path to the destination folder in the format \\[Account Display Name]\[Main Folder]\[Subfolder]. Example: \\Mailbox - John Doe\Inbox\Processed or \\jdoe@acme.com\Sent Items\Past Due " stage="Destination Folder" /></inputs><onsuccess>2b06da25-41c6-48c7-9e2d-11d30f4daf83</onsuccess></stage><stage stageid="7f098c6a-0dc2-44b2-9a09-69d07dd07e89" name="End" type="End"><subsheetid>99868840-5db6-4220-a829-09f39f098dd4</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="New Entry ID" narrative="Returns the new Entry ID from the Moved Email Object" stage="New Entry ID" /></outputs></stage><stage stageid="2b06da25-41c6-48c7-9e2d-11d30f4daf83" name="Move Item" type="Code"><subsheetid>99868840-5db6-4220-a829-09f39f098dd4</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Destination Folder" expr="[Destination Folder]" /></inputs><outputs><output type="text" name="New Entry ID" stage="New Entry ID" /></outputs><onsuccess>7f098c6a-0dc2-44b2-9a09-69d07dd07e89</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")

try
	Dim folder As NetOffice.OutlookApi.MAPIFolder
	Dim item = olNamespace.GetItemFromID(Entry_ID)

	folder = GetFolderFromPath(Destination_Folder)

	If (folder Is Nothing) Then
		Dim ex1 As New System.Exception(VbCrlf + "Failed to locate folder '" + Destination_Folder + "'." + VbCrlf)
		Throw ex1
	End If

	New_Entry_ID = item.Move(folder).EntryID

Catch ex As System.Exception
	Dim ex1 As New System.Exception(VbCrlf + "Error while trying to move item '" + Entry_ID + "'." + VbCrlf + ex.Message)
	Throw ex1
Finally 
	olNamespace = Nothing 
	olApp = Nothing 
End Try]]></code></stage><stage stageid="8968596d-421d-4ee3-a275-7049132bdaa3" name="Entry ID" type="Data"><subsheetid>99868840-5db6-4220-a829-09f39f098dd4</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-180" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bff6ec0d-bf7f-40c8-be38-956cef5bd1c0" name="Destination Folder" type="Data"><subsheetid>99868840-5db6-4220-a829-09f39f098dd4</subsheetid><display x="-180" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f5425f13-9532-4394-984c-be916e79feb5" name="Input" type="Block"><subsheetid>99868840-5db6-4220-a829-09f39f098dd4</subsheetid><loginhibit /><display x="-255" y="15" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="cf788d31-acfe-4733-b657-0ef2052f341c" name="Output" type="Block"><subsheetid>99868840-5db6-4220-a829-09f39f098dd4</subsheetid><loginhibit /><display x="-255" y="120" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="6e71be2b-2681-4482-95df-0d3a1a0174d1" name="New Entry ID" type="Data"><subsheetid>99868840-5db6-4220-a829-09f39f098dd4</subsheetid><display x="-180" y="150" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="07436efd-f20c-4456-95e6-4ea3527e109f" name="Vote Recipients" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="255" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="00e74276-6597-4db7-9dda-394854656edf" name="Attachments" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="83952a77-4c40-467b-b2fd-b30f9751339a" name="Attachments" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="150" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="53e486f0-104a-40b7-9109-12826dcf6bf2" name="Attachments" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="225" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="83f8f5d8-ad70-4331-a8ab-cd336ca28a3e" name="To" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="295437ec-a0c9-4736-8023-1c004a171502" name="CC" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ab64a057-d930-4bae-897a-e01fc92cab4d" name="BCC" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="225" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3c2fac66-03be-4c9c-93f7-ef1aaa550f6b" name="To" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c1bb6cfe-fd0e-4c36-9ec9-57e471576f44" name="CC" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="210" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f7dd3879-fac0-4efb-8f88-2fa6f4b49c18" name="BCC" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="240" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5572738-5ac1-4222-8d30-f923b718bfe0" name="Set Profile" type="SubSheetInfo"><subsheetid>a7325c36-6141-472d-a4f9-2332df3b4177</subsheetid><narrative>** DEPRECATED **

Use this action to set the Outlook profile that should be used when sending and receiving email. 

Note: If Outlook is already running, using this method does not create a new Outlook session or change the current profile to a different one.</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="33874d12-53bd-41d5-9451-33858e62cf44" name="Start" type="Start"><subsheetid>a7325c36-6141-472d-a4f9-2332df3b4177</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Profile Name" narrative="The MAPI profile name to use for the session. Specify an empty string to use the default profile for the current session." stage="Profile Name" /><input type="password" name="Password" narrative="Optional. The password (if any) associated with the profile. This parameter exists only for backwards compatibility and for security reasons, it is not recommended for use. Microsoft Outlook will prompt the user to specify a password in most system configurations. This is your logon password and should not be confused with PST passwords." stage="Password" /><input type="flag" name="Show Dialog" narrative="Optional. True to display the MAPI logon dialog box to allow the user to select a MAPI profile. Default value is False." stage="Show Dialog" /><input type="flag" name="New Session" narrative="Optional. True to create a new Microsoft Outlook session. Since multiple sessions cannot be created in Outlook, this parameter should be specified as True only if a session does not already exist." stage="New Session" /></inputs><onsuccess>e7f0d608-6c51-4ca9-b9c6-b4fd341ca490</onsuccess></stage><stage stageid="2cb71af5-9866-41fb-98e0-4cf6f82516a0" name="End" type="End"><subsheetid>a7325c36-6141-472d-a4f9-2332df3b4177</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="88206953-c8f8-4395-9f33-6466a378ebae" name="Profile Name" type="Data"><subsheetid>a7325c36-6141-472d-a4f9-2332df3b4177</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dbf6a13a-5a08-4720-9b2b-1c0be444a0c6" name="Password" type="Data"><subsheetid>a7325c36-6141-472d-a4f9-2332df3b4177</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="27ad82c8-0c96-4737-92eb-a76e37b733ce" name="Show Dialog" type="Data"><subsheetid>a7325c36-6141-472d-a4f9-2332df3b4177</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77889184-eef2-49c0-a123-2dd9cb77f3c4" name="New Session" type="Data"><subsheetid>a7325c36-6141-472d-a4f9-2332df3b4177</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="51a6a57b-168e-4fc9-853c-36f32c229f41" name="Input" type="Block"><subsheetid>a7325c36-6141-472d-a4f9-2332df3b4177</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e981ff00-58ab-4466-9e41-65e3fb415d18" name="Quit Outlook" type="SubSheetInfo"><subsheetid>ea4f00dc-5f1f-485c-9470-53569c6d86a7</subsheetid><narrative>Use this action to terminate the existing session with Outlook and close any open Windows.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4ff2942c-16f5-4101-8f8f-a97e48bb48e3" name="Start" type="Start"><subsheetid>ea4f00dc-5f1f-485c-9470-53569c6d86a7</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>e8cf3d6f-907b-4e8e-99e3-70db54f91f60</onsuccess></stage><stage stageid="19d434a8-d06d-419a-a8bc-8311f5aae590" name="End" type="End"><subsheetid>ea4f00dc-5f1f-485c-9470-53569c6d86a7</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="e8cf3d6f-907b-4e8e-99e3-70db54f91f60" name="Quit Outlook" type="Code"><subsheetid>ea4f00dc-5f1f-485c-9470-53569c6d86a7</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>19d434a8-d06d-419a-a8bc-8311f5aae590</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application

If Not IsNothing(olApp) Then
	olApp.Quit()
End If

olApp = Nothing ]]></code></stage><stage stageid="d227da32-a9f6-47b4-96b0-f961439b32ea" name="Get Items in Folder" type="SubSheetInfo"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><narrative>General purpose action that can be used to retrieve mail items from any Outlook folder (ex. Inbox, Sent Items, bespoke folder, etc).</narrative><display x="-225" y="-105" w="210" h="90" /></stage><stage stageid="2ff658d9-0062-478a-b3fa-f42e039c0454" name="End" type="End"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="525" /><outputs><output type="collection" name="Items" narrative="A Collection of mail items retrieved from the specified folder." stage="Items" /><output type="number" name="Item Count" narrative="The total number of items in the Collection." stage="Item Count" /><output type="collection" name="Errors" narrative="A collection containing information about any errors that were encountered while getting the list of items." stage="Errors" /></outputs></stage><stage stageid="137b37b6-af0d-457a-bc8c-68e9ebd9e80e" name="Folder Path" type="Data"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="-270" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f3b44f67-347a-4170-90b2-b39577271994" name="Input" type="Block"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="-330" y="-45" w="210" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b512b24c-57d8-4a91-a296-4e114b49c582" name="Output" type="Block"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="-330" y="255" w="210" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="d79eb223-f7e1-457c-b6c1-614d7ba25052" name="Default" type="Block"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="-330" y="180" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="36ed5691-e700-45ca-8f23-c53842ed9e59" name="Check Folder Path" type="Decision"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><decision expression="StartsWith([Folder Path], &quot;\\&quot;)" /><ontrue>3d69a713-6d3c-4ca1-b36a-9f83937290f1</ontrue><onfalse>7a8fa447-6863-4b72-a050-cad6bb9d21f7</onfalse></stage><stage stageid="7a8fa447-6863-4b72-a050-cad6bb9d21f7" name="Bad Folder Path" type="Exception"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="135" y="-60" w="90" h="30" /><exception localized="yes" type="Invalid Input Parameter" detail="&quot;Please review and correct your input. The folder path must be in the form '\\[Display Name]\[Folder]\[Subfolder]. Example: \\jdoe@abc.com\Inbox&quot;" /></stage><stage stageid="02e8eede-0736-474e-beff-8a39b75ec2d0" name="Get Items in Folder" type="Code"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="480" w="90" h="30" /><inputs><input type="text" name="Folder Path" expr="[Folder Path]" /><input type="text" name="Filter Expression" expr="[Filter Expression]" /></inputs><outputs><output type="collection" name="Items" stage="Items" /><output type="number" name="Item Count" stage="Item Count" /><output type="collection" name="Errors" stage="Errors" /></outputs><onsuccess>2ff658d9-0062-478a-b3fa-f42e039c0454</onsuccess><code><![CDATA[Dim folder As NetOffice.OutlookApi.MAPIFolder = Nothing
Dim errorsTable As New Data.DataTable
errorsTable.Columns.Add("EntryID", Type.GetType("System.String"))
errorsTable.Columns.Add("Subject", Type.GetType("System.String"))
errorsTable.Columns.Add("Error", Type.GetType("System.String"))

folder = GetFolderFromPath(Folder_Path)

If folder Is Nothing Then
	Dim ex1 As New System.Exception("Failed to resolve folder path using '" + Folder_Path + "'. Are you sure you have the correct path?")
	Throw ex1
End If

' See https://msdn.microsoft.com/en-us/library/office/aa210946(v=office.11).aspx
' for mail item properties
Dim dataTable As New Data.DataTable
dataTable.Columns.Add("EntryID", Type.GetType("System.String"))
dataTable.Columns.Add("To", Type.GetType("System.String"))
dataTable.Columns.Add("CC", Type.GetType("System.String"))
dataTable.Columns.Add("Subject", Type.GetType("System.String"))
dataTable.Columns.Add("Body", Type.GetType("System.String"))
dataTable.Columns.Add("Attachments", Type.GetType("System.String"))
dataTable.Columns.Add("ReceivedOn", Type.GetType("System.DateTime"))
dataTable.Columns.Add("SentOn", Type.GetType("System.DateTime"))
dataTable.Columns.Add("SenderName", Type.GetType("System.String"))
dataTable.Columns.Add("SenderEmailAddress", Type.GetType("System.String"))
dataTable.Columns.Add("Unread", Type.GetType("System.Boolean"))
dataTable.Columns.Add("Sensitivity", Type.GetType("System.Int16"))
dataTable.Columns.Add("Importance", Type.GetType("System.Int16"))
dataTable.Columns.Add("Flag", Type.GetType("System.String"))
dataTable.Columns.Add("IsHTML", Type.GetType("System.Boolean"))

' Set the PrimaryKeys property to the array. We only use EntryID as the key.
Dim primaryKey(0) As Data.DataColumn
primaryKey(0) = dataTable.Columns(0)
dataTable.PrimaryKey = primaryKey

Dim folderItems = If(Filter_Expression <> "", folder.Items.Restrict(Filter_Expression), folder.Items)

For Each item As Object In folderItems
	Try
		' We ignore any items that are not specifically olMailItem.
		If Not TypeOf item Is MailItem Then Continue For
		Dim row As Data.DataRow = dataTable.NewRow
		row("EntryID") = item.EntryID
		row("To") = item.To
		row("CC") = item.CC
		row("Subject") = item.Subject
		row("Body") = If(item.BodyFormat = 2, item.HTMLBody, item.Body)
		
		Dim attachments As String = ""
		For Each attachment As Object In item.Attachments
			If attachment.Type = 1 Then
				attachments = attachments & "|" & attachment.DisplayName
			End If
		Next
		
		row("Attachments") = If (attachments.Length = 0, "", attachments.SubString(1))
		row("SentOn") = item.SentOn
		row("ReceivedOn") = item.ReceivedTime
		row("SenderName") = item.SenderName

		If item.SenderEmailType = "EX" Then
			Dim sender As AddressEntry = item.Sender
			If sender IsNot Nothing Then
				If sender.AddressEntryUserType = OlAddressEntryUserType.olExchangeDistributionListAddressEntry Then
					Dim exchDL As ExchangeDistributionList = sender.GetExchangeDistributionList
					If exchDL IsNot Nothing Then
						row("SenderEmailAddress") = exchDL.PrimarySmtpAddress
					End If
				Else
					Dim exchUser As ExchangeUser = sender.GetExchangeUser()
					If exchUser IsNot Nothing Then
						row("SenderEmailAddress") = exchUser.PrimarySmtpAddress
					End If
				End If
			End If
		Else
			row("SenderEmailAddress") = item.SenderEmailAddress
		End If

		row("Unread") = item.Unread
		row("Sensitivity") = item.Sensitivity
		row("Importance") = item.Importance
		row("Flag") = item.FlagRequest
		row("IsHTML") = (item.BodyFormat = 2)

		dataTable.Rows.Add(row)
		Item_Count += 1
	Catch ex As System.Exception
		Dim row As Data.DataRow = errorsTable.NewRow
		row("EntryID") = item.EntryID
		row("Subject") = item.Subject
		row("Error") = ex.Message
	End Try
Next
Items = dataTable
Errors = errorsTable]]></code></stage><stage stageid="e8e7c0c6-4c35-4533-9fb5-dbadd3cd101c" name="Start" type="Start"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Folder Path" narrative="The path to the Outlook folder in the form \\[Display Name]\[Top-Level Folder]\[Subfolder1]\[Subfolder2]. Example: \\jdoe@abc.com\Inbox\Processed Emails" stage="Folder Path" /><input type="text" name="Sender Name" narrative="Optional. The From display name, which might be a name (eg John Smith) or email address (eg admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the From field." stage="Sender Name" /><input type="text" name="Sender Email" narrative="Optional. The sender email address." stage="Sender Email" /><input type="datetime" name="Received Earliest" narrative="Optional. The earliest date to search from." stage="Received Earliest" /><input type="datetime" name="Received Latest" narrative="Optional. The latest date to search to." stage="Received Latest" /><input type="text" name="Subject" narrative="Optional. Asterisk wildcard permitted, eg *Project Update for 'Project Update', 'RE: Project Update' etc." stage="Subject" /><input type="text" name="Message" narrative="Optional. Asterisk wildcard permitted, eg *Blue Prism*" stage="Message" /><input type="flag" name="Include Read" narrative="Optional. Default value True" stage="Include Read" /><input type="flag" name="Include Unread" narrative="Optional. Default value True" stage="Include Unread" /><input type="text" name="Advanced Filter" narrative="Optional. If a value is specified for Advaned Filter, it overrides all other filter criteria." stage="Advanced Filter" /></inputs><onsuccess>36ed5691-e700-45ca-8f23-c53842ed9e59</onsuccess></stage><stage stageid="c46198e0-4108-4f3c-8e79-839605f64425" name="Sender Name?" type="Decision"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="30" /><decision expression="[Sender Name]&lt;&gt;&quot;&quot;" /><ontrue>82e5f305-802f-4198-854b-8c10f12e1eb4</ontrue><onfalse>15cf88c5-c969-4d64-9006-fd1a2fd0379d</onfalse></stage><stage stageid="82e5f305-802f-4198-854b-8c10f12e1eb4" name="Filter Expression" type="Calculation"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="90" y="30" /><onsuccess>15cf88c5-c969-4d64-9006-fd1a2fd0379d</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:sendername LIKE '&quot;&amp;Replace([Sender Name], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="a449fdca-fa9a-4bad-bd41-ea43bcc1507c" name="Clean Expression" type="Calculation"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="390" /><onsuccess>183e6373-4d1a-4990-a605-7bd6280f26a0</onsuccess><calculation expression="Trim(Mid([Filter Expression], 6, Len([Filter Expression])))" stage="Filter Expression" /></stage><stage stageid="38bc7cab-6564-4bc7-9242-e1838107efb2" name="Filter Expression" type="Calculation"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="90" y="120" /><onsuccess>ef4a7337-6f3c-413a-bc0a-3721eb324670</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:subject LIKE '&quot;&amp;Replace([Subject], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="78b146e7-4754-401d-9f40-8c508a87317c" name="Subject?" type="Decision"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="120" /><decision expression="[Subject]&lt;&gt;&quot;&quot;" /><ontrue>38bc7cab-6564-4bc7-9242-e1838107efb2</ontrue><onfalse>ef4a7337-6f3c-413a-bc0a-3721eb324670</onfalse></stage><stage stageid="15cf88c5-c969-4d64-9006-fd1a2fd0379d" name="Sender Email?" type="Decision"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="75" /><decision expression="[Sender Email]&lt;&gt;&quot;&quot;" /><ontrue>ef6b2654-3821-4103-b33c-294beaab5cba</ontrue><onfalse>78b146e7-4754-401d-9f40-8c508a87317c</onfalse></stage><stage stageid="ef6b2654-3821-4103-b33c-294beaab5cba" name="Filter Expression" type="Calculation"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="90" y="75" /><onsuccess>78b146e7-4754-401d-9f40-8c508a87317c</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:fromemail ci_phrasematch '&quot;&amp;Replace([Sender Email], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="183e6373-4d1a-4990-a605-7bd6280f26a0" name="Filter Expression?" type="Decision"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="435" /><decision expression="[Filter Expression]&lt;&gt;&quot;&quot;" /><ontrue>a4c6bd56-3667-4bb9-ad0a-669ac1f876d9</ontrue><onfalse>02e8eede-0736-474e-beff-8a39b75ec2d0</onfalse></stage><stage stageid="a4c6bd56-3667-4bb9-ad0a-669ac1f876d9" name="Prepend" type="Calculation"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="90" y="435" /><onsuccess>02e8eede-0736-474e-beff-8a39b75ec2d0</onsuccess><calculation expression="&quot;@SQL=&quot;&amp;[Filter Expression]" stage="Filter Expression" /></stage><stage stageid="9124deb8-f081-476e-91e7-9b209acf67e2" name="Filter Expression" type="Calculation"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="345" /><onsuccess>a449fdca-fa9a-4bad-bd41-ea43bcc1507c</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:read=0&quot;" stage="Filter Expression" /></stage><stage stageid="00f4422b-2553-4afa-a208-bc8830d3d90b" name="Filter Expression" type="Calculation"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="90" y="210" /><onsuccess>cdf1be41-b247-4a90-9462-77bcee289f61</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&gt;='&quot; &amp; FormatDateTime([Received Earliest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="5be93a97-b9fd-4fe1-9aeb-72a84577f63a" name="Earliest?" type="Decision"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="210" /><decision expression="IsDate([Received Earliest])" /><ontrue>00f4422b-2553-4afa-a208-bc8830d3d90b</ontrue><onfalse>cdf1be41-b247-4a90-9462-77bcee289f61</onfalse></stage><stage stageid="cdf1be41-b247-4a90-9462-77bcee289f61" name="Latest?" type="Decision"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="255" /><decision expression="IsDate([Received Latest])" /><ontrue>f0193bed-603a-4008-851a-d690f204d481</ontrue><onfalse>7d7aa892-4657-4d4b-b689-8a74fc2e737a</onfalse></stage><stage stageid="f0193bed-603a-4008-851a-d690f204d481" name="Filter Expression" type="Calculation"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="90" y="255" /><onsuccess>7d7aa892-4657-4d4b-b689-8a74fc2e737a</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&lt;='&quot; &amp; FormatDateTime([Received Latest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="7d7aa892-4657-4d4b-b689-8a74fc2e737a" name="Unread Only?" type="Decision"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="300" /><decision expression="[Include Unread]=True AND [Include Read]=False" /><ontrue>9124deb8-f081-476e-91e7-9b209acf67e2</ontrue><onfalse>dbe078cc-6b11-423a-a0df-d51fad267246</onfalse></stage><stage stageid="dbe078cc-6b11-423a-a0df-d51fad267246" name="Read Only?" type="Decision"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="90" y="300" /><decision expression="[Include Read]=True AND [Include Unread]=False" /><ontrue>58180e02-8fb6-46e2-8207-ef1cec9155d3</ontrue><onfalse>cf479e8b-ee2c-4a63-832d-79172ce329d5</onfalse></stage><stage stageid="58180e02-8fb6-46e2-8207-ef1cec9155d3" name="Filter Expression" type="Calculation"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="90" y="345" /><onsuccess>137dc5a4-ff56-4f4c-a768-1a2d51cdba7c</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:read=1&quot;" stage="Filter Expression" /></stage><stage stageid="cf479e8b-ee2c-4a63-832d-79172ce329d5" name="Anchor1" type="Anchor"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="150" y="300" w="10" h="10" /><onsuccess>ac05fa47-fc08-4261-b254-0bdad8c12e32</onsuccess></stage><stage stageid="ac05fa47-fc08-4261-b254-0bdad8c12e32" name="Anchor1" type="Anchor"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="150" y="390" w="10" h="10" /><onsuccess>137dc5a4-ff56-4f4c-a768-1a2d51cdba7c</onsuccess></stage><stage stageid="137dc5a4-ff56-4f4c-a768-1a2d51cdba7c" name="Anchor1" type="Anchor"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="90" y="390" w="10" h="10" /><onsuccess>a449fdca-fa9a-4bad-bd41-ea43bcc1507c</onsuccess></stage><stage stageid="cd884a27-49c6-4e44-80ba-d0329faf9fbd" name="Filter Expression" type="Calculation"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="90" y="165" /><onsuccess>5be93a97-b9fd-4fe1-9aeb-72a84577f63a</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:textdescription LIKE '&quot;&amp;Replace([Message], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="ef4a7337-6f3c-413a-bc0a-3721eb324670" name="Message?" type="Decision"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="165" /><decision expression="[Message]&lt;&gt;&quot;&quot;" /><ontrue>cd884a27-49c6-4e44-80ba-d0329faf9fbd</ontrue><onfalse>5be93a97-b9fd-4fe1-9aeb-72a84577f63a</onfalse></stage><stage stageid="3737c6d9-d049-4786-bf25-329cc8f77dea" name="Sender Name" type="Data"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="-270" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9df0abc-cb37-49eb-9431-4b203d97f338" name="Sender Email" type="Data"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="-270" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3c18547b-1da4-447d-b35c-432fda5c82b6" name="Received Earliest" type="Data"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="-180" y="-15" w="90" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b78dc5e7-f80a-46ee-a793-8920c95eeeaf" name="Received Latest" type="Data"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="-180" y="15" w="90" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="295fb9f5-50ae-4c1b-bf8d-8e6443eda9dd" name="Subject" type="Data"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="-180" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c5a08da1-2518-4a1c-b49c-202097e0a61b" name="Message" type="Data"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="-180" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3658fd15-65d4-4405-8dec-d512d7f680bf" name="Include Read" type="Data"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="-270" y="75" w="90" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="25955228-849b-461d-a124-449b5d464028" name="Include Unread" type="Data"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="-270" y="105" w="90" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="0aa83068-81e8-4ca0-a8c2-01c8b05841ca" name="Advanced Filter" type="Data"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="-270" y="135" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d69a713-6d3c-4ca1-b36a-9f83937290f1" name="Advanced Filter?" type="Decision"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="15" y="-15" /><decision expression="Len(Trim([Advanced Filter])) &gt; 0" /><ontrue>3e65cb27-8efe-4bfc-b4f8-25c9f9ef9a41</ontrue><onfalse>c46198e0-4108-4f3c-8e79-839605f64425</onfalse></stage><stage stageid="3e65cb27-8efe-4bfc-b4f8-25c9f9ef9a41" name="Anchor2" type="Anchor"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="-60" y="-15" w="10" h="10" /><onsuccess>b22ce086-0d72-46c5-83f2-18c5df957d83</onsuccess></stage><stage stageid="87acd03e-804f-4459-8449-723b8914e8f7" name="Anchor3" type="Anchor"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="-60" y="480" w="10" h="10" /><onsuccess>02e8eede-0736-474e-beff-8a39b75ec2d0</onsuccess></stage><stage stageid="7b9726d1-f101-4ec6-9f20-7f863cc40834" name="Filter Expression" type="Data"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="-180" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b22ce086-0d72-46c5-83f2-18c5df957d83" name="Set Filter Expression" type="Calculation"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><loginhibit /><display x="-60" y="30" /><onsuccess>87acd03e-804f-4459-8449-723b8914e8f7</onsuccess><calculation expression="[Advanced Filter]" stage="Filter Expression" /></stage><stage stageid="1d5876af-2a9a-495a-a853-56a179f799bf" name="Items" type="Collection"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="-270" y="285" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0ccb269b-4bca-4f70-9679-d3c24cfc540b" name="Item Count" type="Data"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="-180" y="285" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="480de84a-b219-4093-a0ff-b335f2e72e4e" name="Ignore Embedded Images" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="21f021a1-b137-44b0-83b5-d733d4da0918" name="Prefer Plain Text Body" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><narrative>Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body.</narrative><display x="-195" y="135" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4e94fa21-0d26-490e-86ae-75775ee1f929" name="Prefer Plain Text Body" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><narrative>Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body.</narrative><display x="-195" y="195" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="64d39653-1232-4ad9-8b2b-f4e045abe023" name="Prefer Plain Text Body" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><narrative>Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body.</narrative><display x="-195" y="135" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="dd2eb6b4-eff1-484a-99e5-f00431476b7b" name="Prefer Plain Text Body" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><narrative>Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body.</narrative><display x="-195" y="135" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2376c8cb-9bd4-46a7-b884-0ee28746efb6" name="Prefer Plain Text Body" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><narrative>Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body.</narrative><display x="-195" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="626b39d8-71ae-4574-9d8d-b1d7511974c1" name="Prefer Plain Text Body" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><narrative>Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body.</narrative><display x="-195" y="120" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="acae2b2e-b084-43a5-96d8-66296c35b118" name="Prefer Plain Text Body" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><narrative>Optional, default False. Set to True to return plain-text Body. Set to False to return HTML Body.</narrative><display x="-195" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e96fd306-5175-4571-b19e-d179995c76a8" name="Clean Filter?" type="Decision"><subsheetid>ac45a686-fb8b-4e92-bf3a-44701b796f4d</subsheetid><loginhibit /><display x="15" y="30" /><decision expression="StartsWith([Filter Expression], &quot; AND&quot;)" /><ontrue>b91502bf-0fc4-4019-ba63-b271a8122155</ontrue><onfalse>ade4ed1e-24f6-4b0b-9e7f-e9966b0a0722</onfalse></stage><stage stageid="43b4918b-02bc-429e-abc7-4f139b860f7d" name="Errors" type="Collection"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="270" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" /><field name="Subject" type="text" /><field name="Error" type="text" /></collectioninfo></stage><stage stageid="abe5fca1-20b9-4b10-b604-9cf49d83d247" name="Errors" type="Collection"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="330" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8f296c56-2b82-4f0f-b7ac-025014b79bf2" name="Errors" type="Collection"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="270" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0bd6ceff-0483-4902-aade-4c7e9aff4eed" name="Errors" type="Collection"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="270" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8400bcc6-cc5e-4c35-93b8-8006818d4863" name="Errors" type="Collection"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="feb40b2b-a15c-400e-a3e8-8c669cccd0b1" name="Errors" type="Collection"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><display x="-195" y="255" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4781bb38-97b8-4478-873e-773529f009ed" name="Errors" type="Collection"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6e9b3ef4-fe4f-4634-a733-e2d889c59a94" name="Errors" type="Collection"><subsheetid>7756da40-e4db-4cf5-a679-a1c186117e01</subsheetid><display x="-270" y="315" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="856bdf6d-05d4-4534-9e4a-138734b77f9c" name="HTMLFormat" type="Data"><subsheetid>77072a83-9be3-4451-b8f2-80c13ff8d7ee</subsheetid><display x="-195" y="120" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc37df92-ecf7-4695-be27-1c5aae10ad32" name="Send Email - With OBO" type="SubSheetInfo"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><narrative>Sends an Email with option for On Behalf of.

For a list of valid Sensitivity values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olsensitivity

For a list of valid Importance values, please see https://docs.microsoft.com/en-us/office/vba/api/outlook.olimportance</narrative><display x="-195" y="-120" w="210" h="120" /></stage><stage stageid="5ffe531f-4a55-4cdc-9fd3-630ee6ee3a1a" name="End" type="End"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><loginhibit /><display x="15" y="120" /></stage><stage stageid="bf68f125-468a-4ddb-bc0c-97063e7b9102" name="Send Item with On Behalf Of" type="Code"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><loginhibit /><display x="15" y="-30" w="150" h="30" /><inputs><input type="text" name="To" expr="[To]" /><input type="text" name="OnBehalfOf" expr="[OnBehalfOf]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Message" expr="[Message]" /><input type="text" name="Attachments" expr="[Attachments]" /><input type="flag" name="Message Is HTML" expr="[Message Is HTML]" /><input type="number" name="Sensitivity" expr="[Sensitivity]" /><input type="number" name="Importance" expr="[Importance]" /><input type="text" name="Account Display Name" expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" expr="[Shared Mailbox]" /><input type="text" name="Voting Options" expr="[Voting Options]" /><input type="text" name="Vote Recipients" expr="[Vote Recipients]" /><input type="text" name="MIP Label GUID" expr="[MIP Label GUID]" /><input type="text" name="Tenant ID" expr="[Tenant ID]" /></inputs><onsuccess>5ffe531f-4a55-4cdc-9fd3-630ee6ee3a1a</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim mail = olApp.CreateItem(0)
Dim addressCount As Integer

mail.SentOnBehalfOfName = OnBehalfOf

If [To] <> "" Then
	Dim toAddresses = Split([To], ";")
	For addressCount = LBound(toAddresses) To UBound(toAddresses)
		Dim recipient = mail.Recipients.Add(toAddresses(addressCount)) 
		recipient.Resolve  
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
	Next 
	
End if

If CC <> "" Then
	Dim ccAddresses = Split([CC], ";")
	addressCount = 0
	For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
		Dim recipient = mail.Recipients.Add(ccAddresses(addressCount))
		recipient.Resolve
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC 
	Next

End If

If BCC <> "" Then
	Dim bccAddresses = Split([BCC], ";")
	addressCount = 0
	For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
		Dim recipient = mail.Recipients.Add(bccAddresses(addressCount))
		recipient.Resolve
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
	Next

End If

mail.Subject = Subject

If Message_Is_HTML Then
	mail.BodyFormat = 2
	mail.HTMLBody = Message
Else
	mail.BodyFormat = 1
	mail.Body = Message
End If

For Each att As String In Attachments.Split(";"c)
	If att = "" Then Continue For
	mail.Attachments.Add(att)
Next

If Sensitivity = Int(Sensitivity) AndAlso (Sensitivity >= 0 And Sensitivity <= 3)
	mail.Sensitivity = Sensitivity
Else
	mail.Sensitivity = 0
End If

If Importance = Int(Importance) AndAlso (Importance >= 0 And Importance <= 2) Then
	mail.Importance = Importance
Else
	mail.Importance = 1
End If

If Voting_Options <> "" Then
	mail.VotingOptions = Voting_Options

	' We only set the value of Vote Recipients if the use provided actual voting options.
	If Vote_Recipients <> "" Then
		Dim voteAddresses = Split([Vote_Recipients], ";")
		For addressCount = LBound(voteAddresses) To UBound(voteAddresses)
			Dim recipient = mail.ReplyRecipients.Add(voteAddresses(addressCount)) 
			recipient.Resolve  
			If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
		Next 
		
	End if

End If

If Not String.IsNullOrEmpty(Shared_Mailbox) Then
	mail.SentOnBehalfOfName = Shared_Mailbox
ElseIf Not String.IsNullOrEmpty(Account_Display_Name) Then
	Try
		Dim aa As List(Of Account) = olNamespace.Accounts.Cast(Of Account).ToList()
		Dim acct = aa.Where(Function(x) x.DisplayName = Account_Display_Name).FirstOrDefault()
		mail.SendUsingAccount(acct)
	Catch ex As System.Exception
		Dim ex1 As New System.Exception(VbCrlf + "Unable to find Account Display Name '" + Account_Display_Name + "'." + VbCrlf + ex.Message)
		Throw ex1
	End Try
End If

' Adds Information Protection Label with respect to pre-configured policy
If MIP_Label_GUID <> "" And Tenant_ID <> "" Then
	Dim timestamp = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ssZ")
	Dim MIP_Headers = "MSIP_Label_" + MIP_Label_GUID + "_Enabled=true; MSIP_Label_" + MIP_Label_GUID + "_SiteId=" + Tenant_ID + "; MSIP_Label_" + MIP_Label_GUID + "_SetDate=" + timestamp + "; MSIP_Label_" + MIP_Label_GUID + "_Method=Privileged; " 
	mail.PropertyAccessor.SetProperty("http://schemas.microsoft.com/mapi/string/{00020386-0000-0000-C000-000000000046}/MSIP_Labels", MIP_Headers)
End If

mail.Save
mail.Send

olNamespace = Nothing 
olApp = Nothing 
]]></code></stage><stage stageid="cb39e476-80a8-4128-aa42-3634cdb34b7a" name="Subject" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><loginhibit /><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e1c617f-4bb1-42ed-b076-5e04f0ed69a4" name="To" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><loginhibit /><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d7f30e6c-e233-45c7-b4f3-ca66eeb3c49f" name="Message" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><loginhibit /><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="594efd36-9035-438f-98f5-138bc2fd656f" name="Attachments" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cce88dc8-a395-4048-b448-f5957894f9fe" name="CC" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c13c34a-8770-4b3a-93b7-d4ec1dcab58c" name="BCC" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94102f47-4b44-4070-8645-4acc21b10c09" name="Start" type="Start"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" stage="To" /><input type="text" name="OnBehalfOf" narrative="Mandatory. The user who is the designed source of the email." stage="OnBehalfOf" /><input type="text" name="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="CC" /><input type="text" name="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="BCC" /><input type="text" name="Subject" narrative="Optional. Any alphanumeric value allowed." stage="Subject" /><input type="text" name="Message" narrative="Optional, HTML or plain text" stage="Message" /><input type="text" name="Attachments" narrative="Optional, Semicolon--separated file paths. Default blank." stage="Attachments" /><input type="flag" name="IsHTML" narrative="Optional. True or False, default to True" stage="Message Is HTML" /><input type="number" name="Sensitivity" narrative="Optional. An integer between 0 and 3, default to 0." stage="Sensitivity" /><input type="number" name="Importance" narrative="Optional. An integer between 0 and 2 default to 1." stage="Importance" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /><input type="text" name="Voting Options" narrative="Optional: A semicolon-delimited list of values. Example: “Cheese; Mushroom; Sausage; Combo; Veg Combo;”. " stage="Voting Options" /><input type="text" name="Vote Recipients" narrative="Optional: A semicolon-delimited list of email addresses that should receive the results of any votes." stage="Vote Recipients" /><input type="text" name="MIP Label GUID" narrative="Optional: The unique identifier associated with an MIP sensitivity label within your organization" stage="MIP Label GUID" /><input type="text" name="Tenant ID" narrative="Optional: Required when sending mail with an MIP sensitivity label." stage="Tenant ID" /></inputs><onsuccess>bf68f125-468a-4ddb-bc0c-97063e7b9102</onsuccess></stage><stage stageid="06d91e07-d89c-46a4-b97b-1ff315224c92" name="Input" type="Block"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="420" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="be810e86-c79d-4fbe-ac4f-433c62f99d64" name="Message Is HTML" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><display x="-195" y="420" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4731cb4e-214c-4fa0-98a4-48dba1db97b9" name="Sensitivity" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><display x="-195" y="450" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ad84b00a-3afd-407d-8fc5-ec06d0a03616" name="Importance" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><display x="-195" y="480" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="4a9b49ff-16b7-46ca-8abd-d3b202913033" name="Default" type="Block"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><loginhibit /><display x="-270" y="390" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="20642cea-d804-4a28-a7a3-ad6ce4f0e05f" name="Account Display Name" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-195" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f7f49a88-f62f-4be2-aa76-f665a028ff9f" name="Shared Mailbox" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-195" y="225" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43bcdf42-6ece-49e1-9595-2cfdd5e11994" name="Voting Options" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><display x="-195" y="255" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="990d34c2-ff96-4c17-a584-7c21f432e9b1" name="Vote Recipients" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><display x="-195" y="285" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="12522b20-661e-4887-9a58-4e86140bcadc" name="OnBehalfOf" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e7f0d608-6c51-4ca9-b9c6-b4fd341ca490" name="Exception1" type="Exception"><subsheetid>a7325c36-6141-472d-a4f9-2332df3b4177</subsheetid><display x="15" y="-15" /><exception localized="yes" type="Application Exception" detail="&quot;This action has been deprecated. If you need to set a profile in Outlook, we recommend using a VBO to launch Outlook and UI automation to set the specific profile using the 'Choose Profile' dialog.&quot;" /></stage><stage stageid="1d9b49b0-f20c-445a-bcf9-04dcdcb0a446" name="Send and Receive" type="SubSheetInfo"><subsheetid>09bca601-4952-4f53-be91-af04a4b48a77</subsheetid><narrative>Send and Receive

Valid for Office (COM) 2007 or later.</narrative><display x="-195" y="-120" w="210" h="120" /></stage><stage stageid="f17407c2-00fc-490b-84e4-dccabc7345ed" name="End" type="End"><subsheetid>09bca601-4952-4f53-be91-af04a4b48a77</subsheetid><loginhibit /><display x="15" y="120" /><outputs><output type="text" name="ExceptionMessage" stage="Exception" /></outputs></stage><stage stageid="1a0bc4bc-4108-4f66-a5ca-228e2ca55e07" name="Send and Receive" type="Code"><subsheetid>09bca601-4952-4f53-be91-af04a4b48a77</subsheetid><loginhibit /><display x="15" y="0" /><outputs><output type="text" name="Exception" stage="Exception" /></outputs><onsuccess>f17407c2-00fc-490b-84e4-dccabc7345ed</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application

If olApp.Session.EntityIsAvailable("SendAndReceive")
    olApp.Session.SendAndReceive(true)
Else
    Exception = "Send & Receive not supported on this version of Office"
End If

olApp = Nothing ]]></code></stage><stage stageid="0ba42a08-3d5e-4db1-a8a3-0efbe2517d94" name="Start" type="Start"><subsheetid>09bca601-4952-4f53-be91-af04a4b48a77</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>1a0bc4bc-4108-4f66-a5ca-228e2ca55e07</onsuccess></stage><stage stageid="49adf117-93a8-4d6c-943e-ee964a1459bb" name="Exception" type="Block"><subsheetid>09bca601-4952-4f53-be91-af04a4b48a77</subsheetid><loginhibit /><display x="-300" y="-45" w="210" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="5db49f4c-533f-43cc-905b-7065d37b2933" name="Exception" type="Data"><subsheetid>09bca601-4952-4f53-be91-af04a4b48a77</subsheetid><display x="-195" y="15" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="132561c4-320e-4ade-a4ac-adfe8a9dc45f" name="Note6" type="Note"><subsheetid>a7325c36-6141-472d-a4f9-2332df3b4177</subsheetid><loginhibit /><narrative>DEPRECATED</narrative><display x="15" y="-195" w="180" h="30" /><font family="Segoe UI" size="18" style="Regular" color="FF0000" /></stage><stage stageid="88554af8-2b72-4e1a-9781-09608bb4e45b" name="Read from EML" type="SubSheetInfo"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><narrative>Retreives data from EML file</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="32fe440b-275f-4ff9-9c4a-ea25cb580e9a" name="Start" type="Start"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="EMLFilePath" narrative="Path to EML  file" stage="EMLFilePath" /><input type="text" name="SaveAttachmentsPath" narrative="Path to save the attachments in MSG file" stage="SaveAttachmentsPath" /><input type="flag" name="SaveAttachments" narrative="Optional. True or False, default to False. Flag to indicate whether to save attachments" stage="SaveAttachments" /><input type="flag" name="HTMLFormat" narrative="Shows html tags in a text string when false." stage="HTMLFormat" /></inputs><onsuccess>d4c3fccd-3a4c-4d5f-b2f9-2dbf2eda2409</onsuccess></stage><stage stageid="9bd4a804-ddda-4952-b47a-95715f3cfb72" name="End" type="End"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="text" name="attachments" narrative="| separated list of attachments" stage="attachments" /><output type="text" name="Body" narrative="Body Content" stage="Body" /><output type="number" name="Importance" narrative="Importance of the email" stage="Importance" /><output type="flag" name="IsHTML" narrative="Indicates if the body content is html" stage="IsHTML" /><output type="text" name="receivedOn" narrative="Received DateTime" stage="receivedOn" /><output type="text" name="recipientsCc" narrative="CC recipients list" stage="recipientsCc" /><output type="text" name="recipientsTo" narrative="TO recipients list" stage="recipientsTo" /><output type="text" name="SenderEmailAddress" narrative="Email ID of the Sender" stage="SenderEmailAddress" /><output type="text" name="SenderName" narrative="Name of the Sender" stage="SenderName" /><output type="number" name="Sensitivity" narrative="Sensitivity of the email" stage="Sensitivity" /><output type="text" name="sentOn" narrative="Sent DateTime" stage="sentOn" /><output type="text" name="subject" narrative="Subject of the email" stage="subject" /><output type="text" name="Exception" narrative="Exception message " stage="ExceptionMessage" /></outputs></stage><stage stageid="d4c3fccd-3a4c-4d5f-b2f9-2dbf2eda2409" name="Retrieve data from EML" type="Code"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><loginhibit /><narrative>Make sure the saveattachmentspath has an ending'\'</narrative><display x="15" y="-15" /><inputs><input type="text" name="EMLFilePath" expr="[EMLFilePath]" /><input type="text" name="SaveAttachmentsPath" expr="[SaveAttachmentsPath]" /><input type="flag" name="SaveAttachments" expr="[SaveAttachments]" /><input type="flag" name="HTMLFormat" expr="[HTMLFormat]" /></inputs><outputs><output type="text" name="recipientsTo" stage="recipientsTo" /><output type="text" name="recipientsCc" stage="recipientsCc" /><output type="text" name="sentOn" stage="sentOn" /><output type="text" name="SenderEmailAddress" stage="SenderEmailAddress" /><output type="text" name="subject" stage="subject" /><output type="text" name="Body" stage="Body" /><output type="text" name="receivedOn" stage="receivedOn" /><output type="number" name="Sensitivity" stage="Sensitivity" /><output type="number" name="Importance" stage="Importance" /><output type="flag" name="IsHTML" stage="IsHTML" /><output type="text" name="SenderName" stage="SenderName" /><output type="text" name="attachments" stage="attachments" /><output type="text" name="ExceptionMessage" stage="ExceptionMessage" /></outputs><onsuccess>9bd4a804-ddda-4952-b47a-95715f3cfb72</onsuccess><code><![CDATA[ExceptionMessage = "No Exception"
Dim emlFolder as string = Path.GetDirectoryName(EMLFilePath)
Dim emlFile as string = Path.GetFileName(EMLFilePath)
Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim mailItem as NetOffice.OutlookApi.MailItem = Nothing
Dim olInsp as NetOffice.OutlookApi._Inspector = Nothing

If Not File.Exists(EMLFilePath) Then
    ExceptionMessage = "File " + EMLFilePath + " does not exist"
Else
	Try
		Process.Start(EMLFilePath)
		While olApp.ActiveInspector Is Nothing
			Thread.Sleep(50)
		End While
		olInsp = olApp.ActiveInspector
		mailItem = olInsp.CurrentItem

		'For Each insp as NetOffice.OutlookApi.Inspector in olApp.Inspectors
			'If Object.ReferenceEquals(insp.CurrentItem.GetType(), GetType(NetOffice.OutlookApi.MailItem)) then
				'mailItem = DirectCast(insp.CurrentItem, NetOffice.OutlookApi.MailItem)
				'If mailItem.ConversationTopic = emlFile.Substring(0, emlFile.Length-4) then
					'Exit For
				'End If
			'End if
		'Next
			If Not mailItem is Nothing then
				For Each r As Recipient In mailItem.Recipients
					recipientsTo += string.format("{0}({1}){2}",r.Name,r.Address, Environment.NewLine)
				Next

				recipientsCc = mailItem.cc
				sentOn = mailItem.SentOn
				SenderEmailAddress = string.format("{0} ({1})", mailItem.SenderName, mailItem.SenderEmailAddress)
				subject = mailItem.Subject
				If (HTMLFormat = True And mailItem.BodyFormat = 2) then
					Body = mailItem.HTMLBody
				Else
					Body = mailItem.Body
				End If
				receivedOn = mailItem.ReceivedTime
				Sensitivity = mailItem.Sensitivity
				Importance = mailItem.Importance
				IsHTML = (mailItem.BodyFormat = 2) 
				If SaveAttachments andAlso Directory.Exists(SaveAttachmentsPath) then
					For Each att as NetOffice.OutlookApi.Attachment In mailItem.Attachments
						att.SaveAsFile(SaveAttachmentsPath + att.FileName)
					Next
				End If
				olInsp.Close(OlInspectorClose.olDiscard)
				mailItem.Close(OlInspectorClose.olDiscard)
			Else
				ExceptionMessage = "Unable to associate with MailItem"
			End If
	Catch ex As System.Exception
		If Not ex.InnerException is Nothing Then
			ExceptionMessage = string.format("{0} :InnerExc ({1})",ex.Message,ex.InnerException.Message)
		else
			ExceptionMessage = ex.Message
		End If
	End Try
End if

olNamespace = Nothing 
olApp = Nothing 
]]></code></stage><stage stageid="03a25cf4-f229-4984-acb4-deb7f4b0ecd7" name="EMLFilePath" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c2194348-087c-4d21-938a-166128f43fa1" name="recipientsTo" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><display x="-120" y="210" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fae6165-7510-4e1d-b4ce-00a7ee474e5f" name="recipientsCc" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><display x="-120" y="255" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4e9a51c-0e1d-4831-9ceb-c9339868d612" name="sentOn" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><display x="-120" y="300" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc4586bb-d21d-4610-ae6c-5620ad440a21" name="SenderEmailAddress" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><display x="-255" y="210" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6cecce7f-8257-44c3-95a0-fe06fdfcb8ea" name="subject" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><display x="-255" y="255" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f931a68-dab0-4fed-b0f9-5c110fe60e18" name="Body" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><display x="-255" y="300" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="747c21b3-d6dc-4d88-9bde-c57b494685c3" name="SaveAttachmentsPath" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><narrative>Needs an '\' at the end.</narrative><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97774318-3ed4-4be2-846c-60ed784be4b5" name="Input" type="Block"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="195" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="9f0c0cb4-253a-4e9b-928a-ea6c2b7528f9" name="Output" type="Block"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><loginhibit /><display x="-345" y="180" w="315" h="285" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="952b42ad-a96a-4b0b-ad10-78ae356c6b6e" name="SaveAttachments" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c537c3c6-f440-4d9b-99bd-e04f3caed6a7" name="receivedOn" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><display x="-255" y="345" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="edcf1197-ca01-45d5-acd9-57592d9b04bf" name="SenderName" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><display x="-120" y="345" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="62323d95-77f0-4827-8725-39121bade769" name="Sensitivity" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><loginhibit /><display x="-120" y="390" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="42c93eb5-419b-43ef-a05c-921ad085c705" name="Importance" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><loginhibit /><display x="-255" y="390" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="99417e5c-74bc-482a-8870-1a51b2a4a53f" name="IsHTML" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><loginhibit /><display x="-120" y="435" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="d965fb40-ef24-4046-9d28-b0a91c962bd6" name="attachments" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><display x="-255" y="435" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e0b13459-14f8-4720-bd3c-1def90dc81b8" name="ExceptionMessage" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><display x="-195" y="525" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="705874cc-56e3-4c6b-bbd4-f4cd7dacec69" name="Exception Handling" type="Block"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><loginhibit /><display x="-270" y="495" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="19d7c2c0-f3dc-4ebb-be46-968287dc1d59" name="Add Custom Message to Email Body" type="SubSheetInfo"><subsheetid>6e1bb675-6699-4e10-b51e-cadda382ba40</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4b0e0526-b0c7-4e2c-b5c4-1560ad0aa563" name="Start" type="Start"><subsheetid>6e1bb675-6699-4e10-b51e-cadda382ba40</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry_ID" narrative="The Identifier of the email item." stage="Entry_ID" /><input type="text" name="Custom_Message" narrative="The message you wish to add." stage="Custom_Message" /></inputs><onsuccess>63763b8f-4188-492a-adb2-58ecb60412a2</onsuccess></stage><stage stageid="63c716d1-7674-4000-b839-ff5f491cb409" name="End" type="End"><subsheetid>6e1bb675-6699-4e10-b51e-cadda382ba40</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="ExceptionMessage" narrative="Any exception details." stage="ExceptionMessage" /></outputs></stage><stage stageid="6e998204-b7b5-4281-b43d-9dfa2c9c1705" name="Add Reminder to Email Item" type="SubSheetInfo"><subsheetid>12a4fdb8-c315-45b9-a598-2a46b1433aec</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="bf15a7d1-96fb-4289-bf44-ac90c77ae71c" name="Start" type="Start"><subsheetid>12a4fdb8-c315-45b9-a598-2a46b1433aec</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry_ID" narrative="The unique mail item ID" stage="Entry_ID" /><input type="datetime" name="ReminderTime" narrative="The date time for the reminder" stage="ReminderTime" /></inputs><onsuccess>dd430a78-f232-44cb-865b-33aaeba3628c</onsuccess></stage><stage stageid="0c4e51ed-5814-44db-b41e-ccbfc9610ac4" name="End" type="End"><subsheetid>12a4fdb8-c315-45b9-a598-2a46b1433aec</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="4702c2ad-5868-4152-9736-4e4b4740733d" name="Assign Category to Email" type="SubSheetInfo"><subsheetid>c3f6b9ae-7abb-4efc-bd43-6c77dd197e37</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9aa7e53f-273a-43da-a224-ce00679fbe8c" name="Start" type="Start"><subsheetid>c3f6b9ae-7abb-4efc-bd43-6c77dd197e37</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="The unique ID of the mail item" stage="Entry ID" /><input type="text" name="Categories" narrative="The categories to assign." stage="Categories" /></inputs><onsuccess>0a43914c-9616-4339-82c1-d0881b0e6f78</onsuccess></stage><stage stageid="499eaca0-4ae6-4001-9bf2-5b042aa37326" name="End" type="End"><subsheetid>c3f6b9ae-7abb-4efc-bd43-6c77dd197e37</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="ExceptionMessage" narrative="Any exception message details." stage="ExceptionMessage" /></outputs></stage><stage stageid="80a9094a-6c50-43c2-a7db-575fa08d710e" name="Reply All Email - With OBO" type="SubSheetInfo"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="8868e903-f1f4-4c31-a6a7-1363f199457c" name="End" type="End"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="ExceptionMessage" narrative="Any exception message that may exist." stage="ExceptionMessage" /></outputs></stage><stage stageid="d4e2c4fc-5f0b-4b47-b241-734c818f89f6" name="Reply To Email - With OBO" type="SubSheetInfo"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f80403bc-07ef-4c75-999e-52c1051dfa40" name="End" type="End"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="ExceptionMessage" narrative="Any exception message that there may be." stage="ExceptionMessage" /></outputs></stage><stage stageid="0e4e8baa-1188-4906-96be-050afa5e027d" name="Entry ID" type="Data"><subsheetid>c3f6b9ae-7abb-4efc-bd43-6c77dd197e37</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b55a52e3-5b35-4f06-b13a-071f60c91ec1" name="Categories" type="Data"><subsheetid>c3f6b9ae-7abb-4efc-bd43-6c77dd197e37</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7a313e4c-a01d-48ea-840d-b83f821dc014" name="Input" type="Block"><subsheetid>c3f6b9ae-7abb-4efc-bd43-6c77dd197e37</subsheetid><loginhibit /><display x="-270" y="-15" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="877b9216-66e7-4ccb-b635-8f962b1f0bed" name="Entry ID" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-330" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dec6d82c-6159-426c-b632-12ba7ad5c48c" name="Message" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2ae63a60-634a-4018-8b1b-b5de6e206e29" name="Input" type="Block"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><loginhibit /><display x="-420" y="-30" w="315" h="330" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="70f5ae1f-ed80-4e6b-aa71-5f09a4fe0a05" name="Message Is HTML" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-255" y="360" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="2d52f859-41c8-463f-b80c-937c47880c0e" name="Sensitivity" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-255" y="390" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="cb161ef9-5343-42c5-a7d5-56b057ecd9a6" name="Importance" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-255" y="420" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="103d482e-ee51-414e-81f3-b2d0735fba0e" name="Default" type="Block"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><loginhibit /><display x="-330" y="330" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="722a12ee-129e-4630-88f0-a0aa006b0f14" name="Subject" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><loginhibit /><display x="-330" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad9fb060-2517-490b-83e3-f2c9c22a5481" name="Account Display Name" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-330" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9daef76d-4dd0-4fd9-b6bc-e3f2495476e1" name="Shared Mailbox" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fe57e919-f681-4521-be05-a7679872d558" name="OnBehalfOf" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7165793b-36bd-494c-bd89-5d9bcc605744" name="Reply To Email with OBO" type="Code"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="To" expr="[To]" /><input type="text" name="OnBehalfOf" expr="[OnBehalfOf]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Message" expr="[Message]" /><input type="text" name="Attachments" expr="[Attachments]" /><input type="flag" name="Message Is HTML" expr="[Message Is HTML]" /><input type="number" name="Sensitivity" expr="[Sensitivity]" /><input type="number" name="Importance" expr="[Importance]" /><input type="text" name="Account Display Name" expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" expr="[Shared Mailbox]" /><input type="text" name="Voting Options" expr="[Voting Options]" /><input type="text" name="Vote Recipients" expr="[Vote Recipients]" /><input type="text" name="MIP Label GUID" expr="[MIP Label GUID]" /><input type="text" name="Tenant ID" expr="[Tenant ID]" /></inputs><outputs><output type="text" name="ExceptionMessage" stage="ExceptionMessage" /></outputs><onsuccess>f80403bc-07ef-4c75-999e-52c1051dfa40</onsuccess><code><![CDATA[ExceptionMessage = "No exception reported."
Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim mail = olNamespace.GetItemFromID(Entry_ID)
Dim reply = mail.Reply
Dim addressCount As Integer

Try

	reply.SentOnBehalfOfName = OnBehalfOf

	If [To] <> "" Then
		Dim toAddresses = Split([To], ";")
		For addressCount = LBound(toAddresses) To UBound(toAddresses)
			Dim recipient = reply.Recipients.Add(toAddresses(addressCount)) 
			recipient.Resolve  
			If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
		Next 
	End if

	If CC <> "" Then
		Dim ccAddresses = Split([CC], ";")
		addressCount = 0
		For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
			Dim recipient = reply.Recipients.Add(ccAddresses(addressCount))
			recipient.Resolve
			If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC 
		Next
	End If

	If BCC <> "" Then
		Dim bccAddresses = Split([BCC], ";")
		addressCount = 0
		For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
			Dim recipient = reply.Recipients.Add(bccAddresses(addressCount))
			recipient.Resolve
			If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
		Next
	End If

	mail.Subject = Subject

	If Message_Is_HTML Then
		reply.BodyFormat = 2
		reply.HTMLBody = Message
	Else
		reply.BodyFormat = 1
		reply.Body = Message
	End If

	For Each att As String In Attachments.Split(";"c)
		If att = "" Then Continue For
		reply.Attachments.Add(att)
	Next

	If Sensitivity = Int(Sensitivity) AndAlso (Sensitivity >= 0 And Sensitivity <= 3)
		reply.Sensitivity = Sensitivity
	Else
		reply.Sensitivity = 0
	End If

	If Importance = Int(Importance) AndAlso (Importance >= 0 And Importance <= 2) Then
		reply.Importance = Importance
	Else
		reply.Importance = 1
	End If

	If Voting_Options <> "" Then
		mail.VotingOptions = Voting_Options

		' We only set the value of Vote Recipients if the use provided actual voting options.
		If Vote_Recipients <> "" Then
			Dim voteAddresses = Split([Vote_Recipients], ";")
			For addressCount = LBound(voteAddresses) To UBound(voteAddresses)
				Dim recipient = reply.ReplyRecipients.Add(voteAddresses(addressCount)) 
				recipient.Resolve  
				If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
			Next 
		End if
	End If

	If Not String.IsNullOrEmpty(Shared_Mailbox) Then
		reply.SentOnBehalfOfName = Shared_Mailbox
	ElseIf Not String.IsNullOrEmpty(Account_Display_Name) Then
		Try
			Dim aa As List(Of Account) = olNamespace.Accounts.Cast(Of Account).ToList()
			Dim acct = aa.Where(Function(x) x.DisplayName = Account_Display_Name).FirstOrDefault()
			reply.SendUsingAccount(acct)
		Catch ex As System.Exception
			Dim ex1 As New System.Exception(VbCrlf + "Unable to find Account Display Name '" + Account_Display_Name + "'." + VbCrlf + ex.Message)
			Throw ex1
		End Try
	End If

	' Adds Information Protection Label with respect to pre-configured policy
	If MIP_Label_GUID <> "" And Tenant_ID <> "" Then
		Dim timestamp = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ssZ")
		Dim MIP_Headers = "MSIP_Label_" + MIP_Label_GUID + "_Enabled=true; MSIP_Label_" + MIP_Label_GUID + "_SiteId=" + Tenant_ID + "; MSIP_Label_" + MIP_Label_GUID + "_SetDate=" + timestamp + "; MSIP_Label_" + MIP_Label_GUID + "_Method=Privileged; " 
		reply.PropertyAccessor.SetProperty("http://schemas.microsoft.com/mapi/string/{00020386-0000-0000-C000-000000000046}/MSIP_Labels", MIP_Headers)
	End If

	reply.Save
	reply.Send
Catch ex As System.Exception
	If Not ex.InnerException is Nothing Then
		ExceptionMessage = string.format("{0} :InnerExc ({1})",ex.Message,ex.InnerException.Message)
	else
		ExceptionMessage = ex.Message
	End If
Finally 
	olNamespace = Nothing 
	olApp = Nothing 
End Try
	
]]></code></stage><stage stageid="abe338ca-a9fe-4217-a88b-e1781c83a225" name="Subject" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><loginhibit /><display x="-210" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae1a312d-dbaf-414c-8853-b88b4fd4dd15" name="To" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><loginhibit /><display x="-210" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52dcef4a-79da-4ab3-aea2-74531b31d20f" name="Message" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><loginhibit /><display x="-345" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0d861a59-f338-4ea2-bc3a-e694e09429e5" name="Attachments" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><display x="-210" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da0d6714-9cca-41b7-90ef-b654733124a0" name="CC" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><display x="-345" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f23812f1-bcd9-4111-b6e4-8c27c17b7ae3" name="BCC" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><display x="-345" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f3fa0c8-a62c-4703-9830-65afb8925cd4" name="Input" type="Block"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><loginhibit /><display x="-435" y="-30" w="315" h="330" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0f7e171d-8eed-4c9f-a1c9-36334e3c9e4a" name="Message Is HTML" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><display x="-285" y="360" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="3f5051fd-984d-4fa1-9ad4-244d97c7ef2a" name="Sensitivity" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><display x="-285" y="390" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="594b7625-24d5-4ee2-8825-2cec7ff20894" name="Importance" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><display x="-285" y="420" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="f40370ae-aeb7-4e6b-9471-564f25ffc98e" name="Default" type="Block"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><loginhibit /><display x="-360" y="330" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="cd0ec056-5a8a-4d30-90d4-818119c67e8b" name="Account Display Name" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><narrative>Optional. DisplayName of the email account. Default account is used if omitted.</narrative><display x="-210" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28899de7-1554-493d-a229-532994b7215a" name="Shared Mailbox" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><narrative>Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied.</narrative><display x="-345" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8e73abe7-27e8-4870-ac1b-05c6a1fc2937" name="Voting Options" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><display x="-210" y="225" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fcd6075b-c4f4-4427-ae76-ff45f3001cf2" name="Vote Recipients" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><display x="-345" y="225" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="020e487f-0101-4364-8f27-e5549811aba7" name="OnBehalfOf" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><display x="-210" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3071c5a9-1214-4f75-8b10-23bb69f7c886" name="Start" type="Start"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory - The unique ID of the mail item to reply to." stage="Entry ID" /><input type="text" name="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" stage="To" /><input type="text" name="OnBehalfOf" narrative="Mandatory. The user who is the designed source of the email." stage="OnBehalfOf" /><input type="text" name="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="CC" /><input type="text" name="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="BCC" /><input type="text" name="Subject" narrative="Optional. Any alphanumeric value allowed." stage="Subject" /><input type="text" name="Message" narrative="Optional, HTML or plain text" stage="Message" /><input type="text" name="Attachments" narrative="Optional, Semicolon--separated file paths. Default blank." stage="Attachments" /><input type="flag" name="IsHTML" narrative="Optional. True or False, default to True" stage="Message Is HTML" /><input type="number" name="Sensitivity" narrative="Optional. An integer between 0 and 3, default to 0." stage="Sensitivity" /><input type="number" name="Importance" narrative="Optional. An integer between 0 and 2 default to 1." stage="Importance" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /><input type="text" name="Voting Options" narrative="Optional: A semicolon-delimited list of values. Example: “Cheese; Mushroom; Sausage; Combo; Veg Combo;”. " stage="Voting Options" /><input type="text" name="Vote Recipients" narrative="Optional: A semicolon-delimited list of email addresses that should receive the results of any votes." stage="Vote Recipients" /><input type="text" name="MIP Label GUID" narrative="Optional: The unique identifier associated with an MIP sensitivity label within your organization." stage="MIP Label GUID" /><input type="text" name="Tenant ID" narrative="Optional: Required when sending mail with an MIP sensitivity label." stage="Tenant ID" /></inputs><onsuccess>7165793b-36bd-494c-bd89-5d9bcc605744</onsuccess></stage><stage stageid="abd6a57e-17a0-4461-b16d-cecff69f5827" name="Reply All to Email with OBO" type="Code"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><inputs><input type="text" name="To" expr="[To]" /><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="OnBehalfOf" expr="[OnBehalfOf]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Message" expr="[Message]" /><input type="text" name="Attachments" expr="[Attachments]" /><input type="flag" name="Message Is HTML" expr="[Message Is HTML]" /><input type="number" name="Sensitivity" expr="[Sensitivity]" /><input type="number" name="Importance" expr="[Importance]" /><input type="text" name="Account Display Name" expr="[Account Display Name]" /><input type="text" name="Shared Mailbox" expr="[Shared Mailbox]" /><input type="text" name="Voting Options" expr="[Voting Options]" /><input type="text" name="Vote Recipients" expr="[Vote Recipients]" /><input type="text" name="MIP Label GUID" expr="[MIP Label GUID]" /><input type="text" name="Tenant ID" expr="[Tenant ID]" /></inputs><onsuccess>8868e903-f1f4-4c31-a6a7-1363f199457c</onsuccess><code><![CDATA[Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")
Dim mail = olNamespace.GetItemFromID(Entry_ID)
Dim reply = mail.ReplyAll
Dim addressCount As Integer

reply.SentOnBehalfOfName = OnBehalfOf

If [To] <> "" Then
	Dim toAddresses = Split([To], ";")
	For addressCount = LBound(toAddresses) To UBound(toAddresses)
		Dim recipient = reply.Recipients.Add(toAddresses(addressCount)) 
		recipient.Resolve  
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
	Next 
	
End if

If CC <> "" Then
	Dim ccAddresses = Split([CC], ";")
	addressCount = 0
	For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
		Dim recipient = reply.Recipients.Add(ccAddresses(addressCount))
		recipient.Resolve
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC 
	Next

End If

If BCC <> "" Then
	Dim bccAddresses = Split([BCC], ";")
	addressCount = 0
	For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
		Dim recipient = reply.Recipients.Add(bccAddresses(addressCount))
		recipient.Resolve
		If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
	Next

End If
	if Not String.IsNullOrEmpty(Subject) Then
		reply.Subject = Subject
	End If

If Message_Is_HTML Then
	reply.BodyFormat = 2
	reply.HTMLBody = Message
Else
	reply.BodyFormat = 1
	reply.Body = Message
End If

For Each att As String In Attachments.Split(";"c)
	If att = "" Then Continue For
	reply.Attachments.Add(att)
Next

If Sensitivity = Int(Sensitivity) AndAlso (Sensitivity >= 0 And Sensitivity <= 3)
	reply.Sensitivity = Sensitivity
Else
	reply.Sensitivity = 0
End If

If Importance = Int(Importance) AndAlso (Importance >= 0 And Importance <= 2) Then
	reply.Importance = Importance
Else
	reply.Importance = 1
End If

If Voting_Options <> "" Then
	reply.VotingOptions = Voting_Options

	' We only set the value of Vote Recipients if the use provided actual voting options.
	If Vote_Recipients <> "" Then
		Dim voteAddresses = Split([Vote_Recipients], ";")
		For addressCount = LBound(voteAddresses) To UBound(voteAddresses)
			Dim recipient = reply.ReplyRecipients.Add(voteAddresses(addressCount)) 
			recipient.Resolve  
			If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
		Next 
		
	End if

End If

If Not String.IsNullOrEmpty(Shared_Mailbox) Then
	reply.SentOnBehalfOfName = Shared_Mailbox
ElseIf Not String.IsNullOrEmpty(Account_Display_Name) Then
	Try
		Dim aa As List(Of Account) = olNamespace.Accounts.Cast(Of Account).ToList()
		Dim acct = aa.Where(Function(x) x.DisplayName = Account_Display_Name).FirstOrDefault()
		reply.SendUsingAccount(acct)
	Catch ex As System.Exception
		Dim ex1 As New System.Exception(VbCrlf + "Unable to find Account Display Name '" + Account_Display_Name + "'." + VbCrlf + ex.Message)
		Throw ex1
	End Try
End If

' Adds Information Protection Label with respect to pre-configured policy
If MIP_Label_GUID <> "" And Tenant_ID <> "" Then
	Dim timestamp = DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ssZ")
	Dim MIP_Headers = "MSIP_Label_" + MIP_Label_GUID + "_Enabled=true; MSIP_Label_" + MIP_Label_GUID + "_SiteId=" + Tenant_ID + "; MSIP_Label_" + MIP_Label_GUID + "_SetDate=" + timestamp + "; MSIP_Label_" + MIP_Label_GUID + "_Method=Privileged; " 
	reply.PropertyAccessor.SetProperty("http://schemas.microsoft.com/mapi/string/{00020386-0000-0000-C000-000000000046}/MSIP_Labels", MIP_Headers)
End If

reply.Save
reply.Send

olNamespace = Nothing 
olApp = Nothing 
]]></code></stage><stage stageid="124d8ee7-062f-49c9-89b2-20109cfbb636" name="Start" type="Start"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" stage="Entry ID" /><input type="text" name="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" stage="To" /><input type="text" name="OnBehalfOf" narrative="Mandatory. The user who is the designed source of the email." stage="OnBehalfOf" /><input type="text" name="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="CC" /><input type="text" name="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="BCC" /><input type="text" name="Subject" narrative="Optional. Any alphanumeric value allowed." stage="Subject" /><input type="text" name="Message" narrative="Optional, HTML or plain text" stage="Message" /><input type="text" name="Attachments" narrative="Optional, Semicolon--separated file paths. Default blank." stage="Attachments" /><input type="flag" name="IsHTML" narrative="Optional. True or False, default to True" stage="Message Is HTML" /><input type="number" name="Sensitivity" narrative="Optional. An integer between 0 and 3, default to 0." stage="Sensitivity" /><input type="number" name="Importance" narrative="Optional. An integer between 0 and 2 default to 1." stage="Importance" /><input type="text" name="Account Display Name" narrative="Optional. DisplayName of the email account. Default account is used if omitted." stage="Account Display Name" /><input type="text" name="Shared Mailbox" narrative="Optional. Share Mailbox name or email address. Attempt to call Shared Mailbox is only initiated when a value is supplied." stage="Shared Mailbox" /><input type="text" name="Voting Options" narrative="Optional: A semicolon-delimited list of values. Example: “Cheese; Mushroom; Sausage; Combo; Veg Combo;”. " stage="Voting Options" /><input type="text" name="Vote Recipients" narrative="Optional: A semicolon-delimited list of email addresses that should receive the results of any votes." stage="Vote Recipients" /><input type="text" name="MIP Label GUID" narrative="Optional: The unique identifier associated with an MIP sensitivity label within your organization." stage="MIP Label GUID" /><input type="text" name="Tenant ID" narrative="Optional: Required when sending mail with an MIP sensitivity label." stage="Tenant ID" /></inputs><onsuccess>abd6a57e-17a0-4461-b16d-cecff69f5827</onsuccess></stage><stage stageid="63763b8f-4188-492a-adb2-58ecb60412a2" name="Add Custom Message" type="Code"><subsheetid>6e1bb675-6699-4e10-b51e-cadda382ba40</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="Entry ID" expr="[Entry_ID]" /><input type="text" name="Custom_Message" expr="[Custom_Message]" /></inputs><outputs><output type="text" name="ExceptionMessage" stage="ExceptionMessage" /></outputs><onsuccess>63c716d1-7674-4000-b839-ff5f491cb409</onsuccess><code><![CDATA[ExceptionMessage = "No Exception Reported."

Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")

Try
	Dim item = olNamespace.GetItemFromID(Entry_ID)

	item.Body = item.Body & vbCrLf & vbCrLf & DateTime.Now() & "************************************"
	item.Body = item.Body & vbCrLf & Custom_Message 
	item.Body = item.Body & vbCrLf & "********************************************************" & vbCrLf

	item.Save
Catch ex As System.Exception
	If Not ex.InnerException is Nothing Then
		ExceptionMessage = string.format("{0} :InnerExc ({1})",ex.Message,ex.InnerException.Message)
	else
		ExceptionMessage = ex.Message
	End If
Finally
	olNamespace = Nothing
	olApp = Nothing
End Try]]></code></stage><stage stageid="5a207f42-63d1-43ec-a223-2c1ebff2b64e" name="Entry_ID" type="Data"><subsheetid>6e1bb675-6699-4e10-b51e-cadda382ba40</subsheetid><loginhibit /><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9e1d99e9-a585-4a41-85d8-e5fe03e02659" name="Custom_Message" type="Data"><subsheetid>6e1bb675-6699-4e10-b51e-cadda382ba40</subsheetid><loginhibit /><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18a37a4b-8290-461f-a991-6d1ca5d86e1b" name="Inputs" type="Block"><subsheetid>6e1bb675-6699-4e10-b51e-cadda382ba40</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="80a58604-6d8c-40bd-99e8-456118e6d875" name="Attachments" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-330" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3d90719-235c-48b8-bcee-244b4aa8c41c" name="To" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ca34ade8-91a8-4f78-aaa6-fdea8b9a0150" name="CC" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-330" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0876b391-24c3-430a-bc02-35854c69434b" name="BCC" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a52df708-afc0-40fd-8b33-c1369fc9a3ea" name="Voting Options" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-330" y="225" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba588416-b042-471e-9f5f-11c8681d46ec" name="Vote Recipients" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-195" y="225" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd430a78-f232-44cb-865b-33aaeba3628c" name="Add Reminder to Email Item" type="Code"><subsheetid>12a4fdb8-c315-45b9-a598-2a46b1433aec</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><inputs><input type="text" name="Entry_ID" expr="[Entry_ID]" /><input type="datetime" name="ReminderTime" expr="[ReminderTime]" /></inputs><outputs><output type="text" name="ExceptionMessage" stage="ExceptionMessage" /></outputs><onsuccess>0c4e51ed-5814-44db-b41e-ccbfc9610ac4</onsuccess><code><![CDATA[ExceptionMessage = "No Exception Reported"

Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")

Try
	Dim item = olNamespace.GetItemFromID(Entry_ID)

	item.ReminderTime = ReminderTime
	item.ReminderSet = true

	item.Save
Catch ex As System.Exception
	If Not ex.InnerException is Nothing Then
		ExceptionMessage = string.format("{0} :InnerExc ({1})",ex.Message,ex.InnerException.Message)
	else
		ExceptionMessage = ex.Message
	End If
Finally
	olNamespace = Nothing
	olApp = Nothing
End Try]]></code></stage><stage stageid="d54e0288-4d13-4124-82c0-e511cff0b6fd" name="Entry_ID" type="Data"><subsheetid>12a4fdb8-c315-45b9-a598-2a46b1433aec</subsheetid><display x="-195" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bf87766c-da81-470b-b394-2f13c193f1ee" name="ReminderTime" type="Data"><subsheetid>12a4fdb8-c315-45b9-a598-2a46b1433aec</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="70b3397b-02c2-4d77-a2f6-01dce380e25e" name="Inputs" type="Block"><subsheetid>12a4fdb8-c315-45b9-a598-2a46b1433aec</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="ed2bca22-1b9c-4ef9-87c0-4d0721a55035" name="Entry ID" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-345" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0a43914c-9616-4339-82c1-d0881b0e6f78" name="Assign Categories to Email" type="Code"><subsheetid>c3f6b9ae-7abb-4efc-bd43-6c77dd197e37</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Categories" expr="[Categories]" /></inputs><outputs><output type="text" name="ExceptionMessage" stage="ExceptionMessage" /></outputs><onsuccess>499eaca0-4ae6-4001-9bf2-5b042aa37326</onsuccess><code><![CDATA[ExceptionMessage = "No Exception Reported"

Dim olApp As New NetOffice.OutlookApi.Application
Dim olNamespace As NetOffice.OutlookApi._NameSpace = olApp.GetNamespace("MAPI")

Try
	Dim mailItem = olNamespace.GetItemFromID(Entry_ID)
	mailItem.Categories = Categories
	mailItem.Save
Catch ex As System.Exception
	If Not ex.InnerException is Nothing Then
		ExceptionMessage = string.format("{0} :InnerExc ({1})",ex.Message,ex.InnerException.Message)
	else
		ExceptionMessage = ex.Message
	End If
finally
	olNamespace = Nothing
	olApp = Nothing
End Try]]></code></stage><stage stageid="d8b5a6a9-e8f4-47a5-8240-5b8ebf24d232" name="ExceptionMessage" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><display x="-285" y="510" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fc859882-c44b-4ed4-8391-64f5fe000988" name="Exception Detail" type="Block"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><loginhibit /><display x="-360" y="480" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="bde56cfc-ae9e-48d0-9f12-8ed1db96b306" name="ExceptionMessage" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-255" y="510" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="68a2c702-ba9e-4e52-8e96-58239f8839d9" name="Exception Detail" type="Block"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><loginhibit /><display x="-330" y="480" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="5d7142d6-c03e-45af-af93-107482357136" name="ExceptionMessage" type="Data"><subsheetid>c3f6b9ae-7abb-4efc-bd43-6c77dd197e37</subsheetid><display x="-195" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8f970b35-3927-41c8-b68c-a4726da4658a" name="Exception Detail" type="Block"><subsheetid>c3f6b9ae-7abb-4efc-bd43-6c77dd197e37</subsheetid><loginhibit /><display x="-270" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="3d9c9012-818e-4ac4-ba1d-8b3bdc2532df" name="ExceptionMessage" type="Data"><subsheetid>12a4fdb8-c315-45b9-a598-2a46b1433aec</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cfea1ba1-3d87-4bb8-8385-5e3dd8751477" name="Exception" type="Block"><subsheetid>12a4fdb8-c315-45b9-a598-2a46b1433aec</subsheetid><loginhibit /><display x="-270" y="105" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="926490b4-0b89-49de-b879-e09c62b15481" name="ExceptionMessage" type="Data"><subsheetid>6e1bb675-6699-4e10-b51e-cadda382ba40</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de52033e-8f6d-404b-9f38-e3f8d4764a0a" name="Exception Details" type="Block"><subsheetid>6e1bb675-6699-4e10-b51e-cadda382ba40</subsheetid><loginhibit /><display x="-270" y="105" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="cf486384-9d33-4b84-a760-715a85496475" name="Tenant ID" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="315" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="51f74972-6ba3-467c-8969-ce990b1ee2fa" name="MIP Label GUID" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="285" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cecbbb06-4d3d-4114-b773-23ab3c573df9" name="MIP Label GUID" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="255" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43d0ef6e-21b6-440f-bd87-608c2853c0ca" name="Tenant ID" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="285" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f46ba074-a6e0-4042-a707-55119d94aeab" name="MIP Label GUID" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="255" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dea8d325-b7c1-4ee9-8dc1-21682ed4b7e9" name="Tenant ID" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="285" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86deb323-8cab-44c4-84d7-9152a30f606b" name="Tenant ID" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="300" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cfea0a93-fc74-47c8-abf9-4f227fb40c4c" name="MIP Label GUID" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="270" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e4e69c28-c30b-4d26-bf5b-1563ccd5245d" name="Tenant ID" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><display x="-195" y="345" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="60bbd098-adcd-4445-9c7b-922e3f1a6ba8" name="MIP Label GUID" type="Data"><subsheetid>3197fd97-dec4-46b2-b715-a5c551dced94</subsheetid><display x="-195" y="315" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dafd0ab2-4bce-4643-8945-98dbeda327b3" name="MIP Label GUID" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-330" y="270" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ddb89f4f-6bc1-4dec-9eb7-77ad5833f198" name="Tenant ID" type="Data"><subsheetid>4c62076f-5e25-4050-ab86-2326e2619bc8</subsheetid><display x="-195" y="270" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9e113187-4cb4-4155-b184-b11852df8447" name="Tenant ID" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><display x="-210" y="270" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d7dae448-0726-485f-b50b-4d1c01a125a2" name="MIP Label GUID" type="Data"><subsheetid>3b2c9184-6d4b-4864-af4b-655bf9b0398c</subsheetid><display x="-345" y="270" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f217f02-c874-4736-af33-0c40a2ca369a" name="HTMLFormat" type="Data"><subsheetid>3b884489-6e5d-4971-8c86-a30390386901</subsheetid><display x="-195" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage></process></object>
        <object id="e559fb86-9b63-4e0b-9399-972227189995" name="MS Word" xmlns="http://www.blueprism.co.uk/product/process"><process name="MS Word" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="The VBO replacement for the Common Automation Word business object" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>5ec304cd-35d9-4d36-a1e8-9ee22ab08798</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="e283bce6-2b3d-4a05-8d79-05e52588fccd" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3358b033-d27a-4d94-84d7-7c92e11356a5" type="Normal" published="True"><name>Add Table Column</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="349117e1-607c-4bb6-a911-5074cb58aca0" type="Normal" published="True"><name>Add Table Row</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fab67da7-2774-4aba-b65c-e3cc6c20dac5" type="Normal" published="True"><name>Attach Instance</name><view><camerax>15</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b5d196b4-36af-4e29-991f-b6985b43dce2" type="Normal" published="False"><name>CheckFileExists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="293ea206-e215-4639-a1d8-85d6fad4c062" type="Normal" published="False"><name>CheckInstanceHandle</name><view><camerax>42</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="479d48e5-45be-4252-99e6-7685eacb95f0" type="Normal" published="True"><name>Clear Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a12d6007-5275-4a01-a53e-1fe566ccb6eb" type="Normal" published="True"><name>Close</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0ad7469f-a55c-48de-9ec9-7b3b429c91b1" type="Normal" published="True"><name>Copy to Clipboard</name><view><camerax>-70</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3786e212-59f9-4c81-9cb5-983a56b8bd21" type="Normal" published="True"><name>Count Number of Sections</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="df9a2d09-7817-4c60-9dfd-db0023481f74" type="Normal" published="True"><name>Create Document</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="31f689ac-b51a-4af0-bc24-9a36bedf0b07" type="Normal" published="True"><name>Create Instance</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae" type="Normal" published="True"><name>Detach Instance</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d064a183-869e-4269-af78-e8278fcf2a75" type="Normal" published="True"><name>Exit</name><view><camerax>46</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a54f1cbc-a023-4c2d-bf17-23169a3e685d" type="Normal" published="True"><name>ExportPDF</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a46a3a18-37e6-4658-bf90-5612c2db5da4" type="Normal" published="True"><name>Find Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="84295aaa-378f-41c0-892b-81b1fa1e43c7" type="Normal" published="True"><name>Get Body</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4126974e-1c91-477d-bf40-d6b43f285a72" type="Normal" published="True"><name>Get Document Sensitivity Label Info</name><view><camerax>15</camerax><cameray>-117</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc779662-1e7e-4438-b1c5-1106c851c3a3" type="Normal" published="True"><name>Get Footer Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="35df6aff-601d-4467-bf17-6c2eb1d83173" type="Normal" published="True"><name>Get Header Text</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ab5706df-5945-47c6-ad85-98b64e6966f8" type="Normal" published="True"><name>Get Highlighted Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ee6a025a-d632-4fcc-9710-6e6255476dab" type="Normal" published="True"><name>Get Line Count</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e76a41f5-2658-4c27-b0b4-f82423f49e90" type="Normal" published="True"><name>Get Page Count</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4e5affe2-02b0-4ec4-a554-cd09ff62edb3" type="Normal" published="True"><name>Get Paragraph Count</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cdfc19fa-9566-49d2-9e46-9060be255451" type="Normal" published="True"><name>Get Word Count</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="63dcd298-f559-4625-834f-f728c3391345" type="Normal" published="True"><name>Get Table Cell Value</name><view><camerax>0</camerax><cameray>77</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2a382c59-0507-47f8-82d5-1ca1ae93d305" type="Normal" published="True"><name>Hide</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="54381f48-d78a-41c3-845b-7d2092f7062a" type="Normal" published="True"><name>Mail Merge</name><view><camerax>0</camerax><cameray>18</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9ba034bb-3325-48c1-8185-8a95ba3aa7b2" type="Normal" published="True"><name>Open</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e3194549-4702-4196-8e84-02c9414289f2" type="Normal" published="True"><name>Paste from Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bb11f0d-d3ce-4a13-8e77-c04867882bef" type="Normal" published="True"><name>Remove Table Column</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4a945fb1-ef4a-4374-a6bf-39f145d30e69" type="Normal" published="True"><name>Remove Table Row</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8e6deaaf-17ce-4784-b335-a9405da05140" type="Normal" published="True"><name>Replace Highlighted Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0034274b-9238-49f1-9208-489c5c1f0440" type="Normal" published="True"><name>Save As</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e945fdd1-12ee-49a3-828b-f210f597b9ea" type="Normal" published="True"><name>Select All</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="014a9077-47d7-46c4-949a-9dd622e2aa55" type="Normal" published="True"><name>Select Next Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="25894c29-7a40-4c69-8562-7b0ec251e307" type="Normal" published="True"><name>Select Next Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="89550223-4597-48e5-a1c2-c61c726899cf" type="Normal" published="True"><name>Set Current Instance</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c0375433-5935-43a0-badb-af77aab15e62" type="Normal" published="True"><name>Set Footer Text</name><view><camerax>0</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1c1bb115-2f4a-4a15-a343-2c5a47e2fddf" type="Normal" published="True"><name>Set Header Text</name><view><camerax>0</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5c26c59-2398-4789-8c68-a82d3e675364" type="Normal" published="True"><name>Set Selected Cell Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0982104d-2763-42e8-a690-69c44d9a4046" type="Normal" published="True"><name>Set Selected Checkbox</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8ddb9b98-da89-468a-b5a4-5eedf5a204ee" type="Normal" published="True"><name>Set Table Cell Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="32b7a473-8150-4341-bc60-6111b4b7ff5c" type="Normal" published="True"><name>Set Document Sensitivity Label Info</name><view><camerax>15</camerax><cameray>-96</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e56148e-8eb8-411a-94ac-081b722cf098" type="Normal" published="True"><name>Show</name><view><camerax>0</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8dff095f-0923-42e2-953d-b780b2968ef1" type="Normal" published="True"><name>Split Document</name><view><camerax>32</camerax><cameray>-31</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a3c88684-f79d-47b3-93d0-e7f2c6cbd3c8" type="Normal" published="True"><name>Merge Document</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ec22d5e7-f140-425a-bbaa-7c1da03813c4" type="Normal" published="True"><name>Type Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="658b8a32-bfce-4df2-bfdc-a9525bc2979e" type="Normal" published="True"><name>Update Bookmark</name><view><camerax>-142</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67aea748-ff23-498c-ba27-f20276325aba" type="Normal" published="True"><name>Compare Documents</name><view><camerax>-36</camerax><cameray>66</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="60cba9c8-4c53-48b7-b25a-56d6603faf04" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>3fa025dc-32a8-4ab7-b052-cc5cd447a2cf</onsuccess></stage><stage stageid="3fa025dc-32a8-4ab7-b052-cc5cd447a2cf" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="7d99e0f7-64a5-47c3-820f-a9c87bcbe9c5" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Collections.Generic</import><import>Microsoft.VisualBasic</import><import>System.IO</import><import>System.Runtime.InteropServices</import><import>System.Data</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[
]]></globalcode><code><![CDATA[' The 'selected' instance of word.
' This is updated on any access of an instance (either adding a new
' instance or getting one)
'
Private CurrentInstance As Object

' Map of instances keyed against the handles which represent them.
'
Private HandleMap As Dictionary(Of Integer, Object)

' Map of handles keyed against the instances they represent.
' Here to ensure we don't assign multiple handles to a single
' instance and bring about a memory leak
'
Private InstanceMap As Dictionary(Of Object, Integer)

' Constructor - this just initialises the collections which map
' the word instances to handles and vice versa.
Public Sub New()

	Me.HandleMap = New Dictionary(Of Integer, Object)()
	Me.InstanceMap = New Dictionary(Of Object, Integer)()

End Sub

' Gets the handle for a given instance
'
' If the instance is not yet held, then it is added to the 
' 	map and a handle is assigned to it. It is also set as the
' 	'current' instance, accessed with a handle of zero in the
' 	below methods.
'
' Either way, the handle which identifies the instance is returned
'
' @param Instance The instance for which a handle is required
'
' @return The handle of the instance
Protected Function GetHandle(Instance As Object) As Integer

	If Instance Is Nothing Then
		Throw New ArgumentNullException("Tried to add an empty instance")
	End If

	' Check if we already have this instance - if so, return it.
	If InstanceMap.ContainsKey(Instance) Then
		CurrentInstance = Instance
		Return InstanceMap(Instance)
	End If

	Dim key as Integer
	For key = 1 to Integer.MaxValue
		If Not HandleMap.ContainsKey(key)
			HandleMap.Add(key, Instance)
			InstanceMap.Add(Instance, key)
			Me.CurrentInstance = Instance
			Return key
		End If
	Next key

	Return 0

End Function

' Gets the instance corresponding to the given handle, setting
' 	the instance as the 'current' instance for future calls
'
' A value of 0 will provide the 'current' instance, which
' 	is set each time an instance is added or accessed.
'
' This will return Nothing if the given handle does not
' correspond to a registered instance, or if the current
' instance was closed and the reference has not been updated.
'
' @param Handle The handle representing the instance required,
' 		or zero to get the 'current' instance.
Protected Function GetInstance(Handle As Integer) As Object

	Dim Instance As Object = Nothing
	
	If Handle = 0 Then
		If CurrentInstance Is Nothing Then
			' Special case - getting the current instance when the
			' instance is not set, try and get a current open instance.
			' If none there, create a new one and assign a handle as if
			' CreateInstance() had been called
		'	Try
		'		Instance = GetObject(,"Word.Application")
		'	Catch ex as Exception ' Not running
		'		Instance = Nothing
		'	End Try
		'	If Instance Is Nothing Then
				Create_Instance(Handle)
				' Instance = CreateObject("Word.Application")
				' Force the instance into the maps.
				' GetHandle(Instance)
				' CurrentInstance should now be set.
				' If it's not, we have far bigger problems
		'	End If
		End If
		Return CurrentInstance
	End If
	
	If Not HandleMap.ContainsKey(Handle)
            Throw New ArgumentException("A valid attachment to the application cannot been detected. Please check that Blue Prism is attached to an instance of the application.")
	End If

	Instance = HandleMap(Handle)
	If Not Instance Is Nothing Then
		CurrentInstance = Instance
	End If
	Return Instance

End Function

' Gets the document in the given instance with the given name.
'
' @param Handle The handle representing the instance which holds the document
'
' @param Name The name of the document on the instance
'
' @return The object representing the document defined
Protected Function GetDocument(Handle As Integer, Name as String) As Object

	Dim doc as Object = Nothing
	If String.IsNullOrEmpty(Name) Then
		doc = GetInstance(Handle).ActiveDocument
		If doc Is Nothing ' We need to create a deafult workbook
			'doc = NewDocument(Handle)
		End If
		Return doc
	Else
		Return GetInstance(Handle).Documents(Name)
	End If

End Function

' Extracts the actual field name from a MergeField definition.
'
' @param fieldText The MergeField definition.
'
' @return The actual field name.
Protected Function GetMergeFieldName(ByVal fieldText As String) As String
	Dim name As String
	Dim f As String = fieldText.Remove(0, 11).Trim()

	If (f.StartsWith("""")) Then
		' Multi-word name. Need to account for the double quotes Word adds.
		Dim i As Int32 = f.IndexOf("""", 2)
		name = f.Substring(1, i - 1).Trim()
	ElseIf (f.IndexOf("\") > 0) Then
		' Regular field.
		Dim i As Int32 = f.IndexOf("\")
		Dim tmpFieldName As String = f.Substring(0, i)
		name = tmpFieldName.Trim()
	Else
		name = f.Trim()
	End If

	Return name
End Function
]]></code></stage><stage stageid="3db4823c-cb33-410c-a5b4-0457287ea928" name="Clean Up" type="SubSheetInfo"><subsheetid>e283bce6-2b3d-4a05-8d79-05e52588fccd</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ffe1c4e5-db7e-48da-b754-89d06195c6f3" name="Start" type="Start"><subsheetid>e283bce6-2b3d-4a05-8d79-05e52588fccd</subsheetid><loginhibit /><display x="15" y="-135" /><onsuccess>923ee3cf-37bc-426e-829d-e591ad107565</onsuccess></stage><stage stageid="923ee3cf-37bc-426e-829d-e591ad107565" name="End" type="End"><subsheetid>e283bce6-2b3d-4a05-8d79-05e52588fccd</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="87572a90-cbe5-4b41-931c-b4083da0a1bf" name="new" type="Note"><subsheetid>e283bce6-2b3d-4a05-8d79-05e52588fccd</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="339dd02a-a643-42ed-befd-3faa7d5a2759" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="1bbb1c14-4990-47fd-8b73-630da57d702f" name="Create Instance" type="SubSheetInfo"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="12dfbbd0-3245-4078-ac90-1f65f7f3bb95" name="Start" type="Start"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>62dc3626-984b-4c4f-af3c-ade0a9242ff7</onsuccess></stage><stage stageid="699a02c3-30f3-4bdd-aa7d-2afc1110af20" name="End" type="End"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="number" name="handle" stage="handle" /></outputs></stage><stage stageid="62dc3626-984b-4c4f-af3c-ade0a9242ff7" name="Create Instance" type="Code"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>699a02c3-30f3-4bdd-aa7d-2afc1110af20</onsuccess><code><![CDATA[
Dim word as Object = CreateObject("Word.Application")

' Create a GUID with which we can kill the instance later
' if we have to play hardball to get rid of it.
word.Caption = System.Guid.NewGuid().ToString().ToUpper()

handle = GetHandle(word)]]></code></stage><stage stageid="edda7cc0-1a94-49d6-a153-8fc888542e8c" name="handle" type="Data"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><display x="-180" y="15" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4b4d7331-72da-406d-82b7-23a7ed9ed828" name="Show" type="SubSheetInfo"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a23d8915-ce49-49b8-9796-859046f81b10" name="Start" type="Start"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>079aa539-1785-4099-82ef-7f679226a6ea</onsuccess></stage><stage stageid="e652822b-b3f6-4d8e-b67b-09f5a3fa03aa" name="End" type="End"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="079aa539-1785-4099-82ef-7f679226a6ea" name="CheckInstanceHandle" type="SubSheet"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>ae5c5f27-8330-46a8-a3dd-42c521b4acc9</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="ae5c5f27-8330-46a8-a3dd-42c521b4acc9" name="ShowInstance" type="Code"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>e652822b-b3f6-4d8e-b67b-09f5a3fa03aa</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = True]]></code></stage><stage stageid="ba182804-017d-4701-bee5-6ce4825d6a92" name="handle" type="Data"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><display x="-195" y="30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="06f9c8b0-d782-4519-91eb-ef08a4ff69f4" name="CheckInstanceHandle" type="SubSheetInfo"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="55ae55da-a84e-4e04-89de-dd88ff6265f3" name="Start" type="Start"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>8380be40-583e-4e38-8bd2-f0d2ca89009c</onsuccess></stage><stage stageid="2b3b42b8-d366-4656-9b94-ab1b48254b80" name="End" type="End"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><loginhibit /><display x="15" y="60" /></stage><stage stageid="8380be40-583e-4e38-8bd2-f0d2ca89009c" name="Check Handle" type="Code"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="flag" name="HandleMissing" stage="HandleMissing" /></outputs><onsuccess>f28ac6b7-15d9-45f6-ab3a-54a0da21bbb3</onsuccess><code><![CDATA[
' Just ensure that the handle references a valid instance
HandleMissing = (GetInstance(handle) is Nothing)]]></code></stage><stage stageid="0e84f827-315e-40eb-b54b-12caa5d9fd69" name="handle" type="Data"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><display x="-150" y="15" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9f261599-10ff-401e-9119-62c9ac77151b" name="HandleMissing" type="Data"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><display x="-150" y="60" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f28ac6b7-15d9-45f6-ab3a-54a0da21bbb3" name="Is Handle Missing?" type="Decision"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><decision expression="[HandleMissing]" /><ontrue>6defa143-8947-48ef-935f-d36833614ef5</ontrue><onfalse>2b3b42b8-d366-4656-9b94-ab1b48254b80</onfalse></stage><stage stageid="6defa143-8947-48ef-935f-d36833614ef5" name="Bad Instance Handle" type="Exception"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><display x="180" y="0" w="120" h="30" /><exception type="Bad Handle" detail="&quot;Handle: &quot; &amp; [handle] &amp; &quot; does not correspond to an Word Instance&quot;" /></stage><stage stageid="1d87bd3a-132a-464c-b2d6-1a4df635cd61" name="Hide" type="SubSheetInfo"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1e1ba28f-613b-4a07-95bb-ade2a24a01b8" name="Start" type="Start"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>39fb3f6f-2d7b-4840-991b-65f9fd1867a7</onsuccess></stage><stage stageid="b7e598b6-b68b-45da-b57a-2118e5a066ad" name="End" type="End"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="39fb3f6f-2d7b-4840-991b-65f9fd1867a7" name="CheckInstanceHandle" type="SubSheet"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>afd1178a-dd11-4a73-8833-2b92063173ef</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="afd1178a-dd11-4a73-8833-2b92063173ef" name="HideInstance" type="Code"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>b7e598b6-b68b-45da-b57a-2118e5a066ad</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = False]]></code></stage><stage stageid="315416bc-f192-4090-8a30-0fcec83584e2" name="handle" type="Data"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><display x="-195" y="30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ddb83909-8dc6-44dc-af21-d21979561fb9" name="Get Body" type="SubSheetInfo"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><narrative>Gets the body text from the word document</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="150cb5f0-7bfe-4c3c-a660-2d6b49f4684f" name="Start" type="Start"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><loginhibit /><preconditions><condition narrative="The Word VBO is initialised and a Word instance has been created/attached to" /></preconditions><postconditions><condition narrative="The body text required is returned" /></postconditions><display x="15" y="-105" /><inputs><input type="number" name="start" narrative="The start of the text range within the body for which the text is required" stage="start" /><input type="number" name="finish" narrative="The finish of the text range within the body for which the text is required" stage="finish" /><input type="text" name="documentname" narrative="The name of the document for which the body text is required" stage="documentname" /><input type="number" name="handle" narrative="The handle to the Word instance in which the document is open" stage="handle" /></inputs><onsuccess>59561e94-639a-4c08-9a9f-8577d49b3064</onsuccess></stage><stage stageid="6fcd9de3-9aa2-4a55-8909-4c9b3c3b5095" name="End" type="End"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="text" name="Body" narrative="The text of the main body of the word document" stage="result" /></outputs></stage><stage stageid="59561e94-639a-4c08-9a9f-8577d49b3064" name="CheckInstanceHandle" type="SubSheet"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>50ad6a4d-1b58-4aa1-9a88-0febc63521a1</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="50ad6a4d-1b58-4aa1-9a88-0febc63521a1" name="GetBody" type="Code"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="start" expr="[start]" /><input type="number" name="finish" expr="[finish]" /></inputs><outputs><output type="text" name="result" stage="result" /></outputs><onsuccess>6fcd9de3-9aa2-4a55-8909-4c9b3c3b5095</onsuccess><code><![CDATA[
	Dim doc as Object = GetDocument(handle,documentname)
	Dim range As Object
	range = doc.Range(start, finish)
   
	result = range.text()]]></code></stage><stage stageid="e6c5db5f-2ee8-4369-9025-e3f9241bc8d4" name="handle" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-195" y="30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ad4dcca7-8cd7-47c7-82fb-b83871f144f8" name="Open" type="SubSheetInfo"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0b87086b-2216-4e74-974e-093cdf2d9e09" name="Start" type="Start"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-105" /><inputs><input type="text" name="File Name" stage="filename" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>5fa65cf5-75fe-43d0-92fe-923c8f137803</onsuccess></stage><stage stageid="69723646-ad31-4957-9cc0-43fad959ba95" name="End" type="End"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="15" y="180" /><outputs><output type="text" name="Document Name" stage="documentname" /></outputs></stage><stage stageid="995ac807-707a-4f97-8b15-971f1f0405ac" name="Open Document" type="Code"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="15" y="90" w="120" h="30" /><inputs><input type="text" name="filename" expr="[filename]" /><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="name" stage="documentname" /></outputs><onsuccess>69723646-ad31-4957-9cc0-43fad959ba95</onsuccess><code><![CDATA[
Dim doc as Object = GetInstance(handle).Documents.Open(filename)
name = doc.Name
doc.Activate()]]></code></stage><stage stageid="e6ecf65f-7aed-47de-a567-abf35f57babc" name="handle" type="Data"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><display x="-210" y="90" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="fde6d90a-3cf6-477b-a18b-dc38b1fc1cdd" name="filename" type="Data"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><display x="-210" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5fa65cf5-75fe-43d0-92fe-923c8f137803" name="CheckInstanceHandle" type="SubSheet"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="15" y="-30" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>335a3eeb-4d99-496c-a3cd-3fdcb42bc742</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="335a3eeb-4d99-496c-a3cd-3fdcb42bc742" name="CheckFileExists" type="SubSheet"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="15" y="30" w="120" h="30" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><onsuccess>995ac807-707a-4f97-8b15-971f1f0405ac</onsuccess><processid>b5d196b4-36af-4e29-991f-b6985b43dce2</processid></stage><stage stageid="4cbcba43-cf87-49df-bd28-19033d4f390a" name="documentname" type="Data"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="-210" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fddb571a-d8ae-4d27-9b6c-0975f653eb71" name="CheckFileExists" type="SubSheetInfo"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ea423d51-6b2d-4452-88ad-7a8a645cbae8" name="Start" type="Start"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="filename" stage="filename" /></inputs><onsuccess>8b0d6478-c375-442d-94bb-f7ce884ade8b</onsuccess></stage><stage stageid="8c76538f-0d1d-4285-aab0-5290485b46e3" name="End" type="End"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="15" y="60" /></stage><stage stageid="bf64d828-0cb5-42c2-89ea-1a3b319f4cc4" name="filename" type="Data"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><display x="-165" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3880fc08-9be7-4aff-a074-430ccdd3a128" name="fileexists" type="Data"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="-165" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8b0d6478-c375-442d-94bb-f7ce884ade8b" name="File Exists?" type="Code"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="flag" name="fileexists" stage="fileexists" /></outputs><onsuccess>ffe7ae9a-2f99-4074-8efa-307dbb5aeaf3</onsuccess><code><![CDATA[
fileexists = File.Exists(filename)]]></code></stage><stage stageid="ffe7ae9a-2f99-4074-8efa-307dbb5aeaf3" name="Does File Exist?" type="Decision"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><decision expression="[fileexists]" /><ontrue>8c76538f-0d1d-4285-aab0-5290485b46e3</ontrue><onfalse>29baa624-0519-491a-9b7f-e9cd67715da0</onfalse></stage><stage stageid="29baa624-0519-491a-9b7f-e9cd67715da0" name="File Not Found" type="Exception"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><display x="165" y="0" w="120" h="30" /><exception type="File Not Found" detail="&quot;File: &quot; &amp; [filename] &amp; &quot; does not exist or is not a file&quot;" /></stage><stage stageid="e1e7b560-c537-488d-8391-c097150f5969" name="documentname" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-210" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c8466ca5-e4a8-4941-aa52-bb84a5bf4d87" name="result" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-180" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a9b30de-289c-4da8-9fbf-324b8bb8cdf8" name="start" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-90" y="-15" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec2b207a-8af7-4a31-9483-bb3fcd6b8750" name="finish" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-105" y="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14b05ea9-71ec-46bf-bf16-0cb2c048a492" name="Save As" type="SubSheetInfo"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="49f07090-6e20-4208-9fb6-76a00bc71a63" name="Start" type="Start"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><inputs><input type="text" name="File Name" stage="filename" /><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>4c19c96c-ff67-480d-bcdf-d9d18c62d3e2</onsuccess></stage><stage stageid="56c8c79f-0dda-4bc5-a9fe-eb7dc59e9940" name="End" type="End"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="text" name="documentname" stage="documentname" /></outputs></stage><stage stageid="4c19c96c-ff67-480d-bcdf-d9d18c62d3e2" name="CheckInstanceHandle" type="SubSheet"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>873547be-bfa6-4aee-b49e-b03ee4b10659</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="873547be-bfa6-4aee-b49e-b03ee4b10659" name="SaveAs" type="Code"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="text" name="newname" stage="documentname" /></outputs><onsuccess>56c8c79f-0dda-4bc5-a9fe-eb7dc59e9940</onsuccess><code><![CDATA[
	Dim doc as Object = GetDocument(handle,documentname)
	doc.SaveAs(filename)
	newname = doc.name]]></code></stage><stage stageid="b6243343-4d38-40b3-ac81-6044b590e61f" name="handle" type="Data"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><display x="-195" y="30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d128fa5a-052f-49e3-b3d3-b2a10b0a555d" name="documentname" type="Data"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><display x="-210" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9664dacd-968c-462f-b852-1099ff8b3f6a" name="filename" type="Data"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><display x="-210" y="120" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bb8df20e-d7cb-452c-acd2-3f04d8a9a78e" name="Exit" type="SubSheetInfo"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="110d847b-787a-4ad3-86f1-3a1a1ff5687c" name="Start" type="Start"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>f834329d-2a8f-4a5e-b021-bb8d752866a5</onsuccess></stage><stage stageid="20d7732d-8c92-4c00-a602-e650d104a383" name="End" type="End"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="f834329d-2a8f-4a5e-b021-bb8d752866a5" name="CheckInstanceHandle" type="SubSheet"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>ad2c07f9-3459-4ef3-8c18-627591869d46</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="ad2c07f9-3459-4ef3-8c18-627591869d46" name="Exit" type="Code"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>20d7732d-8c92-4c00-a602-e650d104a383</onsuccess><code><![CDATA[
	Dim app As Object = GetInstance(handle)
	app.NormalTemplate.Saved = True
	app.Quit()

	Me.HandleMap.Remove(handle)
	Me.InstanceMap.Remove(app)]]></code></stage><stage stageid="5aee7da4-09aa-4a84-8b38-0c219d10a84c" name="handle" type="Data"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><display x="-195" y="30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="76d84196-a3f8-438d-87ca-8bbb5a150385" name="Close" type="SubSheetInfo"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ca2a96a4-4be4-46a3-bf43-ad0b1fd688d1" name="Start" type="Start"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>925e7711-a825-4be7-8a2b-13cc2b3f6458</onsuccess></stage><stage stageid="bd446e30-85c5-4bd8-baec-09874a164871" name="End" type="End"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="925e7711-a825-4be7-8a2b-13cc2b3f6458" name="CheckInstanceHandle" type="SubSheet"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>98b463cd-ae0f-4752-917d-0846f7f9d1d2</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="98b463cd-ae0f-4752-917d-0846f7f9d1d2" name="Close" type="Code"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /></inputs><onsuccess>bd446e30-85c5-4bd8-baec-09874a164871</onsuccess><code><![CDATA[	
	Dim doc As Object = GetDocument(handle,documentname)
	doc.Saved = True
	doc.Close()]]></code></stage><stage stageid="79711364-a2bd-434e-a183-7cbc2f61e54e" name="handle" type="Data"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><display x="-195" y="30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="b32ff547-580d-4801-b3f1-a474b288e66a" name="documentname" type="Data"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><display x="-210" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f44241e2-c1fa-41ec-94d2-ce04c3004b8c" name="Type Text" type="SubSheetInfo"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="829e6b71-8bac-474c-affb-8854abe5b326" name="Start" type="Start"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><inputs><input type="text" name="text" stage="text" /><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>e1086e24-ae1f-4ce6-81c2-4422ef6fa002</onsuccess></stage><stage stageid="5b094fdf-6ef3-4846-b25c-0ee209e038de" name="End" type="End"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="e1086e24-ae1f-4ce6-81c2-4422ef6fa002" name="CheckInstanceHandle" type="SubSheet"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>fcf56391-2a51-4e70-9930-2f19ac9223c3</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="fcf56391-2a51-4e70-9930-2f19ac9223c3" name="TypeText" type="Code"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="text" name="text" expr="[text]" /></inputs><onsuccess>5b094fdf-6ef3-4846-b25c-0ee209e038de</onsuccess><code><![CDATA[
	GetInstance(handle).Selection.TypeText(text)]]></code></stage><stage stageid="4473d616-1d96-4946-8abf-c0c68033e5c1" name="handle" type="Data"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><display x="-195" y="30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="94b0135e-de95-421b-a5db-07f6fc22b5d8" name="documentname" type="Data"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><display x="-210" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30c13569-5e52-4d2b-9d3f-30764a391f99" name="text" type="Data"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><display x="-210" y="120" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54d32e12-69ab-45d3-adc4-74cb220667a1" name="Create Document" type="SubSheetInfo"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9e417d18-2b1b-442c-9c74-e1e8cbc9684d" name="Start" type="Start"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>8d4245f6-0d86-4a8d-b932-65500682f43d</onsuccess></stage><stage stageid="668ccf5c-2a61-4b7c-b9b7-f60c6d1a8dfb" name="End" type="End"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="text" name="documentname" stage="documentname" /></outputs></stage><stage stageid="8d4245f6-0d86-4a8d-b932-65500682f43d" name="CheckInstanceHandle" type="SubSheet"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>cdeffd66-9688-46dc-91b2-6ddf3d8476c7</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="cdeffd66-9688-46dc-91b2-6ddf3d8476c7" name="CreateDocument" type="Code"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="documentname" stage="documentname" /></outputs><onsuccess>668ccf5c-2a61-4b7c-b9b7-f60c6d1a8dfb</onsuccess><code><![CDATA[
	Dim doc as Object = GetInstance(handle).Documents.Add()
	documentname = doc.Name
	doc.Activate()
]]></code></stage><stage stageid="55507265-dccf-498b-b457-9fa3230c8ad8" name="handle" type="Data"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><display x="-195" y="30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="96a1c94c-4176-4965-aeec-43ccd66ca797" name="documentname" type="Data"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><display x="-210" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa7025db-88e7-4128-912e-878929e649bf" name="Update Bookmark" type="SubSheetInfo"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="06b932ee-3310-4628-823f-265d0ef63d38" name="Start" type="Start"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><inputs><input type="text" name="Bookmark name" stage="name" /><input type="text" name="Text" stage="value" /><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>e87e8a9b-c20a-469f-a077-2b6ae1cd52a4</onsuccess></stage><stage stageid="4568f576-e587-46d1-9613-8455000361ee" name="End" type="End"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="e87e8a9b-c20a-469f-a077-2b6ae1cd52a4" name="CheckInstanceHandle" type="SubSheet"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>41afaa16-ddea-4385-9530-07f94ee95532</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="41afaa16-ddea-4385-9530-07f94ee95532" name="UpdateBookmark" type="Code"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="text" name="name" expr="[name]" /><input type="text" name="value" expr="[value]" /></inputs><onsuccess>4568f576-e587-46d1-9613-8455000361ee</onsuccess><code><![CDATA[
	Dim doc as Object = GetDocument(handle,documentname)
	If doc.Bookmarks.Exists(name) Then
		doc.Bookmarks.Item(name).Range.Text = value
	End If]]></code></stage><stage stageid="ad290b27-e3a5-4ad5-b352-eff94acc7de8" name="handle" type="Data"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="30" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="5b28714a-4da4-4baf-8116-a19d736d56c4" name="value" type="Data"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="165" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="294bedbf-1386-4233-b599-e8e5d50121bc" name="name" type="Data"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="120" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="422f53fe-cfb8-44ab-8628-5e7192d8a14b" name="documentname" type="Data"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f3f2cc6-4bd9-456e-9857-dc71ccafdcb9" name="Set Current Instance" type="SubSheetInfo"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ef5caa1c-ba0b-4e25-ba69-081e9386a4f3" name="Start" type="Start"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><loginhibit /><display x="15" y="-120" /><inputs><input type="number" name="handle" narrative="The handle for the instance which should become the current instance" stage="handle" /></inputs><onsuccess>215a6e49-5725-401b-9f3f-d1fd9261dac7</onsuccess></stage><stage stageid="c0b115d4-6eff-4088-9356-8abf9d79ccc1" name="End" type="End"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><loginhibit /><display x="15" y="0" /></stage><stage stageid="215a6e49-5725-401b-9f3f-d1fd9261dac7" name="CheckInstanceHandle" type="SubSheet"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>c0b115d4-6eff-4088-9356-8abf9d79ccc1</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="4df855d7-0ceb-42e9-9fe3-c4a6de4b72e8" name="Note1" type="Note"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><loginhibit /><narrative>Don't need to anything - a side-effect of the check is to set the current instance... makes it simple.</narrative><display x="165" y="-60" w="150" h="60" /></stage><stage stageid="d355c6b1-7c4f-4842-99d8-2e2ba88a3934" name="Attach Instance" type="SubSheetInfo"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2a0baf69-393d-4338-91c2-599bb8f9dd88" name="Start" type="Start"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="text" name="File Name" narrative="The full path and filename of the document that the instance should attach to, empty indicates that the topmost Word instance be attached to" stage="Filename" /></inputs><onsuccess>cf413a56-3b39-4024-9358-e45c4cb1270f</onsuccess></stage><stage stageid="080da51f-78bc-4c03-a069-fba8ce7216c3" name="End" type="End"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><loginhibit /><display x="15" y="-30" /><outputs><output type="number" name="handle" narrative="The handle to the newly created instance, attached to either an existing Word window or a new one." stage="handle" /></outputs></stage><stage stageid="2d9ef69e-28d3-4c3d-8c66-ad48abf1c9bd" name="Filename" type="Data"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7538631d-fe66-4fa5-9087-9757b9baa750" name="handle" type="Data"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cf413a56-3b39-4024-9358-e45c4cb1270f" name="AttachInstance" type="Code"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><inputs><input type="text" name="filename" expr="[Filename]" /></inputs><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>080da51f-78bc-4c03-a069-fba8ce7216c3</onsuccess><code><![CDATA[
If filename = "" Then
	handle = GetHandle(GetObject(, "Word.Application"))
Else
	handle = GetHandle(GetObject(filename).Application)
End If]]></code></stage><stage stageid="bb83c823-90bc-4da3-9b03-b1bfae7ffe16" name="Detach Instance" type="SubSheetInfo"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><narrative>Detaches from the Word instance with the given handle, removing all references within this business object.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="3086e1fc-ae22-4963-93f2-743021835c1d" name="Start" type="Start"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><loginhibit /><display x="-15" y="-135" /><inputs><input type="number" name="handle" narrative="The handle to the instance to be detached from" stage="handle" /></inputs><onsuccess>10611a26-c805-4e33-b3ba-4be3ffb5ae66</onsuccess></stage><stage stageid="936fb37c-767b-4c3b-9b5e-57b36515bba6" name="End" type="End"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><loginhibit /><display x="-15" y="-45" /></stage><stage stageid="cfdae8d9-4e29-4353-a17b-4c5a724fa96e" name="handle" type="Data"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><display x="-210" y="-30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="10611a26-c805-4e33-b3ba-4be3ffb5ae66" name="DetachInstance" type="Code"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>936fb37c-767b-4c3b-9b5e-57b36515bba6</onsuccess><code><![CDATA[Dim app As Object = GetInstance(handle)
HandleMap.Remove(CInt(handle))
InstanceMap.Remove(app)
If app Is CurrentInstance Then CurrentInstance = Nothing
Marshal.ReleaseComObject(app)]]></code></stage><stage stageid="f1a76547-26a8-4bbb-876c-12108d44f5f5" name="handle" type="Data"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="744e462f-ed5d-4004-afe9-a69ae3cddf27" name="Get Highlighted Text" type="SubSheetInfo"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><narrative>Returns the documents highlighted text as a collection</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="3fa2a732-65ad-412e-8dfc-797a10a1dd38" name="End" type="End"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="highlighted text" stage="highlighted text" /></outputs></stage><stage stageid="d60af1f9-c084-491f-b44f-99c1c5fe61b4" name="Get Highlighted Text" type="Code"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /></inputs><outputs><output type="collection" name="highlighted text" stage="highlighted text" /></outputs><onsuccess>3fa2a732-65ad-412e-8dfc-797a10a1dd38</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim r As Object = d.Range
Dim i As Integer

Dim dt As New System.Data.DataTable()
Dim dr As System.Data.DataRow

dt.Columns.Add("text", GetType(String))
dt.Columns.Add("highlight index", GetType(Integer))

r.Find.Highlight = true
r.Find.Forward = True

Do While r.Find.Execute
	If r.HighlightColorIndex <> 0 Then
		dr = dt.NewRow()
		dr("text") = r.Text
		dr("highlight index") = r.HighlightColorIndex
		dt.Rows.Add(dr)
	End If
	i = r.End
	r.Start = i
Loop
highlighted_text = dt]]></code></stage><stage stageid="efa512ec-3a71-4ae2-8fea-10c01497d1ad" name="handle" type="Data"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9014f0b7-d7ec-4f10-9fe4-9294d5c469ac" name="Start" type="Start"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /></inputs><onsuccess>d60af1f9-c084-491f-b44f-99c1c5fe61b4</onsuccess></stage><stage stageid="19a7cc99-e574-4f93-a220-3f94df6dcb00" name="document name" type="Data"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41cca25a-0352-483f-bd0d-210348dddccf" name="highlighted text" type="Collection"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><display x="-195" y="90" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="text" type="text" /><field name="highlight index" type="number" description="A value from from the wdColor enumeration" /></collectioninfo></stage><stage stageid="faba3574-835f-426f-babd-7741f20c08ef" name="Replace Highlighted Text" type="SubSheetInfo"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><narrative>Searches for and replaces highlighted text</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="10f02379-dc0a-4fb5-8107-75333fd04af6" name="End" type="End"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="1750861c-714e-4fd9-a7ad-babb2bc8735b" name="handle" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1c605ebc-3335-451b-a024-96310e159f3d" name="Start" type="Start"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="text" name="current text" stage="current text" /><input type="number" name="current highlight" stage="current highlight" /><input type="text" name="new text" stage="new text" /><input type="number" name="new highlight" stage="new highlight" /><input type="flag" name="new bold" stage="new bold" /></inputs><onsuccess>86ff3b1e-b8e7-41aa-81c8-c6b731c9783d</onsuccess></stage><stage stageid="478dfc3b-afab-4b3d-b893-d63b17652148" name="document name" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2480b35b-c034-4e1f-8fee-05f04f234f8c" name="current text" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4cb5e60-a090-41e5-945a-64a46b4fc815" name="current highlight" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="60806e60-b1df-4318-9475-7a638c227a47" name="new text" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a40255d1-e872-4311-b2d8-2e2dfda8bdde" name="new highlight" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86ff3b1e-b8e7-41aa-81c8-c6b731c9783d" name="Replace Highlighted Text" type="Code"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="text" name="current text" expr="[current text]" /><input type="number" name="current highlight" expr="[current highlight]" /><input type="text" name="new text" expr="[new text]" /><input type="number" name="new highlight" expr="[new highlight]" /><input type="flag" name="new bold" expr="[new bold]" /></inputs><onsuccess>10f02379-dc0a-4fb5-8107-75333fd04af6</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim r As Object = d.Range
Dim i As Integer

r.Find.Highlight = true
r.Find.Forward = True

Do While r.Find.Execute(current_text)
	If r.HighlightColorIndex = current_highlight Then
		r.Text = new_text
		r.HighlightColorIndex = CInt(new_highlight)
		r.Bold=new_bold
	End If
	i = r.End
	r.Start = i
Loop]]></code></stage><stage stageid="234fee0c-5b96-4829-be83-f34ff671c61e" name="new bold" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="9a6342b6-1b6c-467f-970c-ae638d0dc946" name="Select All" type="SubSheetInfo"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><narrative>Selects the entire document</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="32c7e893-ade6-4c28-8878-b0b6c201c420" name="End" type="End"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="f292c519-969f-48ca-a11a-b32031d9015b" name="handle" type="Data"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c3d29d4-83e1-4c5c-9d14-e4b698c6a498" name="Start" type="Start"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /></inputs><onsuccess>71b6f8f9-6acb-4a3e-a7a5-5938100e9139</onsuccess></stage><stage stageid="7e4a9137-bdd0-49c3-a19f-a8bae90a3bd3" name="document name" type="Data"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="71b6f8f9-6acb-4a3e-a7a5-5938100e9139" name="Select All" type="Code"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /></inputs><onsuccess>32c7e893-ade6-4c28-8878-b0b6c201c420</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)

d.Select

d = Nothing]]></code></stage><stage stageid="fc588eee-d842-46c9-b230-634378015cc6" name="Copy to Clipboard" type="SubSheetInfo"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><narrative>Copies the current selection on to the clipboard</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ef78d8f3-3153-45b1-8714-b95142c7d2b9" name="End" type="End"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="3c1ca358-cb83-4f00-9bf5-ddf03a34149a" name="handle" type="Data"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f4eb6834-0cbe-4f99-8bb0-6c25173f85aa" name="Start" type="Start"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /></inputs><onsuccess>094bc875-98bf-40d7-930d-c118bff53af6</onsuccess></stage><stage stageid="8f073f68-b07c-4837-91ce-37c063f71401" name="document name" type="Data"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="094bc875-98bf-40d7-930d-c118bff53af6" name="Copy to Clipboard" type="Code"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /></inputs><onsuccess>ef78d8f3-3153-45b1-8714-b95142c7d2b9</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = w.Selection

If s IsNot Nothing Then s.Copy

d = Nothing
w = Nothing
s = Nothing]]></code></stage><stage stageid="c2e0189a-f373-4e16-8ac9-b3f50c3928ef" name="Paste from Clipboard" type="SubSheetInfo"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><narrative>Pastes the contents of the clipboard into the document</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="cc3026b3-8726-4034-9304-aa303f869095" name="End" type="End"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="c102344a-5e52-4389-acd8-9d3df3011a36" name="handle" type="Data"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f225a8a7-74c0-4baf-abd1-e4619d1cd9dc" name="Start" type="Start"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /></inputs><onsuccess>32689787-cfad-4f85-98db-9101ef103d8b</onsuccess></stage><stage stageid="414b8866-2d52-4971-aab5-a48d66411bf0" name="document name" type="Data"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32689787-cfad-4f85-98db-9101ef103d8b" name="Paste from Clipboard" type="Code"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /></inputs><onsuccess>cc3026b3-8726-4034-9304-aa303f869095</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application

w.Selection.Paste

d = Nothing
w = Nothing]]></code></stage><stage stageid="c9f4e132-f333-46bd-9f33-bd08364ca098" name="Clear Clipboard" type="SubSheetInfo"><subsheetid>479d48e5-45be-4252-99e6-7685eacb95f0</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c63bcd84-f4b9-4db7-a9ca-2d27ed62ea2c" name="Start" type="Start"><subsheetid>479d48e5-45be-4252-99e6-7685eacb95f0</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>d6bc499e-db0e-4204-94f7-060f8b728596</onsuccess></stage><stage stageid="cae61485-5711-4b5a-b35a-cc2cc49dcecd" name="End" type="End"><subsheetid>479d48e5-45be-4252-99e6-7685eacb95f0</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="d6bc499e-db0e-4204-94f7-060f8b728596" name="Clear" type="Code"><subsheetid>479d48e5-45be-4252-99e6-7685eacb95f0</subsheetid><loginhibit /><display x="15" y="-15" /><onsuccess>cae61485-5711-4b5a-b35a-cc2cc49dcecd</onsuccess><code><![CDATA[
My.Computer.Clipboard.Clear]]></code></stage><stage stageid="5b918aa9-d185-4273-8d17-322bfcb06ab4" name="Find Text" type="SubSheetInfo"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><narrative>Searches the document for the given text</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9fa6746a-2e54-4364-987a-1c82aca0bfdc" name="End" type="End"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="found" stage="found" /></outputs></stage><stage stageid="44e131e3-1dd8-4ae7-ac12-119b805fb8d0" name="handle" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5322d24f-f105-4817-b328-580613831a00" name="Start" type="Start"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="text" name="text" stage="text" /><input type="flag" name="match case" stage="match case" /><input type="flag" name="match whole word" stage="match whole word" /></inputs><onsuccess>1f2d6c14-b8c0-4895-8791-15dc1c4b8cd3</onsuccess></stage><stage stageid="b294a47f-4ad7-4cf9-a898-13aefa7c9f0f" name="document name" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f2d6c14-b8c0-4895-8791-15dc1c4b8cd3" name="Find Text" type="Code"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="text" name="text" expr="[text]" /><input type="flag" name="match case" expr="[match case]" /><input type="flag" name="match whole word" expr="[match whole word]" /></inputs><outputs><output type="flag" name="found" stage="found" /></outputs><onsuccess>9fa6746a-2e54-4364-987a-1c82aca0bfdc</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = w.Selection
Dim f As Object = s.Find

Try

f.ClearFormatting
With f
	.Text = Text
	.Replacement.Text = ""
	.Forward = True
	.Wrap = 1 'wdFindContinue
	.Format = False
	.MatchCase = match_case
	.MatchWholeWord = match_whole_word
	.MatchWildcards = False
	.MatchSoundsLike = False
	.MatchAllWordForms = False
End With
found = f.Execute

Catch ex As Exception

found = False

Finally

d = Nothing
w = Nothing
s = Nothing
f = Nothing

End try]]></code></stage><stage stageid="169d67d4-b8ae-48c2-a693-6a4cb4ef2cf4" name="text" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="934d6430-60d8-4676-b570-e3be9639641c" name="found" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c53ac88a-5097-4cd0-8962-e04e6ba421bf" name="match case" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="18a5ce24-7703-42c9-9c67-36c7f5acc805" name="match whole word" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="cc529358-b060-4eec-b382-563e4dd595cb" name="Select Next Cell" type="SubSheetInfo"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><narrative>Moves the cursor to the table cell n steps away from the current cell. A positive number of steps moves forward and a negative number moves backwards.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="12001300-6faa-4829-99f6-61df86a10e66" name="End" type="End"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="selected" stage="selected" /></outputs></stage><stage stageid="3beae3c8-e083-4bcd-996b-733ab9676289" name="handle" type="Data"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="75895ee8-9f3a-4bbc-993e-783fd8679de6" name="Start" type="Start"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="number" name="steps" narrative="Optional, positive number to move forward, negative to move back, default 1." stage="steps" /></inputs><onsuccess>42ed0356-4769-4b34-a449-4fbe0a21922b</onsuccess></stage><stage stageid="9c875518-2eef-4c5b-8040-004573505f3e" name="document name" type="Data"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4b10f2e8-1f7b-44ae-9d88-ac58bd3f2a22" name="selected" type="Data"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="42ed0356-4769-4b34-a449-4fbe0a21922b" name="Select Next Cell" type="Code"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="number" name="steps" expr="[steps]" /></inputs><outputs><output type="flag" name="selected" stage="selected" /></outputs><onsuccess>12001300-6faa-4829-99f6-61df86a10e66</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = Nothing
Dim c As Object = Nothing
Dim c1 As Object = Nothing
Dim i As Integer

Try
If steps < 0 Then
	For i = steps To -1
		s = w.Selection
		c = s.Cells
		If c.Count = 0 Then
			selected = False
			Exit Sub
		ElseIf c(1).Previous Is Nothing Then
			selected = False
			Exit Sub
		Else
			c(1).Previous.Select
			If c1 Is Nothing Then c1 = c(1)
		End If
	Next
Else
	For i = 1 To steps
		s = w.Selection
		c = s.Cells
		If c.Count = 0 Then
			selected = False
			Exit Sub
		ElseIf c(1).Next Is Nothing Then
			selected = False
			Exit Sub
		Else
			c(1).Next.Select
			If c1 Is Nothing Then c1 = c(1)
		End If
	Next
End If

c1 = Nothing
selected = True

Catch ex As Exception
	selected = False
Finally
	If c1 IsNot Nothing Then
		c1.Select
	End If
	d = Nothing
	w = Nothing
	s = Nothing
	c = Nothing
	c1 = Nothing
End try]]></code></stage><stage stageid="96975d1f-c613-48e6-b917-47041ee8da2c" name="steps" type="Data"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="da8e46d1-b4b9-40b8-96d3-d5f50d7f4c89" name="Set Selected Cell Text" type="SubSheetInfo"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d93f9a85-6397-463f-a7cc-793c62f0afce" name="End" type="End"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="e765aafd-6194-4dde-8353-5dca090372ef" name="handle" type="Data"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e200c448-4a17-47ce-a208-ba02c896eb8a" name="Start" type="Start"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="text" name="text" stage="text" /><input type="flag" name="append" narrative="Optional, default False will overwrite." stage="append" /></inputs><onsuccess>5032655f-d60c-4fd4-8247-b167d88f2bda</onsuccess></stage><stage stageid="5b309234-72f0-479a-871b-51dda5f6075c" name="document name" type="Data"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5032655f-d60c-4fd4-8247-b167d88f2bda" name="Set Cell" type="Code"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="text" name="text" expr="[text]" /><input type="flag" name="append" expr="[append]" /></inputs><onsuccess>d93f9a85-6397-463f-a7cc-793c62f0afce</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = Nothing
Dim cs As Object = Nothing
Dim c As Object = Nothing
Dim r As Object = Nothing

Try

s = w.Selection
cs = s.Cells
If cs.Count = 1 Then
	c = cs(1)
	r = c.Range
	If append Then
		r.Text = r.Text.Substring(0, r.Text.Length - 2) & text & r.Text.Substring(r.Text.Length - 2)
	Else
		r.Text = text
	End If
End If

Catch ex As Exception
	Throw ex
Finally
	d = Nothing
	w = Nothing
	s = Nothing
	cs = Nothing
	c = Nothing
	r = Nothing
End try]]></code></stage><stage stageid="213b47ae-d5b2-4c58-a0bb-967f877da779" name="text" type="Data"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fea1f6e-b9fd-48a4-975b-95eb357812ec" name="append" type="Data"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="264c4c7c-6251-4383-9f3a-28559469d1e2" name="Select Next Field" type="SubSheetInfo"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><narrative>Selects the next field in the document</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="058b4f33-fd12-422b-b45f-9604400b893e" name="End" type="End"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="selected" stage="selected" /></outputs></stage><stage stageid="85c127b5-cf48-4914-a129-d36cc585c1ff" name="handle" type="Data"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><display x="-195" y="-45" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f94d5f5d-2027-44e7-8122-ed018c4bcaa0" name="Start" type="Start"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><loginhibit /><display x="15" y="-120" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="number" name="steps" narrative="Optional, positive number to move forward, negative to move back, default 1." stage="steps" /></inputs><onsuccess>2dc430f1-a3ee-4adb-a992-c153fbb04bca</onsuccess></stage><stage stageid="49b6201c-934e-4e16-98a3-3333ed61e186" name="document name" type="Data"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5639856e-1937-434a-bfee-927110122a21" name="selected" type="Data"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><display x="-195" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="93b18a8f-6970-47eb-9c5f-ced62e36f10b" name="steps" type="Data"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="2dc430f1-a3ee-4adb-a992-c153fbb04bca" name="Select Next Field" type="Code"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><loginhibit /><display x="15" y="-30" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="number" name="steps" expr="[steps]" /></inputs><outputs><output type="flag" name="selected" stage="selected" /></outputs><onsuccess>058b4f33-fd12-422b-b45f-9604400b893e</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = w.Selection
Dim f As Object = s.Find
Dim wrap, count, which As Integer
Dim forward as Boolean

If steps < 0 Then
	count = -1 * steps
	wrap = 2
	forward = False
	which = 3
Else
	count = steps
	wrap = 1
	forward = True
	which = 2
End If

Try

s.GoTo(What:=7, Which:=which, Count:=count, Name:="")
f.ClearFormatting
With f
	.Text = ""
	.Replacement.Text = ""
	.Forward = forward
	.Wrap = wrap
	.Format = False
	.MatchCase = False
	.MatchWholeWord = False
	.MatchWildcards = False
	.MatchSoundsLike = False
	.MatchAllWordForms = False
End With

s.MoveRight(Unit:=1, Count:=1, Extend:=1)
selected = True

Catch ex As Exception

selected = False

Finally

d = Nothing
w = Nothing
s = Nothing
f = Nothing

End try]]></code></stage><stage stageid="62da7c33-64e2-4cb4-b8f7-50742893de4a" name="Set Selected Checkbox" type="SubSheetInfo"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><narrative>Ticks or unticks the selected checkbox</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="510c9852-b8ac-4ff8-8e0c-7c8d13ed79c3" name="End" type="End"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="c24730d4-72ba-45f3-a565-5a2cdde3e197" name="handle" type="Data"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7894538-d76b-4e8f-9eba-4fdc810eb94a" name="Start" type="Start"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="flag" name="checked" stage="checked" /></inputs><onsuccess>2208ee1b-e132-49b8-8567-2c69be9f4e2b</onsuccess></stage><stage stageid="a9d8cd15-d588-429e-82f7-bede62d5d650" name="document name" type="Data"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2208ee1b-e132-49b8-8567-2c69be9f4e2b" name="Set Checkbox" type="Code"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="flag" name="Checked" expr="[checked]" /></inputs><onsuccess>510c9852-b8ac-4ff8-8e0c-7c8d13ed79c3</onsuccess><code><![CDATA[Dim doc = GetDocument(handle,document_name)

Dim sel = doc.Application.Selection
Dim fields = sel.FormFields
If fields.Count > 0 Then
    Dim field = fields(1)
	If field IsNot Nothing AndAlso field.Type = 71 Then 'wdFieldFormCheckBox
		Dim cb = field.CheckBox
		cb.Value = checked
	End If
End If

Dim control = sel.ParentContentControl
If control IsNot Nothing Then
  control.Checked = checked
End If]]></code></stage><stage stageid="df9e9413-eefd-4eae-8129-9314da3eff69" name="checked" type="Data"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="581ce51a-db6c-4a6c-9455-7047b2e58bdb" name="Get Footer Text" type="SubSheetInfo"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><narrative>Gets the text from the specified footer</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f07e9727-845e-4d3e-b035-79dd9c1a9e02" name="End" type="End"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="text" name="footer text" stage="footer text" /></outputs></stage><stage stageid="e7505af8-12a1-48a0-9b29-5d53359af376" name="section" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="2ed14a06-174f-4565-be98-fea2aabfb137" name="footer" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="d2735c81-3c82-4c05-804d-dc66ad1d7a0f" name="handle" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d20473de-325e-4790-8adc-d4afa4a49f54" name="document name" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89da9cc4-334f-4e99-9348-64fea39e45ad" name="Get Footer text" type="Code"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><loginhibit /><display x="15" y="15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="number" name="section" expr="[section]" /><input type="number" name="footer" expr="[footer]" /></inputs><outputs><output type="text" name="footer text" stage="footer text" /></outputs><onsuccess>f07e9727-845e-4d3e-b035-79dd9c1a9e02</onsuccess><code><![CDATA[Dim d As Object = GetDocument(handle,document_name)
Dim s As Object = Nothing
Dim f As Object = Nothing
Dim r As Object = Nothing

Try

	s = d.Sections(section)
	f = s.Footers(footer)
	r = f.Range
	r.End = r.End - 1
	footer_text = r.text

Catch ex As Exception
	Throw ex

Finally
	d = Nothing
	s = Nothing
	f = Nothing
	r = Nothing

End try]]></code></stage><stage stageid="c9d0bd4e-e9b7-4677-b57b-025580e8a62a" name="Start" type="Start"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="An integer value that identifies the instance of Word that contains the specific document." stage="handle" /><input type="text" name="document name" narrative="The name of the document." stage="document name" /><input type="number" name="section" narrative="The number of the section to get the footer information from. Default value is 1." stage="section" /><input type="number" name="footer" narrative="An integer value between 1 and 3, inclusive. 1 = Returns the header or footer on all pages other than the first page of a document or section. 2 = Returns the first header or footer in a document or section. 3 = Returns all headers or footers on even-numbered pages. Default value is 1. " stage="footer" /></inputs><onsuccess>ee5f100a-09f5-4504-8df4-34efe3eb6147</onsuccess></stage><stage stageid="21cad55b-4aa5-44d6-8d55-8668a8e01267" name="footer text" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcb6879c-aec3-4f7e-b0c0-c7a05541c8ce" name="Add Table Row" type="SubSheetInfo"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="87ab81a0-0173-4bb1-a341-070e1a8672d4" name="Start" type="Start"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="-15" y="-75" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /><input type="number" name="Table Number" narrative="The number of the table within the word document" stage="Table Number" /></inputs><onsuccess>8bf740f2-5429-4adb-ba49-4345536358a7</onsuccess></stage><stage stageid="11ef2aff-c240-4089-a3dc-133c850260fe" name="End" type="End"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><display x="-15" y="60" /></stage><stage stageid="8bf740f2-5429-4adb-ba49-4345536358a7" name="CheckInstanceHandle" type="SubSheet"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><display x="-15" y="-30" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>e352f349-79ec-4303-9fa0-d6b6329b9b3d</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="e352f349-79ec-4303-9fa0-d6b6329b9b3d" name="AddRow" type="Code"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><display x="-15" y="15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="TableNumber" expr="[Table Number]" /></inputs><onsuccess>11ef2aff-c240-4089-a3dc-133c850260fe</onsuccess><code><![CDATA[
Dim doc as Object = GetDocument(handle,documentname)
doc.Tables.Item(TableNumber).Rows.Add()]]></code></stage><stage stageid="3146c42a-ee16-4654-8f47-cad56ba1c4a3" name="handle" type="Data"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0fa28223-5cbc-4b56-994f-735cb7ecf068" name="documentname" type="Data"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a9191e3-0b09-44ee-9fd3-96a452ae22de" name="Table Number" type="Data"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="71eeff42-400a-4827-9003-61399bbd4ec0" name="Set Table Cell Value" type="SubSheetInfo"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="144acb7e-c0ea-4870-9588-1e1d12935a8e" name="End" type="End"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="0" y="120" /></stage><stage stageid="75792fd8-d387-4be8-96b9-05b6a240d922" name="CheckInstanceHandle" type="SubSheet"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="0" y="30" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7bcad06a-9e42-4c2b-941c-fb66a76fde60</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="7bcad06a-9e42-4c2b-941c-fb66a76fde60" name="SetCell" type="Code"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="0" y="75" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="TableNumber" expr="[Table Number]" /><input type="number" name="cellx" expr="[Cell x Number]" /><input type="number" name="celly" expr="[Cell y Number]" /><input type="text" name="CellValue" expr="[Value]" /></inputs><onsuccess>144acb7e-c0ea-4870-9588-1e1d12935a8e</onsuccess><code><![CDATA[
Dim doc as Object = GetDocument(handle,documentname)
doc.Tables.Item(TableNumber).Cell(celly,cellx).Range.Text = CellValue]]></code></stage><stage stageid="35ed0ea5-a2a7-4a92-a3a7-c9c817bc77cb" name="handle" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0baad10b-f2e3-4d40-8a3b-0fc6b52c05c9" name="documentname" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="536f5aa3-617c-440e-9b06-997207b34dc9" name="Table Number" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80acb91a-397b-48c7-bf67-f3a861b626e4" name="Cell x Number" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="-195" y="105" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="62ad7203-c6fb-4198-b33e-b9c3734eef55" name="Cell y Number" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="-195" y="135" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c9c145f5-9d12-4e84-b025-08cc8532ed87" name="Value" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="90489fc7-f75a-4870-9b72-b146515b522f" name="Start" type="Start"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="0" y="-30" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /><input type="number" name="Table Number" narrative="The number of the table within the document" stage="Table Number" /><input type="number" name="Cell x Number" narrative="The x location number of the cell within the table (starts at 1)" stage="Cell x Number" /><input type="number" name="Cell y Number" narrative="The y location number of the cell within the table (starts at 1)" stage="Cell y Number" /><input type="text" name="Value" narrative="The value to set the cell to" stage="Value" /></inputs><onsuccess>75792fd8-d387-4be8-96b9-05b6a240d922</onsuccess></stage><stage stageid="98bd4479-501c-4af6-87b3-0e44102b30f1" name="Get Table Cell Value" type="SubSheetInfo"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="20a32c47-0bd7-438f-8bc9-cd34a9258f92" name="Start" type="Start"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="0" y="30" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /><input type="number" name="Table Number" narrative="The number of the table within the document" stage="Table Number" /><input type="number" name="Cell x Number" narrative="The x location number of the cell within the table (starts at 1)" stage="Cell x Number" /><input type="number" name="Cell y Number" narrative="The y location number of the cell within the table (starts at 1)" stage="Cell y Number" /></inputs><onsuccess>c02323b7-9f42-4a22-8729-fa65114b1a7b</onsuccess></stage><stage stageid="02dfaa1a-2b89-40d1-a9d8-ce53515dcc8a" name="End" type="End"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="0" y="165" /><outputs><output type="text" name="Result" narrative="the cell contents" stage="result" /></outputs></stage><stage stageid="c02323b7-9f42-4a22-8729-fa65114b1a7b" name="CheckInstanceHandle" type="SubSheet"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="0" y="75" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>10df1c8e-f6b2-4f55-a8e0-a14ac4a94d02</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="10df1c8e-f6b2-4f55-a8e0-a14ac4a94d02" name="GetCell" type="Code"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="0" y="120" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="TableNumber" expr="[Table Number]" /><input type="number" name="cellx" expr="[Cell x Number]" /><input type="number" name="celly" expr="[Cell y Number]" /></inputs><outputs><output type="text" name="result" stage="result" /></outputs><onsuccess>02dfaa1a-2b89-40d1-a9d8-ce53515dcc8a</onsuccess><code><![CDATA[Dim doc = GetDocument(handle,documentname)
Dim rg = doc.Tables(TableNumber).Cell(celly,cellx).Range
'The character at the end is used to mark end of cells in Word
rg.End = rg.End - 1
result = rg.Text]]></code></stage><stage stageid="876bd8c3-5bc4-4ce4-a349-8a07eea11a38" name="handle" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="b16e011f-0e1b-45a0-8152-71f30d0a2bcc" name="documentname" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ded21bd0-41c4-412f-b40f-b9c7946eea0e" name="result" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff923bf0-e2c8-49bf-a547-9c4624ceebc4" name="Table Number" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="-195" y="60" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6752801f-8544-44e4-9eed-6159fe32331d" name="Cell x Number" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="815b9e66-4c61-42fb-9b19-d3d7f86aeac4" name="Cell y Number" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="-195" y="120" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e945f84a-1ffc-461e-a613-eafef2869044" name="Note2" type="Note"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-195" y="-30" w="150" h="30" /></stage><stage stageid="fa36ded4-4caa-4238-8abc-6350ee0c945e" name="Note2" type="Note"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-195" y="180" w="150" h="30" /></stage><stage stageid="ae82d62f-d1b2-4af1-977a-db5619d47797" name="ExportPDF" type="SubSheetInfo"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b5725bdb-4fb0-4666-9975-83186b793e2e" name="Start" type="Start"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><inputs><input type="text" name="File Name" stage="filename" /><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>c4b70afa-f912-4ea4-91af-d05e2f73da34</onsuccess></stage><stage stageid="7df78cd1-d4d4-4f7f-b232-44da138f17fb" name="End" type="End"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="c4b70afa-f912-4ea4-91af-d05e2f73da34" name="CheckInstanceHandle" type="SubSheet"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>5f267c84-0795-4a87-900f-b5028d73ec8a</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="5f267c84-0795-4a87-900f-b5028d73ec8a" name="ExportPDF" type="Code"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="text" name="filename" expr="[filename]" /></inputs><onsuccess>7df78cd1-d4d4-4f7f-b232-44da138f17fb</onsuccess><code><![CDATA[Const wdExportFormatPDF As Integer = 17

Dim doc as Object = GetDocument(handle,documentname)
doc.ExportAsFixedFormat( _
  OutputFileName:=filename, _
  ExportFormat:=wdExportFormatPDF)
]]></code></stage><stage stageid="3bddbd67-c3d7-46ef-a6e9-3f2c78c00fe3" name="filename" type="Data"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="540adde5-d599-4f0d-819b-1e875fcebcc7" name="documentname" type="Data"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><display x="165" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="177dcef4-e724-431f-8af4-1eee1deecc09" name="handle" type="Data"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><display x="225" y="-105" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73f9628c-9ddc-4566-b234-ba8cadc3f8da" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182
</narrative><display x="240" y="-15" w="360" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="c3a61a53-8995-47e8-b6f8-9dc8eed8edda" name="Mail Merge" type="SubSheetInfo"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><narrative>Use this action to perform a Mail Merge using a Blue Prism Collection of data as the input to be applied to the Word template (.dotx).

NOTE: The header names in the Collection must match the Merge field names in the template.</narrative><display x="-195" y="-120" w="150" h="120" /></stage><stage stageid="80dbbae0-e0cb-4a2b-9f77-545394c593f8" name="Start" type="Start"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="Data" narrative="The input Collection containing the rows of data that should be used to populate the Word template." stage="Data" /><input type="text" name="Template" narrative="The fully qualified path to the Word template file." stage="Template" /><input type="text" name="Key Field" narrative="The name of the key field from the data collection to use for naming the output document." stage="Key Field" /><input type="text" name="Destination Folder" narrative="The folder where the newly generated documents should be saved." stage="Destination Folder" /></inputs><onsuccess>25a77408-d40e-4d24-a1f7-f66e5fef274d</onsuccess></stage><stage stageid="b09acf02-b87d-4aa8-8ecd-a7bc9079c6ee" name="End" type="End"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><loginhibit /><display x="15" y="120" /><outputs><output type="flag" name="Success" narrative="A False flag indicates a problem was encountered while processing the data or generating a document. Check the Errors Collection for details." stage="Success" /><output type="number" name="Files Created" narrative="The number of files the operation was able to successfully create and save to the destination folder." stage="Files Created" /><output type="collection" name="Errors" narrative="A Collection containing information about any specific rows from the input data that could not be properly processed." stage="Errors" /></outputs></stage><stage stageid="268827d4-8768-437f-8b31-902ac55b1d8a" name="Data" type="Collection"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="abd6dbc8-d71b-4630-96c3-4e1f13a37bd9" name="Template" type="Data"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bee3ffc8-ddfa-424a-8342-3485d7339979" name="Key Field" type="Data"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fa94d8fb-e076-44c3-bb21-48134b948769" name="Input" type="Block"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="eba6aa2b-a857-47c6-92ae-80249778d680" name="Output" type="Block"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><loginhibit /><display x="-270" y="150" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="ad16b4bd-cf55-42d3-8347-dc1841228e03" name="Errors" type="Collection"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><loginhibit /><display x="-195" y="240" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="af5b595e-db3d-4be1-a295-eba9f245c110" name="Success" type="Data"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><loginhibit /><display x="-195" y="180" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="206c87a7-57ab-476e-b6f9-1cf7c415e41a" name="Files Created" type="Data"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><loginhibit /><display x="-195" y="210" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="80a08c7e-91b8-4202-bcc5-c4008c768d6a" name="handle" type="Data"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><loginhibit /><display x="-195" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="25a77408-d40e-4d24-a1f7-f66e5fef274d" name="CheckInstanceHandle" type="SubSheet"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="number" name="handle" friendlyname="handle" expr="[handle]" /></inputs><onsuccess>b82e148a-c00c-4d1b-96fd-86b318cb89bb</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="5a2088b8-4c0a-466e-92e7-41dd5f8fce12" name="Check Input" type="Decision"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><loginhibit /><narrative>Ensure we were passed input data.</narrative><display x="15" y="30" /><decision expression="([Row Count] &gt; 0) AND (Len(Trim([Template])) &gt; 0) AND (Len(Trim([Key Field])) &gt; 0)" /><ontrue>d0f01d06-f8fb-49d3-82d1-9e21cb3b7be9</ontrue><onfalse>6180545b-01ce-4ae1-bef0-fb6d7fcc0be0</onfalse></stage><stage stageid="b82e148a-c00c-4d1b-96fd-86b318cb89bb" name="Count Data Rows" type="Action"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-15" /><inputs><input type="text" name="Collection Name" friendlyname="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Data&quot;" /></inputs><outputs><output type="number" name="Count" friendlyname="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>5a2088b8-4c0a-466e-92e7-41dd5f8fce12</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="dfd900af-35f2-419e-9b8a-9b89050e8c48" name="Row Count" type="Data"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><display x="-195" y="315" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd57c552-0a35-4fbb-b324-9cdcd519cf56" name="Local" type="Block"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><loginhibit /><display x="-270" y="285" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="6180545b-01ce-4ae1-bef0-fb6d7fcc0be0" name="Invalid Input Data" type="Exception"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><display x="120" y="30" w="90" h="30" /><exception localized="yes" type="Invalid Input Parameter" detail="&quot;Please verify the input data.&quot;" /></stage><stage stageid="d0f01d06-f8fb-49d3-82d1-9e21cb3b7be9" name="Mail Merge" type="Code"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><loginhibit /><display x="15" y="75" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="collection" name="data" expr="[Data]" /><input type="text" name="template" expr="[Template]" /><input type="text" name="keyField" expr="[Key Field]" /><input type="text" name="destFolder" expr="[Destination Folder]" /></inputs><outputs><output type="flag" name="success" stage="Success" /><output type="number" name="fileCount" stage="Files Created" /><output type="collection" name="errors" stage="Errors" /></outputs><onsuccess>b09acf02-b87d-4aa8-8ecd-a7bc9079c6ee</onsuccess><code><![CDATA[Dim oMissing As Object = System.Reflection.Missing.Value
Dim oTemplatePath As Object = template
Dim wordApp As Object = GetInstance(handle)
Dim rowNumber as Integer = 0

fileCount = 0
success = true

' Set comparisons on the data table to case-insensitive. This makes sure when we check for the existence of a column we're not bamboozled by case sensitivity.
data.CaseSensitive = false

' Define our error collection. This is for reporting back some information about any rows in the input data collection that we failed on.
errors.Columns.Add("Row Number", System.Type.GetType("System.Int32"))
errors.Columns.Add("Key Field", System.Type.GetType("System.String"))
errors.Columns.Add("Error Message", System.Type.GetType("System.String"))

' Check to see if the destination folder ends in a "\". If not, add one.
If Not destFolder.EndsWith("\") Then
	destFolder = destFolder & "\"
End If

' Cycle through each row of the data Collection.
For Each row As System.Data.DataRow In data.Rows
	rowNumber += 1
	Try
		Dim wordDoc As Object = wordApp.Documents.Add(template, oMissing, oMissing, oMissing)

		' Cycle through each mergefield in the Word template.
		For Each myMergeField As Object In wordDoc.Fields
			Dim rngFieldCode As Object = myMergeField.Code
			Dim fieldText As String = rngFieldCode.Text

			If fieldText.StartsWith(" MERGEFIELD") Then
				' Pull the field name from the overall MergeField definition.
				Dim fieldName As String = GetMergeFieldName(fieldText)

                If (data.Columns.Contains(fieldName)) Then
					' Write the value from the specific column in the data Collection to the mergefield.
					myMergeField.[Select]()
					wordApp.Selection.TypeText(row(fieldName))
				Else
					errors.Rows.Add(rowNumber, row(keyField), "Input data does not contain a matching column for the field '" & fieldName & "'.")
				End If
			End If
		Next

		' Save the document to the destination folder.
		wordDoc.SaveAs(destFolder & row(keyField) & ".doc")
		wordDoc.Close()
		fileCount += 1
	Catch ex As Exception
		success = false
		errors.Rows.Add(rowNumber, row(keyField), ex.Message)
	End Try
Next
]]></code></stage><stage stageid="35e6eef1-01e4-46a4-8f29-41cc937e855e" name="Destination Folder" type="Data"><subsheetid>54381f48-d78a-41c3-845b-7d2092f7062a</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="638775f1-792e-46b2-976f-583db673add4" name="Add Table Column" type="SubSheetInfo"><subsheetid>3358b033-d27a-4d94-84d7-7c92e11356a5</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="08f3768f-4016-4083-83c6-9e88ce712254" name="Start" type="Start"><subsheetid>3358b033-d27a-4d94-84d7-7c92e11356a5</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /><input type="number" name="Table Number" narrative="The number of the table within the word document" stage="Table Number" /></inputs><onsuccess>56ec0fc4-c773-4ecc-993c-50e65e805251</onsuccess></stage><stage stageid="75bcc335-682a-4931-b2fd-0b8dd729a3bd" name="End" type="End"><subsheetid>3358b033-d27a-4d94-84d7-7c92e11356a5</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="56ec0fc4-c773-4ecc-993c-50e65e805251" name="CheckInstanceHandle" type="SubSheet"><subsheetid>3358b033-d27a-4d94-84d7-7c92e11356a5</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>b9682d79-b808-49f9-a230-89bb9808f5f9</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="b9682d79-b808-49f9-a230-89bb9808f5f9" name="AddColumn" type="Code"><subsheetid>3358b033-d27a-4d94-84d7-7c92e11356a5</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="TableNumber" expr="[Table Number]" /></inputs><onsuccess>75bcc335-682a-4931-b2fd-0b8dd729a3bd</onsuccess><code><![CDATA[
Dim doc as Object = GetDocument(handle,documentname)
doc.Tables.Item(TableNumber).Columns.Add()]]></code></stage><stage stageid="3d49b16e-acf1-44ed-945a-3bc91cdb86df" name="handle" type="Data"><subsheetid>3358b033-d27a-4d94-84d7-7c92e11356a5</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="48ee67e8-aa15-4087-bff4-bf4a241245a8" name="documentname" type="Data"><subsheetid>3358b033-d27a-4d94-84d7-7c92e11356a5</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3e127425-0c21-4cfa-8b70-721a2c240d25" name="Table Number" type="Data"><subsheetid>3358b033-d27a-4d94-84d7-7c92e11356a5</subsheetid><loginhibit /><display x="-195" y="45" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="69fda81f-3b6e-4c55-a2e5-eff9fc2a3843" name="Remove Table Row" type="SubSheetInfo"><subsheetid>4a945fb1-ef4a-4374-a6bf-39f145d30e69</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6a5c98fa-d457-4bbd-883e-9ac3d5bb537b" name="Start" type="Start"><subsheetid>4a945fb1-ef4a-4374-a6bf-39f145d30e69</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /><input type="number" name="Table Number" narrative="The number of the table within the word document" stage="Table Number" /><input type="number" name="Row Number" narrative="Index of the row to remove" stage="Row Number" /></inputs><onsuccess>05642c34-4055-462a-b2ce-315421341ae0</onsuccess></stage><stage stageid="149a11c0-b035-4e23-9c0a-1afe31a77cd7" name="End" type="End"><subsheetid>4a945fb1-ef4a-4374-a6bf-39f145d30e69</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="05642c34-4055-462a-b2ce-315421341ae0" name="CheckInstanceHandle" type="SubSheet"><subsheetid>4a945fb1-ef4a-4374-a6bf-39f145d30e69</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>60a99e77-a2f2-4381-9e6e-1e189085d3cd</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="60a99e77-a2f2-4381-9e6e-1e189085d3cd" name="RemoveRow" type="Code"><subsheetid>4a945fb1-ef4a-4374-a6bf-39f145d30e69</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="TableNumber" expr="[Table Number]" /><input type="number" name="RowNumber" expr="[Row Number]" /></inputs><onsuccess>149a11c0-b035-4e23-9c0a-1afe31a77cd7</onsuccess><code><![CDATA[
Dim doc as Object = GetDocument(handle,documentname)
doc.Tables.Item(TableNumber).Rows(Int([RowNumber])).Delete()]]></code></stage><stage stageid="f417afe7-e578-49e7-a2ee-fd976bd6632c" name="handle" type="Data"><subsheetid>4a945fb1-ef4a-4374-a6bf-39f145d30e69</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="4cddc38c-78ab-43f6-aac7-2c0b45395026" name="documentname" type="Data"><subsheetid>4a945fb1-ef4a-4374-a6bf-39f145d30e69</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1da754b-e54b-4936-936b-860371d58b03" name="Table Number" type="Data"><subsheetid>4a945fb1-ef4a-4374-a6bf-39f145d30e69</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1ee91db-2a08-4c39-8453-14adb4220dc2" name="Row Number" type="Data"><subsheetid>4a945fb1-ef4a-4374-a6bf-39f145d30e69</subsheetid><loginhibit /><display x="-195" y="60" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="572711b2-9c87-4cc5-ab91-91617947a5e8" name="Remove Table Column" type="SubSheetInfo"><subsheetid>0bb11f0d-d3ce-4a13-8e77-c04867882bef</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5d9f469e-7694-4856-b689-1de0262f3c06" name="Start" type="Start"><subsheetid>0bb11f0d-d3ce-4a13-8e77-c04867882bef</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /><input type="number" name="Table Number" narrative="The number of the table within the word document" stage="Table Number" /><input type="number" name="Column Number" narrative="Index of the column to remove" stage="Column Number" /></inputs><onsuccess>d153f95c-f504-4c46-b66a-3fb9d641841c</onsuccess></stage><stage stageid="d48a6447-c9e9-4e7e-a046-106cfb292386" name="End" type="End"><subsheetid>0bb11f0d-d3ce-4a13-8e77-c04867882bef</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="d153f95c-f504-4c46-b66a-3fb9d641841c" name="CheckInstanceHandle" type="SubSheet"><subsheetid>0bb11f0d-d3ce-4a13-8e77-c04867882bef</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>4d5f3479-5ae0-4ab2-b00b-cc6447e813cb</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="4d5f3479-5ae0-4ab2-b00b-cc6447e813cb" name="RemoveColumn" type="Code"><subsheetid>0bb11f0d-d3ce-4a13-8e77-c04867882bef</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="TableNumber" expr="[Table Number]" /><input type="number" name="ColumnNumber" expr="[Column Number]" /></inputs><onsuccess>d48a6447-c9e9-4e7e-a046-106cfb292386</onsuccess><code><![CDATA[
Dim doc as Object = GetDocument(handle,documentname)
doc.Tables.Item(TableNumber).Columns(Int([ColumnNumber])).Delete()]]></code></stage><stage stageid="04e93ded-5a7f-499b-ae3b-5c57bd6da0b0" name="handle" type="Data"><subsheetid>0bb11f0d-d3ce-4a13-8e77-c04867882bef</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="13699771-ad77-40b1-a428-d56d6ba2df9c" name="documentname" type="Data"><subsheetid>0bb11f0d-d3ce-4a13-8e77-c04867882bef</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f0cfb695-6faa-4b9c-91eb-cdee166c0984" name="Table Number" type="Data"><subsheetid>0bb11f0d-d3ce-4a13-8e77-c04867882bef</subsheetid><loginhibit /><display x="-195" y="45" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="49237830-f0cc-446a-b168-b2c5437a0a93" name="Column Number" type="Data"><subsheetid>0bb11f0d-d3ce-4a13-8e77-c04867882bef</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="110f9ab5-d037-41be-9ff8-b57d513768ae" name="Split Document" type="SubSheetInfo"><subsheetid>8dff095f-0923-42e2-953d-b780b2968ef1</subsheetid><narrative>Splits the provided word document into two based on the page number</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="399eb56b-8a69-49b5-9314-53bfb34f2b54" name="Start" type="Start"><subsheetid>8dff095f-0923-42e2-953d-b780b2968ef1</subsheetid><loginhibit /><display x="0" y="-90" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="filename" narrative="Complete path of the word document to split" stage="filename" /><input type="number" name="SplitIndex" narrative="Page Number at which to split the word document" stage="SplitIndex" /></inputs><onsuccess>edc053e5-10bf-4ce9-abe9-789d36bcbd5e</onsuccess></stage><stage stageid="b2cf7887-5887-49d6-a874-ed0ee0781304" name="End" type="End"><subsheetid>8dff095f-0923-42e2-953d-b780b2968ef1</subsheetid><loginhibit /><display x="0" y="120" /><outputs><output type="text" name="Part1Path" narrative="File path of splitted file" stage="Part1Path" /><output type="text" name="Part2Path" narrative="File path of splitted file" stage="Part2Path" /></outputs></stage><stage stageid="edc053e5-10bf-4ce9-abe9-789d36bcbd5e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>8dff095f-0923-42e2-953d-b780b2968ef1</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>46b01612-d40a-4f0c-a10e-14c021608f30</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="44a9e9c6-6668-4c04-9da2-595a9c7dfaa4" name="handle" type="Data"><subsheetid>8dff095f-0923-42e2-953d-b780b2968ef1</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="26e8cf11-d070-438d-9897-4f48f65927ac" name="Split Document" type="Code"><subsheetid>8dff095f-0923-42e2-953d-b780b2968ef1</subsheetid><loginhibit /><narrative>Dim app As Object = GetInstance(handle)
Dim BaseDoc as Object = GetInstance(handle).Documents.Open(filename)
Filename  = BaseDoc.Name


    'Dim app As Microsoft.Office.Interop.Word.Application = New Microsoft.Office.Interop.Word.Application()
    'Dim BaseDoc As Microsoft.Office.Interop.Word.Document
    'Dim DestDoc As Microsoft.Office.Interop.Word.Document
	Dim DestDoc1 as Object = GetInstance(handle).Documents.Add()
	Dim DestDoc2 as Object = GetInstance(handle).Documents.Add()
'BaseDoc.Activate()
    Dim intNumberOfPages As Integer
    'Dim intNumberOfChars As String
    Dim intPage As Integer

    'Word Constants
    Const wdGoToPage = 1
    Const wdStory = 6
    Const wdExtend = 1
    Const wdCharacter = 1

    'Show app
    app.ShowMe()

    'Load Base Document
    'BaseDoc = app.Documents.Open(Filename)
    BaseDoc.Repaginate()

    'Loop through pages
    intNumberOfPages = BaseDoc.BuiltInDocumentProperties("Number of Pages").value
    'intNumberOfChars = BaseDoc.BuiltInDocumentProperties("Number of Characters").value
'num=intNumberOfPages
'intNumberOfPages=1
'app.Selection.GoTo(wdGoToPage, 2,,)
'app.Selection.MoveLeft(Unit:=wdCharacter, Count:=1)
    'For intPage = 1 To intNumberOfPages
	For intPage = 1 To intNumberOfPages
BaseDoc.Activate()
        If intPage = intNumberOfPages Then
            app.Selection.EndKey(wdStory)
'BaseDoc.Range.Select()
'app.Selection.GoTo(wdGoToPage, 2)
'app.Selection.MoveLeft(Unit:=wdCharacter, Count:=1)
        Else
            app.Selection.GoTo(wdGoToPage, 2)
            'app.DoEvents()

            app.Selection.MoveLeft(Unit:=wdCharacter, Count:=1)
        End If

        'app.DoEvents()


        app.Selection.HomeKey(wdStory, wdExtend)
        'app.DoEvents()

        app.Selection.Copy()
        'app.DoEvents()

        'Create New Document
        'DestDoc = app.Documents.Add
if intPage&lt;SplitIndex Then
	DestDoc1.Activate()
Else
	DestDoc2.Activate()
End If
	app.Selection.Paste()
if intPage&lt;&gt;SplitIndex-1 Then
	app.Selection.TypeParagraph
End If
'app.Selection.MoveRight(Unit:=wdCharacter, Count:=1)
'app.Paste()
        'DestDoc.SaveAs("NewFileName" &amp; intPage.ToString &amp; ".docx")
		'DestDoc.SaveAs("C:\Users\Shashank Kumar\OneDrive - Blue Prism\Documents\DX\Development\MS Word\newdoc"+".docx")

        'DestDoc.Close()
        'DestDoc = Nothing
		BaseDoc.Activate()
        app.Selection.GoTo(wdGoToPage, 2)
        'app.DoEvents()

        app.Selection.HomeKey(wdStory, wdExtend)
        'app.DoEvents()

        app.Selection.Delete()
        'app.DoEvents()
    Next

'BaseDoc.Path
'BaseDoc.Name

DestDoc1.SaveAs(BaseDoc.Path+"\Part1_"+BaseDoc.Name)
DestDoc2.SaveAs(BaseDoc.Path+"\Part2_"+BaseDoc.Name)

        DestDoc1.Close(True)
        DestDoc1 = Nothing
DestDoc2.Close(True)
        DestDoc2 = Nothing

BaseDoc.Close(False)
BaseDoc = Nothing</narrative><display x="0" y="60" w="120" h="30" /><inputs><input type="text" name="filename" expr="[filename]" /><input type="number" name="handle" expr="[handle]" /><input type="number" name="SplitIndex" expr="[SplitIndex]" /></inputs><outputs><output type="text" name="Part1Path" stage="Part1Path" /><output type="text" name="Part2Path" stage="Part2Path" /></outputs><onsuccess>b2cf7887-5887-49d6-a874-ed0ee0781304</onsuccess><code><![CDATA[Dim app As Object = GetInstance(handle)
Dim BaseDoc as Object = GetInstance(handle).Documents.Open(filename)
Dim DestDoc1 as Object = GetInstance(handle).Documents.Add()
Dim DestDoc2 as Object = GetInstance(handle).Documents.Add()
Dim intNumberOfPages As Integer
Dim intPage As Integer

'Word Constants
Const wdGoToPage = 1
Const wdStory = 6
Const wdExtend = 1
Const wdCharacter = 1

BaseDoc.Repaginate()

'Loop through pages
intNumberOfPages = BaseDoc.BuiltInDocumentProperties("Number of Pages").value
For intPage = 1 To intNumberOfPages
	BaseDoc.Activate()

	If intPage = intNumberOfPages Then
		app.Selection.EndKey(wdStory)
	Else
		app.Selection.GoTo(wdGoToPage, 2)
		app.Selection.MoveLeft(Unit:=wdCharacter, Count:=1)
	End If
	app.Selection.HomeKey(wdStory, wdExtend)
	app.Selection.Copy()

	if intPage<SplitIndex Then
		DestDoc1.Activate()
	Else
		DestDoc2.Activate()
	End If

	app.Selection.Paste()

	if intPage<>SplitIndex-1 Then
		app.Selection.TypeParagraph
	End If

	BaseDoc.Activate()
	app.Selection.GoTo(wdGoToPage, 2)
	app.Selection.HomeKey(wdStory, wdExtend)
	app.Selection.Delete()
Next

'Save Split Files
DestDoc1.SaveAs(BaseDoc.Path+"\Part1_"+BaseDoc.Name)
DestDoc1.Close(True)
DestDoc1 = Nothing
Part1Path=BaseDoc.Path+"\Part1_"+BaseDoc.Name

DestDoc2.SaveAs(BaseDoc.Path+"\Part2_"+BaseDoc.Name)
DestDoc2.Close(True)
DestDoc2 = Nothing
Part2Path=BaseDoc.Path+"\Part1_"+BaseDoc.Name

'Close Base Document
BaseDoc.Close(False)
BaseDoc = Nothing]]></code></stage><stage stageid="46b01612-d40a-4f0c-a10e-14c021608f30" name="CheckFileExists" type="SubSheet"><subsheetid>8dff095f-0923-42e2-953d-b780b2968ef1</subsheetid><loginhibit /><display x="0" y="0" w="120" h="30" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><onsuccess>26e8cf11-d070-438d-9897-4f48f65927ac</onsuccess><processid>b5d196b4-36af-4e29-991f-b6985b43dce2</processid></stage><stage stageid="4cdfa934-fd27-4b3c-8b1f-361a804ce731" name="filename" type="Data"><subsheetid>8dff095f-0923-42e2-953d-b780b2968ef1</subsheetid><loginhibit /><display x="-195" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="731ab8c6-a6ce-4356-922a-184272184453" name="SplitIndex" type="Data"><subsheetid>8dff095f-0923-42e2-953d-b780b2968ef1</subsheetid><loginhibit /><display x="-195" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5a0ca45-cba5-44ca-9cb5-4e9027d662b6" name="Part1Path" type="Data"><subsheetid>8dff095f-0923-42e2-953d-b780b2968ef1</subsheetid><display x="-195" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ecdd050b-5f33-43be-be7f-307b34444602" name="Part2Path" type="Data"><subsheetid>8dff095f-0923-42e2-953d-b780b2968ef1</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="25b3bf66-e09a-481f-8f32-fb96d2138d8e" name="Get Header Text" type="SubSheetInfo"><subsheetid>35df6aff-601d-4467-bf17-6c2eb1d83173</subsheetid><narrative>Gets the text from the specified section header.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="979cde4f-610e-45d3-a9c5-12e9d68f99fd" name="End" type="End"><subsheetid>35df6aff-601d-4467-bf17-6c2eb1d83173</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="header text" stage="header text" /></outputs></stage><stage stageid="51ade3db-9173-4773-b96d-16722531cc89" name="section" type="Data"><subsheetid>35df6aff-601d-4467-bf17-6c2eb1d83173</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="dd882cc4-8420-4942-b1f8-8553058cdfc6" name="handle" type="Data"><subsheetid>35df6aff-601d-4467-bf17-6c2eb1d83173</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="36929a69-7ae2-4ebd-a40c-fb0e34e897ae" name="document name" type="Data"><subsheetid>35df6aff-601d-4467-bf17-6c2eb1d83173</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04c031b9-e485-4a0d-9d04-daa7b745d0bc" name="Get Header Text" type="Code"><subsheetid>35df6aff-601d-4467-bf17-6c2eb1d83173</subsheetid><loginhibit /><display x="15" y="30" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="number" name="section" expr="[section]" /><input type="number" name="header" expr="[header]" /></inputs><outputs><output type="text" name="header text" stage="header text" /></outputs><onsuccess>979cde4f-610e-45d3-a9c5-12e9d68f99fd</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim s As Object = Nothing
Dim h As Object = Nothing
Dim r As Object = Nothing

Try
	s = d.Sections(section)
	h = s.Headers(header)
	r = h.Range
	r.End = r.End - 1
	header_text = r.text

Catch ex As Exception
	Throw ex

Finally
	d = Nothing
	s = Nothing
	h = Nothing
	r = Nothing
End try]]></code></stage><stage stageid="e55b5d2c-61f3-4731-a8e1-4fa0f563e196" name="Start" type="Start"><subsheetid>35df6aff-601d-4467-bf17-6c2eb1d83173</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="handle" narrative="An integer value that identifies the instance of Word that contains the specific document." stage="handle" /><input type="text" name="document name" narrative="The name of the document." stage="document name" /><input type="number" name="section" narrative="The number of the section to get the header information from. Default value is 1." stage="section" /><input type="number" name="header" narrative="An integer value between 1 and 3, inclusive. 1 = Returns the header or footer on all pages other than the first page of a document or section. 2 = Returns the first header or footer in a document or section. 3 = Returns all headers or footers on even-numbered pages. Default value is 1. " stage="header" /></inputs><onsuccess>727fae13-32c8-4685-971c-ef967930bb56</onsuccess></stage><stage stageid="3e61b744-1653-46f2-98bf-da700ae7fa1a" name="header text" type="Data"><subsheetid>35df6aff-601d-4467-bf17-6c2eb1d83173</subsheetid><display x="-195" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a4ade74-d3ce-49dc-94a5-a3d4e9444843" name="header" type="Data"><subsheetid>35df6aff-601d-4467-bf17-6c2eb1d83173</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="afeace05-6fde-4237-b838-fe6901024081" name="Input" type="Block"><subsheetid>35df6aff-601d-4467-bf17-6c2eb1d83173</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e8d8d512-0b22-46b1-a9ea-a1f5677961d0" name="Output" type="Block"><subsheetid>35df6aff-601d-4467-bf17-6c2eb1d83173</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="9fdf3193-4fa1-4216-b0cb-532441768483" name="Local Data" type="Block"><subsheetid>35df6aff-601d-4467-bf17-6c2eb1d83173</subsheetid><loginhibit /><display x="-270" y="195" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="b0536e65-2baf-4d0e-83f6-62c1b857be7b" name="Count Number of Sections" type="SubSheetInfo"><subsheetid>3786e212-59f9-4c81-9cb5-983a56b8bd21</subsheetid><narrative>Returns the total number of sections in the document.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="91c86797-aa7b-4bb2-8631-4e5b088adcfa" name="Start" type="Start"><subsheetid>3786e212-59f9-4c81-9cb5-983a56b8bd21</subsheetid><loginhibit /><preconditions><condition narrative="The Word VBO is initialised and a Word instance has been created/attached to" /></preconditions><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The handle to the Word instance in which the document is open" stage="handle" /><input type="text" name="documentname" narrative="The name of the document for which the body text is required" stage="documentname" /></inputs><onsuccess>83377d49-80ef-4211-b89b-0dfe65cd68ab</onsuccess></stage><stage stageid="839721ee-f52c-4e16-b175-d897fa9a8e2c" name="End" type="End"><subsheetid>3786e212-59f9-4c81-9cb5-983a56b8bd21</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="number" name="Result" narrative="The number of sections contained in the document." stage="Result" /></outputs></stage><stage stageid="83377d49-80ef-4211-b89b-0dfe65cd68ab" name="CheckInstanceHandle" type="SubSheet"><subsheetid>3786e212-59f9-4c81-9cb5-983a56b8bd21</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>765d8e06-21b9-4e48-804f-a76bcccdc697</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="765d8e06-21b9-4e48-804f-a76bcccdc697" name="Count Number of Sections" type="Code"><subsheetid>3786e212-59f9-4c81-9cb5-983a56b8bd21</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /></inputs><outputs><output type="text" name="result" stage="Result" /></outputs><onsuccess>839721ee-f52c-4e16-b175-d897fa9a8e2c</onsuccess><code><![CDATA[
Dim doc as Object = GetDocument(handle, documentname)
result = doc.Sections.Count

doc = Nothing
]]></code></stage><stage stageid="d05947ef-cda5-4e05-80af-a2af5d4612ee" name="handle" type="Data"><subsheetid>3786e212-59f9-4c81-9cb5-983a56b8bd21</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="8c54336c-5baf-4334-b25b-5f9742399e11" name="documentname" type="Data"><subsheetid>3786e212-59f9-4c81-9cb5-983a56b8bd21</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fc9b47dd-f7f4-4d7c-94f7-48f5d51adf2f" name="Result" type="Data"><subsheetid>3786e212-59f9-4c81-9cb5-983a56b8bd21</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d570be50-f712-46b0-85e6-337d177211bf" name="Input" type="Block"><subsheetid>3786e212-59f9-4c81-9cb5-983a56b8bd21</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="87c3d115-f96a-4c25-a6e0-6158c966d3f7" name="Output" type="Block"><subsheetid>3786e212-59f9-4c81-9cb5-983a56b8bd21</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="54fe6de1-f568-4f97-a143-27d5ccde234c" name="Local Data" type="Block"><subsheetid>3786e212-59f9-4c81-9cb5-983a56b8bd21</subsheetid><loginhibit /><display x="-270" y="135" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="727fae13-32c8-4685-971c-ef967930bb56" name="CheckInstanceHandle" type="SubSheet"><subsheetid>35df6aff-601d-4467-bf17-6c2eb1d83173</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" expr="[handle]" /></inputs><onsuccess>04c031b9-e485-4a0d-9d04-daa7b745d0bc</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="ee5f100a-09f5-4504-8df4-34efe3eb6147" name="CheckInstanceHandle" type="SubSheet"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" expr="[handle]" /></inputs><onsuccess>89da9cc4-334f-4e99-9348-64fea39e45ad</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="9c8428ce-6fca-4909-bbe3-b65fca7b26be" name="Note3" type="Note"><loginhibit /><narrative>Version: 10.2.0</narrative><display x="15" y="-165" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="d09f3e88-f171-4204-9d6f-c4ec4f391439" name="Set Footer Text" type="SubSheetInfo"><subsheetid>c0375433-5935-43a0-badb-af77aab15e62</subsheetid><narrative>Sets the text value for  the specified footer</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d4796579-3ac5-4df3-ae09-c60de416c0ac" name="End" type="End"><subsheetid>c0375433-5935-43a0-badb-af77aab15e62</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Success" narrative="A Flag indicating the success or failure of the action." stage="success" /><output type="text" name="Error Message" narrative="If an error was encountered, this should contain additional information." stage="error message" /></outputs></stage><stage stageid="86436238-6be7-4bce-a205-670093e50a41" name="section" type="Data"><subsheetid>c0375433-5935-43a0-badb-af77aab15e62</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="fbe6726e-41e8-45b6-a132-c3dd2baa0ed3" name="footer" type="Data"><subsheetid>c0375433-5935-43a0-badb-af77aab15e62</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="54eb1914-e0fc-4061-adba-66b4ab83485f" name="handle" type="Data"><subsheetid>c0375433-5935-43a0-badb-af77aab15e62</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f75f1f1f-882f-4d26-aaf2-4d91a0a20c40" name="document name" type="Data"><subsheetid>c0375433-5935-43a0-badb-af77aab15e62</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff236b1e-d2c5-47b8-8516-95829cc18f16" name="Set FooterText" type="Code"><subsheetid>c0375433-5935-43a0-badb-af77aab15e62</subsheetid><loginhibit /><display x="15" y="15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="number" name="section" expr="[section]" /><input type="number" name="footer" expr="[footer]" /><input type="text" name="footer_text" expr="[footer text]" /></inputs><outputs><output type="flag" name="success" stage="success" /><output type="text" name="error_message" stage="error message" /></outputs><onsuccess>d4796579-3ac5-4df3-ae09-c60de416c0ac</onsuccess><code><![CDATA[Dim d As Object = GetDocument(handle,document_name)
Dim s As Object = Nothing
Dim f As Object = Nothing
Dim r As Object = Nothing

success = True
error_message = ""

Try
	s = d.Sections(section)
	f = s.Footers(footer)
	r = f.Range
	r.End = r.End - 1
	r.text = footer_text

Catch ex As Exception
	success = false
	error_message = ex.Message
	
Finally
	d = Nothing
	s = Nothing
	f = Nothing
	r = Nothing

End try]]></code></stage><stage stageid="b90182f4-6dc5-451e-b079-09f28c9ab45b" name="Start" type="Start"><subsheetid>c0375433-5935-43a0-badb-af77aab15e62</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="An integer value that identifies the instance of Word that contains the specific document." stage="handle" /><input type="text" name="document name" narrative="The name of the document." stage="document name" /><input type="number" name="section" narrative="The number of the section to get the footer information from. Default value is 1." stage="section" /><input type="number" name="footer" narrative="An integer value between 1 and 3, inclusive. 1 = Returns the header or footer on all pages other than the first page of a document or section. 2 = Returns the first header or footer in a document or section. 3 = Returns all headers or footers on even-numbered pages. Default value is 1. " stage="footer" /><input type="text" name="footer text" narrative="The text to write to the specified footer." stage="footer text" /></inputs><onsuccess>828fef2f-fbad-4bc1-98be-c8459f993a26</onsuccess></stage><stage stageid="9a150f7a-c598-4e65-b184-8ee98cd451f9" name="footer text" type="Data"><subsheetid>c0375433-5935-43a0-badb-af77aab15e62</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="828fef2f-fbad-4bc1-98be-c8459f993a26" name="CheckInstanceHandle" type="SubSheet"><subsheetid>c0375433-5935-43a0-badb-af77aab15e62</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" expr="[handle]" /></inputs><onsuccess>ff236b1e-d2c5-47b8-8516-95829cc18f16</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="d2934f4e-0152-4eed-9874-b1310542de86" name="success" type="Data"><subsheetid>c0375433-5935-43a0-badb-af77aab15e62</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1b30932b-c961-45eb-adbb-5ed0e5773218" name="error message" type="Data"><subsheetid>c0375433-5935-43a0-badb-af77aab15e62</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c3734454-913d-48f2-9fbf-54aa73b2f101" name="Set Header Text" type="SubSheetInfo"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><narrative>Set the value of the specified section header.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ad00a21a-909f-4b7b-81a6-40710e1f8730" name="End" type="End"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" narrative="A flag indicating the success or failure of the action." stage="success" /><output type="text" name="Error Message" narrative="If an error is encountered, this may contain further information." stage="error message" /></outputs></stage><stage stageid="e682a629-bd63-4181-9ba6-bffb364e57fe" name="section" type="Data"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="104617dd-3834-4d2d-a1dd-f43b8f232e50" name="handle" type="Data"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2d498a0e-c3ef-41a6-befd-03c7d5af3f99" name="document name" type="Data"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b8d3b86-de35-4529-8695-ddb2b0a11b5c" name="Set Header Text" type="Code"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><loginhibit /><display x="15" y="30" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="number" name="section" expr="[section]" /><input type="number" name="header" expr="[header]" /><input type="text" name="header_text" expr="[header text]" /></inputs><outputs><output type="flag" name="success" stage="success" /><output type="text" name="error_message" stage="error message" /></outputs><onsuccess>ad00a21a-909f-4b7b-81a6-40710e1f8730</onsuccess><code><![CDATA[Dim d As Object = GetDocument(handle,document_name)
Dim s As Object = Nothing
Dim h As Object = Nothing
Dim r As Object = Nothing

success = True
error_message = ""

Try
	s = d.Sections(section)
	h = s.Headers(header)
	r = h.Range
	r.End = r.End - 1
	r.text = header_text

Catch ex As Exception
	success = False
	error_message = ex.Message

Finally
	d = Nothing
	s = Nothing
	h = Nothing
	r = Nothing
End try]]></code></stage><stage stageid="3355d10d-7eb3-4d46-8dc8-ecd8958240ed" name="Start" type="Start"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="handle" narrative="An integer value that identifies the instance of Word that contains the specific document." stage="handle" /><input type="text" name="document name" narrative="The name of the document." stage="document name" /><input type="number" name="section" narrative="The number of the section to get the header information from. Default value is 1." stage="section" /><input type="number" name="header" narrative="An integer value between 1 and 3, inclusive. 1 = Returns the header or footer on all pages other than the first page of a document or section. 2 = Returns the first header or footer in a document or section. 3 = Returns all headers or footers on even-numbered pages. Default value is 1. " stage="header" /><input type="text" name="header text" narrative="The text to write to the specified header." stage="header text" /></inputs><onsuccess>4596438c-6e44-4107-aba8-2813bb99afc0</onsuccess></stage><stage stageid="3bf47893-6539-4c53-b878-c4f346e969a7" name="header text" type="Data"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="90ec382a-4bbb-4dcb-8cb3-054a6a4be5db" name="header" type="Data"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="0007f600-0a35-4def-88a5-b7f67cee2940" name="Input" type="Block"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f42dd729-3384-4de4-b040-25c88e62a6be" name="Output" type="Block"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><loginhibit /><display x="-270" y="150" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="d007fe5a-b86e-4bd0-b2e5-7a6ceca79b3f" name="Local Data" type="Block"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><loginhibit /><display x="-270" y="255" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="4596438c-6e44-4107-aba8-2813bb99afc0" name="CheckInstanceHandle" type="SubSheet"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" expr="[handle]" /></inputs><onsuccess>8b8d3b86-de35-4529-8695-ddb2b0a11b5c</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="26158bbc-7571-4899-bc6c-d1aa07f939eb" name="success" type="Data"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><display x="-195" y="180" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="88ebb900-6679-4c49-84f9-a984c626b472" name="error message" type="Data"><subsheetid>1c1bb115-2f4a-4a15-a343-2c5a47e2fddf</subsheetid><display x="-195" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cce0d4b7-19ca-4d5c-b5c2-ec8be1bf00e2" name="Get Line Count" type="SubSheetInfo"><subsheetid>ee6a025a-d632-4fcc-9710-6e6255476dab</subsheetid><narrative>Returns the number of lines in the document.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="05f03517-a5f5-4ad4-8a10-b836c5b83a84" name="End" type="End"><subsheetid>ee6a025a-d632-4fcc-9710-6e6255476dab</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="number" name="Line Count" narrative="The number of lines in the specified document." stage="Line Count" /></outputs></stage><stage stageid="a52887c6-f58c-4b69-a55f-0f966ea45332" name="Get Line Count" type="Code"><subsheetid>ee6a025a-d632-4fcc-9710-6e6255476dab</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="flag" name="includeFootnotesEndnotes" expr="[Include Footnotes and Endnotes]" /></inputs><outputs><output type="number" name="lineCount" stage="Line Count" /></outputs><onsuccess>05f03517-a5f5-4ad4-8a10-b836c5b83a84</onsuccess><code><![CDATA[' Declare object for code use
Dim doc as Object = GetDocument(handle,document_name)

' Returns the number of lines in the document.
lineCount = doc.ComputeStatistics(1, includeFootnotesEndnotes)
]]></code></stage><stage stageid="615ea52f-f6c8-468c-be3c-3f2a93811a96" name="handle" type="Data"><subsheetid>ee6a025a-d632-4fcc-9710-6e6255476dab</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb7d08e4-2039-4894-879c-a5459950f357" name="Start" type="Start"><subsheetid>ee6a025a-d632-4fcc-9710-6e6255476dab</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The unique numeric identifier of the instance of Word." stage="handle" /><input type="text" name="document name" narrative="The name of the document." stage="document name" /><input type="flag" name="Include Footnotes and Endnotes" narrative="A Flag indicating whether any footnote or endnote pages should also be considered. Default value is False." stage="Include Footnotes and Endnotes" /></inputs><onsuccess>02cbd4f4-71b8-47c0-8470-73f3a5287e52</onsuccess></stage><stage stageid="a72bee20-6e90-48cd-8b1a-899eb36bb3f7" name="document name" type="Data"><subsheetid>ee6a025a-d632-4fcc-9710-6e6255476dab</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="02cbd4f4-71b8-47c0-8470-73f3a5287e52" name="CheckInstanceHandle" type="SubSheet"><subsheetid>ee6a025a-d632-4fcc-9710-6e6255476dab</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="number" name="handle" friendlyname="handle" expr="[handle]" /></inputs><onsuccess>a52887c6-f58c-4b69-a55f-0f966ea45332</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="ae22210b-91c0-4803-9a35-7f66086c4394" name="Line Count" type="Data"><subsheetid>ee6a025a-d632-4fcc-9710-6e6255476dab</subsheetid><display x="-195" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8a929dc-c78f-47f5-ab59-80c448a3683c" name="Input" type="Block"><subsheetid>ee6a025a-d632-4fcc-9710-6e6255476dab</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="32a8672a-a382-4a4e-95b3-b2f3531e2e0f" name="Output" type="Block"><subsheetid>ee6a025a-d632-4fcc-9710-6e6255476dab</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="45a56b03-8558-49e3-9005-e71865267f9a" name="Include Footnotes and Endnotes" type="Data"><subsheetid>ee6a025a-d632-4fcc-9710-6e6255476dab</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="b3eb7330-dcd9-4eac-9a44-fe983ad294e2" name="Get Page Count" type="SubSheetInfo"><subsheetid>e76a41f5-2658-4c27-b0b4-f82423f49e90</subsheetid><narrative>Returns the number of pages in the document.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0a38b6fc-5f2e-4cae-80e0-8e6ed3c82e00" name="End" type="End"><subsheetid>e76a41f5-2658-4c27-b0b4-f82423f49e90</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="number" name="Page Count" narrative="The number of pages in the specified document." stage="Page Count" /></outputs></stage><stage stageid="428ae6b1-87ab-48b1-8813-1a1b7673b7c1" name="Get Page Count" type="Code"><subsheetid>e76a41f5-2658-4c27-b0b4-f82423f49e90</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="flag" name="includeFootnotesEndnotes" expr="[Include Footnotes and Endnotes]" /></inputs><outputs><output type="number" name="pageCount" stage="Page Count" /></outputs><onsuccess>0a38b6fc-5f2e-4cae-80e0-8e6ed3c82e00</onsuccess><code><![CDATA[' Declare object for code use
Dim doc as Object = GetDocument(handle,document_name)

' Returns the number of pages in the document.
pageCount = doc.ComputeStatistics(2, includeFootnotesEndnotes)
]]></code></stage><stage stageid="f1c4d012-7a3e-42e0-a1cd-1c0eacfcc21b" name="handle" type="Data"><subsheetid>e76a41f5-2658-4c27-b0b4-f82423f49e90</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="326ebd0a-4b2f-496c-a778-a260693d4eca" name="Start" type="Start"><subsheetid>e76a41f5-2658-4c27-b0b4-f82423f49e90</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The unique numeric identifier of the instance of Word." stage="handle" /><input type="text" name="document name" narrative="The name of the document." stage="document name" /><input type="flag" name="Include Footnotes and Endnotes" narrative="A Flag indicating whether any footnote or endnote pages should also be considered. Default value is False." stage="Include Footnotes and Endnotes" /></inputs><onsuccess>49580068-6d10-4663-a31c-f7f770db18eb</onsuccess></stage><stage stageid="28dce0f5-9fa2-4eb6-b231-80a8edc94e96" name="document name" type="Data"><subsheetid>e76a41f5-2658-4c27-b0b4-f82423f49e90</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="49580068-6d10-4663-a31c-f7f770db18eb" name="CheckInstanceHandle" type="SubSheet"><subsheetid>e76a41f5-2658-4c27-b0b4-f82423f49e90</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="number" name="handle" friendlyname="handle" expr="[handle]" /></inputs><onsuccess>428ae6b1-87ab-48b1-8813-1a1b7673b7c1</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="98465169-eee4-40fc-8090-ad079f1f2b02" name="Page Count" type="Data"><subsheetid>e76a41f5-2658-4c27-b0b4-f82423f49e90</subsheetid><display x="-195" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="53d991b4-725c-482a-bd60-8eea1b5c412b" name="Input" type="Block"><subsheetid>e76a41f5-2658-4c27-b0b4-f82423f49e90</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c38a6311-3d20-4ebb-b6fa-0dfa337d43d4" name="Output" type="Block"><subsheetid>e76a41f5-2658-4c27-b0b4-f82423f49e90</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="c75bef9d-f8a1-4d76-a3fb-83b2628ce61d" name="Include Footnotes and Endnotes" type="Data"><subsheetid>e76a41f5-2658-4c27-b0b4-f82423f49e90</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c42862f0-1d6f-4129-80ab-9b55fbbb61de" name="Get Paragraph Count" type="SubSheetInfo"><subsheetid>4e5affe2-02b0-4ec4-a554-cd09ff62edb3</subsheetid><narrative>Returns the number of paragraphs in the document.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c62001ac-bc05-4617-8e19-de68d6b235d8" name="End" type="End"><subsheetid>4e5affe2-02b0-4ec4-a554-cd09ff62edb3</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="number" name="Paragraph Count" narrative="The number of paragraphs in the specified document." stage="Paragraph Count" /></outputs></stage><stage stageid="74ef4fd3-eb5d-49d2-8c15-8e4d6a36053c" name="Get Paragraph Count" type="Code"><subsheetid>4e5affe2-02b0-4ec4-a554-cd09ff62edb3</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="flag" name="includeFootnotesEndnotes" expr="[Include Footnotes and Endnotes]" /></inputs><outputs><output type="number" name="paragraphCount" stage="Paragraph Count" /></outputs><onsuccess>c62001ac-bc05-4617-8e19-de68d6b235d8</onsuccess><code><![CDATA[' Declare object for code use
Dim doc as Object = GetDocument(handle,document_name)

' Returns the number of paragraphs in the document.
paragraphCount = doc.ComputeStatistics(4, includeFootnotesEndnotes)
]]></code></stage><stage stageid="c29a9b3e-c1d6-43fd-8d02-372a3122f1e3" name="handle" type="Data"><subsheetid>4e5affe2-02b0-4ec4-a554-cd09ff62edb3</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f22656bf-5763-44ac-a55d-65f6b27eb23d" name="Start" type="Start"><subsheetid>4e5affe2-02b0-4ec4-a554-cd09ff62edb3</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The unique numeric identifier of the instance of Word." stage="handle" /><input type="text" name="document name" narrative="The name of the document." stage="document name" /><input type="flag" name="Include Footnotes and Endnotes" narrative="A Flag indicating whether any footnote or endnote pages should also be considered. Default value is False." stage="Include Footnotes and Endnotes" /></inputs><onsuccess>8326d8f8-3f00-41f8-847b-bc9a1ac0a7af</onsuccess></stage><stage stageid="c05bba7f-4e81-4e89-b7f1-f34a86951730" name="document name" type="Data"><subsheetid>4e5affe2-02b0-4ec4-a554-cd09ff62edb3</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8326d8f8-3f00-41f8-847b-bc9a1ac0a7af" name="CheckInstanceHandle" type="SubSheet"><subsheetid>4e5affe2-02b0-4ec4-a554-cd09ff62edb3</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="number" name="handle" friendlyname="handle" expr="[handle]" /></inputs><onsuccess>74ef4fd3-eb5d-49d2-8c15-8e4d6a36053c</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="fd2f03c4-8241-4a7b-add1-6bbb08588545" name="Paragraph Count" type="Data"><subsheetid>4e5affe2-02b0-4ec4-a554-cd09ff62edb3</subsheetid><display x="-195" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="532142c2-5edc-4edf-be39-4aeeae0f8294" name="Input" type="Block"><subsheetid>4e5affe2-02b0-4ec4-a554-cd09ff62edb3</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="87cf7ec0-e4e1-45a5-8b78-c6e8eb2ed02b" name="Output" type="Block"><subsheetid>4e5affe2-02b0-4ec4-a554-cd09ff62edb3</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="44b68f4f-31ea-4f07-8a20-c88b44930750" name="Include Footnotes and Endnotes" type="Data"><subsheetid>4e5affe2-02b0-4ec4-a554-cd09ff62edb3</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="09d8ede8-f8ce-499d-8e9d-f1ee1b609962" name="Get Word Count" type="SubSheetInfo"><subsheetid>cdfc19fa-9566-49d2-9e46-9060be255451</subsheetid><narrative>Returns the number of words in the document.

Note: For large documents, this action could take some time to complete.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="30c2ae0d-fc4c-474b-89bd-d36826a5e056" name="End" type="End"><subsheetid>cdfc19fa-9566-49d2-9e46-9060be255451</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="number" name="Word Count" narrative="The number of words in the specified document." stage="Word Count" /></outputs></stage><stage stageid="7d88433c-a166-4964-a569-52f73dfa0a49" name="Get Word Count" type="Code"><subsheetid>cdfc19fa-9566-49d2-9e46-9060be255451</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="flag" name="includeFootnotesEndnotes" expr="[Include Footnotes and Endnotes]" /></inputs><outputs><output type="number" name="wordCount" stage="Word Count" /></outputs><onsuccess>30c2ae0d-fc4c-474b-89bd-d36826a5e056</onsuccess><code><![CDATA[' Declare object for code use
Dim doc as Object = GetDocument(handle,document_name)

' Returns the number of words in the document.
wordCount = doc.ComputeStatistics(0, includeFootnotesEndnotes)
]]></code></stage><stage stageid="85e8cf99-70ed-4ec9-a425-c8cc04f99f2c" name="handle" type="Data"><subsheetid>cdfc19fa-9566-49d2-9e46-9060be255451</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb0c56a7-eef0-4111-9db5-45550c95e200" name="Start" type="Start"><subsheetid>cdfc19fa-9566-49d2-9e46-9060be255451</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" narrative="The unique numeric identifier of the instance of Word." stage="handle" /><input type="text" name="document name" narrative="The name of the document." stage="document name" /><input type="flag" name="Include Footnotes and Endnotes" narrative="A Flag indicating whether any footnote or endnote pages should also be considered. Default value is False." stage="Include Footnotes and Endnotes" /></inputs><onsuccess>32679bd6-f7d3-4c92-ba11-7a9dd797c074</onsuccess></stage><stage stageid="ac38e5b7-aa13-4b12-b45d-923fc6b83459" name="document name" type="Data"><subsheetid>cdfc19fa-9566-49d2-9e46-9060be255451</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32679bd6-f7d3-4c92-ba11-7a9dd797c074" name="CheckInstanceHandle" type="SubSheet"><subsheetid>cdfc19fa-9566-49d2-9e46-9060be255451</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="number" name="handle" friendlyname="handle" expr="[handle]" /></inputs><onsuccess>7d88433c-a166-4964-a569-52f73dfa0a49</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="c37a5375-7a4d-4d3d-8d9e-263f3397d4f1" name="Word Count" type="Data"><subsheetid>cdfc19fa-9566-49d2-9e46-9060be255451</subsheetid><display x="-195" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1b827aa-6f31-4474-8b0b-80f720739c51" name="Input" type="Block"><subsheetid>cdfc19fa-9566-49d2-9e46-9060be255451</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f0a3b35d-662a-4d26-abd6-ab57eaf65b11" name="Output" type="Block"><subsheetid>cdfc19fa-9566-49d2-9e46-9060be255451</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="aea0d112-175f-4c1a-a561-b4ce170d7d80" name="Include Footnotes and Endnotes" type="Data"><subsheetid>cdfc19fa-9566-49d2-9e46-9060be255451</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="05b941e7-9c11-43f5-925b-3ac9429ed377" name="Compare Documents" type="SubSheetInfo"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><narrative>Compares two documents and creates a new document that contains the differences between the two documents, marked using tracked changes.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="89a6fc65-4bc2-48af-a16b-29f5e73c2ef6" name="handle" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><display x="-315" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ed189f35-d947-4b14-9b76-7a7e4fb4d474" name="Result Document Path" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><narrative>Required. Path of the new document that will contain the comparison results</narrative><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="36e61f86-2301-46fe-8e35-9599c50ae928" name="Start" type="Start"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="OriginalDocument" narrative="Required. Specifies the path and file name of the original document." stage="OriginalDocument" /><input type="text" name="RevisedDocument" narrative="Required. Specifies the path and file name of the revised document to which to compare the original document." stage="RevisedDocument" /><input type="text" name="Result Document Path" narrative="Required. Path of the new document that will contain the comparison results" stage="Result Document Path" /><input type="text" name="Destination" narrative="Optional. Specifies whether to create a new file or whether to mark the differences between the two documents in the original document or in the revised document. Default value is 2. Refer https://learn.microsoft.com/en-us/office/vba/api/word.wdcomparedestination for more." stage="Destination" /><input type="text" name="Granularity" narrative="Optional. Specifies whether changes are tracked by character or by word. 0 - Tracks character-level changes. 1 - Tracks word-level changes. Default value is 1." stage="Granularity" /><input type="flag" name="CompareFormatting" narrative="Optional.  Specifies whether to mark differences in formatting between the two documents. Default value is True." stage="CompareFormatting" /><input type="flag" name="CompareCaseChanges" narrative="Optional. Specifies whether to mark differences in case between the two documents. Default value is True." stage="CompareCaseChanges" /><input type="flag" name="CompareWhitespace" narrative="Optional. Specifies whether to mark differences in white space, such as paragraphs or spaces, between the two documents. Default value is True." stage="CompareWhitespace" /><input type="flag" name="CompareTables" narrative="Optional. Specifies whether to compare the differences in data contained in tables between the two documents. Default value is True." stage="CompareTables" /><input type="flag" name="CompareHeaders" narrative="Optional. Specifies whether to compare differences in headers and footers between the two documents. Default value is True." stage="CompareHeaders" /><input type="flag" name="CompareFootnotes" narrative="Optional. Specifies whether to compare differences in footnotes and endnotes between the two documents. Default value is True." stage="CompareFootnotes" /><input type="flag" name="CompareTextboxes" narrative="Optional. Specifies whether to compare differences in the data contained within text boxes between the two documents. Default value is True." stage="CompareTextboxes" /><input type="flag" name="CompareFields" narrative="Optional. Specifies whether to compare differences in fields between the two documents. Default value is True." stage="CompareFields" /><input type="flag" name="CompareComments" narrative="Optional. Specifies whether to compare differences in comments between the two documents. Default value is True." stage="CompareComments" /><input type="flag" name="CompareMoves" narrative="Optional. Specifies whether to compare differences in moves between the two documents. Default value is True." stage="CompareMoves" /><input type="text" name="RevisedAuthor" narrative="Optional. Specifies the name of the person to whom to attribute changes when comparing the two documents." stage="RevisedAuthor" /><input type="flag" name="IgnoreAllComparisonWarnings" narrative="Optional. Specifies whether to ignore warnings when comparing the two documents. Default value is True." stage="IgnoreAllComparisonWarnings" /></inputs><onsuccess>38a3a84c-3cbf-4119-86a8-7620d72c3d5e</onsuccess></stage><stage stageid="e87d0296-afaa-4ed4-9d3b-af24247cfcec" name="End" type="End"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><display x="15" y="30" /></stage><stage stageid="53072016-a846-4fc6-914d-785367b1fd82" name="OriginalDocument" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Required. Specifies the path and file name of the original document.</narrative><display x="-315" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59577ed4-7395-415e-be62-893a1831209e" name="RevisedDocument" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Required. Specifies the path and file name of the revised document to which to compare the original document.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b913d6b-2e25-40e9-9ca1-9aa1c94ca139" name="Destination" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Optional. Specifies whether to create a new file or whether to mark the differences between the two documents in the original document or in the revised document. Default value is 2. Refer https://learn.microsoft.com/en-us/office/vba/api/word.wdcomparedestination for more.</narrative><display x="-195" y="225" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">2</initialvalue><private /><alwaysinit /></stage><stage stageid="0ff7f301-b6d8-46da-9f41-6738aa0aab5f" name="Granularity" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Optional. Specifies whether changes are tracked by character or by word. 0 - Tracks character-level changes. 1 - Tracks word-level changes. Default value is 1.</narrative><display x="-315" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">1</initialvalue><private /><alwaysinit /></stage><stage stageid="a866b0a5-d111-4298-911d-c0b427c6d9ca" name="CompareFormatting" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Optional.  Specifies whether to mark differences in formatting between the two documents. Default value is True.</narrative><display x="-315" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="5ff63961-57e6-4576-8f3f-bd7d562512e6" name="CompareCaseChanges" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Optional. Specifies whether to mark differences in case between the two documents. Default value is True.</narrative><display x="-195" y="45" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="5f99898e-42a1-431d-9fdc-9458ccc529ab" name="CompareWhitespace" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Optional. Specifies whether to mark differences in white space, such as paragraphs or spaces, between the two documents. Default value is True.</narrative><display x="-195" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="b3766b66-2775-47b8-93c2-26ad12b7ddd1" name="CompareTables" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Optional. Specifies whether to compare the differences in data contained in tables between the two documents. Default value is True.</narrative><display x="-315" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="a4520566-3ed7-4654-8835-64abbdeb62e7" name="CompareHeaders" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Optional. Specifies whether to compare differences in headers and footers between the two documents. Default value is True.</narrative><display x="-315" y="135" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="ec2e3fbd-f427-4c61-b03a-e845382ad3ad" name="CompareFootnotes" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Optional. Specifies whether to compare differences in footnotes and endnotes between the two documents. Default value is True.</narrative><display x="-195" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="b22cab99-99f5-4778-8505-39942e1c154c" name="CompareTextboxes" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Optional. Specifies whether to compare differences in the data contained within text boxes between the two documents. Default value is True.</narrative><display x="-195" y="135" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="961c0c73-bc60-4a50-879d-abb1c57541df" name="CompareFields" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Optional. Specifies whether to compare differences in fields between the two documents. Default value is True.</narrative><display x="-315" y="165" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="785bdb94-1207-4253-8a79-6a3c3c27b1c0" name="CompareComments" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Optional. Specifies whether to compare differences in comments between the two documents. Default value is True.</narrative><display x="-315" y="195" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4e1af875-da4f-4ccc-aa21-853225a281f8" name="CompareMoves" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Optional. Specifies whether to compare differences in moves between the two documents. Default value is True.</narrative><display x="-195" y="165" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="8d17c08c-dc85-45e7-b423-0fae65f60716" name="RevisedAuthor" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Optional. Specifies the name of the person to whom to attribute changes when comparing the two documents.</narrative><display x="-195" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c66d1c46-db9b-4a01-9057-10fc844ba2d0" name="IgnoreAllComparisonWarnings" type="Data"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Optional. Specifies whether to ignore warnings when comparing the two documents. Default value is True.</narrative><display x="-315" y="225" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="38a3a84c-3cbf-4119-86a8-7620d72c3d5e" name="Compare Docs" type="Code"><subsheetid>67aea748-ff23-498c-ba27-f20276325aba</subsheetid><loginhibit /><narrative>Compares two documents and returns a Document object that represents the document that contains the differences between the two documents, marked using tracked changes.</narrative><display x="15" y="-45" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="OriginalDocument" expr="[OriginalDocument]" /><input type="text" name="RevisedDocument" expr="[RevisedDocument]" /><input type="text" name="Destination" expr="[Destination]" /><input type="text" name="Granularity" expr="[Granularity]" /><input type="flag" name="CompareFormatting" expr="[CompareFormatting]" /><input type="flag" name="CompareCaseChanges" expr="[CompareCaseChanges]" /><input type="flag" name="CompareWhitespace" expr="[CompareWhitespace]" /><input type="flag" name="CompareTables" expr="[CompareTables]" /><input type="flag" name="CompareHeaders" expr="[CompareHeaders]" /><input type="flag" name="CompareFootnotes" expr="[CompareFootnotes]" /><input type="flag" name="CompareTextboxes" expr="[CompareTextboxes]" /><input type="flag" name="CompareFields" expr="[CompareFields]" /><input type="flag" name="CompareComments" expr="[CompareComments]" /><input type="flag" name="CompareMoves" expr="[CompareMoves]" /><input type="text" name="RevisedAuthor" expr="[RevisedAuthor]" /><input type="flag" name="IgnoreAllComparisonWarnings" expr="[IgnoreAllComparisonWarnings]" /><input type="text" name="ResultDocumentPath" expr="[Result Document Path]" /></inputs><onsuccess>e87d0296-afaa-4ed4-9d3b-af24247cfcec</onsuccess><code><![CDATA[Dim doc1 as Object = GetInstance(handle).Documents.Open(OriginalDocument)
Dim doc2 as Object = GetInstance(handle).Documents.Open(RevisedDocument)
Dim doc3 as Object = GetInstance(handle).CompareDocuments(doc1,doc2,Destination,Granularity,CompareFormatting,CompareCaseChanges,CompareWhitespace,CompareTables,CompareHeaders,CompareFootnotes,CompareTextboxes,CompareFields,CompareComments,CompareMoves,RevisedAuthor,IgnoreAllComparisonWarnings)
doc3.SaveAs(ResultDocumentPath)
doc1.Saved = True
doc1.Close()
doc2.Saved = True
doc2.Close()
doc3.Saved = True
doc3.Close()]]></code></stage><stage stageid="d047714a-90aa-4c1c-98a6-26edee6f9946" name="Merge Document" type="SubSheetInfo"><subsheetid>a3c88684-f79d-47b3-93d0-e7f2c6cbd3c8</subsheetid><narrative>Merges the provided list of documents</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b8507b1d-a6a9-4f43-bb17-427c6fc4ddd9" name="End" type="End"><subsheetid>a3c88684-f79d-47b3-93d0-e7f2c6cbd3c8</subsheetid><loginhibit /><display x="15" y="165" /></stage><stage stageid="8d6db56a-8e69-4562-9a8f-c9fc49d87c86" name="Start" type="Start"><subsheetid>a3c88684-f79d-47b3-93d0-e7f2c6cbd3c8</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /><input type="collection" name="filenames" narrative="List of word document filepaths to be merged as a single document" stage="filenames" /><input type="text" name="merged_filepath" narrative="Filepath of the merged document" stage="merged_filepath" /></inputs><onsuccess>77348387-51a8-416a-b610-380f505e099e</onsuccess></stage><stage stageid="77348387-51a8-416a-b610-380f505e099e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>a3c88684-f79d-47b3-93d0-e7f2c6cbd3c8</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>eb8b7478-f2fc-427a-b50b-87262e58deae</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="7c509373-9f82-44a2-afdc-c00ecccc8127" name="Merge File" type="Code"><subsheetid>a3c88684-f79d-47b3-93d0-e7f2c6cbd3c8</subsheetid><loginhibit /><display x="15" y="120" w="120" h="30" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="merged_filepath" expr="[merged_filepath]" /><input type="collection" name="filenames" expr="[filenames]" /></inputs><onsuccess>b8507b1d-a6a9-4f43-bb17-427c6fc4ddd9</onsuccess><code><![CDATA['Create the destination file
Dim d as Object = GetInstance(handle).Documents.Add()
Dim w As Object = d.Application
d.Activate()

Try

'Merge Douments
For Each row As DataRow In filenames.Rows
	GetInstance(handle).Selection.InsertFile(row.Item("fullpath"))
Next row

'Save and Close the merged file
d.SaveAs(merged_filepath)
d.Close(True)

Catch ex As Exception
	Throw ex
Finally
	d = Nothing
	w = NOthing
End try
]]></code></stage><stage stageid="635bae00-bd27-45d0-83f4-1bb1d1c32ebc" name="CheckFileExists" type="SubSheet"><subsheetid>a3c88684-f79d-47b3-93d0-e7f2c6cbd3c8</subsheetid><loginhibit /><display x="15" y="30" w="120" h="30" /><inputs><input type="text" name="filename" expr="[filenames.fullpath]" /></inputs><onsuccess>cc8b6a85-db02-4250-b9e5-ec3cac1b7799</onsuccess><processid>b5d196b4-36af-4e29-991f-b6985b43dce2</processid></stage><stage stageid="41971976-190c-42f0-9916-46e0e329a238" name="merged_filepath" type="Data"><subsheetid>a3c88684-f79d-47b3-93d0-e7f2c6cbd3c8</subsheetid><loginhibit /><display x="-180" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd03d036-e27a-4acf-a7b2-d993a130c461" name="filenames" type="Collection"><subsheetid>a3c88684-f79d-47b3-93d0-e7f2c6cbd3c8</subsheetid><loginhibit /><display x="-180" y="15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="fullpath" type="text" /></collectioninfo></stage><stage stageid="eb8b7478-f2fc-427a-b50b-87262e58deae" name="Loop files" type="LoopStart"><subsheetid>a3c88684-f79d-47b3-93d0-e7f2c6cbd3c8</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><onsuccess>635bae00-bd27-45d0-83f4-1bb1d1c32ebc</onsuccess><groupid>437b29ee-44b2-4322-9ecb-e900d525bdd4</groupid><looptype>ForEach</looptype><loopdata>filenames</loopdata></stage><stage stageid="cc8b6a85-db02-4250-b9e5-ec3cac1b7799" name="Loop files" type="LoopEnd"><subsheetid>a3c88684-f79d-47b3-93d0-e7f2c6cbd3c8</subsheetid><loginhibit /><display x="15" y="75" w="120" h="30" /><onsuccess>7c509373-9f82-44a2-afdc-c00ecccc8127</onsuccess><groupid>437b29ee-44b2-4322-9ecb-e900d525bdd4</groupid></stage><stage stageid="4da6e389-d425-46b2-9c5b-ea73896a5583" name="handle" type="Data"><subsheetid>a3c88684-f79d-47b3-93d0-e7f2c6cbd3c8</subsheetid><display x="-180" y="-30" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c00f8757-38f0-4b85-84f6-d9c86c23f4f2" name="Get Document Sensitivity Label Info" type="SubSheetInfo"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><narrative>Retrieves the Sensitivity Label information assigned to the specified Document.</narrative><display x="-180" y="-255" w="180" h="90" /></stage><stage stageid="75f3857d-d445-465e-bb7f-f0e15569e6fd" name="End" type="End"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><loginhibit /><display x="15" y="-105" /><outputs><output type="text" name="ActionId" narrative="A lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="ActionId" /><output type="number" name="AssignmentMethod" narrative="Indicates how the label was applied." stage="AssignmentMethod" /><output type="number" name="ContentBits" narrative="Bitmask that describes the types of content marking that should be applied to a file. CONTENT_HEADER = 0X1, CONTENT_FOOTER = 0X2, WATERMARK = 0X4, ENCRYPT = 0x8" stage="ContentBits" /><output type="flag" name="IsEnabled" narrative="Indicates whether the classification represented by this label is enabled on the document." stage="IsEnabled" /><output type="text" name="Justification" narrative="Text required during label downgrade that justifies the downgraded." stage="Justification" /><output type="text" name="LabelId" narrative="LabelId is a unique identifier for each label in an organization. It's returned as a lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="LabelId" /><output type="text" name="LabelName" narrative="Label unique name within the organization. It does not necessarily correspond to display name." stage="LabelName" /><output type="text" name="SetDate" narrative="Represents timestamp when the label was set. The date string is formatted in Extended ISO 8601 Date Format." stage="SetDate" /><output type="text" name="SiteId" narrative="SiteId is a unique identifier for each organization in Active Azure Directory. It's returned as a lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="SiteId" /></outputs></stage><stage stageid="bc944fc5-f46d-4a58-956e-b790a24e9156" name="Start" type="Start"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><loginhibit /><display x="15" y="-285" /><inputs><input type="number" name="handle" narrative="An integer value that identifies the instance of Word that contains the specific document." stage="handle" /><input type="text" name="Document Name" narrative="The name of the document." stage="document name" /></inputs><onsuccess>08ff3506-247b-4926-834c-40049bd511c9</onsuccess></stage><stage stageid="08ff3506-247b-4926-834c-40049bd511c9" name="CheckInstanceHandle" type="SubSheet"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><loginhibit /><display x="15" y="-225" w="150" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" expr="[handle]" /></inputs><onsuccess>9502541e-8fce-4193-806e-6034c719f0fb</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="377d126d-0ef5-4d1b-afbf-4c7e189926e5" name="handle" type="Data"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><display x="-180" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="9502541e-8fce-4193-806e-6034c719f0fb" name="GetDocumentSensitivityLabelInfo" type="Code"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><loginhibit /><display x="15" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[document name]" /></inputs><outputs><output type="text" name="ActionId" stage="ActionId" /><output type="number" name="AssignmentMethod" stage="AssignmentMethod" /><output type="number" name="ContentBits" stage="ContentBits" /><output type="flag" name="IsEnabled" stage="IsEnabled" /><output type="text" name="Justification" stage="Justification" /><output type="text" name="LabelId" stage="LabelId" /><output type="text" name="LabelName" stage="LabelName" /><output type="text" name="SetDate" stage="SetDate" /><output type="text" name="SiteId" stage="SiteId" /></outputs><onsuccess>75f3857d-d445-465e-bb7f-f0e15569e6fd</onsuccess><code><![CDATA[Dim d As Object = GetDocument(handle,documentname)

Dim labelInfo = d.SensitivityLabel.getlabel()
ActionId = labelInfo.ActionId
AssignmentMethod = labelInfo.AssignmentMethod
ContentBits = labelInfo.ContentBits
IsEnabled = labelInfo.IsEnabled
Justification = labelInfo.Justification
LabelId = labelInfo.LabelId
LabelName = labelInfo.LabelName
SetDate = labelInfo.SetDate
SiteId = labelInfo.SiteId
]]></code></stage><stage stageid="a2855b3f-1e62-439c-9e8a-5b77a276f069" name="Input" type="Block"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><loginhibit /><display x="-270" y="-195" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="563f8dd7-d912-4e0d-993d-35545b86b3bb" name="Local" type="Block"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><loginhibit /><display x="-270" y="-90" w="180" h="75" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="c390063b-8050-4de3-9fe0-70bccc9efe40" name="Output" type="Block"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><loginhibit /><display x="-270" y="0" w="180" h="300" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="49a694bc-8ecb-4b77-8304-d0747b9a986a" name="ActionId" type="Data"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><display x="-180" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc694f00-3ee4-41d2-b992-f40684c3aa30" name="AssignmentMethod" type="Data"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><display x="-180" y="60" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e7e497de-56aa-4e8b-81bc-8021accbd42f" name="ContentBits" type="Data"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><display x="-180" y="90" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="080e2a40-f310-4f41-834e-a17fcc7e62e0" name="IsEnabled" type="Data"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><display x="-180" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c9971368-4dba-4d80-92a3-2c9e15ba0c57" name="Justification" type="Data"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><display x="-180" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f0e4905b-683a-4d0e-9fb9-2a98d6e154ba" name="LabelId" type="Data"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><display x="-180" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3794568-e786-49f0-be83-da957887a338" name="LabelName" type="Data"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><display x="-180" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="709dd355-8d38-4e4f-8b22-53e68fea3fb0" name="SiteId" type="Data"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><display x="-180" y="270" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="95e1969a-e7c0-4509-875e-de716daaba80" name="SetDate" type="Data"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><display x="-180" y="240" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c2e5c2f9-d08c-4e10-a341-66675f0f700b" name="document name" type="Data"><subsheetid>4126974e-1c91-477d-bf40-d6b43f285a72</subsheetid><display x="-180" y="-135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5d7fdcca-5815-42bc-9e6d-1f9f36cb9c43" name="Set Document Sensitivity Label Info" type="SubSheetInfo"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><narrative>Set or override the Sensitivity Label on the specified Document. 

NOTE: In most cases, downgrading an existing Sensitivity Label requires that you specify a justification for the downgrade.</narrative><display x="-180" y="-255" w="180" h="90" /></stage><stage stageid="b1e15138-fb8a-4d00-9c8b-b177c34af1d3" name="End" type="End"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><loginhibit /><display x="60" y="-90" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Error Message" narrative="If an error was encountered, this may contain additional information about the issue." stage="Error Message" /></outputs></stage><stage stageid="1d839c24-8203-4fe9-aae2-b27a6ca192a8" name="Start" type="Start"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><loginhibit /><display x="60" y="-285" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Document Name" narrative="The name of the document to which the label should be applied. The default empty text indicates the currently active document on the specified instance." stage="document name" /><input type="text" name="LabelId" narrative="LabelId is a unique identifier for each label in an organization. It's returned as a lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="LabelId" /><input type="text" name="SiteId" narrative="SiteId is a unique identifier for each organization in Active Azure Directory. It's returned as a lower-case string in xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx format." stage="SiteId" /><input type="text" name="Justification" narrative="Optional: Text required during label downgrade that justifies the downgrade. If you are moving to a less stringent label, and you do not provide a justification, the downgrade will fail." stage="Justification" /></inputs><onsuccess>351b900c-2359-4246-b328-768fb9dc5ec4</onsuccess></stage><stage stageid="351b900c-2359-4246-b328-768fb9dc5ec4" name="CheckInstanceHandle" type="SubSheet"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><loginhibit /><display x="60" y="-225" w="120" h="30" /><inputs><input type="number" name="handle" friendlyname="handle" expr="[handle]" /></inputs><onsuccess>44931231-a27b-405e-afdb-d26725a28569</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="2e21fa19-2760-4f11-b72b-f10b52199bc9" name="handle" type="Data"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><display x="-180" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="44931231-a27b-405e-afdb-d26725a28569" name="SetDocumentSensitivityLabelInfo" type="Code"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><loginhibit /><display x="60" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[document name]" /><input type="text" name="LabelId" expr="[LabelId]" /><input type="text" name="SiteId" expr="[SiteId]" /><input type="text" name="Justification" expr="[Justification]" /></inputs><onsuccess>b1e15138-fb8a-4d00-9c8b-b177c34af1d3</onsuccess><code><![CDATA[Dim d As Object = GetDocument(handle,documentname)

Dim labelInfo = d.SensitivityLabel.CreateLabelInfo()
labelInfo.ActionId = 1 ' Priviledged/Manual
labelInfo.LabelId = LabelId
labelInfo.SiteId = SiteId
labelInfo.Justification = Justification
labelInfo.SetDate = Now()

d.SensitivityLabel.SetLabel(labelInfo, labelInfo)
]]></code></stage><stage stageid="73a4a85f-f7df-4cf8-ba91-4bbf5b8ee81f" name="Input" type="Block"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><loginhibit /><display x="-270" y="-195" w="180" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e66d8258-b960-4d68-b0c2-1f2c194f501c" name="Local" type="Block"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><loginhibit /><display x="-270" y="0" w="180" h="75" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="25540884-5dab-4de5-9d3c-34f822596de6" name="Output" type="Block"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><loginhibit /><display x="-270" y="90" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="06e22cb1-e75b-44d7-9424-34a3f801c3f2" name="Justification" type="Data"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><display x="-180" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e35c7bcb-6596-481a-91ee-9e5c703f0852" name="LabelId" type="Data"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><display x="-180" y="-105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e6c3f68-8ad2-4abd-a741-5f70ccfa955a" name="SiteId" type="Data"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><display x="-180" y="-75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94c81153-3f30-4b70-acb1-9860bf13ba48" name="Block2" type="Block"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><loginhibit /><display x="-30" y="-195" w="255" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="8338875d-09c9-4593-932c-26b24984d390" name="Recover2" type="Recover"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><loginhibit /><display x="180" y="-165" /><onsuccess>055a14e8-84df-4d2e-87f4-99188e9695a5</onsuccess></stage><stage stageid="8d45756a-9161-44cc-8176-78e8977f76e3" name="Success" type="Data"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><loginhibit /><display x="-180" y="120" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1e52e8b0-a441-4c05-80b5-fd284110d6ff" name="Error Message" type="Data"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><loginhibit /><display x="-180" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="055a14e8-84df-4d2e-87f4-99188e9695a5" name="Set Error" type="MultipleCalculation"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><loginhibit /><display x="285" y="-165" /><onsuccess>e48c7d5f-de7d-4d3d-993f-67df4bff4550</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="ExceptionDetail()" stage="Error Message" /></steps></stage><stage stageid="e48c7d5f-de7d-4d3d-993f-67df4bff4550" name="Resume2" type="Resume"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><loginhibit /><display x="285" y="-90" /><onsuccess>b1e15138-fb8a-4d00-9c8b-b177c34af1d3</onsuccess></stage><stage stageid="4254783d-e934-4891-9acf-0ba1c3fa34eb" name="document name" type="Data"><subsheetid>32b7a473-8150-4341-bc60-6111b4b7ff5c</subsheetid><display x="-180" y="-135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="f1b099e3-d6f3-4a5d-82a0-8e55b7d04d77" name="Ollama" xmlns="http://www.blueprism.co.uk/product/process"><process name="Ollama" version="1.0" bpversion="7.4.1.15931" narrative="Facilitates the sending of messages back and forth between Blue Prism and an artificially intelligent language model running in Ollama" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>6573dbcb-0823-4f8c-afe2-f67cec68b0ae</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>27</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="22eeaa62-9322-40c0-8b43-e6dcb473e60e" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6a8a920a-be20-4b84-8381-0116f8ab3d6d" type="Normal" published="True"><name>Generate Completion</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="916437e1-09d2-4514-8bab-98cea6a418b3" type="Normal" published="True"><name>Generate Chat Completion</name><view><camerax>-26</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2d038daa-074d-4475-9c86-8359f3a248a9" type="Normal" published="True"><name>Pull Model</name><view><camerax>-26</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ec7e4386-7b11-4f2d-b388-048783cf8088" type="Normal" published="True"><name>List Local Models</name><view><camerax>-26</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5ec57b8d-bb1c-41fb-abf4-9af3e3469f88" type="Normal" published="True"><name>List Running Models</name><view><camerax>-26</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="a4a5cf8d-bdb4-40cd-983c-8fb71da3145d" name="Start" type="Start"><loginhibit /><display x="-15" y="-135" /><onsuccess>545aaf01-f349-485b-b07b-f36ca30fab53</onsuccess></stage><stage stageid="545aaf01-f349-485b-b07b-f36ca30fab53" name="End" type="End"><loginhibit /><display x="-15" y="-75" /></stage><stage stageid="675149a3-8732-41eb-9cf9-589a272510e0" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="240" h="90" /><references><reference>System.dll</reference><reference>System.Net.Http.dll</reference><reference>System.Data.dll</reference><reference>System.Core.dll</reference><reference>System.Linq.dll</reference><reference>System.IO.dll</reference><reference>Newtonsoft.Json.dll</reference></references><imports><import>System</import><import>System.Net.Http</import><import>System.Data</import><import>System.Text</import><import>System.Linq</import><import>System.IO</import><import>Newtonsoft.Json</import><import>System.Collections.Generic</import></imports><language>csharp</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[// GLOBAL CONSTANTS
const Boolean STREAM_DEFAULT = false;

// MODELS
internal class ApiResponse
{
	internal Boolean Success { get; set; }
	internal string StatusCode { get; set; }
	internal DataTable Headers { get; set; }
	internal string Content { get; set; }
	internal string Error { get; set; }
	internal string RequestSummary { get; set; }
	
	internal ApiResponse()
	{
		Success = false;
		StatusCode = string.Empty;
		Headers = new DataTable();
		Headers.Columns.Add("Header", typeof(string));
		Headers.Columns.Add("Value", typeof(string));
		Content = string.Empty;
		Error = string.Empty;
		RequestSummary = string.Empty;
	}
}

internal class GenerateCompletion
{
	[JsonProperty("model")]
	internal string Model { get; set; }
	
	[JsonProperty("prompt")]
	internal string Prompt { get; set; }
	
	[JsonProperty("stream")]
	internal Boolean Stream { get; set; }
	
	internal GenerateCompletion(string model, string prompt, Boolean stream = STREAM_DEFAULT)
	{
		Model = model;
		Prompt = prompt;
		Stream = stream;
	}
}

internal class GenerateChatCompletionRequest
{
	[JsonProperty("model")]
	internal string Model { get; set; }
	
	[JsonProperty("messages")]
	internal List<Message> Messages { get; set; }
	
	[JsonProperty("stream")]
	internal Boolean Stream { get; set; }
	
	internal GenerateChatCompletionRequest(string model, Boolean stream = STREAM_DEFAULT)
	{
		Model = model;
		Messages = new List<Message>();
		Stream = stream;
	}
}

internal class Message
{
	[JsonProperty("role")]
	internal string Role { get; set; }
	
	[JsonProperty("content")]
	internal string Content { get; set; }
	
	internal Message(string role, string content)
	{
		Role = role;
		Content = content;
	}
}

internal class PullModelRequest
{
	[JsonProperty("name")]
	internal string Name { get; set; }
	
	internal PullModelRequest(string name)
	{
		Name = name;
	}
}

// METHODS

/// <summary> Sends an HTTP request and returns the response </summary>
/// <param name="request"> The request to be sent </param>
/// <param name="disableRequestSend"> Indicates if the request should be sent to the server </param>
/// <param name="payload"> The JSON payload for the request </param>
/// <returns> ApiResponse object with the results </returns>
internal ApiResponse SendRequest(HttpRequestMessage request, bool disableRequestSend, string payload = "")
{
	var apiResponse = new ApiResponse();
	
	try
	{
		apiResponse.RequestSummary = CreateRequestSummary(request, payload);
		if (!disableRequestSend)
		{
			using (var response = new HttpClient().SendAsync(request).Result)
			{
				apiResponse.StatusCode = ((int)response.StatusCode).ToString();
				foreach (var header in response.Headers.ToList())
				{
					apiResponse.Headers.Rows.Add(new object[] { header.Key, string.Join(",", header.Value) });
				}
				apiResponse.Headers.AcceptChanges();
				apiResponse.Content = response.Content.ReadAsStringAsync().Result;
				apiResponse.Success = true;
			}			
		}
	}
	catch (Exception ex)
	{
		apiResponse.Success = false;
		apiResponse.Error = ex.ToString();
	}
	return apiResponse;
}

/// <summary> Generates a string representation of the HTTP request </summary>
/// <param name="request"> The request to be summarized </param>
/// <param name="payload"> The JSON request body </param>
/// <returns> A string summary of the HTTP request </returns>
internal string CreateRequestSummary(HttpRequestMessage request, string payload = "")
{
	var s = new StringBuilder();
	s.Append($"{request.Method} {request.RequestUri.AbsoluteUri}{Environment.NewLine}");
	foreach (var header in request.Headers)
	{
		s.Append($"{header.Key}: {string.Join(",", header.Value)}{Environment.NewLine}");
	}
	s.Append($"{Environment.NewLine}{payload}");
	return s.ToString();
}


/// <summary> Creates a formatted URI for an HTTP request </summary>
/// <param name="baseUrl"> The base part of the URI </param>
/// <param name="endpoint"> The endpoint portion of the URI </param>
/// <returns> Formatted URI string </returns>
internal string GetUri(string baseUrl, string endpoint)
{
	return $"{baseUrl.TrimEnd('/')}/{endpoint.TrimStart('/')}";
}


























]]></code></stage><stage stageid="a9d37dae-0f69-44b0-8cfd-f095de2ce615" name="Clean Up" type="SubSheetInfo"><subsheetid>22eeaa62-9322-40c0-8b43-e6dcb473e60e</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="dd67bc15-0e72-4558-b067-ecc025908d6c" name="Start" type="Start"><subsheetid>22eeaa62-9322-40c0-8b43-e6dcb473e60e</subsheetid><loginhibit /><display x="-75" y="-135" /><onsuccess>aca37c5e-ab8d-431e-894d-e5f23afd1614</onsuccess></stage><stage stageid="aca37c5e-ab8d-431e-894d-e5f23afd1614" name="End" type="End"><subsheetid>22eeaa62-9322-40c0-8b43-e6dcb473e60e</subsheetid><loginhibit /><display x="-75" y="-75" /></stage><stage stageid="c982d993-bd9e-47e7-a482-6c8470d5df99" name="Generate Completion" type="SubSheetInfo"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><narrative>Send a prompt to a language model and return a response.

https://github.com/ollama/ollama/blob/main/docs/api.md#generate-a-completion</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ad7a011f-058c-4969-90ce-a8c0da2f7268" name="Start" type="Start"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><preconditions><condition narrative="Ollama is running" /><condition narrative="The target language model is loaded in Ollama" /><condition narrative="A prompt is provided" /></preconditions><postconditions><condition narrative="Generated response is returned" /></postconditions><display x="-45" y="-120" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><inputs><input type="text" name="Model" narrative="[Conditional] The name of the language model to use for generating a completion. Ignored if [Custom Request Body] is supplied, else it is required." stage="Model" /><input type="text" name="Prompt" narrative="[Conditional] The input prompt for which a response should be generated. Ignored if [Custom Request Body] is supplied, else it is required." stage="Prompt" /><input type="text" name="Custom Request Body" narrative="[Optional] Use this parameter to supply a complete and formatted JSON request body. Useful for complex requests that require additional options be specified beyond [Model] and [Prompt] alone. If this parameter contains a value, [Model] and [Prompt] will be ignored." stage="Custom Request Body" /><input type="text" name="Base URL" narrative="[Optional] The base URL for the Ollama server. Default value: http://localhost:11434" stage="Global - Base URL" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Flag indicates if the request should be generated but not sent to the Ollama server (True). Default: False" stage="Global - Disable Sending of Request" /></inputs><onsuccess>897c44fa-7277-4f02-82af-1f15ca437a8e</onsuccess></stage><stage stageid="04448b66-4f84-4f22-a072-ef548fd98e14" name="End" type="End"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><display x="-45" y="120" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Indicates if the request completed successfully" stage="Global - Success" /><output type="text" name="Status" narrative="The HTTP status code of the response" stage="Global - Status" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Global - Headers" /><output type="text" name="Content" narrative="The content of the response" stage="Global - Content" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Global - Error" /><output type="text" name="Request Summary" narrative="The summary of the request" stage="Global - Request Summary" /></outputs></stage><stage stageid="95e19597-6f3c-41a6-957f-7be4556458e5" name="Prompt" type="Data"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><narrative>[Conditional] The input prompt for which a response should be generated. Ignored if [Custom Request Body] is supplied, else it is required.</narrative><display x="-195" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="528f4bfe-6908-4039-bf25-b387dd8e22a5" name="Global - Base URL" type="Data"><loginhibit /><narrative>The base URL for the Ollama server. Default value: http://localhost:11434</narrative><display x="105" y="-120" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">http://localhost:11434</initialvalue><alwaysinit /></stage><stage stageid="ea28279c-4137-44f4-b2bf-d13a882d3bfd" name="Global - Disable Sending of Request" type="Data"><loginhibit /><narrative>Flag indicates if the request should be generated but not sent to the Ollama server (True). Default: False</narrative><display x="105" y="-90" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="b37cac81-714a-4d90-9fa5-ad6c12a529df" name="Global - Success" type="Data"><loginhibit /><narrative>Indicates if the request completed successfully</narrative><display x="270" y="-120" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="1222da78-f9d4-488e-8b9b-ec2c39ed2a5f" name="Global - Status" type="Data"><loginhibit /><narrative>The HTTP status code of the response</narrative><display x="270" y="-90" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="95a20a5c-d953-42d6-b6e6-045adca8a090" name="Global - Headers" type="Collection"><loginhibit /><narrative>The headers contained in the response</narrative><display x="270" y="-60" w="120" h="30" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="7cc2a821-ff8e-4daa-a589-d51d4dad205f" name="Global - Content" type="Data"><loginhibit /><narrative>The content of the response</narrative><display x="270" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="b9c10c5e-d8ba-4019-9d16-735632cbecc3" name="Global - Error" type="Data"><loginhibit /><narrative>The error message, if any occurs</narrative><display x="270" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="33846960-17d0-41d2-8661-ffae714fce72" name="Global - Request Summary" type="Data"><loginhibit /><narrative>The summary of the request</narrative><display x="270" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="866da7b3-ca2f-4350-9593-006476431455" name="License" type="Note"><loginhibit /><narrative>© 2024 Blue Prism Limited
Licensed under the Blue Prism Asset Terms for Modifiable Assets
https://portal.blueprism.com/agreements</narrative><display x="-180" y="-15" w="240" h="60" /></stage><stage stageid="cebf5959-874b-4ab4-a3b2-ff06bc859abe" name="Version" type="Note"><loginhibit /><narrative>Build date: 2024/07/24
Version: v1.0.0
Blue Prism Version: v7.3.0</narrative><display x="-180" y="60" w="240" h="60" /></stage><stage stageid="1fba1718-221a-4b48-966c-b76584ec17fe" name="Global Inputs" type="Block"><loginhibit /><display x="30" y="-150" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ff10460c-6056-463f-8f08-05516b6e3bfb" name="Global Outputs" type="Block"><loginhibit /><display x="195" y="-150" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="28470473-e57c-4d22-a33f-2a00175985e9" name="Endpoint" type="Data"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><narrative>The endpoint for the request</narrative><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">/api/generate</initialvalue><private /><alwaysinit /></stage><stage stageid="c10998d7-2df1-4c89-a5be-0d33fcc81732" name="Local Data Items" type="Block"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="733bdef7-3676-4b9e-9629-c08d411b3f73" name="Input Data Items" type="Block"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="82c21bf0-8c79-4cc4-81ba-f91e4b0ae786" name="Generate Completion: Send Request" type="Code"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><narrative>Send a request</narrative><display x="-45" y="60" w="90" h="30" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="endpoint" expr="[Endpoint]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Global - Success" /><output type="text" name="status" stage="Global - Status" /><output type="collection" name="headers" stage="Global - Headers" /><output type="text" name="content" stage="Global - Content" /><output type="text" name="error" stage="Global - Error" /><output type="text" name="requestSummary" stage="Global - Request Summary" /></outputs><onsuccess>04448b66-4f84-4f22-a072-ef548fd98e14</onsuccess><code><![CDATA[using (var request = new HttpRequestMessage(HttpMethod.Post, GetUri(baseUrl, endpoint)))
{		
	request.Content = new StringContent(payload, Encoding.UTF8, "application/json");
	var apiResponse = SendRequest(request, disableRequestSend, payload);
	
	success = apiResponse.Success;
	status = apiResponse.StatusCode;
	headers = apiResponse.Headers;
	content = apiResponse.Content;
	error = apiResponse.Error;
	requestSummary = apiResponse.RequestSummary;
}]]></code></stage><stage stageid="621f1281-9fb9-4f2d-afef-ce4199137000" name="Model" type="Data"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><narrative>[Conditional] The name of the language model to use for generating a completion. Ignored if [Custom Request Body] is supplied, else it is required.</narrative><display x="-195" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3c122c6c-2f66-48b3-842a-3e0079413dd8" name="Custom Request Body" type="Data"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><narrative>[Optional] Use this parameter to supply a complete and formatted JSON request body. Useful for complex requests that require additional options be specified beyond [Model] and [Prompt] alone. If this parameter contains a value, [Model] and [Prompt] will be ignored.</narrative><display x="-195" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fee71240-e1b0-47cb-9bfb-fa16ebb1ae12" name="Request Body" type="Data"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><narrative>The JSON request body to be included in the request</narrative><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8ca38fb-83a4-4524-8166-cd5863e5db0f" name="Generate Completion: Build Request Body" type="Code"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><display x="90" y="-60" w="90" h="30" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><inputs><input type="text" name="model" expr="[Model]" /><input type="text" name="prompt" expr="[Prompt]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /><output type="text" name="error" stage="Global - Error" /></outputs><onsuccess>311b5265-1831-4d31-8c34-50cb2ef86207</onsuccess><code><![CDATA[error = string.Empty;
requestBody = string.Empty;

try
{
	var generateCompletion = new GenerateCompletion(model, prompt);
	requestBody = JsonConvert.SerializeObject(generateCompletion);
}
catch (Exception ex)
{
	error = ex.Message;
}

]]></code></stage><stage stageid="897c44fa-7277-4f02-82af-1f15ca437a8e" name="[Custom Request Body] supplied?" type="Decision"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><display x="-45" y="-60" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><decision expression="Len([Custom Request Body]) &gt; 0" /><ontrue>b1e1140c-1916-4a32-bf15-2eb792b8afee</ontrue><onfalse>d8ca38fb-83a4-4524-8166-cd5863e5db0f</onfalse></stage><stage stageid="311b5265-1831-4d31-8c34-50cb2ef86207" name="No Exceptions While Creating [Request Body]?" type="Decision"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><display x="90" y="60" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><decision expression="Len([Global - Error]) &lt;= 0" /><ontrue>82c21bf0-8c79-4cc4-81ba-f91e4b0ae786</ontrue><onfalse>f1c395e6-cf7d-4789-b0df-ffd3dc77cfd6</onfalse></stage><stage stageid="f1c395e6-cf7d-4789-b0df-ffd3dc77cfd6" name="Anchor1" type="Anchor"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><display x="90" y="120" w="10" h="10" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><onsuccess>04448b66-4f84-4f22-a072-ef548fd98e14</onsuccess></stage><stage stageid="b1e1140c-1916-4a32-bf15-2eb792b8afee" name="Set [Request Body]" type="Calculation"><subsheetid>6a8a920a-be20-4b84-8381-0116f8ab3d6d</subsheetid><loginhibit /><display x="-45" y="0" w="90" h="30" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><onsuccess>82c21bf0-8c79-4cc4-81ba-f91e4b0ae786</onsuccess><calculation expression="[Custom Request Body]" stage="Request Body" /></stage><stage stageid="9204340a-563d-49e3-8de0-84cb3f923b40" name="Pull Model" type="SubSheetInfo"><subsheetid>2d038daa-074d-4475-9c86-8359f3a248a9</subsheetid><narrative>Download a model from the Ollama library. This action will wait for the model to download fully before continuing. The speed of this action will be affected by the size of the downloaded model and network speeds.

https://github.com/ollama/ollama/blob/main/docs/api.md#pull-a-model</narrative><display x="-195" y="-105" w="210" h="90" /></stage><stage stageid="b462afff-ceaf-45af-90b4-b33d876eb928" name="Start" type="Start"><subsheetid>2d038daa-074d-4475-9c86-8359f3a248a9</subsheetid><loginhibit /><preconditions><condition narrative="Ollama is running" /><condition narrative="Model name is provided" /></preconditions><postconditions><condition narrative="Model is downloaded" /></postconditions><display x="-15" y="-120" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><inputs><input type="text" name="Model" narrative="[Required] The name of the model to download" stage="Model" /><input type="text" name="Base URL" narrative="[Optional] The base URL for the Ollama server. Default value: http://localhost:11434" stage="Global - Base URL" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Flag indicates if the request should be generated but not sent to the Ollama server (True). Default: False" stage="Global - Disable Sending of Request" /></inputs><onsuccess>50f0eb82-e3c6-4d0d-a771-d6b7e9c50ec7</onsuccess></stage><stage stageid="ad742fc7-04b8-4ccf-80ca-ad23a06cd82a" name="End" type="End"><subsheetid>2d038daa-074d-4475-9c86-8359f3a248a9</subsheetid><loginhibit /><display x="-15" y="90" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Indicates if the request completed successfully" stage="Global - Success" /><output type="text" name="Status" narrative="The HTTP status code of the response" stage="Global - Status" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Global - Headers" /><output type="text" name="Content" narrative="The content of the response" stage="Global - Content" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Global - Error" /><output type="text" name="Request Summary" narrative="The summary of the request" stage="Global - Request Summary" /></outputs></stage><stage stageid="c99a4f58-2fda-4a76-8dcd-0d5ed2b09f48" name="Endpoint" type="Data"><subsheetid>2d038daa-074d-4475-9c86-8359f3a248a9</subsheetid><loginhibit /><narrative>The endpoint for the request</narrative><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">/api/pull</initialvalue><private /><alwaysinit /></stage><stage stageid="1755c764-325e-4335-b539-e24fd077553c" name="Local Data Items" type="Block"><subsheetid>2d038daa-074d-4475-9c86-8359f3a248a9</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ecccbd54-59e2-408d-81c6-14d152949aee" name="Input Data Items" type="Block"><subsheetid>2d038daa-074d-4475-9c86-8359f3a248a9</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0583e219-aac8-4952-a918-9b0fd28ecc33" name="Pull Model: Send Request" type="Code"><subsheetid>2d038daa-074d-4475-9c86-8359f3a248a9</subsheetid><loginhibit /><narrative>Send a request</narrative><display x="-15" y="45" w="90" h="30" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="endpoint" expr="[Endpoint]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Global - Success" /><output type="text" name="status" stage="Global - Status" /><output type="collection" name="headers" stage="Global - Headers" /><output type="text" name="content" stage="Global - Content" /><output type="text" name="error" stage="Global - Error" /><output type="text" name="requestSummary" stage="Global - Request Summary" /></outputs><onsuccess>ad742fc7-04b8-4ccf-80ca-ad23a06cd82a</onsuccess><code><![CDATA[using (var request = new HttpRequestMessage(HttpMethod.Post, GetUri(baseUrl, endpoint)))
{		
	request.Content = new StringContent(payload, Encoding.UTF8, "application/json");
	var apiResponse = SendRequest(request, disableRequestSend, payload);
	
	success = apiResponse.Success;
	status = apiResponse.StatusCode;
	headers = apiResponse.Headers;
	content = apiResponse.Content;
	error = apiResponse.Error;
	requestSummary = apiResponse.RequestSummary;
}]]></code></stage><stage stageid="148d4da3-6c00-4a79-b8f1-0c7f5bb1cd4f" name="Model" type="Data"><subsheetid>2d038daa-074d-4475-9c86-8359f3a248a9</subsheetid><loginhibit /><narrative>[Required] The name of the model to download</narrative><display x="-195" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50f0eb82-e3c6-4d0d-a771-d6b7e9c50ec7" name="Pull Model: Build Request Body" type="Code"><subsheetid>2d038daa-074d-4475-9c86-8359f3a248a9</subsheetid><loginhibit /><display x="-15" y="-75" w="90" h="30" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><inputs><input type="text" name="model" expr="[Model]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /><output type="text" name="error" stage="Global - Error" /></outputs><onsuccess>2a1688bc-0f0d-411f-aa98-27e98f80e941</onsuccess><code><![CDATA[error = string.Empty;
requestBody = string.Empty;

try
{
	var pullModelRequest = new PullModelRequest(model);
	requestBody = JsonConvert.SerializeObject(pullModelRequest);
}
catch (Exception ex)
{
	error = ex.Message;
}

]]></code></stage><stage stageid="36f124f0-2542-4b10-a4ea-51d6a6de17f0" name="Request Body" type="Data"><subsheetid>2d038daa-074d-4475-9c86-8359f3a248a9</subsheetid><loginhibit /><narrative>The JSON request body to be included in the request</narrative><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2a1688bc-0f0d-411f-aa98-27e98f80e941" name="No Exceptions While Creating [Request Body]?" type="Decision"><subsheetid>2d038daa-074d-4475-9c86-8359f3a248a9</subsheetid><loginhibit /><display x="-15" y="-15" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><decision expression="Len([Global - Error]) &lt;= 0" /><ontrue>0583e219-aac8-4952-a918-9b0fd28ecc33</ontrue><onfalse>e89ae13c-cc5c-4094-b44d-9dc028bbc215</onfalse></stage><stage stageid="ac064aa8-bc4d-40e7-809b-e5e80db574a8" name="Anchor2" type="Anchor"><subsheetid>2d038daa-074d-4475-9c86-8359f3a248a9</subsheetid><loginhibit /><display x="75" y="90" w="10" h="10" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><onsuccess>ad742fc7-04b8-4ccf-80ca-ad23a06cd82a</onsuccess></stage><stage stageid="e89ae13c-cc5c-4094-b44d-9dc028bbc215" name="Anchor3" type="Anchor"><subsheetid>2d038daa-074d-4475-9c86-8359f3a248a9</subsheetid><loginhibit /><display x="75" y="-15" w="10" h="10" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><onsuccess>ac064aa8-bc4d-40e7-809b-e5e80db574a8</onsuccess></stage><stage stageid="6288f9f9-0fc5-4e5b-9640-d30fbe459aa2" name="List Local Models" type="SubSheetInfo"><subsheetid>ec7e4386-7b11-4f2d-b388-048783cf8088</subsheetid><narrative>Retrieve a list of models that are available locally.

https://github.com/ollama/ollama/blob/main/docs/api.md#list-local-models</narrative><display x="-195" y="-105" w="210" h="90" /></stage><stage stageid="e0726d6f-9c23-4f9b-8323-5e804ad824ea" name="Start" type="Start"><subsheetid>ec7e4386-7b11-4f2d-b388-048783cf8088</subsheetid><loginhibit /><preconditions><condition narrative="Ollama is running" /></preconditions><postconditions><condition narrative="Local models are returned" /></postconditions><display x="-15" y="-120" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><inputs><input type="text" name="Base URL" narrative="[Optional] The base URL for the Ollama server. Default value: http://localhost:11434" stage="Global - Base URL" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Flag indicates if the request should be generated but not sent to the Ollama server (True). Default: False" stage="Global - Disable Sending of Request" /></inputs><onsuccess>5cee5923-d682-404d-8318-2a1896b31202</onsuccess></stage><stage stageid="36636f90-18c3-4d4b-a13e-21e0a5581c6c" name="End" type="End"><subsheetid>ec7e4386-7b11-4f2d-b388-048783cf8088</subsheetid><loginhibit /><display x="-15" y="-30" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Indicates if the request completed successfully" stage="Global - Success" /><output type="text" name="Status" narrative="The HTTP status code of the response" stage="Global - Status" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Global - Headers" /><output type="text" name="Content" narrative="The content of the response" stage="Global - Content" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Global - Error" /><output type="text" name="Request Summary" narrative="The summary of the request" stage="Global - Request Summary" /></outputs></stage><stage stageid="34bc1fa3-f394-4a8d-a011-248a047a2fe1" name="Endpoint" type="Data"><subsheetid>ec7e4386-7b11-4f2d-b388-048783cf8088</subsheetid><loginhibit /><narrative>The endpoint for the request</narrative><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">/api/tags</initialvalue><private /><alwaysinit /></stage><stage stageid="7e39e719-f406-4deb-aa01-a1cc4471b30a" name="Local Data Items" type="Block"><subsheetid>ec7e4386-7b11-4f2d-b388-048783cf8088</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5cee5923-d682-404d-8318-2a1896b31202" name="List Local Models: Send Request" type="Code"><subsheetid>ec7e4386-7b11-4f2d-b388-048783cf8088</subsheetid><loginhibit /><narrative>Send a request</narrative><display x="-15" y="-75" w="90" h="30" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="endpoint" expr="[Endpoint]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /></inputs><outputs><output type="flag" name="success" stage="Global - Success" /><output type="text" name="status" stage="Global - Status" /><output type="collection" name="headers" stage="Global - Headers" /><output type="text" name="content" stage="Global - Content" /><output type="text" name="error" stage="Global - Error" /><output type="text" name="requestSummary" stage="Global - Request Summary" /></outputs><onsuccess>36636f90-18c3-4d4b-a13e-21e0a5581c6c</onsuccess><code><![CDATA[using (var request = new HttpRequestMessage(HttpMethod.Get, GetUri(baseUrl, endpoint)))
{
	var apiResponse = SendRequest(request, disableRequestSend);
	
	success = apiResponse.Success;
	status = apiResponse.StatusCode;
	headers = apiResponse.Headers;
	content = apiResponse.Content;
	error = apiResponse.Error;
	requestSummary = apiResponse.RequestSummary;
}]]></code></stage><stage stageid="a074acf2-ec16-460d-965f-97505b4292ab" name="List Running Models" type="SubSheetInfo"><subsheetid>5ec57b8d-bb1c-41fb-abf4-9af3e3469f88</subsheetid><narrative>Retrieve a list of models that are currently loaded into memory.

https://github.com/ollama/ollama/blob/main/docs/api.md#list-running-models</narrative><display x="-195" y="-105" w="210" h="90" /></stage><stage stageid="a9c6d9f2-5b0d-47c0-b929-293c62c7a579" name="Start" type="Start"><subsheetid>5ec57b8d-bb1c-41fb-abf4-9af3e3469f88</subsheetid><loginhibit /><preconditions><condition narrative="Ollama is running" /></preconditions><postconditions><condition narrative="Running models are returned" /></postconditions><display x="-15" y="-120" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><inputs><input type="text" name="Base URL" narrative="[Optional] The base URL for the Ollama server. Default value: http://localhost:11434" stage="Global - Base URL" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Flag indicates if the request should be generated but not sent to the Ollama server (True). Default: False" stage="Global - Disable Sending of Request" /></inputs><onsuccess>9457011d-5bc7-4809-858d-1cd74c42a713</onsuccess></stage><stage stageid="25868501-87de-474c-8cc7-4baa6236f0ce" name="End" type="End"><subsheetid>5ec57b8d-bb1c-41fb-abf4-9af3e3469f88</subsheetid><loginhibit /><display x="-15" y="-30" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Indicates if the request completed successfully" stage="Global - Success" /><output type="text" name="Status" narrative="The HTTP status code of the response" stage="Global - Status" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Global - Headers" /><output type="text" name="Content" narrative="The content of the response" stage="Global - Content" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Global - Error" /><output type="text" name="Request Summary" narrative="The summary of the request" stage="Global - Request Summary" /></outputs></stage><stage stageid="1ac39ff7-8f9f-47e7-a0d7-fd12f4808454" name="Endpoint" type="Data"><subsheetid>5ec57b8d-bb1c-41fb-abf4-9af3e3469f88</subsheetid><loginhibit /><narrative>The endpoint for the request</narrative><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">/api/ps</initialvalue><private /><alwaysinit /></stage><stage stageid="3e330c1d-ab7f-485f-9d76-eba514b3f092" name="Local Data Items" type="Block"><subsheetid>5ec57b8d-bb1c-41fb-abf4-9af3e3469f88</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="9457011d-5bc7-4809-858d-1cd74c42a713" name="List Running Models: Send Request" type="Code"><subsheetid>5ec57b8d-bb1c-41fb-abf4-9af3e3469f88</subsheetid><loginhibit /><narrative>Send a request</narrative><display x="-15" y="-75" w="90" h="30" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="endpoint" expr="[Endpoint]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /></inputs><outputs><output type="flag" name="success" stage="Global - Success" /><output type="text" name="status" stage="Global - Status" /><output type="collection" name="headers" stage="Global - Headers" /><output type="text" name="content" stage="Global - Content" /><output type="text" name="error" stage="Global - Error" /><output type="text" name="requestSummary" stage="Global - Request Summary" /></outputs><onsuccess>25868501-87de-474c-8cc7-4baa6236f0ce</onsuccess><code><![CDATA[using (var request = new HttpRequestMessage(HttpMethod.Get, GetUri(baseUrl, endpoint)))
{
	var apiResponse = SendRequest(request, disableRequestSend);
	
	success = apiResponse.Success;
	status = apiResponse.StatusCode;
	headers = apiResponse.Headers;
	content = apiResponse.Content;
	error = apiResponse.Error;
	requestSummary = apiResponse.RequestSummary;
}]]></code></stage><stage stageid="9d1fead1-f259-43ad-ae17-87dbb8b2aff1" name="Generate Chat Completion" type="SubSheetInfo"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><narrative>Generate the next message in a chat with a provided model. This action allows a running history of exchanged messages between a user and a language model.

https://github.com/ollama/ollama/blob/main/docs/api.md#generate-a-chat-completion</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="1a4486b1-083f-4aa3-a1a9-af0e3382211c" name="Start" type="Start"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><preconditions><condition narrative="Ollama is running" /><condition narrative="The target language model is loaded in Ollama" /><condition narrative="One or more chat messages are provided" /></preconditions><postconditions><condition narrative="Generated chat response is returned" /></postconditions><display x="-45" y="-120" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><inputs><input type="text" name="Model" narrative="[Conditional] The name of the language model to use for generating a completion. Ignored if [Custom Request Body] is supplied, else it is required." stage="Model" /><input type="collection" name="Messages" narrative="[Conditional] Collection of chat messages in sequential order. First field is a Text field named Role and must be one of: system, user, assistant, tool. Second field is a Text field named Content and must contain the message text. Oldest message belong in row 1, newest messages in subsequent rows. Ignored if [Custom Request Body] is supplied, else it is required." stage="Messages" /><input type="text" name="Custom Request Body" narrative="[Optional] Use this parameter to supply a complete and formatted JSON request body. Useful for complex requests that require additional options be specified beyond [Model] and [Messages] alone. If this parameter contains a value, [Model] and [Messages] will be ignored." stage="Custom Request Body" /><input type="text" name="Base URL" narrative="[Optional] The base URL for the Ollama server. Default value: http://localhost:11434" stage="Global - Base URL" /><input type="flag" name="Disable Sending of Request" narrative="[Optional] Flag indicates if the request should be generated but not sent to the Ollama server (True). Default: False" stage="Global - Disable Sending of Request" /></inputs><onsuccess>673fbf0d-f1e9-445d-b1fb-891356e72072</onsuccess></stage><stage stageid="ae63bd26-87f1-4169-8361-c4959e251541" name="End" type="End"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><display x="-45" y="120" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Indicates if the request completed successfully" stage="Global - Success" /><output type="text" name="Status" narrative="The HTTP status code of the response" stage="Global - Status" /><output type="collection" name="Headers" narrative="The headers contained in the response" stage="Global - Headers" /><output type="text" name="Content" narrative="The content of the response" stage="Global - Content" /><output type="text" name="Error" narrative="The error message, if any occurs" stage="Global - Error" /><output type="text" name="Request Summary" narrative="The summary of the request" stage="Global - Request Summary" /></outputs></stage><stage stageid="eeb45aab-731a-42c7-ac10-260a6499787c" name="Endpoint" type="Data"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><narrative>The endpoint for the request</narrative><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">/api/chat</initialvalue><private /><alwaysinit /></stage><stage stageid="383e965c-4ce6-4417-ae5a-4b30ceb66c09" name="Local Data Items" type="Block"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="81ff69be-4e1b-4c4a-8eec-6a2b172daf44" name="Input Data Items" type="Block"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b12e68a9-fbeb-4be4-a1d8-e180c9742621" name="Generate Chat Completion: Send Request" type="Code"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><narrative>Send a request</narrative><display x="-45" y="60" w="90" h="30" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><inputs><input type="text" name="baseUrl" expr="[Global - Base URL]" /><input type="text" name="endpoint" expr="[Endpoint]" /><input type="flag" name="disableRequestSend" expr="[Global - Disable Sending of Request]" /><input type="text" name="payload" expr="[Request Body]" /></inputs><outputs><output type="flag" name="success" stage="Global - Success" /><output type="text" name="status" stage="Global - Status" /><output type="collection" name="headers" stage="Global - Headers" /><output type="text" name="content" stage="Global - Content" /><output type="text" name="error" stage="Global - Error" /><output type="text" name="requestSummary" stage="Global - Request Summary" /></outputs><onsuccess>ae63bd26-87f1-4169-8361-c4959e251541</onsuccess><code><![CDATA[using (var request = new HttpRequestMessage(HttpMethod.Post, GetUri(baseUrl, endpoint)))
{		
	request.Content = new StringContent(payload, Encoding.UTF8, "application/json");
	var apiResponse = SendRequest(request, disableRequestSend, payload);
	
	success = apiResponse.Success;
	status = apiResponse.StatusCode;
	headers = apiResponse.Headers;
	content = apiResponse.Content;
	error = apiResponse.Error;
	requestSummary = apiResponse.RequestSummary;
}]]></code></stage><stage stageid="2889f29c-ed72-40a1-9a63-a7d9e8aa715d" name="Model" type="Data"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><narrative>[Conditional] The name of the language model to use for generating a chat completion. Ignored if [Custom Request Body] is supplied, else it is required.</narrative><display x="-195" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b66e56f1-d751-4c59-9d78-907e724d5140" name="Custom Request Body" type="Data"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><narrative>[Optional] Use this parameter to supply a complete and formatted JSON request body. Useful for complex requests that require additional options be specified beyond [Model] and [Messages] alone. If this parameter contains a value, [Model] and [Messages] will be ignored.</narrative><display x="-195" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="daaf81ce-5f10-4a7d-a5df-1d040532d865" name="Request Body" type="Data"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><narrative>The JSON request body to be included in the request</narrative><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ca9fd455-0422-436e-8826-494f83e5f246" name="Generate Chat Completion: Build Request Body" type="Code"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><display x="90" y="-60" w="90" h="30" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><inputs><input type="text" name="model" expr="[Model]" /><input type="collection" name="messages" expr="[Messages]" /></inputs><outputs><output type="text" name="requestBody" stage="Request Body" /><output type="text" name="error" stage="Global - Error" /></outputs><onsuccess>78c6a335-54ad-4f8a-b551-bf413ce1c4dc</onsuccess><code><![CDATA[error = string.Empty;
requestBody = string.Empty;

try
{
	var generateChatCompletion = new GenerateChatCompletionRequest(model);	
	
	for (int i = 0; i < messages.Rows.Count; i++)
	{
		generateChatCompletion.Messages.Add(new Message(
			messages.Rows[i][0].ToString(), messages.Rows[i][1].ToString()
		));
	}
	requestBody = JsonConvert.SerializeObject(generateChatCompletion);
}
catch (Exception ex)
{
	error = ex.Message;
}]]></code></stage><stage stageid="673fbf0d-f1e9-445d-b1fb-891356e72072" name="[Custom Request Body] supplied?" type="Decision"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><display x="-45" y="-60" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><decision expression="Len([Custom Request Body]) &gt; 0" /><ontrue>ea055998-1516-45f3-8fc7-6d81516761a5</ontrue><onfalse>ca9fd455-0422-436e-8826-494f83e5f246</onfalse></stage><stage stageid="78c6a335-54ad-4f8a-b551-bf413ce1c4dc" name="No Exceptions While Creating [Request Body]?" type="Decision"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><display x="90" y="60" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><decision expression="Len([Global - Error]) &lt;= 0" /><ontrue>b12e68a9-fbeb-4be4-a1d8-e180c9742621</ontrue><onfalse>c41fcd64-a45e-43ff-b9ab-c84eabf00eb4</onfalse></stage><stage stageid="c41fcd64-a45e-43ff-b9ab-c84eabf00eb4" name="Anchor1" type="Anchor"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><display x="90" y="120" w="10" h="10" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><onsuccess>ae63bd26-87f1-4169-8361-c4959e251541</onsuccess></stage><stage stageid="ea055998-1516-45f3-8fc7-6d81516761a5" name="Set [Request Body]" type="Calculation"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><display x="-45" y="0" w="90" h="30" /><font family="Segoe UI" size="9" style="Regular" color="000000" /><onsuccess>b12e68a9-fbeb-4be4-a1d8-e180c9742621</onsuccess><calculation expression="[Custom Request Body]" stage="Request Body" /></stage><stage stageid="dc7cb7ad-7cc7-4bcf-8511-cee477e0c180" name="Messages" type="Collection"><subsheetid>916437e1-09d2-4514-8bab-98cea6a418b3</subsheetid><loginhibit /><narrative>[Conditional] Collection of chat messages in sequential order. First field is a Text field named Role and must be one of: system, user, assistant, tool. Second field is a Text field named Content and must contain the message text. Oldest message belong in row 1, newest messages in subsequent rows. Ignored if [Custom Request Body] is supplied, else it is required.</narrative><display x="-195" y="120" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage></process></object>
        <object id="da53ac89-1fa5-4b10-b36d-3163ee14255e" name="Symphony Ventures - JSON Manipulation (Custom C#)" xmlns="http://www.blueprism.co.uk/product/process"><process name="Symphony Ventures - JSON Manipulation (Custom C#)" version="1.0" bpversion="7.4.1.15931" narrative="Custom C# object for JSON manipulations" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>260490bc-6d0e-4673-8bf4-5a75fb1d25cc</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-32</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="e5b420fa-6876-49cd-b2aa-7bbb25e8bf6f" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="81c712f2-cca1-4454-ba5b-a0274efef568" type="Normal" published="True"><name>Collection to JSON</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2" type="Normal" published="True"><name>JSON to Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="967dbbc7-5685-46f4-96fe-101210c82f72" type="Normal" published="True"><name>JSON to Collection (Skipping JArray) </name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6f5dc737-6564-4317-883b-fc960b111c1f" type="Normal" published="True"><name>Filter JSON Keys</name><view><camerax>-115</camerax><cameray>15</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="28ee4de9-6ad9-4410-b525-a016434af384" type="Normal" published="True"><name>Filter JSON Array Entries</name><view><camerax>0</camerax><cameray>-43</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="97fe4800-aea8-4001-9720-ebb0220fba93" type="Normal" published="True"><name>Check if Array or Object</name><view><camerax>0</camerax><cameray>6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="48f14b02-c83d-4520-9c03-0add76441c48" type="Normal" published="True"><name>Count Entries in Array</name><view><camerax>-100</camerax><cameray>-1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="904d8924-d1e9-4d82-8631-f37e6f4060aa" type="Normal" published="True"><name>Get Entry by Index</name><view><camerax>114</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9addf0f3-9f44-4d3d-8927-acab6ade3a29" type="Normal" published="True"><name>List Properties</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="20ac94a1-8749-480b-891b-5fb0640479f7" type="Normal" published="True"><name>Get Object Property Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="96ed1eaf-86f0-46be-9268-813c14f308c2" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>5465cb9b-edd9-4f25-a0d1-7d9cb0489f09</onsuccess></stage><stage stageid="5465cb9b-edd9-4f25-a0d1-7d9cb0489f09" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="92242f4c-6a45-483a-80ff-60dd33aaa0f7" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Drawing.dll</reference><reference>Newtonsoft.Json.dll</reference><reference>System.Core.dll</reference><reference>System.Xml.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>Newtonsoft.Json.Linq</import><import>System.Collections.Generic</import><import>System.Text</import><import>System.IO</import><import>System</import><import>System.Collections</import><import>System.Linq</import><import>Newtonsoft.Json</import></imports><language>csharp</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[    private class JSON
    {
        public const string Array = "JSON:Array";
        public const string Null = "JSON:Null";
    }

    private bool mUseNewParseMethod;

    public string ConvertToJSON(DataTable dt)
    {
        object o = SerialiseGeneric(dt, true);
        return JsonConvert.SerializeObject(o);
    }

    public object SerialiseGeneric(object o, bool removeArray)
    {
        DataTable dt = o as DataTable;
        if (dt != null)
            return SerialiseDataTable(dt);

        DataRow dr = o as DataRow;
        if (dr != null)
            return SerialiseDataRow(dr, removeArray);

        string s = o as string;
        if (s != null && s == JSON.Null)
            return null;

        if (o != null)
            return o;

        return null;
    }

    public object SerialiseDataTable(DataTable dt)
    {
        if (IsSingleRow(dt))
            return SerialiseGeneric(dt.Rows[0], false);
        else
        {
            JArray ja = new JArray();
            foreach (DataRow r in dt.Rows)
                ja.Add(SerialiseGeneric(r, true));
            return ja;
        }
    }

    public bool IsSingleRow(DataTable dt)
    {
        if (dt.ExtendedProperties.Contains("SingleRow"))
            return System.Convert.ToBoolean(dt.ExtendedProperties["SingleRow"]);
        // Fallback for older versions of blueprism
        return dt.Rows.Count == 1;
    }

    public object SerialiseDataRow(DataRow dr, bool removeArray)
    {
        JObject jo = new JObject();
        foreach (DataColumn c in dr.Table.Columns)
        {
            string s = c.ColumnName;
            if (removeArray && s == JSON.Array)
                return SerialiseGeneric(dr[s], true);
            jo[s] = JToken.FromObject(SerialiseGeneric(dr[s], false));
        }
        return jo;
    }

    public DataTable ConvertToDataTable(string json)
    {
        object o = JsonConvert.DeserializeObject(json);
        return (DataTable)DeserialiseGeneric(o, true);
    }

    private object DeserialiseGeneric(object o, bool populate)
    {
        JArray a = o as JArray;
        if (a != null)
			if(mUseNewParseMethod) {
				return DeserialiseArrayWithoutJArray(a, populate);
			} else {
				return DeserialiseArray(a, populate);
			}

        JObject jo = o as JObject;
        if (jo != null)
            return DeserialiseObject(jo, populate);

        JValue jv = o as JValue;
        if (jv != null)
            return jv.Value;

        return JSON.Null;
    }

    private string GetKey(KeyValuePair<string, JToken> kv)
    {
        if (kv.Key != null)
            return kv.Key.ToString();
        return "";
    }


    private DataTable DeserialiseObject(JObject o, bool populate)
    {
        DataTable dt = new DataTable();

        foreach (KeyValuePair<string, JToken> kv in o)
        {
            Type type = GetTypeOf(DeserialiseGeneric(kv.Value, false));
            dt.Columns.Add(GetKey(kv), type);
        }

        if (populate)
        {
            DataRow dr = dt.NewRow();
            foreach (KeyValuePair<string, JToken> kv in o)
                dr[kv.Key] = DeserialiseGeneric(kv.Value, true);
            dt.Rows.Add(dr);
        }

        return dt;
    }

	private DataTable DeserialiseArrayWithoutJArray(JArray jarr, bool populate)
	{
		DataTable dt = new DataTable();

		Type first = null;
		foreach (object e in jarr)
		{
			if (first == null)
				first = GetTypeOf(DeserialiseGeneric(e, false));
			if (GetTypeOf(DeserialiseGeneric(e, false)) != first)
				throw new Exception("Data Type mismatch in array");
		}

		System.Collections.Specialized.OrderedDictionary columns = new System.Collections.Specialized.OrderedDictionary();
		var allTypesInColumnsMatch = jarr.All(e =>
		{
			if (!(e is JObject)) {
				return false;
			}
			foreach (KeyValuePair<string, JToken> pair in (JObject)e)
			{
				object val = pair.Value;
				if (val is JValue) {
					val = ((JValue)val).Value;
				}
				var tp = (val ?? (object)"").GetType();

				if (columns.Contains(pair.Key))
				{
					if (tp != columns[pair.Key])
						return false;
				}
				else
					columns[pair.Key] = tp;
			}
			return true;
		});


		if (allTypesInColumnsMatch)
		{
			foreach (DictionaryEntry pair in columns)
			{
				string key = System.Convert.ToString(pair.Key);
				Type tp = (Type)(pair.Value);
				if (tp == typeof(JObject) || tp == typeof(JArray))
					dt.Columns.Add(key, typeof(DataTable));
				else
					dt.Columns.Add(key, tp);
			}
		}
		else if (first != null)
			dt.Columns.Add(JSON.Array, first);

		if (populate)
		{
			foreach (object e in jarr)
			{
				DataRow dr = dt.NewRow();
				if (allTypesInColumnsMatch)
				{
					foreach (KeyValuePair<string, JToken> pair in (JObject)e)
						dr[pair.Key] = DeserialiseGeneric(pair.Value, true);
				}
				else
					dr[JSON.Array] = DeserialiseGeneric(e, true);

				dt.Rows.Add(dr);
			}
		}

		return dt;
	}


    private DataTable DeserialiseArray(JArray o, bool populate)
    {
        DataTable dt = new DataTable();

        Type first = null;
        foreach (object e in o)
        {
            if (first == null)
                first = GetTypeOf(DeserialiseGeneric(e, false));
            if (GetTypeOf(DeserialiseGeneric(e, false)) != first)
                throw new Exception("Data Type mismatch in array");
        }
        if (first != null)
            dt.Columns.Add(JSON.Array, first);

        if (populate)
        {
            foreach (object e in o)
            {
                DataRow dr = dt.NewRow();
                dr[JSON.Array] = DeserialiseGeneric(e, true);
                dt.Rows.Add(dr);
            }
        }

        return dt;
    }

    private Type GetTypeOf(object o)
    {
        if (o == null)
            return typeof(string);
        return o.GetType();
    }]]></code></stage><stage stageid="e7e38fcf-98b7-4dfa-98e4-e8dfbf22c9ad" name="Clean Up" type="SubSheetInfo"><subsheetid>e5b420fa-6876-49cd-b2aa-7bbb25e8bf6f</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1efb16e8-76e0-4484-9868-cedcd560f84d" name="Start" type="Start"><subsheetid>e5b420fa-6876-49cd-b2aa-7bbb25e8bf6f</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>e2df2eb2-81ae-413f-8c14-c86ae28822a1</onsuccess></stage><stage stageid="e2df2eb2-81ae-413f-8c14-c86ae28822a1" name="End" type="End"><subsheetid>e5b420fa-6876-49cd-b2aa-7bbb25e8bf6f</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="9a16b384-2fb0-48dc-8056-e3d79c0617a8" name="Note1" type="Note"><subsheetid>e5b420fa-6876-49cd-b2aa-7bbb25e8bf6f</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="03897ea0-1c36-4c6a-9a9f-d704c83bca33" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="69f7be26-fdee-4a61-af13-717c6f86c179" name="Collection to JSON" type="SubSheetInfo"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><narrative>Converts a collection into JSON text</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7ea6049c-e3cb-4338-acfe-2a36f82537c3" name="Start" type="Start"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="Resulting JSON is output" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Data" narrative="Collection to Convert" stage="I_Data" /></inputs><onsuccess>d5989fdf-9e71-438d-9ddb-80f9f0202dc2</onsuccess></stage><stage stageid="f3479b5a-3028-4662-87a7-eb9d4cedf916" name="End" type="End"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="JSON" narrative="JSON text" stage="O_JSON" /></outputs></stage><stage stageid="d5989fdf-9e71-438d-9ddb-80f9f0202dc2" name="Collection To JSON" type="Code"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="data" expr="[I_Data]" /></inputs><outputs><output type="text" name="json" stage="O_JSON" /></outputs><onsuccess>f3479b5a-3028-4662-87a7-eb9d4cedf916</onsuccess><code><![CDATA[json = ConvertToJSON(data);]]></code></stage><stage stageid="8b62e3dd-4468-400e-8bb9-c4043f8140d1" name="I_Data" type="Collection"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><loginhibit /><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="23637a3d-ef5b-4625-ace7-d34a0202b7bb" name="O_JSON" type="Data"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d96b37f-f11e-4405-8b83-754a4e13c97c" name="JSON to Collection" type="SubSheetInfo"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><narrative>Converts JSON text to Collection</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7cbca6ee-f14c-4ccf-bbf0-b3b0ed9c9f92" name="Start" type="Start"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="Resulting collection is ouptut" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="JSON" narrative="JSON text to convert" stage="I_JSON" /></inputs><onsuccess>5206b169-055c-48ad-9573-e12ba821b6a4</onsuccess></stage><stage stageid="04c40a27-d97d-4843-8325-2626ebad793d" name="End" type="End"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Result" narrative="Collection output" stage="O_Result" /></outputs></stage><stage stageid="5206b169-055c-48ad-9573-e12ba821b6a4" name="JSON To Collection" type="Code"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[I_JSON]" /></inputs><outputs><output type="collection" name="result" stage="O_Result" /></outputs><onsuccess>04c40a27-d97d-4843-8325-2626ebad793d</onsuccess><code><![CDATA[result = ConvertToDataTable(json);]]></code></stage><stage stageid="6b9947f6-58d1-4243-8d64-00b33ed3bd8d" name="I_JSON" type="Data"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="db4bbfc9-e045-4fdf-b443-d7efc5acfdcb" name="O_Result" type="Collection"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6601ded6-c986-491f-a59f-aed4b639a54a" name="Filter JSON Keys" type="SubSheetInfo"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><narrative>Filters JSON text to include/exclude keys with names in the input collection</narrative><display x="-195" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ae814127-c035-4e1d-97a2-cebbad812a1d" name="Start" type="Start"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="Filtered JSON is output" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="JSON" narrative="JSON Text to filter" stage="I_JSON" /><input type="collection" name="Properties" narrative="JSON Properties" stage="I_Keys" /><input type="flag" name="Only/Exclude?" narrative="Set to True to include only properties in the input collection. Set to false to exclude properties in the input collection" stage="I_Only" /></inputs><onsuccess>e8c34829-b9b8-4372-ab6d-bcee72d51827</onsuccess></stage><stage stageid="1bc096eb-e081-4d88-87ca-a21f2120bddd" name="End" type="End"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="Resulting JSON with filtered rows" stage="O_Result" /></outputs></stage><stage stageid="e8c34829-b9b8-4372-ab6d-bcee72d51827" name="Filter Json Keys" type="Code"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[I_JSON]" /><input type="collection" name="keys" expr="[I_Keys]" /><input type="flag" name="only" expr="[I_Only]" /></inputs><outputs><output type="text" name="filteredJson" stage="O_Result" /></outputs><onsuccess>1bc096eb-e081-4d88-87ca-a21f2120bddd</onsuccess><code><![CDATA[var jsonT = JToken.Parse(json);
if(jsonT is JArray) {
	JArray jsonArray = (JArray)jsonT;
	foreach(JObject o in jsonArray)
	{
		List<string> removeList = new List<string>();
		foreach(JProperty p in o.Properties())
		{
			DataRow[] search = keys.Select("Key = '"+p.Name+"'");
			if((only && search.Length == 0) || (!only && search.Length > 0))
			{
				removeList.Add(p.Name);
			}
		}
		foreach(string r in removeList) {
			o.Remove(r);
		}
	}
	filteredJson = JsonConvert.SerializeObject(jsonArray);	
} else if (jsonT is JObject) {
		JObject o = (JObject)jsonT;
		List<string> removeList = new List<string>();
		foreach(JProperty p in o.Properties())
		{
			DataRow[] search = keys.Select("Key = '"+p.Name+"'");
			if((only && search.Length == 0) || (!only && search.Length > 0))
			{
				removeList.Add(p.Name);
			}
		}
		foreach(string r in removeList) {
			o.Remove(r);
		}
		filteredJson = JsonConvert.SerializeObject(o);	
} else {
	filteredJson = "";
	throw new Exception("Could not parse JSON text input.");
}
]]></code></stage><stage stageid="08779ee4-2a44-4f1d-b3df-2407b6e4f3b6" name="O_Result" type="Data"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="135d46fb-3065-4dac-9ee9-c6b835a883f8" name="Input Parameters" type="Block"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><loginhibit /><display x="-270" y="-75" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="13160ffb-306f-4681-8776-80671bac22d2" name="Output Parameters" type="Block"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="7ce537f3-50c4-4cb3-8941-a914a4f0ddf1" name="Filter JSON Array Entries" type="SubSheetInfo"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><narrative>This page removes rows from a JSON Array text based on the input field/value collection</narrative><display x="-195" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fcfd24eb-5168-41de-b3da-8b77af9b68cc" name="Start" type="Start"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><loginhibit /><preconditions><condition narrative="JSON text is a JSON array." /></preconditions><postconditions><condition narrative="Filtered JSON array is output." /><condition narrative="Number of entries in filtered JSON array is output" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="JSON Array" narrative="JSON array to filter" stage="I_JSON" /><input type="collection" name="Queries" narrative="Field/Value pair of queries to search for." stage="I_Queries" /></inputs><onsuccess>ce0073c7-d034-4486-8267-e1f0bca9e643</onsuccess></stage><stage stageid="a1397785-426b-47b0-8bc0-5d9bff6d3fa3" name="End" type="End"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="JSON with filtered data" stage="O_Result" /><output type="number" name="Count" narrative="Number of entries in the filtered text" stage="O_Count" /></outputs></stage><stage stageid="ce0073c7-d034-4486-8267-e1f0bca9e643" name="Filter Json by Row" type="Code"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[I_JSON]" /><input type="collection" name="queries" expr="[I_Queries]" /></inputs><outputs><output type="text" name="filteredJson" stage="O_Result" /><output type="number" name="count" stage="O_Count" /></outputs><onsuccess>a1397785-426b-47b0-8bc0-5d9bff6d3fa3</onsuccess><code><![CDATA[var jsonT = JToken.Parse(json);
if(jsonT is JArray) {
	var jsonArray = (JArray)jsonT;
	var filter = new Object();
	foreach(DataRow row in queries.Rows) {
		filter = from e in jsonArray
					where (string)e[row["Field"]] == (string)row["Value"]
					select e;
		jsonArray = new JArray((IEnumerable<JToken>)filter);
	}
	filteredJson = JsonConvert.SerializeObject(((IEnumerable<JToken>)filter).ToList());
	count = ((IEnumerable<JToken>)filter).Count();
} else {
	count = 0;
	filteredJson = "";
	throw new Exception("JSON text input is not a JSON Array.");
}

]]></code></stage><stage stageid="6a87b3ef-21ed-4b4d-827b-c67a02505179" name="O_Result" type="Data"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eeaa3b49-1afe-4130-842d-cbe236d5def6" name="Input Parameters" type="Block"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><loginhibit /><display x="-270" y="-75" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="f6561f20-3d14-4c2f-a501-d6cadfba6e5d" name="Output Parameters" type="Block"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="9ba1ca64-efb5-4fe9-87e3-da5acbb8ce31" name="I_JSON" type="Data"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><display x="-195" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5346f3fa-f24d-4151-a91a-c2630943017a" name="Input Parameters" type="Block"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="4e1665fe-d25d-4a5a-8b6b-6f2c383478cf" name="Output Parameters" type="Block"><subsheetid>81c712f2-cca1-4454-ba5b-a0274efef568</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="8fca88c4-7464-4497-9928-c2484950e832" name="Input Parameters" type="Block"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="89909ba8-dc73-472b-982b-4de36bf7d9d3" name="Output Parameters" type="Block"><subsheetid>054a7f6c-e736-4a53-9b1d-1f2ed2ea87b2</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="12406b66-42a3-4c85-8a1e-e797366d79cb" name="I_Queries" type="Collection"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><loginhibit /><display x="-195" y="-15" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field" type="text" /><field name="Value" type="text" /></collectioninfo></stage><stage stageid="210c13a8-b9aa-491e-a535-0fd965e9c30d" name="I_Keys" type="Collection"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><loginhibit /><display x="-195" y="-15" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Key" type="text" /></collectioninfo></stage><stage stageid="39886bb5-bd0e-4f70-864f-fbccdfd6e74b" name="I_JSON" type="Data"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><display x="-195" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="35254647-3b21-420a-b121-69cd5a259ce0" name="O_Count" type="Data"><subsheetid>28ee4de9-6ad9-4410-b525-a016434af384</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8d64a77d-feb4-4782-a1f5-5b838dbd3ab0" name="I_Only" type="Data"><subsheetid>6f5dc737-6564-4317-883b-fc960b111c1f</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa231f83-2019-45d0-9d9e-d5e3c106be73" name="Check if Array or Object" type="SubSheetInfo"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><narrative>Check to see if the JSON text is an Array or an object. Else an exception is thrown.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4e08c5a8-6c7a-4845-883e-9a7146857c50" name="Start" type="Start"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="Type of input JSON is output" /></postconditions><display x="15" y="-105" /><inputs><input type="text" name="JSON" narrative="JSON to check" stage="I_JSON" /></inputs><onsuccess>787564c7-409b-48ea-b5a7-08b180bfeda1</onsuccess></stage><stage stageid="b43e954b-d158-4c59-8514-432459a1288f" name="End" type="End"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><loginhibit /><display x="15" y="15" /><outputs><output type="text" name="Type" narrative="Will be Array (text inside []) or Object (text inside {})" stage="O_Type" /></outputs></stage><stage stageid="787564c7-409b-48ea-b5a7-08b180bfeda1" name="Array or Object?" type="Code"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><loginhibit /><narrative>Code stage to check if loaded JSON is an Array or an Object.</narrative><display x="15" y="-45" w="90" h="30" /><inputs><input type="text" name="json" expr="[I_JSON]" /></inputs><outputs><output type="text" name="Type" stage="O_Type" /></outputs><onsuccess>b43e954b-d158-4c59-8514-432459a1288f</onsuccess><code><![CDATA[var jsonT = JToken.Parse(json);
if(jsonT is JArray) {
	Type = ((JArray)jsonT).Type.ToString();
}
else if (jsonT is JObject) {
	Type = ((JObject)jsonT).Type.ToString();
}
else {
	throw new Exception("JSON is not an Array or an Object");
}]]></code></stage><stage stageid="8690c06b-3556-48e2-b1f5-bd99d4faf681" name="Input Parameters" type="Block"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="f2ac9c0e-6f6d-443a-9d22-839d6a09243e" name="I_JSON" type="Data"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18654525-a65e-4302-ab3c-da93be25b003" name="Count Entries in Array" type="SubSheetInfo"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><narrative>Count the number of entries within a JSON Array</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5218cdeb-887e-41d6-a6ca-6fca6232e378" name="Start" type="Start"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><loginhibit /><preconditions><condition narrative="JSON text is an array" /></preconditions><postconditions><condition narrative="Count is output" /></postconditions><display x="15" y="-135" /><inputs><input type="text" name="JSON Array" narrative="JSON Array for which to count entries" stage="I_JSON" /></inputs><onsuccess>71da54a9-c1b8-40dd-ad1c-82cf88764197</onsuccess></stage><stage stageid="002b0821-a933-4dc9-a4b6-a52a2cae2842" name="End" type="End"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><loginhibit /><display x="15" y="-15" /><outputs><output type="number" name="Count" narrative="Number of entries in array" stage="O_Count" /></outputs></stage><stage stageid="71da54a9-c1b8-40dd-ad1c-82cf88764197" name="Number of Entries in Array" type="Code"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><loginhibit /><narrative>Counts the number of objects in an Array</narrative><display x="15" y="-75" w="90" h="30" /><inputs><input type="text" name="json" expr="[I_JSON]" /></inputs><outputs><output type="number" name="count" stage="O_Count" /></outputs><onsuccess>002b0821-a933-4dc9-a4b6-a52a2cae2842</onsuccess><code><![CDATA[var jsonT = JToken.Parse(json);
count = 0;
if(jsonT is JArray) {
	count = ((JArray)jsonT).Count;
} else {
	throw new Exception("JSON is not an array");
}]]></code></stage><stage stageid="35c1513f-6910-4d08-b61e-79324bea1043" name="I_JSON" type="Data"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7196266c-c673-49ac-98ef-86ba5d42a0a1" name="O_Count" type="Data"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8ee7515-d3e0-4122-b9de-10102737d0fc" name="Input Parameters" type="Block"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="322fe7bc-7718-44ff-8bae-216abf4109d4" name="Output Parameters" type="Block"><subsheetid>48f14b02-c83d-4520-9c03-0add76441c48</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="88182e05-d1ac-4416-a45f-361bb212cd67" name="O_Type" type="Data"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="72d0a7b4-254f-40db-a9ad-3dd996fd1858" name="Output Parameters" type="Block"><subsheetid>97fe4800-aea8-4001-9720-ebb0220fba93</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="0758337e-118c-48b3-a835-cae06e6de353" name="List Properties" type="SubSheetInfo"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><narrative>For a JSON Object this page returns a CSV of all the properties in the Object and the number of entries.
For a JSON Array this page returns a CSV of all the properties from all the rows in the Array and the number of entries.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c5a1ec26-95f6-47ca-b33f-4c0bbf7c54f4" name="Start" type="Start"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="CSV of property names is output" /><condition narrative="Number of properties is output" /></postconditions><display x="15" y="-105" /><inputs><input type="text" name="JSON" narrative="JSON Array to Object" stage="I_JSON" /></inputs><onsuccess>8b7006cf-5b0c-4126-85ec-6ec5a8ac9e57</onsuccess></stage><stage stageid="5c937a0e-bb4a-4892-bb29-6bccb867cc1a" name="End" type="End"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><loginhibit /><display x="15" y="150" /><outputs><output type="text" name="Properties" narrative="Properties from JSON Text" stage="O_Properties" /><output type="number" name="Count" narrative="Number of Properties" stage="O_Count" /></outputs></stage><stage stageid="862f67fd-5441-40fc-887b-8ddf898b2baf" name="I_JSON" type="Data"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="db5d815f-1da7-403e-af0d-fa0f7f369917" name="Input Parameters" type="Block"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="1089ac9a-6b4d-4bd2-ac6d-043ee5e2ab04" name="Output Parameters" type="Block"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><loginhibit /><display x="-270" y="105" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="1a508371-c7d2-45aa-a9d6-a225e67df314" name="O_Properties" type="Data"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /></stage><stage stageid="141aa330-5603-4756-9c59-4cadfb484726" name="Length" type="Data"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="71b729ae-0ab6-43a6-8b68-9b90876db588" name="Comma.Remove" type="MultipleCalculation"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><loginhibit /><narrative>Stage to remove the end comma from a string of text</narrative><display x="15" y="75" w="90" h="60" /><onsuccess>5c937a0e-bb4a-4892-bb29-6bccb867cc1a</onsuccess><steps><calculation expression="Len([O_Properties])" stage="Length" /><calculation expression="Left([O_Properties],[Length] -1 )" stage="O_Properties" /></steps></stage><stage stageid="de12de66-65c0-4c88-a3bf-f497466c7eeb" name="Get Entry by Index" type="SubSheetInfo"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><narrative>Get the JSON text inside the given row index for the given JSON Array</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2e24283f-a220-4cc8-b4f2-34045cd517fc" name="Start" type="Start"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><loginhibit /><preconditions><condition narrative="JSON text is an array" /></preconditions><postconditions><condition narrative="Entry at input index is output" /></postconditions><display x="15" y="-105" /><inputs><input type="text" name="JSON Array" narrative="JSON Array to search through" stage="I_JSON" /><input type="number" name="Index" narrative="Index of row to retrieve from JSON" stage="I_Index" /></inputs><onsuccess>9ca6d961-4db3-45cc-9b02-ff5580412362</onsuccess></stage><stage stageid="023bf377-1992-4b75-89b6-0c25fd2a248d" name="End" type="End"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><loginhibit /><display x="15" y="15" /><outputs><output type="text" name="Entry" narrative="JSON text inside input array at input index" stage="O_Entry" /></outputs></stage><stage stageid="9ca6d961-4db3-45cc-9b02-ff5580412362" name="Get Row in JSON array by index" type="Code"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><loginhibit /><narrative>Get the value of a full row within a JSON Array</narrative><display x="15" y="-45" w="90" h="30" /><inputs><input type="text" name="json" expr="[I_JSON]" /><input type="number" name="index" expr="[I_Index]" /></inputs><outputs><output type="text" name="Row" stage="O_Entry" /></outputs><onsuccess>023bf377-1992-4b75-89b6-0c25fd2a248d</onsuccess><code><![CDATA[var jsonT = JToken.Parse(json);
Row = "";
if(jsonT is JArray) {
	var jsonA = (JArray)jsonT;
	var row = jsonA[Convert.ToInt32(index)];
	Row = row.ToString();
} else {
	throw new Exception("JSON is not an array");
}	


]]></code></stage><stage stageid="c8cf1125-c045-446f-91c4-09eaba5a6b27" name="I_JSON" type="Data"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec7a18ee-0c52-4789-b675-8ed7f27ff2a1" name="Input Parameters" type="Block"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="e8f048c2-e2ee-4187-b29f-3884eb43c369" name="Output Parameters" type="Block"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="2e1f7161-0fb4-493b-a13c-abb09242a389" name="O_Entry" type="Data"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e80e3c7e-8fb5-4f7e-a8ed-b28ee2980e81" name="Get Object Property Value" type="SubSheetInfo"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><narrative>Get the value of specific property of an object.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="32ac5380-54c7-4c3e-b0b6-2ac148ceeb83" name="Start" type="Start"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><loginhibit /><preconditions><condition narrative="JSON text is an object" /></preconditions><postconditions><condition narrative="Value of the property is output" /></postconditions><display x="15" y="-105" /><inputs><input type="text" name="JSON Object" narrative="JSON Object in which to find property" stage="I_JSON" /><input type="text" name="Property" narrative="Property to find in JSON object" stage="I_Property" /></inputs><onsuccess>ca9d9e71-7bab-4d16-b9ef-20ba1d9328f8</onsuccess></stage><stage stageid="527c07ee-21a8-46d4-a347-5a38bd21a060" name="End" type="End"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><loginhibit /><display x="15" y="15" /><outputs><output type="text" name="Value" narrative="Value retrieved from property in object" stage="O_Value" /></outputs></stage><stage stageid="ca9d9e71-7bab-4d16-b9ef-20ba1d9328f8" name="Get Object Property Value " type="Code"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><loginhibit /><narrative>Determine the value of specific property objects</narrative><display x="15" y="-45" w="90" h="30" /><inputs><input type="text" name="json" expr="[I_JSON]" /><input type="text" name="Object" expr="[I_Property]" /></inputs><outputs><output type="text" name="PropertyValue" stage="O_Value" /></outputs><onsuccess>527c07ee-21a8-46d4-a347-5a38bd21a060</onsuccess><code><![CDATA[var jsonT = JToken.Parse(json);
PropertyValue = "";
if(jsonT is JObject) {
	var jsonO = (JObject)jsonT;
	PropertyValue = jsonO.GetValue(Object).ToString();
} else {
	throw new Exception("Json text is not an object.");
}


	
	]]></code></stage><stage stageid="96bc9dce-2f08-4441-ab0d-d96a313952e3" name="I_JSON" type="Data"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d458dc62-ecf0-4fc0-8e0a-a3f39bc6a0a9" name="Input Parameters" type="Block"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="3c1e8799-1b8f-4b9f-a8f5-c0564caae4c9" name="Output Parameters" type="Block"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage><stage stageid="3b569c3d-6872-4a11-a61e-59f0a9f35bab" name="O_Value" type="Data"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /></stage><stage stageid="e8a0901a-ce25-42e1-ae89-db8fa3f66c64" name="I_Index" type="Data"><subsheetid>904d8924-d1e9-4d82-8631-f37e6f4060aa</subsheetid><loginhibit /><display x="-195" y="15" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e742c15d-fd9e-4098-ac48-0e5721572a7a" name="I_Property" type="Data"><subsheetid>20ac94a1-8749-480b-891b-5fb0640479f7</subsheetid><loginhibit /><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b7006cf-5b0c-4126-85ec-6ec5a8ac9e57" name="List of properties for JSON Object" type="Code"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><loginhibit /><narrative>Determine the Properties of an Object and put into a list</narrative><display x="15" y="-15" w="120" h="60" /><inputs><input type="text" name="Row" expr="[I_JSON]" /></inputs><outputs><output type="text" name="properties" stage="O_Properties" /><output type="number" name="count" stage="O_Count" /></outputs><onsuccess>71b729ae-0ab6-43a6-8b68-9b90876db588</onsuccess><code><![CDATA[var jsonT = JToken.Parse(Row);
properties = "";
var arrayCount = 0;
if(jsonT is JObject) {
	var jsonO = (JObject)jsonT;
	var propertiesList = jsonO.Properties();
	foreach(JProperty p in propertiesList) {
		properties += p.Name + ",";
	}
	count = propertiesList.Count();
} else if(jsonT is JArray) {
	var jsonA = (JArray)jsonT;
	foreach(var jsonE in jsonA) {
		if(jsonE is JObject) {
			var jsonO = (JObject)jsonE;
			var propertiesList = jsonO.Properties();
			foreach(JProperty p in propertiesList) {
				if(!properties.Contains(p.Name)) {
					properties += p.Name + ",";
				}
			}
		} else if(jsonE is JArray) {
			properties += "Array"+arrayCount+",";
			arrayCount++;
		}
	}
	count = properties.Split(',').Length - 1;
} else {
	throw new Exception("Json text is not valid.");
}



]]></code></stage><stage stageid="8f88179f-5d8d-41e7-887f-3e71173f7526" name="Local Parameters" type="Block"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="008000" /></stage><stage stageid="d3036536-8172-4a9b-b40c-8ac7833eed02" name="O_Count" type="Data"><subsheetid>9addf0f3-9f44-4d3d-8927-acab6ade3a29</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /></stage><stage stageid="bb4cab71-f560-470b-a2d8-2f9610238bb5" name="JSON to Collection (Skipping JArray) " type="SubSheetInfo"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><narrative>Converts JSON text to Collection.
This action differs from JSON to Collection as JSON array entry data will not be stored in a collection of collections.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="db0cfd01-fe24-4dbb-bdef-21ac28772f0a" name="Start" type="Start"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="Resulting collection is output" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="JSON" narrative="JSON text to convert" stage="I_JSON" /></inputs><onsuccess>e07aabf7-180d-4f74-a648-54a7cc419fe1</onsuccess></stage><stage stageid="7364909f-f9b1-44ed-be74-c274c0d0014d" name="End" type="End"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Result" narrative="Collection output" stage="O_Result" /></outputs></stage><stage stageid="e07aabf7-180d-4f74-a648-54a7cc419fe1" name="JSON To Collection without JArray" type="Code"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[I_JSON]" /></inputs><outputs><output type="collection" name="result" stage="O_Result" /></outputs><onsuccess>7364909f-f9b1-44ed-be74-c274c0d0014d</onsuccess><code><![CDATA[try {
	mUseNewParseMethod = true;
	result = ConvertToDataTable(json);	
} finally {
	mUseNewParseMethod = false;
}]]></code></stage><stage stageid="feb28c22-afff-4361-9d89-5bcb04c3b92f" name="I_JSON" type="Data"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="acdbdf22-5efa-400a-9a0a-d04a48f98f69" name="O_Result" type="Collection"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="485514ce-ad72-4d27-aac7-2d33c9b19ade" name="Input Parameters" type="Block"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="842a8de1-aaec-4214-8502-79eda058f5d2" name="Output Parameters" type="Block"><subsheetid>967dbbc7-5685-46f4-96fe-101210c82f72</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00CCFF" /></stage></process></object>
        <object id="cc0807f5-b419-486a-8e09-3d6216ebb8a4" name="System - Active Directory" xmlns="http://www.blueprism.co.uk/product/process"><process name="System - Active Directory" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="Business Object for interacting with Active Directory using the LDAP based API in .NET" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>62fcff22-a9ac-458a-abdc-8969921fba86</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="662c09a1-3bc2-4fa2-8868-a0d9ea7c75c9" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dda5203f-ccbc-4ec2-869c-b52f72cd7f6d" type="Normal" published="True"><name>Create User</name><view><camerax>182</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bd42e76e-2cb9-4894-afa9-96a8f2d1d05a" type="Normal" published="False"><name>User Exists</name><view><camerax>0</camerax><cameray>-12</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4a031129-3c2d-49a0-8703-809adfa0b82c" type="Normal" published="True"><name>User Exists (Displayname)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2e4227d1-af71-42a9-a089-232d8b59e297" type="Normal" published="True"><name>User Exists (UserPrincipalName)</name><view><camerax>3</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e997a51f-4c28-4d11-bf3c-350c46bd9c3e" type="Normal" published="True"><name>Object Exists (Dynamic)</name><view><camerax>-5</camerax><cameray>-95</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="acccb6d8-eddc-4391-ad41-4d0a045c4c6e" type="Normal" published="True"><name>Add User to Group</name><view><camerax>29</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4530ffb9-5984-4ceb-884f-8eaf7226eca5" type="Normal" published="True"><name>Reset User Password</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="cfdf577d-f4d8-48d9-bc9f-e814b0b39762" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>67e0d395-9543-4e1e-923b-214dbad8cdda</onsuccess></stage><stage stageid="67e0d395-9543-4e1e-923b-214dbad8cdda" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="43066ee8-c2bf-4df5-bd95-9ab9b4e91430" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.DirectoryServices.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.DirectoryServices</import><import>System.Data</import><import>System.Collections.Generic</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="523110d9-eeda-40f1-bb67-3c4143031df7" name="Clean Up" type="SubSheetInfo"><subsheetid>662c09a1-3bc2-4fa2-8868-a0d9ea7c75c9</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="cf17e694-be17-407a-9cd5-be475347d465" name="Start" type="Start"><subsheetid>662c09a1-3bc2-4fa2-8868-a0d9ea7c75c9</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>e0780d70-879e-4ea6-8ad8-3a359172437a</onsuccess></stage><stage stageid="e0780d70-879e-4ea6-8ad8-3a359172437a" name="End" type="End"><subsheetid>662c09a1-3bc2-4fa2-8868-a0d9ea7c75c9</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="71d89eb4-0c92-43ca-befb-af1496574a49" name="new" type="Note"><subsheetid>662c09a1-3bc2-4fa2-8868-a0d9ea7c75c9</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="d72279b1-7dc0-444e-8039-2c0457eccf8b" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="5fd6d3fd-ca63-4d3b-9506-c1025cd8700a" name="User Exists (UserPrincipalName)" type="SubSheetInfo"><subsheetid>2e4227d1-af71-42a9-a089-232d8b59e297</subsheetid><narrative>Returns true if the provided username matches a userPrincipalName found within the directory.</narrative><display x="-195" y="-45" w="150" h="90" /></stage><stage stageid="5a387adf-b102-451c-9b3c-fc700126fd2f" name="Start" type="Start"><subsheetid>2e4227d1-af71-42a9-a089-232d8b59e297</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="Username" narrative="The username to be matched against the userPrincipalName attributes in the directory." stage="Username" /></inputs><onsuccess>b3984a1a-dbe0-4ae7-9b39-8d99d2b1c094</onsuccess></stage><stage stageid="09db9ff3-2580-490d-953f-4da05197e9c0" name="End" type="End"><subsheetid>2e4227d1-af71-42a9-a089-232d8b59e297</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="flag" name="Exists" narrative="Indicates whether one or more items matching the criteria was found" stage="Exists" /></outputs></stage><stage stageid="bf04c136-0f85-4657-b188-d41975100ec8" name="Exists" type="Data"><subsheetid>2e4227d1-af71-42a9-a089-232d8b59e297</subsheetid><display x="105" y="30" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3984a1a-dbe0-4ae7-9b39-8d99d2b1c094" name="Check Exists (Username)" type="Code"><subsheetid>2e4227d1-af71-42a9-a089-232d8b59e297</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="SearchString" expr="[Username]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>09db9ff3-2580-490d-953f-4da05197e9c0</onsuccess><code><![CDATA[Dim ds As New DirectoryServices.DirectorySearcher("(userPrincipalName=" & SearchString & ")")
Exists = ds.FindOne() IsNot Nothing]]></code></stage><stage stageid="a0fc2c0b-a181-4abb-bb36-2f0873076bcc" name="Username" type="Data"><subsheetid>2e4227d1-af71-42a9-a089-232d8b59e297</subsheetid><display x="105" y="-60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cf00ffe9-fbb9-4411-8b99-7843633c35d7" name="Add User to Group" type="SubSheetInfo"><subsheetid>acccb6d8-eddc-4391-ad41-4d0a045c4c6e</subsheetid><narrative>Adds the specified user as a member of the target group.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6d6bfe10-ffcc-428d-84f4-a1e48d7912aa" name="Start" type="Start"><subsheetid>acccb6d8-eddc-4391-ad41-4d0a045c4c6e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="UserDn" narrative="The distinguished name (DN) of the User within the directory. (e.g. CN=Joe Bloggs,OU=Technicians,DC=mydomain,DC=local)" stage="UserDn" /><input type="text" name="GroupDn" narrative="The distinguished name (DN) of the Group within the directory. (e.g. CN=PrivUsers,OU=SecGroups,DC=mydomain,DC=local)" stage="GroupDn" /></inputs><onsuccess>40530e11-5cb7-45f0-b8a6-dc0914d6dad5</onsuccess></stage><stage stageid="3bd35a40-d272-4bd2-8a93-b6d6b1670fa3" name="End" type="End"><subsheetid>acccb6d8-eddc-4391-ad41-4d0a045c4c6e</subsheetid><loginhibit /><display x="15" y="-15" /></stage><stage stageid="40530e11-5cb7-45f0-b8a6-dc0914d6dad5" name="Add User to Group" type="Code"><subsheetid>acccb6d8-eddc-4391-ad41-4d0a045c4c6e</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><inputs><input type="text" name="UserDn" expr="[UserDn]" /><input type="text" name="GroupDn" expr="[GroupDn]" /></inputs><onsuccess>3bd35a40-d272-4bd2-8a93-b6d6b1670fa3</onsuccess><code><![CDATA[Dim dirEntry As New DirectoryEntry("LDAP://" & GroupDn)
dirEntry.Properties("member").Add(UserDn)
dirEntry.CommitChanges()
dirEntry.Close()]]></code></stage><stage stageid="da692491-49dd-4796-bec6-0d58ffd1c171" name="UserDn" type="Data"><subsheetid>acccb6d8-eddc-4391-ad41-4d0a045c4c6e</subsheetid><display x="135" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dbce93a2-1be1-4a89-ab50-a907a2dca418" name="GroupDn" type="Data"><subsheetid>acccb6d8-eddc-4391-ad41-4d0a045c4c6e</subsheetid><display x="135" y="-60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3ad94b04-e258-44f7-8989-2043f6c1260d" name="Create User" type="SubSheetInfo"><subsheetid>dda5203f-ccbc-4ec2-869c-b52f72cd7f6d</subsheetid><narrative>Creates a new active user within the specified path location.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9319e554-7561-4725-8ddf-1c445b3019f0" name="Start" type="Start"><subsheetid>dda5203f-ccbc-4ec2-869c-b52f72cd7f6d</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Path" narrative="The distinguished name of the path where the new user will be located (e.g. the path of the parent container)." stage="Path" /><input type="password" name="Password" narrative="Password for the new account." stage="Password" /><input type="text" name="Username" narrative="The user logon name. Populates the sAMAccountName attribute (e.g. JBloggs)" stage="Username" /><input type="text" name="First Name" narrative="The first name of the user. Populates the givenName attribute." stage="First Name" /><input type="text" name="Last Name" narrative="The last name of the user. Populates the sn attribute." stage="Surname" /><input type="text" name="Display Name" narrative="The display name for the user. Must be unique within the target path. Populates the common name (CN) attribute." stage="Display Name" /><input type="text" name="User Principal Name" narrative="The user principle name. Typically the email address of the new account. Populates the userPrincipalName attribute." stage="User Principal Name" /></inputs><onsuccess>ba33d129-b524-47cb-8404-172a6b38e51a</onsuccess></stage><stage stageid="fbfec37b-4050-41ec-90c0-562030a810a5" name="End" type="End"><subsheetid>dda5203f-ccbc-4ec2-869c-b52f72cd7f6d</subsheetid><loginhibit /><display x="15" y="-15" /></stage><stage stageid="ba33d129-b524-47cb-8404-172a6b38e51a" name="Create User" type="Code"><subsheetid>dda5203f-ccbc-4ec2-869c-b52f72cd7f6d</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><inputs><input type="text" name="Path" expr="[Path]" /><input type="text" name="Password" expr="[Password]" /><input type="text" name="Username" expr="[Username]" /><input type="text" name="FirstName" expr="[First Name]" /><input type="text" name="Surname" expr="[Surname]" /><input type="text" name="DisplayName" expr="[Display Name]" /><input type="text" name="UserPrincipalName" expr="[User Principal Name]" /></inputs><onsuccess>fbfec37b-4050-41ec-90c0-562030a810a5</onsuccess><code><![CDATA[Dim oGUID As String = String.Empty
Dim connectionPrefix As String = "LDAP://" & Path
Dim dirEntry As New DirectoryEntry(connectionPrefix)
Dim newUser As DirectoryEntry = dirEntry.Children.Add("CN=" & DisplayName, "user")
newUser.Properties("givenName").Value = FirstName
newUser.Properties("sn").Value = Surname
newUser.Properties("displayName").Value = DisplayName
newUser.Properties("samAccountName").Value = Username
newUser.Properties("userPrincipalName").Value = UserPrincipalName
newUser.CommitChanges()
oGUID = newUser.Guid.ToString()

newUser.Invoke("SetPassword", New Object() {Password})
newUser.CommitChanges()

Dim val As Integer = CInt(newUser.Properties("userAccountControl").Value)
val = val And Not &H2 'ADS_UF_NORMAL_ACCOUNT;
newUser.Properties("userAccountControl").Value = val
newUser.CommitChanges()

dirEntry.Close()
newUser.Close()]]></code></stage><stage stageid="733f63fd-82d2-4150-bc58-c5f59f5f81c4" name="Path" type="Data"><subsheetid>dda5203f-ccbc-4ec2-869c-b52f72cd7f6d</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="87dbe88a-bf30-466d-be0a-5812814eb6a2" name="Password" type="Data"><subsheetid>dda5203f-ccbc-4ec2-869c-b52f72cd7f6d</subsheetid><display x="450" y="-105" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="09b1d011-5f86-4092-b61a-9aa27b7876f3" name="Username" type="Data"><subsheetid>dda5203f-ccbc-4ec2-869c-b52f72cd7f6d</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a5a9f2f0-f09e-470c-9bce-e2ebe72d2f66" name="First Name" type="Data"><subsheetid>dda5203f-ccbc-4ec2-869c-b52f72cd7f6d</subsheetid><display x="210" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fb338aac-30f2-4155-89ca-41f8813617f1" name="Surname" type="Data"><subsheetid>dda5203f-ccbc-4ec2-869c-b52f72cd7f6d</subsheetid><display x="270" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ef1882f-4087-4abc-b911-16b8e8870563" name="Display Name" type="Data"><subsheetid>dda5203f-ccbc-4ec2-869c-b52f72cd7f6d</subsheetid><display x="390" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="339f3665-0acc-4077-b89e-27731144e950" name="User Principal Name" type="Data"><subsheetid>dda5203f-ccbc-4ec2-869c-b52f72cd7f6d</subsheetid><display x="330" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bcb7031-4d73-422d-88a0-e1a1b2e8e24d" name="User Exists (Displayname)" type="SubSheetInfo"><subsheetid>4a031129-3c2d-49a0-8703-809adfa0b82c</subsheetid><narrative>Returns true if the provided display name is found within the directory.  This search uses Common Name (CN) which whilst typically applies to users, can also apply to other objects such as security groups and various system generated containers.  This action was previously named "User Exists".</narrative><display x="-195" y="-30" w="150" h="120" /></stage><stage stageid="eab480ab-a6f1-455c-bd90-bad3610f2edc" name="Start" type="Start"><subsheetid>4a031129-3c2d-49a0-8703-809adfa0b82c</subsheetid><loginhibit /><display x="0" y="-75" /><inputs><input type="text" name="Displayname" narrative="The display name that will be matched against the Common Name attributes in the directory." stage="Displayname" /></inputs><onsuccess>ee9b42a7-6913-42ea-80fd-793b8f29bb6e</onsuccess></stage><stage stageid="a7c43476-5451-49a9-b84b-54322fcc1f11" name="End" type="End"><subsheetid>4a031129-3c2d-49a0-8703-809adfa0b82c</subsheetid><loginhibit /><display x="0" y="15" /><outputs><output type="flag" name="Exists" narrative="Indicates whether one or more items matching the criteria was found" stage="Exists" /></outputs></stage><stage stageid="41809b06-b958-46df-acb7-d3472e29ac80" name="Exists" type="Data"><subsheetid>4a031129-3c2d-49a0-8703-809adfa0b82c</subsheetid><display x="90" y="15" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee9b42a7-6913-42ea-80fd-793b8f29bb6e" name="Check Exists (DisplayName)" type="Code"><subsheetid>4a031129-3c2d-49a0-8703-809adfa0b82c</subsheetid><loginhibit /><display x="0" y="-30" w="90" h="30" /><inputs><input type="text" name="SearchString" expr="[Displayname]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>a7c43476-5451-49a9-b84b-54322fcc1f11</onsuccess><code><![CDATA[Dim ds As New DirectoryServices.DirectorySearcher("(CN=" & SearchString & ")")
Exists = ds.FindOne() IsNot Nothing]]></code></stage><stage stageid="c6273f8a-a080-46d8-bf08-d4d011b6adaa" name="Displayname" type="Data"><subsheetid>4a031129-3c2d-49a0-8703-809adfa0b82c</subsheetid><display x="90" y="-75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d4ea999-e1ff-40d2-8f39-223aa1864a32" name="Object Exists (Dynamic)" type="SubSheetInfo"><subsheetid>e997a51f-4c28-4d11-bf3c-350c46bd9c3e</subsheetid><narrative>Returns true if the provided search string (attribute and value) is found to match within the directory. Supports many different object types within the directory.  Examples include:
Containers: "CN=Users".  
Organizational Units: "OU=Blue Prism Users".  
Security Groups: "CN=SecGroup_BluePrismUsers".  
Users: "sAMAccountName=JoeBloggs"; "CN=Joe Bloggs".  </narrative><display x="-180" y="-30" w="150" h="210" /></stage><stage stageid="52898126-4a8a-4c67-8a7b-2d3d8b1c1f4e" name="Start" type="Start"><subsheetid>e997a51f-4c28-4d11-bf3c-350c46bd9c3e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="SearchString" narrative="The full search string to be evaluated. (E.g. &quot;userPrincipalName=joebloggs@example.com&quot;)" stage="SearchString" /></inputs><onsuccess>c4867d2c-bc73-4adc-8986-721ff8c90d95</onsuccess></stage><stage stageid="03cf471b-043a-4a17-9cb9-241e2c269bdf" name="End" type="End"><subsheetid>e997a51f-4c28-4d11-bf3c-350c46bd9c3e</subsheetid><loginhibit /><display x="15" y="-15" /><outputs><output type="flag" name="Exists" narrative="Indicates whether one or more items matching the criteria was found" stage="Exists" /></outputs></stage><stage stageid="827af0b5-0b6a-4e44-82f9-ed0e29586e38" name="Exists" type="Data"><subsheetid>e997a51f-4c28-4d11-bf3c-350c46bd9c3e</subsheetid><display x="135" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4867d2c-bc73-4adc-8986-721ff8c90d95" name="Check Exists (Dynamic)" type="Code"><subsheetid>e997a51f-4c28-4d11-bf3c-350c46bd9c3e</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><inputs><input type="text" name="SearchString" expr="[SearchString]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>03cf471b-043a-4a17-9cb9-241e2c269bdf</onsuccess><code><![CDATA[Dim ds As New DirectoryServices.DirectorySearcher("(" & SearchString & ")")
Exists = ds.FindOne() IsNot Nothing]]></code></stage><stage stageid="f430f354-bf33-4ed6-b3d3-1c02f25b180b" name="SearchString" type="Data"><subsheetid>e997a51f-4c28-4d11-bf3c-350c46bd9c3e</subsheetid><display x="135" y="-105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0681a85f-245e-4c4d-8bc6-71ecd3740357" name="User Exists" type="SubSheetInfo"><subsheetid>bd42e76e-2cb9-4894-afa9-96a8f2d1d05a</subsheetid><narrative>Deprecated action. This action has been replaced by one of three actions:
1) Check User Exists (Displayname)
2) Check User Exists (UserPrincipalName)
3) Check Object Exists (Dynamic)</narrative><display x="-135" y="-30" w="240" h="90" /></stage><stage stageid="b6751fbe-2ae6-432f-8330-aac80b642030" name="Start" type="Start"><subsheetid>bd42e76e-2cb9-4894-afa9-96a8f2d1d05a</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>733a7174-5ee7-499f-b334-7c47fa5ea34c</onsuccess></stage><stage stageid="733a7174-5ee7-499f-b334-7c47fa5ea34c" name="End" type="End"><subsheetid>bd42e76e-2cb9-4894-afa9-96a8f2d1d05a</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="bacba311-e04f-499f-8ad0-9c67557e46e8" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="225" y="-30" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="4de8e929-733e-4d41-a647-5057b86c4802" name="Note1" type="Note"><loginhibit /><narrative>Version 10.1</narrative><display x="15" y="-150" w="90" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="d3490816-911e-48bd-92bb-3ef2be69598d" name="Reset User Password" type="SubSheetInfo"><subsheetid>4530ffb9-5984-4ceb-884f-8eaf7226eca5</subsheetid><narrative>Resets a user password to the provided new password.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4f30152c-c1de-481e-bbc2-f1502d3727f7" name="Start" type="Start"><subsheetid>4530ffb9-5984-4ceb-884f-8eaf7226eca5</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="UserDn" narrative="The distinguished name (DN) of the User within the directory. (e.g. CN=Joe Bloggs,OU=Technicians,DC=mydomain,DC=local)" stage="UserDn" /><input type="password" name="New Password" narrative="The password designated to replace the user's current password." stage="New Password" /></inputs><onsuccess>48782ae6-f950-481e-b386-6d6f79793c09</onsuccess></stage><stage stageid="8b21727e-f07c-4942-8117-a096f2b1478d" name="End" type="End"><subsheetid>4530ffb9-5984-4ceb-884f-8eaf7226eca5</subsheetid><loginhibit /><display x="15" y="-15" /><outputs><output type="flag" name="Success" narrative="A flag indicating the success of the action." stage="Success" /><output type="text" name="Message" narrative="Contains an error message if the action is unsuccessful." stage="Message" /></outputs></stage><stage stageid="be788853-f129-47ca-acc2-72bbad877a98" name="UserDn" type="Data"><subsheetid>4530ffb9-5984-4ceb-884f-8eaf7226eca5</subsheetid><loginhibit /><display x="135" y="-105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e65c98f6-106e-4309-8944-21ff7c09d343" name="New Password" type="Data"><subsheetid>4530ffb9-5984-4ceb-884f-8eaf7226eca5</subsheetid><loginhibit /><display x="135" y="-75" w="90" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="48782ae6-f950-481e-b386-6d6f79793c09" name="Reset Password" type="Code"><subsheetid>4530ffb9-5984-4ceb-884f-8eaf7226eca5</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><inputs><input type="text" name="UserDn" expr="[UserDn]" /><input type="password" name="New Password" expr="[New Password]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>8b21727e-f07c-4942-8117-a096f2b1478d</onsuccess><code><![CDATA[Message = ""
Success = True
Try
	Dim uEntry As New DirectoryEntry("LDAP://" & UserDn)
	'Set New Password
	uEntry.Invoke("SetPassword", new object() { New_Password })
	'Unlock Account
	uEntry.Properties("LockOutTime").Value = 0

	uEntry.CommitChanges()
Catch ex As Exception
    Message = ex.Message
	Success = False
End Try]]></code></stage><stage stageid="44bce4e5-debe-430e-8ef9-24dbef0e6aff" name="Message" type="Data"><subsheetid>4530ffb9-5984-4ceb-884f-8eaf7226eca5</subsheetid><display x="135" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="21c183be-2fb5-4a39-9545-7fc319edbd31" name="Success" type="Data"><subsheetid>4530ffb9-5984-4ceb-884f-8eaf7226eca5</subsheetid><display x="135" y="-15" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="b6ed4f80-ee0f-40e5-9dcb-af385109ddba" name="Tutorial - Python-NET" xmlns="http://www.blueprism.co.uk/product/process"><process name="Tutorial - Python-NET" version="1.0" bpversion="7.4.1.15931" narrative="" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>a3a932b8-9c23-4850-8e49-75890dc5d4bd</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="853bb3b8-dcb2-4e58-965d-67e059d7fb98" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="31c7bbbb-9035-4d6f-b4cf-f4f4475d0577" type="Normal" published="False"><name>SImply Numpy Maths</name><view><camerax>0</camerax><cameray>-20</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a237350c-1101-4cc6-8457-b565d7a9d875" type="Normal" published="False"><name>LangChain Demo</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="39a0ea9d-5dee-4e88-8b44-f2c4c3097f59" type="Normal" published="False"><name>Pandas Demo</name><view><camerax>-107</camerax><cameray>202</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="77e944df-f12b-4eac-b355-896cd26c16a7" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>391bd69f-e2e7-4529-9438-6301206908dd</onsuccess></stage><stage stageid="391bd69f-e2e7-4529-9438-6301206908dd" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="e796ef08-66fb-421b-93f6-339b000c0686" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>C:\Development\python\PythonNETSupport\Python.Runtime.dll</reference><reference>C:\Development\python\PythonNETSupport\Microsoft.CSharp.dll</reference><reference>netstandard.dll</reference><reference>C:\Development\python\PythonNETSupport\System.Core.dll</reference><reference>C:\Development\python\PythonNETSupport\System.Reflection.dll</reference><reference>System.Windows.Forms.dll</reference><reference>NewtonSoft.Json.dll</reference></references><imports><import>System</import><import>System.Data</import><import>Python.Runtime</import><import>System.Collections.Generic</import><import>Microsoft.CSharp</import><import>System.Runtime.CompilerServices</import><import>System.Windows.Forms</import><import>Newtonsoft.Json</import></imports><language>csharp</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[public class CompanyAnalyzer : IDisposable
{
    private dynamic edgar;
    private dynamic langchain;
    private dynamic vectorstores;
    private dynamic openai;
    private dynamic chain;
    private dynamic textSplitter;
    private dynamic faissInstanceGlobal;
    private bool initialized = false;
    private bool disposed = false;

    public string PythonDllPath { get; set; }
    public string OpenAIApiKey { get; set; }
    public bool IsInitialized
    { get { return initialized; } }
    public string ExceptionData { get; set; }

    public CompanyAnalyzer(string pythonDllPath, string apiKey)
    {
        ExceptionData = string.Empty;
        PythonDllPath = pythonDllPath;
        OpenAIApiKey = apiKey;
        initialized = Initialize();
    }

    public bool Initialize()
    {
        bool success = false;
        try
        {
            if (!initialized && !PythonEngine.IsInitialized)
            {
                // Add the path to the Python modules.
                Runtime.PythonDLL = PythonDllPath;

                // Initialize the Python engine.
                PythonEngine.Initialize();

                // Import the Python modules.
                using (Py.GIL())
                {
                    edgar = Py.Import("edgar");
                    langchain = Py.Import("langchain");
                    vectorstores = Py.Import("langchain_community.vectorstores.faiss");
                    textSplitter = Py.Import("langchain.text_splitter");
                    openai = Py.Import("langchain_openai");
                    chain = Py.Import("langchain.chains");
                }

                success = PythonEngine.IsInitialized;
            }
        }
        catch (Exception ex)
        {
            if (ex.InnerException != null)
            {
                ExceptionData = string.Format("Initialize - Exception:{0}{2} Inner Exception:{1}", ex.Message, ex.InnerException.Message, Environment.NewLine);
            }
            else
            {
                ExceptionData = string.Format("Initialize - Exception:{0}{1} ", ex.Message, Environment.NewLine);
            }

            PythonEngine.Shutdown();
        }

        return success;
    }

    public void Dispose()
    {
        Dispose(disposing: true);
        // This object will be cleaned up by the Dispose method.
        // Therefore, you should call GC.SuppressFinalize to
        // take this object off the finalization queue
        // and prevent finalization code for this object
        // from executing a second time.
        GC.SuppressFinalize(this);
    }

    protected virtual void Dispose(bool disposing)
    {
        // Check to see if Dispose has already been called.
        if (!this.disposed)
        {
            // If disposing equals true, dispose all managed
            // and unmanaged resources.
            if (disposing)
            {
                // Dispose managed resources.
            }

            // Call the appropriate methods to clean up
            // unmanaged resources here.
            // If disposing is false,
            // only the following code is executed.
            PythonEngine.Shutdown();
            initialized = false;

            // Note disposing has been done.
            disposed = true;
        }
    }

    private string Slice(string text, int start, int end)
    {
        if (start < 0)
            start = Math.Max(0, text.Length + start);
        if (end < 0)
            end = Math.Max(0, text.Length + end);
        return text.Substring(start, end - start);
    }

    private void BuildVectorStore(string companyName, string companyCIK)
    {
        try
        {
            if (initialized)
            {
                using (Py.GIL())
                {
                    dynamic company = edgar.Company(companyName, companyCIK);
                    dynamic doc = company.get_10K();
                    dynamic text = edgar.TXTML.parse_full_10K(doc);

                    Console.WriteLine(text);

                    dynamic lts = ((string)text).Length / 3;
                    dynamic lte = lts * 2;

                    dynamic recursiveTextSplitter = textSplitter.RecursiveCharacterTextSplitter(chunk_size: 3000, chunk_overlap: 300);
                    dynamic docs = recursiveTextSplitter.create_documents(new List<string> { Slice(Convert.ToString(text), Convert.ToInt32(lts), Convert.ToInt32(lte)) });

                    // Get your embeddings engine ready
                    dynamic embeddings = openai.OpenAIEmbeddings(openai_api_key: OpenAIApiKey);

                    //**********************************************************************
                    // NOTE: This will make an API call to OpenAI and incur an expense.
                    //**********************************************************************
                    // Embed your documents and combine with the raw text in a pseudo db.
                    dynamic docsearch = vectorstores.FAISS.from_documents(docs, embeddings);
                    faissInstanceGlobal = docsearch;
                }
            }
            else
            {
                ExceptionData = "Information: BuildVectorStore - Python Not Initialized";
            }
        }
        catch (Exception ex)
        {
            if (ex.InnerException != null)
            {
                ExceptionData = string.Format("BuildVectorStore - Exception:{0}{2} Inner Exception:{1}", ex.Message, ex.InnerException.Message, Environment.NewLine);
            }
            else
            {
                ExceptionData = string.Format("BuildVectorStore - Exception:{0}{1} ", ex.Message, Environment.NewLine);
            }

            if (PythonEngine.IsInitialized)
            {
                PythonEngine.Shutdown();
            }
        }
    }

    public string GetRecommendation(string companyName, string companyCIK, string prompt)
    {
        string output = null;
        try
        {
            if (initialized)
            {
                using (Py.GIL())
                {
                    dynamic llm = openai.OpenAI(temperature: 0.15, openai_api_key: OpenAIApiKey);

                    if (faissInstanceGlobal == null)
                    {
                        BuildVectorStore(companyName, companyCIK);
                    }

                    dynamic qa = chain.RetrievalQA.from_chain_type(llm: llm, chain_type: "stuff", retriever: faissInstanceGlobal.as_retriever());
                    dynamic query = prompt;
                    dynamic analysis = qa.invoke(query);

                    output = analysis.ToString();
                }
            }
            else
            {
                ExceptionData = "Information: GetRecommendation - Python Not Initialized";
            }

            return output;
        }
        catch (Exception ex)
        {
            if (ex.InnerException != null)
            {
                ExceptionData = string.Format("Initialize - Exception:{0}{2} Inner Exception:{1}", ex.Message, ex.InnerException.Message, Environment.NewLine);
            }
            else
            {
                ExceptionData = string.Format("Initialize - Exception:{0}{1} ", ex.Message, Environment.NewLine);
            }

            if (PythonEngine.IsInitialized)
            {
                PythonEngine.Shutdown();
            }
        }

        return output;
    }
}

public class ProcessSurveyData : IDisposable
{
    private dynamic pandas;
    private bool initialized = false;
    private bool disposed = false;

    public string PythonDllPath { get; set; }
    public string OpenAIApiKey { get; set; }
    public bool IsInitialized { get { return initialized; } }
    public string DataFilePath { get; set; }
    public string Header { get; set; }
    public string Shape { get; set; }
    public string Json { get; set; }
    public DataTable DataFrameDT { get; set; }
    public string ExceptionData { get; set; }

    public ProcessSurveyData(string pythonDllPath)
    {
        ExceptionData = string.Empty;
        PythonDllPath = pythonDllPath;
        initialized = Initialize();
    }

    public bool Initialize()
    {
        bool success = false;
        try
        {
            if (!initialized && !PythonEngine.IsInitialized)
            {
                // Add the path to the Python modules.
                Runtime.PythonDLL = PythonDllPath;

                // Initialize the Python engine.
                PythonEngine.Initialize();

                // Import the Python modules.
                using (Py.GIL())
                {
                    pandas = Py.Import("pandas");
                }
                success = PythonEngine.IsInitialized;
            }
        }
        catch (Exception ex)
        {
            if (ex.InnerException != null)
            {
                ExceptionData = string.Format("Initialize - Exception:{0}{2} Inner Exception:{1}", ex.Message, ex.InnerException.Message, Environment.NewLine);
            }
            else
            {
                ExceptionData = string.Format("Initialize - Exception:{0}{1} ", ex.Message, Environment.NewLine);
            }

            if (PythonEngine.IsInitialized)
            {
                PythonEngine.Shutdown();
            }
        }

        return success;
    }

    public void Dispose()
    {
        Dispose(disposing: true);
        // This object will be cleaned up by the Dispose method.
        // Therefore, you should call GC.SuppressFinalize to
        // take this object off the finalization queue
        // and prevent finalization code for this object
        // from executing a second time.
        GC.SuppressFinalize(this);
    }

    protected virtual void Dispose(bool disposing)
    {
        // Check to see if Dispose has already been called.
        if (!this.disposed)
        {
            // If disposing equals true, dispose all managed
            // and unmanaged resources.
            if (disposing)
            {
                // Dispose managed resources.
            }

            // Call the appropriate methods to clean up
            // unmanaged resources here.
            // If disposing is false,
            // only the following code is executed.
            PythonEngine.Shutdown();
            initialized = false;

            // Note disposing has been done.
            disposed = true;
        }
    }

    public void BuildDataFrame(string datafilepath)
    {
        try
        {
            if (initialized)
            {
                using (Py.GIL())
                {
                    dynamic df = pandas.read_csv(datafilepath);
                    Header = df.head.ToString();
                    Shape = df.shape.ToString();
                    Json = df.to_json(orient: "records");
                    DataFrameDT = JsonConvert.DeserializeObject<DataTable>(Json);
                }
            }
        }
        catch (Exception ex)
        {
            if (ex.InnerException != null)
            {
                ExceptionData = string.Format("Exception:{0}{2} Inner Exception:{1}", ex.Message, ex.InnerException.Message, Environment.NewLine);
            }
            else
            {
                ExceptionData = string.Format("Exception:{0}{1} ", ex.Message, Environment.NewLine);
            }

            if (PythonEngine.IsInitialized)
            {
                PythonEngine.Shutdown();
            }
        }
    }
}]]></code></stage><stage stageid="949576eb-eb85-482d-bd9d-35bdd7dbd788" name="Clean Up" type="SubSheetInfo"><subsheetid>853bb3b8-dcb2-4e58-965d-67e059d7fb98</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="915b5fc3-d13e-48f1-a607-920ea35fbe36" name="Start" type="Start"><subsheetid>853bb3b8-dcb2-4e58-965d-67e059d7fb98</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>04f24a40-6018-48bd-976b-ab32a5c6748e</onsuccess></stage><stage stageid="04f24a40-6018-48bd-976b-ab32a5c6748e" name="End" type="End"><subsheetid>853bb3b8-dcb2-4e58-965d-67e059d7fb98</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="4b191d30-c703-480a-9d50-4060a01ec716" name="SImply Numpy Maths" type="SubSheetInfo"><subsheetid>31c7bbbb-9035-4d6f-b4cf-f4f4475d0577</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6a5536ba-8299-4ed4-9181-d63c7481e5be" name="Start" type="Start"><subsheetid>31c7bbbb-9035-4d6f-b4cf-f4f4475d0577</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>76b9c115-8845-469b-b7ab-d4706299e785</onsuccess></stage><stage stageid="c6279dd6-d1b8-41bc-9617-917e1efa3313" name="End" type="End"><subsheetid>31c7bbbb-9035-4d6f-b4cf-f4f4475d0577</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="3566ccde-1c4c-4af5-b9f9-41e2b4135236" name="" type="Note"><subsheetid>853bb3b8-dcb2-4e58-965d-67e059d7fb98</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="57abb31b-e74d-43c6-a790-2b0741b1930d" name="" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="76b9c115-8845-469b-b7ab-d4706299e785" name="PythonNET" type="Code"><subsheetid>31c7bbbb-9035-4d6f-b4cf-f4f4475d0577</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="PythonDLLPath" expr="[PythonDLLPath]" /></inputs><outputs><output type="text" name="Output" stage="PythonOut" /></outputs><onsuccess>c6279dd6-d1b8-41bc-9617-917e1efa3313</onsuccess><code><![CDATA[Output = string.Empty;
Runtime.PythonDLL = PythonDLLPath;
PythonEngine.Initialize();
using (Py.GIL())
{
    dynamic np = Py.Import("numpy");
    Output = Output + string.Format("Cosine Pi *2:{0}{1}",(np.cos(np.pi * 2)), Environment.NewLine);

    dynamic sin = np.sin;
    Output = Output + string.Format("Sin 5:{0}{1}", sin(5), Environment.NewLine);

    double c = (double)(np.cos(5) + sin(5));
    Output = Output + string.Format("Cosine 5 + Sin 5:{0}{1}",(c), Environment.NewLine);

    dynamic a = np.array(new List<float> { 1, 2, 3 });
    Output = Output + string.Format("Data Type:{0}{1}",a.dtype, Environment.NewLine);

    dynamic b = np.array(new List<float> { 6, 5, 4 }, dtype: np.int32);
    Output = Output + string.Format("Data Type:{0}{1}",b.dtype, Environment.NewLine);
}

PythonEngine.Shutdown();
]]></code></stage><stage stageid="d7818ac6-ca50-4ac3-a34d-6a59590fce64" name="PythonOut" type="Data"><subsheetid>31c7bbbb-9035-4d6f-b4cf-f4f4475d0577</subsheetid><loginhibit /><display x="-195" y="150" w="240" h="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9f17e2c4-bb16-4b28-9e6f-0c30a579a193" name="PythonDLLPath" type="Data"><subsheetid>31c7bbbb-9035-4d6f-b4cf-f4f4475d0577</subsheetid><display x="-195" y="15" w="270" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\\Development\\Python311\\python311.dll</initialvalue><private /><alwaysinit /></stage><stage stageid="36e0909e-2279-4dfd-b07d-c01067f9b4f0" name="LangChain Demo" type="SubSheetInfo"><subsheetid>a237350c-1101-4cc6-8457-b565d7a9d875</subsheetid><narrative>Requires the following Python libraries to be installed:
Edgar
langchain
langchain_community.vectorstores.faiss
langchain.text_splitter
langchain_openai
langchain.chains

These can all be installed into your python environment using pip.
eg C:\ pip install edgar

</narrative><display x="-195" y="-225" w="270" h="120" /><font family="Segoe UI" size="10" style="Regular" color="3366FF" /></stage><stage stageid="1837b155-348c-49f0-99a7-ef2068a8a519" name="Start" type="Start"><subsheetid>a237350c-1101-4cc6-8457-b565d7a9d875</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>2a0baf2a-e984-40cc-ac95-d2b902d4dd17</onsuccess></stage><stage stageid="69319c09-382a-49b2-bf23-6a87e7e91a17" name="End" type="End"><subsheetid>a237350c-1101-4cc6-8457-b565d7a9d875</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="2a0baf2a-e984-40cc-ac95-d2b902d4dd17" name="Langchain Demo" type="Code"><subsheetid>a237350c-1101-4cc6-8457-b565d7a9d875</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="PythonDLLPath" expr="[PythonDLLPath]" /><input type="text" name="openAIApiKey" expr="[OpenAIapikey]" /><input type="text" name="CompanyName" expr="[Company Name]" /><input type="text" name="CompanyCIK" expr="[Company CIK]" /><input type="text" name="Prompt" expr="[Prompt]" /></inputs><outputs><output type="text" name="Output" stage="PythonOut" /></outputs><onsuccess>69319c09-382a-49b2-bf23-6a87e7e91a17</onsuccess><code><![CDATA[Output = string.Empty;

CompanyAnalyzer ca = new CompanyAnalyzer(PythonDLLPath, openAIApiKey);
if (ca.IsInitialized)
{
	Output += "Python Initialized";
	dynamic analysis = ca.GetRecommendation(CompanyName, CompanyCIK, Prompt);
	Output += Environment.NewLine;
	Output += (string)analysis;
}
else
{
	Output += "Python Initialization Failed. Retrying..";
	ca.PythonDllPath = PythonDLLPath;
	ca.OpenAIApiKey = openAIApiKey;
	ca.Initialize();
	if (ca.IsInitialized)
	{
		Output += "Python Initialized";
		dynamic analysis = ca.GetRecommendation(CompanyName, CompanyCIK, Prompt);
		Output += Environment.NewLine;
		Output += (string)analysis;
	}
	else
	{
		Output += "Python Initialization Failed Again.";
	}
}

ca.Dispose();
]]></code></stage><stage stageid="80a15668-fa95-4b2c-bd43-ae5df8d7f720" name="PythonOut" type="Data"><subsheetid>a237350c-1101-4cc6-8457-b565d7a9d875</subsheetid><loginhibit /><display x="-195" y="285" w="270" h="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bf7e698c-ccde-4d77-a48f-3c11dcc142dc" name="PythonDLLPath" type="Data"><subsheetid>a237350c-1101-4cc6-8457-b565d7a9d875</subsheetid><display x="-195" y="-75" w="270" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\\Development\\Python311\\python311.dll</initialvalue><private /><alwaysinit /></stage><stage stageid="43760723-8eee-4e9a-a7a9-ef5f411bdc18" name="OpenAIapikey" type="Data"><subsheetid>a237350c-1101-4cc6-8457-b565d7a9d875</subsheetid><loginhibit /><narrative>You will need to acquire this from https://openai.com/api/ There may be a cost implication to using this example.

</narrative><display x="-195" y="-15" w="300" h="60" /><datatype>text</datatype><initialvalue xml:space="preserve">&lt;Your OpenAI API Key goes here&gt;</initialvalue><private /><alwaysinit /></stage><stage stageid="f6138835-4762-46c8-a168-46cf2bad8656" name="Company Name" type="Data"><subsheetid>a237350c-1101-4cc6-8457-b565d7a9d875</subsheetid><display x="-270" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">APPLE INC</initialvalue><private /><alwaysinit /></stage><stage stageid="19a95f7e-7a1d-41d2-ab61-cc82c3a8dc8d" name="Company CIK" type="Data"><subsheetid>a237350c-1101-4cc6-8457-b565d7a9d875</subsheetid><display x="-120" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">0000320193</initialvalue><private /><alwaysinit /></stage><stage stageid="94632086-4038-4ba2-b8ef-1bbebf7c54b0" name="Prompt" type="Data"><subsheetid>a237350c-1101-4cc6-8457-b565d7a9d875</subsheetid><display x="-195" y="120" w="240" h="60" /><datatype>text</datatype><initialvalue xml:space="preserve">Who are this firms key competitors? What are the principle threats?</initialvalue><private /><alwaysinit /></stage><stage stageid="bccf266c-63ab-4abe-adcd-04455db170de" name="Pandas Demo" type="SubSheetInfo"><subsheetid>39a0ea9d-5dee-4e88-8b44-f2c4c3097f59</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ba9c44be-ca82-4b0e-917d-bde1d371eb04" name="Start" type="Start"><subsheetid>39a0ea9d-5dee-4e88-8b44-f2c4c3097f59</subsheetid><loginhibit /><display x="30" y="45" /><onsuccess>4ff8484d-c5a2-4139-8c9b-2ce75e1bd664</onsuccess></stage><stage stageid="74e1f36f-ddf8-4faf-8257-806b42dc34f1" name="End" type="End"><subsheetid>39a0ea9d-5dee-4e88-8b44-f2c4c3097f59</subsheetid><loginhibit /><display x="30" y="240" /></stage><stage stageid="d94491d2-af65-45b6-b41b-f91c67e7619b" name="PythonDLLPath" type="Data"><subsheetid>39a0ea9d-5dee-4e88-8b44-f2c4c3097f59</subsheetid><display x="-195" y="30" w="270" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\\Development\\Python311\\python311.dll</initialvalue><private /><alwaysinit /></stage><stage stageid="77884bb7-f0f3-4732-884a-a37ec94fefd3" name="DataFilePath" type="Data"><subsheetid>39a0ea9d-5dee-4e88-8b44-f2c4c3097f59</subsheetid><loginhibit /><narrative>You will need to acquire this from https://openai.com/api/ There may be a cost implication to using this example.</narrative><display x="-195" y="90" w="240" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Development\SO_Dev_Survey_2024\survey_results_public_50.csv</initialvalue><private /><alwaysinit /></stage><stage stageid="4ff8484d-c5a2-4139-8c9b-2ce75e1bd664" name="Pandas Demo" type="Code"><subsheetid>39a0ea9d-5dee-4e88-8b44-f2c4c3097f59</subsheetid><loginhibit /><display x="30" y="135" /><inputs><input type="text" name="PythonDLLPath" expr="[PythonDLLPath]" /><input type="text" name="DataFilePath" expr="[DataFilePath]" /></inputs><outputs><output type="text" name="Output" stage="Output" /><output type="collection" name="DataFrameData" stage="DataFrameData" /><output type="text" name="Json" stage="Json" /></outputs><onsuccess>74e1f36f-ddf8-4faf-8257-806b42dc34f1</onsuccess><code><![CDATA[Output = string.Empty;
Json = string.Empty;
DataFrameData = null;
ProcessSurveyData psd = new ProcessSurveyData(PythonDLLPath);
try
{
	
	if (psd.IsInitialized)
		{
			Output += "Python Initialized";
			psd.BuildDataFrame(DataFilePath);
			DataFrameData = psd.DataFrameDT;
			Json = psd.Json;
			Output += Environment.NewLine;
			Output += psd.Header;
			Output += Environment.NewLine;
			Output += psd.Shape;
		}
		else
		{
			Output += "Python Initialization Failed. Retrying...";
			psd.PythonDllPath = PythonDLLPath;
			psd.Initialize();
			if (psd.IsInitialized)
			{
				Output += "Python Initialized";
				psd.BuildDataFrame(DataFilePath);
				DataFrameData = psd.DataFrameDT;
				Json = psd.Json;
				Output += Environment.NewLine;
				Output += psd.Header;
				Output += Environment.NewLine;
				Output += psd.Shape;
			}
			else
			{
				Output += "Python Initialization Failed Again.";
			}
		}
}
catch (Exception ex)
{
	if (ex.InnerException != null)
	{
		Output = string.Format("Exception:{0}{1}IE:{2}{1}",ex.Message, Environment.NewLine, ex.InnerException.Message);
	}
	else
	{
		Output = string.Format("Exception:(0)(1)",ex.Message, Environment.NewLine);
	}
}
finally
{
	psd.Dispose();
}]]></code></stage><stage stageid="02419d69-bc7d-4b3c-8c67-f758290d0e47" name="Output" type="Data"><subsheetid>39a0ea9d-5dee-4e88-8b44-f2c4c3097f59</subsheetid><display x="-195" y="225" w="270" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5256dac1-96db-4272-aa57-5fb8ee6c3e83" name="DataFrameData" type="Collection"><subsheetid>39a0ea9d-5dee-4e88-8b44-f2c4c3097f59</subsheetid><loginhibit /><display x="-270" y="285" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ba0e9835-250b-43be-b909-3ef9ff288404" name="Json" type="Data"><subsheetid>39a0ea9d-5dee-4e88-8b44-f2c4c3097f59</subsheetid><display x="-90" y="285" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77049dcb-d3b1-4d13-bf82-fe121e1321ad" name="Inputs" type="Block"><subsheetid>a237350c-1101-4cc6-8457-b565d7a9d875</subsheetid><loginhibit /><display x="-345" y="-120" w="300" h="300" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="59fb8a72-dea9-4050-8a74-34fc28436500" name="Output" type="Block"><subsheetid>a237350c-1101-4cc6-8457-b565d7a9d875</subsheetid><loginhibit /><display x="-345" y="210" w="300" h="150" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="f1e08a4d-3473-49ca-9262-92dff0855821" name="Inputs" type="Block"><subsheetid>31c7bbbb-9035-4d6f-b4cf-f4f4475d0577</subsheetid><loginhibit /><display x="-345" y="-30" w="300" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="9a27928c-7c2d-4ad1-b8ed-8b024338cc09" name="Output" type="Block"><subsheetid>31c7bbbb-9035-4d6f-b4cf-f4f4475d0577</subsheetid><loginhibit /><display x="-345" y="90" w="300" h="120" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="80165488-e9b7-40ac-9183-ec72f542a6e4" name="Inputs" type="Block"><subsheetid>39a0ea9d-5dee-4e88-8b44-f2c4c3097f59</subsheetid><loginhibit /><display x="-345" y="-30" w="300" h="165" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="6e0d9faf-bf67-42c7-b0d3-fcb74d4921bc" name="Output" type="Block"><subsheetid>39a0ea9d-5dee-4e88-8b44-f2c4c3097f59</subsheetid><loginhibit /><display x="-345" y="165" w="300" h="150" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage></process></object>
        <object id="6f9680f1-616c-4884-b58c-42ed51446377" name="Utility - Collection Manipulation" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Collection Manipulation" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="Utility functions for manipulating collections." byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>45</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="524a0a3c-118a-4343-ba4b-bc184a72404e" type="Normal" published="True"><name>Append Calculated Field</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="65451129-b7a2-4c2f-a12d-9086bd314f53" type="Normal" published="True"><name>Append Field (Number)</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a474299b-5c1c-4873-a3af-4dd0d3bd03ff" type="Normal" published="True"><name>Append Field (Text)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="51f694a8-5305-4a38-9b41-a98998f2f7ca" type="Normal" published="True"><name>Append Rows to Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7a9aa259-fe07-4035-8411-23737559c975" type="Normal" published="True"><name>Collection Contains Field</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a" type="Normal" published="True"><name>Collection Contains Value</name><view><camerax>-317</camerax><cameray>-24</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cdf2a7f1-a351-441a-8d36-bc92af66650a" type="Normal" published="True"><name>Copy Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="df662579-558c-4cc9-88df-8c680b67b41d" type="Normal" published="True"><name>Delete Column</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1d7b6202-d743-4485-9101-839f4651c406" type="Normal" published="True"><name>Delete Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4d41bfc8-e552-41ae-9e45-65dc3d1f7276" type="Normal" published="True"><name>Field Exists</name><view><camerax>144</camerax><cameray>-41</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d1eee74f-1582-4c3e-96c8-b94f1535d7e1" type="Normal" published="True"><name>Fill Blanks</name><view><camerax>-195</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a9f3108d-ca87-4551-b567-9c64ef05cf0c" type="Normal" published="True"><name>Filter Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e277cc2b-72b8-47e9-8a1b-e8530eb19a09" type="Normal" published="True"><name>Get Collection Fields</name><view><camerax>42</camerax><cameray>-4</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d35c0ad8-d252-4d67-b4d2-0654438d8bb8" type="Normal" published="True"><name>Get Distinct Records</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5abe0172-955b-476b-ad10-8c94292f2304" type="Normal" published="True"><name>Get Matched Records</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cd8dfc11-f248-4b63-9116-1ae3637913ea" type="Normal" published="True"><name>Get Union of Collections</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c63b2d7a-01d2-4a51-a0c0-edc02a4669cb" type="Normal" published="True"><name>Get Unique Records</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1b217763-c8fd-4c04-a40d-9c65089ffc73" type="Normal" published="True"><name>Get Unmatched Records</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cd8fefb9-4622-4ea7-8287-e64b86d7e513" type="Normal" published="True"><name>Merge Collection</name><view><camerax>-100</camerax><cameray>3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="198ce3c6-ecbf-4203-a609-b15429defe0e" type="Normal" published="True"><name>Read Collection Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eb03a051-75a8-4093-a383-6c6fecfbb736" type="Normal" published="True"><name>Remove dots from headers</name><view><camerax>0</camerax><cameray>-43</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fa6ed646-8ae1-479e-9845-b1dc9ac3b560" type="Normal" published="True"><name>Remove Empty Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3a772458-463d-46cf-8451-6cf5b4aeae30" type="Normal" published="True"><name>Remove Null Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bcde64eb-f856-4440-a6c0-d83f40f0cf4b" type="Normal" published="True"><name>Rename Collection Fields</name><view><camerax>207</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9" type="Normal" published="True"><name>Rename Field</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ffab882f-007c-48a5-8f84-8f5f1bfd4d6a" type="Normal" published="True"><name>Reverse Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2d0438d1-70b1-4151-b8a1-33e7bab117ad" type="Normal" published="True"><name>Save Collection to CSV File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="05992810-1be4-4455-84e8-10579308ab87" type="Normal" published="True"><name>Set Collection Field</name><view><camerax>276</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="87541f35-d834-4d99-8fd3-16ec994a9990" type="Normal" published="True"><name>Set Column Names From Expected Collection</name><view><camerax>0</camerax><cameray>-62</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b8e3b975-d485-49a3-b962-864d13a96e05" type="Normal" published="True"><name>Set Column Names From First Row</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d8e5be7a-93aa-4322-99bf-00edea37bbc2" type="Normal" published="True"><name>Sort Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="76943739-36b9-46bc-8f95-e1b6342bc8a6" type="Normal" published="True"><name>Split Collection</name><view><camerax>0</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a0cf6615-20c0-4910-9990-0f79f5f30bca" type="Normal" published="True"><name>Transpose Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-150" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.VisualBasic.dll</reference><reference>System.Core.dll</reference><reference>System.Data.DataSetExtensions.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>Microsoft.VisualBasic</import><import>System.Collections</import><import>System.Reflection</import><import>System.Linq</import><import>System.Text</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[


]]></globalcode><code><![CDATA[Public CommonDictionary as New System.Collections.Generic.Dictionary(Of String, String)

Private Iterator as Generic.IEnumerator(Of String)

Function CloneColumn(col As DataColumn) As DataColumn
	Dim tp = col.GetType()
	Return TryCast(
		tp.GetMethod("Clone", BindingFlags.Instance Or BindingFlags.NonPublic).
			Invoke(col, Nothing),
		DataColumn
	)
End Function

Function GetStringValue(row As DataRow, fieldName As String) As String
	Dim col As DataColumn = row.Table.Columns(fieldName)
	Dim val = row(fieldName)
	Select Case True
		Case IsDateColumn(col)
			Return CDate(val).ToString("d") 
		Case IsTimeColumn(col)
			Return CDate(val).ToString("T")
		Case IsDateTimeColumn(col)
			Return CDate(val).ToString("G")
		Case Else
			Return CStr(val)
	End Select
End Function

Function GetBPType(col As DataColumn) As String
	If col Is Nothing Then Return Nothing
	If Not col.ExtendedProperties.ContainsKey("bptype") Then Return Nothing
	Return col.ExtendedProperties("bptype").ToString()
End Function

Function IsDateColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "date")
End Function

Function IsTimeColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "time")
End Function

Function IsDateTimeColumn(col as DataColumn) as Boolean
	Return (GetBPType(col) = "datetime")
End Function

Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function


private function GetBluePrismDAtaType(DotNetType AS Type) As String
   Select Case True
      Case DotNetType.Equals(GetType(Timespan))
         return "timespan"
      Case DotNetType Is GetType(DAteTime)
         return "datetime"
      Case DotNetType Is GetType(Decimal), _
				DotNetType Is GetType(Integer), _
					DotNetType Is GetType(Double), _
						DotNetType Is GetType(Single)
         return "number"
      Case DotNetType Is GetType(System.Drawing.Bitmap)
         return "image"
      Case DotNetType Is GetType(Byte())
         return "binary"
      Case DotNetType Is GetType(Boolean)
         return "flag"
      Case DotNetType Is GetType(System.Data.DataTable)
         return "collection"
      Case Else
         return "text"
   End Select
End Function


Private Function CloneDataRow(R As DataRow, ColumnCount As Integer) As Object()
	Dim RetVal(ColumnCount - 1) As Object
	For I As Integer = 0 to ColumnCount - 1
		RetVal(I) = R(I)
	Next

	Return RetVal
End Function

Private Shared Sub SaveDataTableToCSV(ByVal dt As DataTable, ByVal csvFilePath As String, ByVal addHeadings As Boolean)
    Dim csvData As StringBuilder = New StringBuilder()

    If addHeadings Then

        For i As Integer = 0 To dt.Columns.Count - 1
            csvData.Append(dt.Columns(i).ColumnName)

            If i < dt.Columns.Count - 1 Then
                csvData.Append(",")
            End If
        Next

        csvData.AppendLine()
    End If

    For Each row As DataRow In dt.Rows

        For i As Integer = 0 To dt.Columns.Count - 1
            csvData.Append(row(i).ToString())

            If i < dt.Columns.Count - 1 Then
                csvData.Append(",")
            End If
        Next
			csvData.AppendLine()
    Next

    File.WriteAllText(csvFilePath, csvData.ToString())
End Sub]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-150" y="60" w="180" h="230" /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /></stage><stage stageid="1d87c6c0-f260-46fc-99c2-ffcbf6ee0497" name="Sort Collection" type="SubSheetInfo"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><narrative>Sorts a collection according to the specified field.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="785a8eca-82a6-43fe-9f16-1803844d88ce" name="Start" type="Start"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have been sorted." /></postconditions><display x="15" y="-105" /><inputs><input type="collection" name="Collection" narrative="The collection to sort." stage="Collection In" /><input type="text" name="Sort Field" narrative="The field to sort by." stage="Sort Field" /><input type="flag" name="Ascending Order" narrative="True to sort in ascending order." stage="Ascending Order" /></inputs><onsuccess>fbac0e5c-5410-45f1-98d7-646797398b04</onsuccess></stage><stage stageid="0c95c136-f8cf-49a1-98c0-a4c1e2334eca" name="End" type="End"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Sorted Collection" narrative="The sorted collection." stage="Collection Out" /><output type="flag" name="Success" narrative="True if sorting was successful." stage="Success" /><output type="text" name="Message" narrative="An error message when sorting failed." stage="Message" /></outputs></stage><stage stageid="e8e991cc-351b-4484-9825-b5c1f0d894d1" name="Collection Out" type="Collection"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="-195" y="135" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="fbac0e5c-5410-45f1-98d7-646797398b04" name="Sort Collection" type="Code"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Sort Field" expr="[Sort Field]" /><input type="flag" name="Ascending" expr="[Ascending Order]" /></inputs><outputs><output type="collection" name="Sorted Collection" stage="Collection Out" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>0c95c136-f8cf-49a1-98c0-a4c1e2334eca</onsuccess><code><![CDATA[Try

 

            If Ascending Then

                        Collection.DefaultView.Sort = Sort_Field & " ASC"

            Else

                        Collection.DefaultView.Sort = Sort_Field & " DESC"

            End If

 

            Sorted_Collection = Collection.DefaultView.ToTable

 

            Success = True

            Message = ""

 

Catch e As Exception

            Success = False

            Message = e.Message

End Try]]></code></stage><stage stageid="6f6e54f2-77b8-4f24-ae2f-46a2143d9815" name="Ascending Order" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="2fb49db2-332e-4bdb-a52e-53546b2a25e8" name="Message" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="210" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8170a296-23ef-4f36-88ea-12b93bc41486" name="Success" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d46e7f41-9e7a-4a0a-b1be-d440d57e4020" name="Sort Field" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-180" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="adfd612b-98f8-4902-8526-2bda2e03f814" name="Get Collection Fields" type="SubSheetInfo"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><narrative>Creates a collection with a Name and Datatype field which is then populated using the incoming collections field names and data types.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="73b6f098-584e-441e-8b2d-e231b971bdb2" name="Start" type="Start"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="A new collection will be created containing the collections field data." /></postconditions><display x="15" y="-105" /><inputs><input type="collection" name="Input Collection" narrative="The collection to get the fields from." stage="Input Collection" /></inputs><onsuccess>39b91b36-f03d-4fa7-9bf2-47470e1d9703</onsuccess></stage><stage stageid="e2308e18-4f98-4f62-9ff6-a4c52222c3aa" name="End" type="End"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Collection Fields" narrative="A collection containing the fields." stage="Fields" /></outputs></stage><stage stageid="39b91b36-f03d-4fa7-9bf2-47470e1d9703" name="Get Collection Fields" type="Code"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Fields" stage="Fields" /></outputs><onsuccess>e2308e18-4f98-4f62-9ff6-a4c52222c3aa</onsuccess><code><![CDATA[Fields = New DataTable()
Fields.Columns.Add("Field Name", GetType(String))
Fields.Columns.Add("Data Type", GetType(String))

For Each Column As DataColumn In Input_Collection.Columns
   Dim DataType As String = GetBluePrismDataType(Column.DataType)
   Fields.Rows.Add(New Object() {Column.ColumnName, DataType})
Next
]]></code></stage><stage stageid="a16b1987-a205-4bf6-8a33-ed2167c201ff" name="Fields" type="Collection"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><display x="135" y="90" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="d402363f-8a48-4418-b0d9-2bef5037bc67" name="Input Collection" type="Collection"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><display x="90" y="-105" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0e6f80ff-bfb9-4d47-8e5a-5299a5873467" name="Read Collection Field" type="SubSheetInfo"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><narrative>Reads a field with a given name and at the specified row from the collection.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9d660720-4bed-4ea8-8ad6-56fa0b19cfb4" name="Start" type="Start"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Row Index" narrative="The row index within the collection to read from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Row Index" /><input type="collection" name="Collection" narrative="The collection to read." stage="Collection" /><input type="text" name="Field Name" narrative="The field within the collection to read." stage="Field Name" /></inputs><onsuccess>c4bf6e49-1d07-4d60-8b44-fd35a2009654</onsuccess></stage><stage stageid="2a6d86a8-8937-4d4b-9da4-32813d06a0bf" name="End" type="End"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Value Read" narrative="The value of the requested field as text." stage="Value Read" /></outputs></stage><stage stageid="d43ae257-4559-4fa8-9b0b-1f49bd80a301" name="Row Index" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="90" y="-105" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd207bc4-8fe0-4f01-94e6-b289cdb60e38" name="Collection" type="Collection"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="225" y="-105" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="745ce225-df49-4b02-b12c-e9e2068ca6aa" name="Field Name" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4bf6e49-1d07-4d60-8b44-fd35a2009654" name="Read Field" type="Code"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><inputs><input type="collection" name="Coll" expr="[Collection]" /><input type="text" name="FieldName" expr="[Field Name]" /><input type="number" name="RowIndex" expr="[Row Index]" /></inputs><outputs><output type="text" name="Value Read" stage="Value Read" /></outputs><onsuccess>2a6d86a8-8937-4d4b-9da4-32813d06a0bf</onsuccess><code><![CDATA[
If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
End If

If Not Coll.Columns.Contains(FieldName) Then
   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
End If

Value_Read = GetStringValue(Coll.Rows(RowIndex), FieldName)]]></code></stage><stage stageid="43376e9f-73fa-4757-affa-330da5d1e6b1" name="Value Read" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="105" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1c02ab-bf62-48df-b0de-79c4f254d5df" name="Set Collection Field" type="SubSheetInfo"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><narrative>Updates a single value in a collection by the given field name and row index.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4fe6d4f3-e989-4636-b373-9a32fc41d450" name="Start" type="Start"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="-105" /><inputs><input type="number" name="Row Index" narrative="The index of the row in which to set the value. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Row Index" /><input type="collection" name="Collection" narrative="The collection in which to set the value." stage="Collection" /><input type="text" name="Field Name" narrative="The name of the field in which to set the value" stage="Field Name" /><input type="text" name="New Value" narrative="The value as text to set." stage="New Value" /></inputs><onsuccess>c7b9c9ed-85d9-4449-a150-5182797dc6f3</onsuccess></stage><stage stageid="2be33601-0c29-45c7-bc7e-1a5a8d1c19b2" name="End" type="End"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="90" /><outputs><output type="collection" name="Updated Collection" narrative="The collection which now has the value set." stage="Updated Collection" /></outputs></stage><stage stageid="e2d67695-6463-4e93-b5cd-e3b9805bb0cf" name="Row Index" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="195" y="-105" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="26046a1c-efef-4b6b-baa7-1880ae887576" name="Collection" type="Collection"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="330" y="-105" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9459f512-1cb5-4884-b551-4dcace90d77f" name="Field Name" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="255" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7b9c9ed-85d9-4449-a150-5182797dc6f3" name="Set Field" type="Code"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="0" w="90" h="30" /><inputs><input type="collection" name="Coll" expr="[Collection]" /><input type="text" name="FieldName" expr="[Field Name]" /><input type="number" name="RowIndex" expr="[Row Index]" /><input type="text" name="New Value" expr="[New Value]" /></inputs><outputs><output type="collection" name="Updated Collection" stage="Updated Collection" /></outputs><onsuccess>2be33601-0c29-45c7-bc7e-1a5a8d1c19b2</onsuccess><code><![CDATA[
If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
End If

If Not Coll.Columns.Contains(FieldName) Then
   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
End If

Coll.Rows(RowIndex)(FieldName) = New_Value

Updated_Collection = Coll]]></code></stage><stage stageid="2c198fde-25d6-4009-a434-256fd08044b1" name="New Value" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="390" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="532e300d-c8f5-4049-9b1e-490a9a85884c" name="Updated Collection" type="Collection"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="195" y="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6164801d-51c0-428e-976d-23828f70767d" name="Collection Contains Field" type="SubSheetInfo"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><narrative>Tests a collection to see whether it contains a specific field.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1ed16edd-07a7-459b-abc4-c29fc16117eb" name="Start" type="Start"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="Whether the collection contains the field will have been determined." /></postconditions><display x="15" y="-120" /><inputs><input type="collection" name="Input Collection" narrative="The collection to check." stage="Input Collection" /><input type="text" name="Field" narrative="The field to see if the collection has." stage="Field" /></inputs><onsuccess>a76de6a5-ad0f-42b0-8cea-1cc827be1d45</onsuccess></stage><stage stageid="15854162-6197-477a-873b-73c9b453d0d3" name="End" type="End"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="240" /><outputs><output type="flag" name="Success" narrative="True if the collection contains the field." stage="Success" /><output type="text" name="Error Message" narrative="Unused" stage="Error Message" /></outputs></stage><stage stageid="a76de6a5-ad0f-42b0-8cea-1cc827be1d45" name="Get Collection Fields" type="SubSheet"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="60" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Field Names" /></outputs><onsuccess>73ed00ea-d816-4343-8fe2-09924b85491f</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="09779833-6862-44cb-a355-04cb35350208" name="Input Collection" type="Collection"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="150" y="-120" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1343f537-262d-4113-8953-31173a54fdf9" name="Field" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="285" y="-120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73ed00ea-d816-4343-8fe2-09924b85491f" name="Loop Start Collection Fields" type="LoopStart"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="30" w="120" h="30" /><onsuccess>11a28026-8164-4066-97bb-6f7cc6a3f6de</onsuccess><groupid>53f9e518-2d0e-4a03-a2ac-5ffa45e0ab8a</groupid><looptype>ForEach</looptype><loopdata>Field Names</loopdata></stage><stage stageid="c2b21dab-e784-43a7-b09a-19e8bf2d5672" name="Loop End Collection Fields" type="LoopEnd"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="180" w="120" h="30" /><onsuccess>15854162-6197-477a-873b-73c9b453d0d3</onsuccess><groupid>53f9e518-2d0e-4a03-a2ac-5ffa45e0ab8a</groupid></stage><stage stageid="04208d31-4ee8-45a6-af69-2dd8140cc92a" name="Field Names" type="Collection"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="150" y="-45" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="d010b7fb-5d33-4636-bea8-2195b0f22738" name="Success" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="135" y="240" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ac2d5cc5-ddee-4785-bf6a-410b0e478722" name="Error Message" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="240" y="240" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11a28026-8164-4066-97bb-6f7cc6a3f6de" name="Match?" type="Decision"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="105" w="60" h="60" /><decision expression="[Field Names.Field Name] = Trim([Field])" /><ontrue>95c39a4f-2e55-45cb-a622-5cdec6b2d75b</ontrue><onfalse>c2b21dab-e784-43a7-b09a-19e8bf2d5672</onfalse></stage><stage stageid="6bd78de4-b21e-4741-af66-a88c72496d0f" name="anchor2" type="Anchor"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="-120" y="240" w="10" h="10" /><onsuccess>15854162-6197-477a-873b-73c9b453d0d3</onsuccess></stage><stage stageid="95c39a4f-2e55-45cb-a622-5cdec6b2d75b" name="Set Success" type="Calculation"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="-120" y="105" w="90" h="60" /><onsuccess>6bd78de4-b21e-4741-af66-a88c72496d0f</onsuccess><calculation expression="True" stage="Success" /></stage><stage stageid="e6748536-1050-482b-86e6-cd57cce3bc6d" name="Copy Rows" type="SubSheetInfo"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><narrative>Copies the rows of the given collection into a new collection.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="46e0886c-ea0a-4778-ad1e-9b7878e04a43" name="Append Rows to Collection" type="SubSheetInfo"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><narrative>Combines two collections into one, provided they share the same set of fields</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d3ec306e-f0c9-4bbc-a4da-a38b21969f5c" name="Reverse Collection" type="SubSheetInfo"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><narrative>Reverses the order of the rows in the collection.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="98b20289-3b73-4776-9912-d679291e392e" name="Reverse Collection" type="Code"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="collection" name="CollectionIn" expr="[Collection In]" /></inputs><outputs><output type="collection" name="CollectionOut" stage="Collection Out" /></outputs><onsuccess>661b2b7b-7862-4db1-b71c-747437b534da</onsuccess><code><![CDATA[If CollectionIn.Columns.Count = 0 Then Throw new ApplicationException("Zero columns in collection")

CollectionOut = CollectionIn.Clone()

For I As integer = CollectionIn.Rows.Count - 1 To 0 Step -1
	Dim Objs(CollectionIn.Columns.Count - 1) As Object
	For J As integer = 0 to CollectionIn.Columns.Count - 1
		Objs(J) = collectionIn.Rows(I)(J)
	Next
	CollectionOut.Rows.Add(Objs)
Next]]></code></stage><stage stageid="48fd9b49-12a4-490d-8741-7cb0e6de6ac2" name="Collection In" type="Collection"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><display x="135" y="-105" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="CIS" type="number" value="1" /><field name="Sort Code" type="text" value="123456" /><field name="Account Number" type="text" value="12345678" /><field name="Balance" type="number" value="1" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="3" /><field name="Sort Code" type="text" value="223456" /><field name="Account Number" type="text" value="22345678" /><field name="Balance" type="number" value="2" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="2" /><field name="Sort Code" type="text" value="323456" /><field name="Account Number" type="text" value="32345678" /><field name="Balance" type="number" value="3" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="5" /><field name="Sort Code" type="text" value="423456" /><field name="Account Number" type="text" value="42345678" /><field name="Balance" type="number" value="4" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="6" /><field name="Sort Code" type="text" value="523456" /><field name="Account Number" type="text" value="52345678" /><field name="Balance" type="number" value="5" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="4" /><field name="Sort Code" type="text" value="623456" /><field name="Account Number" type="text" value="62345678" /><field name="Balance" type="number" value="6" /><field name="Cancelled Items" type="text" value="" /></row></initialvalue></stage><stage stageid="862d18c4-1bd0-4542-b3e2-8baf8a977af8" name="Start" type="Start"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have been sorted." /></postconditions><display x="15" y="-105" /><inputs><input type="collection" name="Collection" narrative="The collection to be reversed." stage="Collection In" /></inputs><onsuccess>98b20289-3b73-4776-9912-d679291e392e</onsuccess></stage><stage stageid="661b2b7b-7862-4db1-b71c-747437b534da" name="End" type="End"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="collection" name="Reversed Collection" narrative="The reversed collection." stage="Collection Out" /></outputs></stage><stage stageid="1965b145-70ec-4ee0-a936-3c32f57e587e" name="Collection Out" type="Collection"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="150" y="45" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ca7dbfca-b97f-43d4-9601-6fa4d4eacc4b" name="Rename Collection Fields" type="SubSheetInfo"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><narrative>Renames the fields of a collection based on the fields of a given name mapping collection.</narrative><display x="-60" y="-105" w="150" h="90" /></stage><stage stageid="be8b9084-5d06-424d-8086-89d565e39887" name="Start" type="Start"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection fields will have been renamed." /></postconditions><display x="105" y="-105" /><inputs><input type="collection" name="Main Collection" narrative="The main collection, whose headers are to be modified" stage="Main Collection" /><input type="collection" name="New Headers" narrative="A collection of new headers. This must be a one-row collection matching the fields of the first. The first row will contain the new field names under the corresponding field names" stage="New Headers" /></inputs><onsuccess>2dfc16b3-737a-4ff7-9843-9e66c78b23d4</onsuccess></stage><stage stageid="7eadbd5a-bba1-4128-ac2a-9bbe81d6ec77" name="End" type="End"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><display x="105" y="120" /><outputs><output type="collection" name="Amended Collection" stage="Amended Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs></stage><stage stageid="5c64c0b3-6819-410a-be71-587501d42504" name="New Headers" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="375" y="-90" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="Column 1" type="text" value="Name" /><field name="Column 2" type="text" value="Age" /></row></initialvalue></stage><stage stageid="2dfc16b3-737a-4ff7-9843-9e66c78b23d4" name="Rename Headers" type="Code"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><display x="105" y="0" w="150" h="60" /><inputs><input type="collection" name="Main Collection" expr="[Main Collection]" /><input type="collection" name="New Headers" expr="[New Headers]" /></inputs><outputs><output type="collection" name="Amended Collection" stage="Amended Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>7eadbd5a-bba1-4128-ac2a-9bbe81d6ec77</onsuccess><code><![CDATA[If Main_Collection IsNot Nothing AndAlso New_Headers IsNot Nothing Then
	If Main_Collection.Columns.Count = New_Headers.Columns.count Then
		For Each Col1 As DataColumn In Main_Collection.Columns
			If Not New_Headers.Columns.Contains(Col1.ColumnName) Then
				Success = False
				Error_Message = "New Headers collection does not contain the field '" & Col1.ColumnName & "' found in the Main Collection"
				Exit Sub
			End If
		Next

		'We can now assume that fields match
		'and start copying rows
		For Each C As DataColumn In Main_Collection.Columns
			Dim NewName As String = Cstr(New_Headers.Rows(0)(C.ColumnName))
			If String.IsNullOrEmpty(NewName) Then
				Throw New ApplicationException("Blank field names are not acceptable")
			Else
				C.ColumnName = Trim(NewName)
			End If
		Next

		Main_Collection.AcceptChanges()
		Amended_Collection = Main_Collection
		Success = True
	Else
		Success = False
		Error_Message = "Collection field definitions do not match - the number of columns in each is different."
	End If
Else
	Success = False
	Error_Message = "Neither Collection may be null"
End If]]></code></stage><stage stageid="73981b01-1a93-4c6e-a35f-fa6c194f63ec" name="Success" type="Data"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="240" y="120" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73dcc958-035e-40f7-ab25-a8f22d06bf4f" name="Error Message" type="Data"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="180" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0af7f983-37fd-47c4-971a-5c0ca70b60c4" name="Main Collection" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="210" y="-90" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="Column 1" type="text" value="asdf" /><field name="Column 2" type="text" value="34" /></row></initialvalue></stage><stage stageid="e86fffbd-3537-4ed9-9e32-20c8f55b6cb6" name="Amended Collection" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="360" y="120" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6b6aa002-ceed-4ea9-ab37-e3cc338e349c" name="Collection Contains Value" type="SubSheetInfo"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><narrative>Searches for the existence of a value or a regular expression in a specified column in a collection. This will return true and, if a regular expression was provided, the groups defined in that regex for the first matched value it finds in the collection.</narrative><display x="-255" y="-105" w="270" h="90" /></stage><stage stageid="29ece439-17ef-4972-aa97-b373f2d68616" name="Start" type="Start"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><preconditions><condition narrative="A collection exists with the specified column name which may or may not contain a particular value" /><condition narrative="The collection being searched has no date or time columns (A code stage restriction)" /><condition narrative="" /><condition narrative="" /></preconditions><postconditions><condition narrative="No change" /></postconditions><narrative>Note that if neither 'Exact Value' nor 'Regex' are supplied, this will always return FALSE / ie. not found. If a match is found, groups will return all of the groups specified in the regular expression when applied to the value found.</narrative><display x="-30" y="-135" /><inputs><input type="collection" name="Collection" narrative="Required : The collection to search" stage="Collection" /><input type="text" name="Column Name" narrative="Required : The name of the column to search" stage="Column Name" /><input type="text" name="Exact Value" narrative="Optional : The exact value to search for - this is case insensitive" stage="Exact Value" /><input type="text" name="Regex" narrative="Optional : The regular expression to search for - this is case sensitive unless specified otherwise in the regular expression using &quot;(?i)&quot;" stage="Regex" /></inputs><onsuccess>aa1a4d89-5218-4bbe-a743-0d3484968cb6</onsuccess></stage><stage stageid="ebc6a036-6449-4acd-ac3c-bf1c0cdb652a" name="End" type="End"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="90" /><outputs><output type="flag" name="Contains Search Term" narrative="Flag indicating if the collection found the given search term or not" stage="Contains Search Term" /><output type="collection" name="Groups" narrative="The groups defined in the regular expression when it is applied to the found term" stage="Groups" /></outputs></stage><stage stageid="63287049-53dd-4e10-b6fa-809c255a8f63" name="Collection" type="Collection"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="0" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="14def48d-230f-4041-99c7-0af7c0dd5e0f" name="Column Name" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="965f0a82-f3be-4fcf-b43d-33b5a31b45d1" name="Exact Value" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f2df8ab8-a7dc-408c-962c-efe2dd44d403" name="Regex" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c87975d-a017-4b35-923d-19816f41b5b3" name="Contains Search Term" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-180" y="0" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f7c0f14b-16b5-4e13-b3e9-71fd7bf59990" name="Groups" type="Collection"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-180" y="45" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ca62b1b4-f73d-422a-b21a-ac4cfcc71041" name="Note2" type="Note"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-330" y="-30" w="120" h="30" /></stage><stage stageid="86ee4f07-c603-44e1-b307-e53cd7d9eff4" name="Note2" type="Note"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-180" y="-30" w="120" h="30" /></stage><stage stageid="a408f364-ecb4-4548-9556-57f4a26f3ada" name="Both Search Strings Empty?" type="Decision"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><decision expression="Len([Exact Value]) = 0 AND Len ([Regex]) = 0" /><ontrue>612f50dc-0fcc-4765-800b-e65e5bf3861f</ontrue><onfalse>7cdc88ed-891c-4f88-a51d-2da37bd56d4d</onfalse></stage><stage stageid="aa1a4d89-5218-4bbe-a743-0d3484968cb6" name="Trim Search Strings" type="MultipleCalculation"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><onsuccess>a408f364-ecb4-4548-9556-57f4a26f3ada</onsuccess><steps><calculation expression="Trim([Exact Value])" stage="Exact Value" /><calculation expression="Trim([Regex])" stage="Regex" /></steps></stage><stage stageid="612f50dc-0fcc-4765-800b-e65e5bf3861f" name="anchor3" type="Anchor"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="75" y="-30" w="10" h="10" /><onsuccess>7e121ceb-3f72-4655-8e21-38d3e5be7cec</onsuccess></stage><stage stageid="7e121ceb-3f72-4655-8e21-38d3e5be7cec" name="anchor4" type="Anchor"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="75" y="90" w="10" h="10" /><onsuccess>ebc6a036-6449-4acd-ac3c-bf1c0cdb652a</onsuccess></stage><stage stageid="7cdc88ed-891c-4f88-a51d-2da37bd56d4d" name="Search Collection" type="Code"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="30" w="120" h="30" /><inputs><input type="collection" name="coll" expr="[Collection]" /><input type="text" name="colname" expr="[Column Name]" /><input type="text" name="exactVal" expr="[Exact Value]" /><input type="text" name="regexVal" expr="[Regex]" /></inputs><outputs><output type="flag" name="found" stage="Contains Search Term" /><output type="collection" name="groups" stage="Groups" /></outputs><onsuccess>ebc6a036-6449-4acd-ac3c-bf1c0cdb652a</onsuccess><code><![CDATA[If Not Coll.Columns.Contains(colname) Then
  Throw New ApplicationException(String.Format( _
   "The collection does not contain a field " & _
   "with the name '{0}'", colname))
End If

Dim rx as Regex
If Not String.IsNullOrEmpty(exactVal) Then
  rx = New Regex("^" & Regex.Escape(exactVal) & "$", RegexOptions.IgnoreCase)
Else
  ' If ignore case is required it can be inlined using "(?i)..rest of search"
  rx = New Regex(regexVal)
End If

' Initialise output params
found = False
groups = New DataTable()
groups.Columns.Add("CollectionRowID", GetType(Decimal))
groups.Columns.Add("Group", GetType(String))

Dim groupRow as DataRow
For Each row as DataRow in coll.Rows
  Dim val as String = CStr(row(colname))
  Dim m as Match = rx.Match(val)
  If m.Success Then
    found = True
    For i as Integer = 0 to m.Groups.Count-1
		groupRow = groups.NewRow
		groupRow(0) = coll.Rows.IndexOf(row)
		groupRow(1) = m.Groups(i).Value
		groups.Rows.Add(groupRow)
    Next
    'Return ' removed to allow multiple matches to be observed.
  End If

Next

]]></code></stage><stage stageid="365e481a-8567-48cf-babf-40039e151df7" name="Delete Column" type="SubSheetInfo"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><narrative>Deletes a field from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4421e0d9-6181-4872-aa85-8ad310427d30" name="Start" type="Start"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will have been removed." /></postconditions><display x="15" y="-105" /><inputs><input type="collection" name="Input Collection" narrative="The collection from which you want to delete a column from" stage="Input Collection" /><input type="text" name="Column Name" narrative="The column number to delete" stage="Column Name" /></inputs><onsuccess>000581d7-9978-4295-826f-a20472874878</onsuccess></stage><stage stageid="d0f8de6d-03ac-4a92-8658-0998d1849bdf" name="End" type="End"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Output Collection" narrative="A collection with a column removed" stage="Output Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Message" /></outputs></stage><stage stageid="000581d7-9978-4295-826f-a20472874878" name="Remove Column" type="Code"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><inputs><input type="collection" name="BP Collection In" expr="[Input Collection]" /><input type="text" name="Column Name" expr="[Column Name]" /></inputs><outputs><output type="collection" name="BP Collection Out" stage="Output Collection" /><output type="text" name="Error Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>d0f8de6d-03ac-4a92-8658-0998d1849bdf</onsuccess><code><![CDATA[Try
	BP_Collection_Out = BP_Collection_In
	BP_Collection_Out.Columns.Remove(Column_Name)
	Success = True
Catch e as Exception
	Error_Message = e.ToString()
	Success = False
End Try
]]></code></stage><stage stageid="140b41b2-3138-4b5d-b5f3-4bddff6db48f" name="Input Collection" type="Collection"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="120" y="-105" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1ae60809-2da8-468d-8d88-e605b185530b" name="Output Collection" type="Collection"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="120" y="90" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="787dae64-5d33-4783-84ff-db2365c12e31" name="Message" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="-180" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3216578-e35c-4bf0-84db-80b9d3fe07e3" name="Success" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="-180" y="60" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="714ec185-fd95-4265-88e6-54eb452242b3" name="Column Name" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="210" y="-105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="25782854-2b5d-4f7d-a1f4-671555060370" name="Remove Null Rows" type="SubSheetInfo"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><narrative>Deletes rows in which a given key field is blank.</narrative><display x="-180" y="-105" w="150" h="90" /></stage><stage stageid="7b68a8ca-8280-464d-acac-807f219d226e" name="Set Column Names From First Row" type="SubSheetInfo"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><narrative>If you have a collection with the column names all in the first row, this will set the column names to the values in that row and then detete the first row.
Handy for collections read using Get Table</narrative><display x="-195" y="-105" w="270" h="60" /></stage><stage stageid="966db302-1751-4a8a-bbbf-cbfc8ff28563" name="Start" type="Start"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /></inputs><onsuccess>5732b352-4376-4727-b423-13df1e00f900</onsuccess></stage><stage stageid="80cc4a73-fa55-4504-bf38-941a29fd4499" name="End" type="End"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="120" /><outputs><output type="collection" name="Output Collection" narrative="The amended collection" stage="Output Collection" /></outputs></stage><stage stageid="5732b352-4376-4727-b423-13df1e00f900" name="Set Column Name" type="Code"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>1129bf72-f0d4-4c3a-8823-68de39f5138b</onsuccess><code><![CDATA[
'Input_Collection.Columns(3).ColumnName="NewColumnName"
'Output_Collection = Input_Collection

Dim iThisColumn as integer = -1
For Each Column As DataColumn In Input_Collection.Columns
   iThisColumn +=1
   Column.ColumnName=CStr(Input_Collection.Rows.Item(0).Item(iThisColumn))
Next
Output_Collection = Input_Collection

'If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
'	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
'End If

'If Not Coll.Columns.Contains(FieldName) Then
'   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
'End If

'Value_Read = CStr(Coll.Rows(RowIndex)(FieldName))]]></code></stage><stage stageid="83beff52-ce08-4f4c-acdd-39a43fce3528" name="Input Collection" type="Collection"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><display x="120" y="-105" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0735b980-7ff2-49c5-a67b-41a6444db630" name="Output Collection" type="Collection"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><display x="120" y="105" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="299628df-bec6-4f77-8b4a-c6bc38824e1c" name="Remove First Row" type="Action"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><narrative>First row was actually the header row, can now be deleted</narrative><display x="15" y="60" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Output Collection&quot;" /></inputs><onsuccess>80cc4a73-fa55-4504-bf38-941a29fd4499</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Remove Row" /></stage><stage stageid="1129bf72-f0d4-4c3a-8823-68de39f5138b" name="Output Collection" type="LoopStart"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="0" /><onsuccess>299628df-bec6-4f77-8b4a-c6bc38824e1c</onsuccess><groupid>265b5de8-c5fa-44dc-bcd0-64db001c133a</groupid><looptype>ForEach</looptype><loopdata>Output Collection</loopdata></stage><stage stageid="35a49bfb-e611-4681-b332-cadbcfa74fc3" name="Output Collection" type="LoopEnd"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="-60" y="60" /><onsuccess>d0febcf9-b538-4995-85c1-02dddff5fb51</onsuccess><groupid>265b5de8-c5fa-44dc-bcd0-64db001c133a</groupid></stage><stage stageid="d0febcf9-b538-4995-85c1-02dddff5fb51" name="anchor1" type="Anchor"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="-60" y="120" w="10" h="10" /><onsuccess>80cc4a73-fa55-4504-bf38-941a29fd4499</onsuccess></stage><stage stageid="7b3c5ed5-f585-4240-a2ab-8cb996684c24" name="Set Column Names From Expected Collection" type="SubSheetInfo"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><narrative>Renames the fields of a collection to those of a collection containing expected field names.</narrative><display x="-180" y="-210" w="150" h="90" /></stage><stage stageid="ae4a6ef5-a22c-4292-8471-eb02cdd4b1cf" name="End" type="End"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Output Collection" narrative="The collection with the renamed column" stage="Output Collection" /></outputs></stage><stage stageid="130f8b77-3ec8-46c9-8826-e401399e4c92" name="Rename Column" type="Code"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /><input type="collection" name="Expected Fields/Columns" expr="[Expected Fields/Columns]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>ae4a6ef5-a22c-4292-8471-eb02cdd4b1cf</onsuccess><code><![CDATA[Dim iTotalColumns as integer = Expected_Fields_Columns.Rows.Count-1
Dim iThisColumn as integer = -1
For Each Column As DataColumn In Input_Collection.Columns
   If iThisColumn>=iTotalColumns Then Exit For
   iThisColumn +=1 
   Column.ColumnName=CStr(Expected_Fields_Columns.Rows.Item(iThisColumn).Item(0))
Next
Output_Collection = Input_Collection]]></code></stage><stage stageid="9e32e67d-d7f9-46b2-8df2-6fca9a395352" name="Input Collection" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="-75" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c66d8d30-cef9-4cab-8ee8-2acb512a3129" name="Start" type="Start"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection fields will have been renamed." /></postconditions><display x="15" y="-105" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /><input type="collection" name="Expected Fields/Columns" narrative="The expected column names" stage="Expected Fields/Columns" /></inputs><onsuccess>130f8b77-3ec8-46c9-8826-e401399e4c92</onsuccess></stage><stage stageid="c865f7af-a9f9-4fb9-88da-e04e43b0bac8" name="Note1" type="Note"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-180" y="-120" w="150" h="30" /></stage><stage stageid="c29dd25d-3cf7-4435-ba56-6f735329a71a" name="Output Collection" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="135" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="235be3b3-8a37-4bac-b740-50cfcd6da05f" name="Note1" type="Note"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-180" y="105" w="150" h="30" /></stage><stage stageid="688d2271-65ed-4be7-84b1-cbfe018c6777" name="Expected Fields/Columns" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="-15" w="150" h="60" /><datatype>collection</datatype><alwaysinit /><collectioninfo><field name="Column Name" type="text" /></collectioninfo></stage><stage stageid="df1f7e11-20da-4f67-a68c-bc7c03be861a" name="Fill Blanks" type="SubSheetInfo"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><narrative>Fills a collection that has empty values with empty text.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="7908b17c-920d-4114-9fa0-cd4f161c5185" name="Start" type="Start"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have its empty values filled with empty text." /></postconditions><display x="15" y="-105" /><inputs><input type="collection" name="Blanks" narrative="A collection with blank text fields" stage="Blanks" /></inputs><onsuccess>06913dc6-a17f-4d64-965d-7cb7642f486f</onsuccess></stage><stage stageid="544cc959-75ad-4b6c-a150-ce414ae50424" name="End" type="End"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="collection" name="No Blanks" narrative="The collection with empty string instead of blanks" stage="No Blanks" /></outputs></stage><stage stageid="34873761-d9a4-4a71-9c63-993645ca4e22" name="Blanks" type="Collection"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><display x="-195" y="0" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5cfec416-7db4-4734-9a1f-76d62db9bbd9" name="No Blanks" type="Collection"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><display x="-195" y="105" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="06913dc6-a17f-4d64-965d-7cb7642f486f" name="Fill Blanks" type="Code"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="Blanks" expr="[Blanks]" /></inputs><outputs><output type="collection" name="No Blanks" stage="No Blanks" /></outputs><onsuccess>544cc959-75ad-4b6c-a150-ce414ae50424</onsuccess><code><![CDATA[try
  for each dr as datarow in blanks.rows
    for each c as datacolumn in blanks.columns
      if isdbnull(dr(c.columnname)) then
        dr(c.columnname) = ""
      end if
    next
  next
  no_blanks = blanks
catch e as exception

end try]]></code></stage><stage stageid="c491f60e-4aa7-4abb-a203-5a78c0b64469" name="End" type="End"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Output Collection" narrative="The given input collection with all the null rows removed" stage="Output Collection" /></outputs></stage><stage stageid="c8499a69-da78-40b1-9e30-3b2b66b78a63" name="Start" type="Start"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The rows with blank keys will have been deleted." /><condition narrative="" /></postconditions><display x="15" y="-105" /><inputs><input type="collection" name="Input Collection" narrative="The collection from which you want null rows to be removed" stage="Input Collection" /><input type="text" name="Key Field" narrative="The key field to check, if blank the row will be deleted.  The field that is referred to as the key field in the collection must be a text data type as well." stage="Key Field" /></inputs><onsuccess>85077240-20a2-46ad-81ba-a1eca720ae81</onsuccess></stage><stage stageid="e14452d8-589d-478a-ab1b-309897b8560b" name="End" type="End"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Output Collection" narrative="The given input collection with all the null rows removed" stage="Output Collection" /></outputs></stage><stage stageid="13091eb3-458e-46d2-a20e-59eb5eb5d748" name="Input Collection" type="Collection"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="-105" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6ab2855e-0511-49ff-ac26-c731dbf8c432" name="Output Collection" type="Collection"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="90" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cab44f8f-583a-4529-911c-392030a2dee3" name="Message" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="-165" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1203642-ce03-48bd-ba00-aad2a0dcde1e" name="Success" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="-165" y="-15" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1478eda2-b43b-4609-aef4-ff3ad3c2a708" name="Key Field" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="225" y="-105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85077240-20a2-46ad-81ba-a1eca720ae81" name="Remove Null rows from collection" type="Code"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><narrative>can't loop through the core customer details table collection as some of the rows are NULL.</narrative><display x="15" y="-45" w="150" h="30" /><inputs><input type="collection" name="CCD Table In" expr="[Input Collection]" /><input type="text" name="Key Field" expr="[Key Field]" /></inputs><outputs><output type="collection" name="CCD Table Out" stage="Output Collection" /><output type="text" name="Error Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>2e050fc0-fed0-49b4-bafc-a33a0aee5ad9</onsuccess><code><![CDATA[Try
CCD_Table_In.AcceptChanges()

	For Each row As DataRow in CCD_Table_In.Rows
			If String.IsNullOrEmpty(row(Key_Field).ToString().Trim()) Then
				row.Delete()
			End If
	Next

CCD_Table_In.AcceptChanges()

	CCD_Table_Out = CCD_Table_In
	Success = True

Catch ex as Exception
	Error_Message = ex.ToString()
	Success = False
End Try

]]></code></stage><stage stageid="9e92c3e9-666f-47a3-b5a4-712191368127" name="Remove dots from headers" type="SubSheetInfo"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><narrative>Collections with dots in the field names cannot be properly indexed so this functinon renames the headers so that the fields contain no dots.</narrative><display x="-165" y="-195" w="150" h="90" /></stage><stage stageid="9e9143b5-5aa7-475d-a944-466bfbc2c71d" name="Rename Column1" type="Code"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><display x="0" y="-15" w="90" h="30" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>ce865562-7be4-4739-95c5-3b5e05d7901f</onsuccess><code><![CDATA[For Each Column As DataColumn In Input_Collection.Columns
   Column.ColumnName=Microsoft.Visualbasic.Replace(Column.ColumnName,".","")
Next
Output_Collection = Input_Collection]]></code></stage><stage stageid="ce865562-7be4-4739-95c5-3b5e05d7901f" name="End" type="End"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><display x="0" y="90" /><outputs><output type="collection" name="Output Collection" narrative="The collection with the renamed column" stage="Output Collection" /></outputs></stage><stage stageid="c2200054-2838-45a0-a8b2-c1da235391b0" name="Input Collection" type="Collection"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><display x="-195" y="-75" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c865c672-39f2-4b5d-b96c-f44c5f3b9a89" name="Start" type="Start"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have fields with no dots." /></postconditions><display x="0" y="-105" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /></inputs><onsuccess>9e9143b5-5aa7-475d-a944-466bfbc2c71d</onsuccess></stage><stage stageid="02864eb4-432c-4b37-9199-c28dd7fe654b" name="Note1" type="Note"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-195" y="-120" w="150" h="30" /></stage><stage stageid="99cb4759-fd39-4084-a262-e2ac589fdc28" name="Output Collection" type="Collection"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c1388967-ebc6-462c-bad7-66359084fab0" name="Note1" type="Note"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-195" y="105" w="150" h="30" /></stage><stage stageid="4e265aee-0021-418d-8655-61d995e170a0" name="Append Field (Text)" type="SubSheetInfo"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><narrative>Appends a field to a collection and allows you to provide a default value as text fot the field.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c8bd0a3b-3343-43fd-bef7-1414593f62b6" name="Field Name" type="Data"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ddaf3d76-462d-41ac-8cdd-92050ea01b79" name="Append Text" type="Code"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Column" expr="[Field Name]" /><input type="text" name="Value" expr="[Value]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>072e40e3-3858-4528-aa1b-7b4cfb7861f9</onsuccess><code><![CDATA[
If Not Collection.Columns.Contains(Column) Then
	Collection.Columns.Add(Column, Type.GetType("System.String"))
End If

For Each dr As System.Data.DataRow In Collection.Rows
	dr(Column) = Value
Next

New_Collection = Collection
]]></code></stage><stage stageid="7c2f4495-6f2c-4dc5-845c-58f3036c5ec9" name="Collection Out" type="Collection"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="120" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8493982d-24c5-4d6b-96c0-060ed614f8c3" name="Collection In" type="Collection"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="-15" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6542d3cd-7831-4ebb-93dc-09b64ff85bbf" name="Value" type="Data"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c1475ad-07b2-4993-abb1-4060046ce8eb" name="Start" type="Start"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have a new field appended to it." /></postconditions><display x="15" y="-105" /><inputs><input type="collection" name="Collection" narrative="The collection to append a field to." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the new field." stage="Field Name" /><input type="text" name="Value" narrative="The value to be put in the new field." stage="Value" /></inputs><onsuccess>ddaf3d76-462d-41ac-8cdd-92050ea01b79</onsuccess></stage><stage stageid="072e40e3-3858-4528-aa1b-7b4cfb7861f9" name="End" type="End"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Appended Collection" narrative="The collection with field appended." stage="Collection Out" /></outputs></stage><stage stageid="4c0d7072-e36c-465b-89f0-fbe7e21e95fb" name="Append Field (Number)" type="SubSheetInfo"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><narrative>Appends a field to a collection and allows you to provide a default number value for the field.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="433e0a45-d9b6-48e5-b62f-67815cc1461a" name="Start" type="Start"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have the new field appended to it." /></postconditions><display x="30" y="-105" /><inputs><input type="collection" name="Collection" narrative="The collection to append a field to." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the new field." stage="Field Name" /><input type="number" name="Value" narrative="The value to be put in the new field." stage="Value" /></inputs><onsuccess>560df05e-a20c-4c85-addb-accc35d19f0e</onsuccess></stage><stage stageid="5dc78a95-36a2-4324-a366-ccd5f941ea7b" name="End" type="End"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><display x="30" y="90" /><outputs><output type="collection" name="Appended Collection" narrative="The collection with field appended." stage="Collection Out" /></outputs></stage><stage stageid="560df05e-a20c-4c85-addb-accc35d19f0e" name="Append Number" type="Code"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><display x="30" y="-15" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Column" expr="[Field Name]" /><input type="number" name="Value" expr="[Value]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>5dc78a95-36a2-4324-a366-ccd5f941ea7b</onsuccess><code><![CDATA[
If Not Collection.Columns.Contains(Column) Then
	Collection.Columns.Add(Column, Type.GetType("System.Decimal"))
End If

For Each dr As System.Data.DataRow In Collection.Rows
	dr(Column) = Value
Next

New_Collection = Collection
]]></code></stage><stage stageid="a8f65fc6-9524-4ba5-ab7c-4bf16b825bb8" name="Collection Out" type="Collection"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="120" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1265e994-416c-4b2d-ab0c-c81e1288f072" name="Field Name" type="Data"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ac81567-c224-4270-a0ef-e57562e06fb5" name="Collection In" type="Collection"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="-15" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f9a670a2-2e34-4e79-a184-369ddc70c75e" name="Value" type="Data"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="60" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5979fe4e-6f4d-4683-8d7f-bb932ec88a2e" name="Rename Field" type="SubSheetInfo"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><narrative>Renames a field within a collection.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5030c234-e021-4ff1-b9ea-751e186a63a8" name="Start" type="Start"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will be renamed." /></postconditions><display x="15" y="-105" /><inputs><input type="collection" name="Collection In" narrative="The collection to rename a field in." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the existing field to rename." stage="Field Name" /><input type="text" name="New Name" narrative="The new name for the field." stage="New Name" /></inputs><onsuccess>278ed0f4-d7d0-4ca7-908e-55569a965852</onsuccess></stage><stage stageid="404be5b2-7ad7-429a-9e8b-b6a561112f47" name="End" type="End"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Collection Out" narrative="The collection with field renamed." stage="Collection Out" /></outputs></stage><stage stageid="67c49160-5821-48b0-82fd-371ecbaea386" name="Collection In" type="Collection"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="0" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f0ef8f48-7f60-47fc-89b2-3aa04ef39792" name="Field Name" type="Data"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c1db25c-d091-4900-8b9e-529d60df0f8f" name="Collection Out" type="Collection"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="165" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="278ed0f4-d7d0-4ca7-908e-55569a965852" name="Rename" type="Code"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Field_Name" expr="[Field Name]" /><input type="text" name="New Name" expr="[New Name]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>404be5b2-7ad7-429a-9e8b-b6a561112f47</onsuccess><code><![CDATA[
Collection_Out = Collection_In.Copy

For Each c As DataColumn in Collection_Out.Columns
	If c.ColumnName = Field_Name Then
		c.ColumnName = New_Name
		Exit For
	End If
Next
]]></code></stage><stage stageid="b2e64d6d-9ac8-43b9-aeed-e58e65d8067c" name="New Name" type="Data"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="c935b0c8-a0cb-4251-9e63-af4ed27f9a91" name="Delete Field" type="SubSheetInfo"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><narrative>Deletes a field from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a7662efd-3d51-4d9a-adbc-1a2e626613e5" name="Start" type="Start"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will have been removed." /></postconditions><display x="30" y="-105" /><inputs><input type="collection" name="Collection In" narrative="The collection to delete the field from." stage="Collection In" /><input type="text" name="Field Name" narrative="The field to delete." stage="Field Name" /></inputs><onsuccess>b52dad46-ca6d-4860-82c7-f1d9320f66bc</onsuccess></stage><stage stageid="4e6ae3ea-d232-4ff3-b93b-ab90f6e93c1b" name="End" type="End"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><display x="30" y="90" /><outputs><output type="collection" name="Collection Out" narrative="The collection with the field removed." stage="Collection Out" /></outputs></stage><stage stageid="4eb487df-f7e9-4146-a35f-e5e7c6461d01" name="Collection In" type="Collection"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="-15" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="719f7d25-ec64-43bd-9466-c822213aa069" name="Field Name" type="Data"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b32e1ce-deb0-4107-ac7c-c4af81ceedaf" name="Collection Out" type="Collection"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="105" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="b52dad46-ca6d-4860-82c7-f1d9320f66bc" name="Delete Column1" type="Code"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><display x="30" y="-15" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Field_Name" expr="[Field Name]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>4e6ae3ea-d232-4ff3-b93b-ab90f6e93c1b</onsuccess><code><![CDATA[
Collection_Out = Collection_In.Copy

For Each c As DataColumn in Collection_Out.Columns
	If c.ColumnName = Field_Name Then
		Collection_Out.Columns.Remove(c)
		Exit For
	End If
Next
]]></code></stage><stage stageid="63e447be-76ae-4566-a7e9-ead3373b7fe6" name="Merge Collection" type="SubSheetInfo"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><narrative>Merges two collections with different structures (and where the field names across both collections are unique) and forms a single collection with a combination  of the two structures and associated data values.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d427bb44-b573-475a-aa7d-176f2803e033" name="Start" type="Start"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><preconditions><condition narrative="The merge will fail if both collections contain any field names which are identical." /></preconditions><postconditions><condition narrative="The collections will have been merged." /></postconditions><display x="15" y="-105" /><inputs><input type="collection" name="Collection 1" narrative="The first collection to be merged." stage="Collection 1" /><input type="collection" name="Collection 2" narrative="The second collection to be merged." stage="Collection 2" /></inputs><onsuccess>6459a0e3-6f86-4efa-8b87-a9eb0b9a8460</onsuccess></stage><stage stageid="570e4b26-4aa8-48ac-b435-1ca8fe10f2cd" name="End" type="End"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Collection 3" narrative="The resulting merged collection." stage="Collection 3" /></outputs></stage><stage stageid="6459a0e3-6f86-4efa-8b87-a9eb0b9a8460" name="Merge" type="Code"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="c1" expr="[Collection 1]" /><input type="collection" name="c2" expr="[Collection 2]" /></inputs><outputs><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>570e4b26-4aa8-48ac-b435-1ca8fe10f2cd</onsuccess><code><![CDATA[
For Each c As DataColumn in c2.Columns
	c1.Columns.Add(CloneColumn(c))
Next

For r As Integer = 0 To c1.Rows.Count - 1
	If r < c2.Rows.Count Then
		For Each c As DataColumn in c2.Columns
			c1.Rows(r)(c.ColumnName) = c2.Rows(r)(c.ColumnName)
		Next
	Else
		Exit For
	End If
Next

c3 = c1]]></code></stage><stage stageid="c325b6be-e358-4eab-8e9b-0b74a98490f3" name="Collection 1" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="-15" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="61e7bd9a-18d4-475d-b131-95dc839d1518" name="Collection 2" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="45" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3ff4ed5f-abbc-4668-9ebb-816c8f0884db" name="Collection 3" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="120" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="741d8892-31ef-497b-a1ab-dca99ebd1f06" name="Split Collection" type="SubSheetInfo"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><narrative>Splits a collection into two colllections containing the fields as defined by templates.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="61860248-5b8d-41de-8e28-092ca8b989e5" name="Split" type="Code"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="300" /><inputs><input type="collection" name="c1" expr="[Collection 1]" /><input type="collection" name="c2t" expr="[Collection 2 Template]" /><input type="collection" name="c3t" expr="[Collection 3 Template]" /></inputs><outputs><output type="collection" name="c2" stage="Collection 2" /><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>e08e6b18-850a-427c-9eba-5065c9c619dd</onsuccess><code><![CDATA[
c2 = c2t.Clone()

c3 = c3t.Clone()

Dim r2, r3 As DataRow
Dim bAdd2, bAdd3 As Boolean

For Each r1 As DataRow In c1.Rows

	r2 = c2.NewRow()
	r3 = c3.NewRow()
	bAdd2 = False
	bAdd3 = False

	For Each c As DataColumn In c1.Columns

		If c2.Columns.Contains(c.ColumnName) Then
			r2(c.ColumnName) = r1(c.ColumnName)
			bAdd2 = True
		End If
		If c3.Columns.Contains(c.ColumnName) Then
			r3(c.ColumnName) = r1(c.ColumnName)
			bAdd3 = True
		End If

	Next

	If bAdd2 Then
		c2.Rows.Add(r2)
	End If
	If bAdd3 Then
		c3.Rows.Add(r3)
	End If

Next]]></code></stage><stage stageid="d00a67c4-977f-49ab-ac41-225ebdb3ad8d" name="Collection 3 Template" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="105" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e2ce96fd-e590-46fa-a95d-effcca153782" name="Start" type="Start"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><preconditions><condition narrative="None." /><condition narrative="" /></preconditions><postconditions><condition narrative="Collections will be split." /><condition narrative="" /></postconditions><display x="15" y="-120" /><inputs><input type="collection" name="Collection 1" stage="Collection 1" /><input type="collection" name="Collection 2 Template" stage="Collection 2 Template" /><input type="collection" name="Collection 3 Template" stage="Collection 3 Template" /></inputs><onsuccess>2c7d51f8-a340-4629-9d93-0526f6ed07cc</onsuccess></stage><stage stageid="e08e6b18-850a-427c-9eba-5065c9c619dd" name="End" type="End"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="300" /><outputs><output type="collection" name="Collection 2" stage="Collection 2" /><output type="collection" name="Collection 3" stage="Collection 3" /></outputs></stage><stage stageid="67449419-0f6c-463b-bf1a-2d94b16c5be3" name="Collection 2" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="285" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="78bbd50d-b3cd-4066-80e3-d4cb236662b8" name="Collection 3" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="345" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2c7d51f8-a340-4629-9d93-0526f6ed07cc" name="Count Template 2 Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 2 Template&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>2dbb3bb5-1526-4f1c-818d-aa4eb0acc677</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="5a6c9426-a48f-4861-b7fe-b020ea824cc5" name="Row Count" type="Data"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2dbb3bb5-1526-4f1c-818d-aa4eb0acc677" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="0" /><decision expression="[Row Count]&gt;0" /><ontrue>17c0ae90-3784-40c5-816f-a0dfb4c97eab</ontrue><onfalse>6a04f2d4-b2f3-4afd-b837-ddaf0d40a9d5</onfalse></stage><stage stageid="17c0ae90-3784-40c5-816f-a0dfb4c97eab" name="Count Template 3 Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="60" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 3 Template&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>525e699d-df7d-4c61-b5fd-0ae540b94a94</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="525e699d-df7d-4c61-b5fd-0ae540b94a94" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="120" /><decision expression="[Row Count]&gt;0" /><ontrue>01cbd6ed-952e-4ae8-8420-496581701364</ontrue><onfalse>c7cd5499-3bd2-49c8-a5e0-2c190b350abe</onfalse></stage><stage stageid="74cfea1c-af9f-4c0b-86aa-ac76097c3940" name="Collection 1" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="-15" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2af4b9c5-d3f3-4ecc-9a3a-4b52f1cee481" name="Collection 2 Template" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="45" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c7cd5499-3bd2-49c8-a5e0-2c190b350abe" name="System Exception" type="Exception"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="105" y="120" /><exception type="System Exception" detail="&quot;Template collection cannot be empty&quot;" /></stage><stage stageid="6a04f2d4-b2f3-4afd-b837-ddaf0d40a9d5" name="anchor1" type="Anchor"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><onsuccess>c7cd5499-3bd2-49c8-a5e0-2c190b350abe</onsuccess></stage><stage stageid="01cbd6ed-952e-4ae8-8420-496581701364" name="Count Data Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="180" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 1&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>69ae2e43-547a-4cef-abc9-a57284282b82</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="69ae2e43-547a-4cef-abc9-a57284282b82" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="240" /><decision expression="[Row Count]&gt;0" /><ontrue>61860248-5b8d-41de-8e28-092ca8b989e5</ontrue><onfalse>4cffbd60-ffb8-4da0-aa50-3639bc6ff8ef</onfalse></stage><stage stageid="4cffbd60-ffb8-4da0-aa50-3639bc6ff8ef" name="Assign Outputs" type="Code"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="240" /><inputs><input type="collection" name="c2t" expr="[Collection 2 Template]" /><input type="collection" name="c3t" expr="[Collection 3 Template]" /></inputs><outputs><output type="collection" name="c2" stage="Collection 2" /><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>e08e6b18-850a-427c-9eba-5065c9c619dd</onsuccess><code><![CDATA[
c3 = c3t

c2 = c2t
]]></code></stage><stage stageid="8140b508-3840-4291-8122-7d9633f50e96" name="Collection In" type="Collection"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-180" y="-15" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cc074354-584f-4eba-ab53-2f96462259a0" name="Filter Collection" type="SubSheetInfo"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><narrative>Filters a collection using the given query.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4ee491db-1747-4f76-a969-78ebc05942c3" name="Start" type="Start"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will be filtered." /></postconditions><display x="15" y="-105" /><inputs><input type="collection" name="Collection In" narrative="The collection to filter." stage="Collection In" /><input type="text" name="Filter" narrative="The filter query." stage="Filter" /></inputs><onsuccess>0c063487-d7ee-42db-8059-92687b655e7d</onsuccess></stage><stage stageid="bda88544-a5a8-4bf6-9c9b-c645f76b7fed" name="End" type="End"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Collection Out" narrative="The filtered collection." stage="Collection Out" /></outputs></stage><stage stageid="0c063487-d7ee-42db-8059-92687b655e7d" name="Filter Collection1" type="Code"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Select Condition" expr="[Filter]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>bda88544-a5a8-4bf6-9c9b-c645f76b7fed</onsuccess><code><![CDATA[Dim NewRow As DataRow

Collection_Out = Collection_In.Clone

For Each parentRow As DataRow In Collection_In.Select(Select_Condition)
	NewRow = Collection_Out.NewRow
	For Each c As DataColumn In NewRow.Table.Columns
		NewRow(c.ColumnName) = parentRow(c.ColumnName)
	Next
	Collection_Out.Rows.Add(NewRow)
Next

NewRow = Nothing
Collection_In = Nothing]]></code></stage><stage stageid="ab9df972-dcc0-4384-ae57-8f0207f70978" name="Collection Out" type="Collection"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="105" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ee8d1e79-1554-41d5-9dec-d9cb9153d483" name="Collection In" type="Collection"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="-15" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7b601fa9-308d-4e40-8366-62ebe909f792" name="Filter" type="Data"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f60641e-4454-45d1-b678-62b0a6c6b784" name="Start" type="Start"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="-120" /><inputs><input type="number" name="Start Row" narrative="The row index to start copying from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Start Row" /><input type="number" name="Number of Rows to Copy" narrative="The number of rows to copy." stage="Number of Rows to Copy" /><input type="collection" name="Source Collection" narrative="The collection to copy." stage="Source Collection" /></inputs><onsuccess>25337bba-f357-42a8-bc61-876a9582d5d0</onsuccess></stage><stage stageid="002b5c58-ec2b-4e02-91e5-68fbeffe2b84" name="End" type="End"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="75" /><outputs><output type="collection" name="Output Collection" narrative="The copied collection." stage="Output Collection" /></outputs></stage><stage stageid="1cd8f0a3-e382-4ad5-8948-7f0dc5cd17cd" name="Start Row" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="60" y="-120" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="abc78fcd-9654-47c6-9aa9-5cd8f505bd60" name="Number of Rows to Copy" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="135" y="-120" w="90" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c3aa2821-e68a-4985-9fd7-e0330638a935" name="Source Collection" type="Collection"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="255" y="-120" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="25337bba-f357-42a8-bc61-876a9582d5d0" name="Copy Rows1" type="Code"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="-30" w="120" h="30" /><inputs><input type="collection" name="Source Collection" expr="[Source Collection]" /><input type="number" name="Start Row" expr="[Start Row]" /><input type="number" name="Number of Rows to Copy" expr="[Number of Rows to Copy]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>ff821741-f1ec-47ff-bd26-00c56a44a6c7</onsuccess><code><![CDATA[Try
	If Start_Row < 0 Then
		Throw New ApplicationException("Start Row must be at least zero.")
	End If
	Dim LastIndex As Integer = Source_Collection.Rows.Count -1
	If Start_Row > LastIndex Then
		Throw New ApplicationException("Start Row must not point beyond the end of the collection.")
	End If
	If Start_Row + Number_of_Rows_to_Copy -1 > LastIndex Then
		Throw New ApplicationException("The number of requested rows extends beyond the end of the collection (based on a start row of " & Start_Row.ToString() & ").")
	End If

	'Set up the new collection with columns
	Output_Collection = Source_Collection.Clone()

	'copy the requested rows one by one
	For I As integer = Start_Row To Start_Row + Number_of_Rows_to_Copy - 1
		Dim Values(Source_Collection.Columns.Count - 1) As Object
		For J As Integer = 0 To Source_Collection.Columns.Count - 1
			Values(J) = Source_Collection.Rows(I)(J)
		Next
		Output_collection.Rows.Add(Values)
	Next	
	
	Success = True
Catch Ex As Exception
	Success = False
	Error_Message = Ex.ToString()
End Try]]></code></stage><stage stageid="33698fa1-b8d8-467c-bb0d-b8e838d42c69" name="Output Collection" type="Collection"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="-180" y="45" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4f882206-da67-4422-ac01-a53a5d765354" name="Success" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="60" y="75" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6551589d-b7f2-48b7-a867-b398647d0180" name="Error Message" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="120" y="75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff821741-f1ec-47ff-bd26-00c56a44a6c7" name="Success?" type="Decision"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="30" /><decision expression="[Success]" /><ontrue>002b5c58-ec2b-4e02-91e5-68fbeffe2b84</ontrue><onfalse>fd5c51f5-e900-44ce-a169-84565580d402</onfalse></stage><stage stageid="fd5c51f5-e900-44ce-a169-84565580d402" name="System Exception" type="Exception"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="90" y="30" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="c6165073-bfc9-495f-98e5-62a224f52226" name="Start" type="Start"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections will be combined." /></postconditions><display x="15" y="-120" /><inputs><input type="collection" name="Main Collection" narrative="The collection to append to." stage="Main Collection" /><input type="collection" name="Collection to Append" narrative="The collection to append." stage="Collection to Append" /></inputs><onsuccess>77e19cde-e0fa-40aa-8bea-05c4743275c2</onsuccess></stage><stage stageid="5d1a3d8d-2e99-49b5-9863-6a866e2e03dd" name="End" type="End"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="collection" name="Combined Collection" narrative="The combined collection." stage="Combined Collection" /></outputs></stage><stage stageid="e3a95b76-e1ba-4bf1-92c1-653ae937120a" name="Main Collection" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="90" y="-120" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="320afdfe-675f-44a8-b563-5cf2cf3212d3" name="Collection to Append" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="150" y="-120" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="77e19cde-e0fa-40aa-8bea-05c4743275c2" name="Combine Collections" type="Code"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="60" /><inputs><input type="collection" name="Main Collection" expr="[Main Collection]" /><input type="collection" name="Collection to Append" expr="[Collection to Append]" /></inputs><outputs><output type="collection" name="Combined Collection" stage="Combined Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>35415fae-0f6d-4f78-b7b9-b39a6e3095ff</onsuccess><code><![CDATA[Success = False

If Main_Collection.Columns.Count > 0 AndAlso Main_Collection.Columns.Count <> Collection_to_Append.Columns.Count Then
	Error_Message = "Field definitions do not match - the number of columns in each is different."
	Exit Sub
End If

For Each Col1 As DataColumn In Main_Collection.Columns

	If Not Collection_to_Append.Columns.Contains(Col1.ColumnName) Then
		Error_Message = "The Main Collection does not contain '" & Col1.ColumnName & "'"
		Exit Sub
	End If

	If Collection_to_Append.Columns(Col1.ColumnName).DataType.Name <> Col1.DataType.Name Then
		Error_Message = "The data type of '" & Col1.ColumnName & "' do not match."
		Exit Sub
	End If

Next

If Main_Collection.Columns.Count = 0 Then
	Combined_Collection = Collection_to_Append
Else
	'We can now assume that fields match and start copying rows
	For Each R As DataRow in Collection_to_Append.Rows
		Main_Collection.ImportRow(R)
	Next
	Combined_Collection = Main_Collection
End If

Success = True]]></code></stage><stage stageid="d0521477-9847-4a70-834b-9c1d315bd817" name="Combined Collection" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="-90" y="75" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="35415fae-0f6d-4f78-b7b9-b39a6e3095ff" name="Success?" type="Decision"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="15" /><decision expression="[Success]" /><ontrue>5d1a3d8d-2e99-49b5-9863-6a866e2e03dd</ontrue><onfalse>e4269f55-7633-4d19-9ebf-299956a4a5ec</onfalse></stage><stage stageid="e4269f55-7633-4d19-9ebf-299956a4a5ec" name="System Exception" type="Exception"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="120" y="15" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="7923c865-f484-411d-815a-24fe9832f941" name="Success" type="Data"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="90" y="75" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="710fce6c-64f2-4e2d-8c89-9c2c41b9e9cb" name="Error Message" type="Data"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="150" y="75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bdd84939-c1c2-4ec3-9ec2-f19a6b55f056" name="Remove Empty Rows" type="SubSheetInfo"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><narrative>Removes empty rows from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="46ac86fc-42a2-49f4-a2be-86a452176e2b" name="Start" type="Start"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have empty rows removed." /></postconditions><display x="-15" y="-105" /><inputs><input type="collection" name="Collection In" narrative="The collection to remove empty rows from" stage="Collection In" /></inputs><onsuccess>6c450e6a-55ae-4382-a419-e4c6d59fc580</onsuccess></stage><stage stageid="0e663c5b-fb8a-4f15-999d-feb951956864" name="End" type="End"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><display x="-15" y="90" /><outputs><output type="collection" name="Collection Out" narrative="The collection with the empty rows removed" stage="Collection Out" /></outputs></stage><stage stageid="613bed47-0c41-4155-93a3-5b31823f6048" name="Collection In" type="Collection"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><display x="60" y="-105" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="af6c216c-aac3-4b4e-b7cb-bbf0a7863c49" name="Collection Out" type="Collection"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><display x="60" y="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6c450e6a-55ae-4382-a419-e4c6d59fc580" name="Remove empty rows" type="Code"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><display x="-15" y="-15" w="90" h="30" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>0e663c5b-fb8a-4f15-999d-feb951956864</onsuccess><code><![CDATA[
Dim bRemove as Boolean
Dim iRow as integer
' Loop through each row
For iRow = Collection_In.Rows.Count - 1 to 0 step -1
'For each Row as DataRow in Collection_In.Rows
	bRemove=True
	' Loop through every column for this row
	For each Column as DataColumn in Collection_In.Columns
		if Trim(Collection_In.Rows(iRow)(Column.ColumnName).ToString()) & "" <> "" then
			bRemove=False
			exit for
		end if
	Next

	if bRemove=True then
		Collection_In.Rows.Remove(Collection_In.Rows(iRow))
	end if
Next

Collection_Out = Collection_In.Copy]]></code></stage><stage stageid="28f98de9-8408-4312-9e37-37197c2d8822" name="Transpose Collection" type="SubSheetInfo"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><narrative>Creates a new collection with the fields Name and Value and for each row in the original collection creates an entry for each column.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="26ce26e2-1a34-4a20-97d8-34ab15954720" name="Start" type="Start"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will be transposed." /></postconditions><display x="30" y="-120" /><inputs><input type="collection" name="Collection" narrative="The collection to transpose." stage="Collection In" /></inputs><onsuccess>c3e45cac-9a76-4b70-a119-ffed9ceeaeac</onsuccess></stage><stage stageid="c9852e45-8999-4b73-a581-4a3f66b95b3a" name="End" type="End"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><display x="30" y="75" /><outputs><output type="collection" name="Appended Collection" narrative="The transposed collection." stage="Collection Out" /></outputs></stage><stage stageid="c3e45cac-9a76-4b70-a119-ffed9ceeaeac" name="Transpose" type="Code"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><display x="30" y="-30" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>c9852e45-8999-4b73-a581-4a3f66b95b3a</onsuccess><code><![CDATA[
New_Collection = GetDataTable("Name,Value", "System.String,System.String")
Dim New_Row As System.Data.DataRow

For Each r As System.Data.DataRow In Collection.Rows
	For Each c As System.Data.DataColumn In Collection.Columns
		New_Row = New_Collection.NewRow()
		New_Row("Name") = c.ColumnName
		New_Row("Value") = GetStringValue(r, c.ColumnName)
		New_Collection.Rows.Add(New_Row)
	Next
Next
]]></code></stage><stage stageid="d2f68cb8-90cf-4414-8554-daf4fa4c9f29" name="Collection Out" type="Collection"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><display x="-180" y="60" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="99b09a03-6901-47ee-af4d-d43bfcf3bb42" name="Collection In" type="Collection"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><display x="-180" y="0" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="90d519f8-3075-478e-a49f-b681d1ddd033" name="Field Exists" type="SubSheetInfo"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><narrative>Finds out whether the collection contatins a given field.</narrative><display x="-135" y="-120" w="150" h="90" /></stage><stage stageid="8605b0b2-ff16-473b-ba5d-1956390f48bd" name="Start" type="Start"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><display x="75" y="-105" /><inputs><input type="collection" name="Input Collection" narrative="The collection to check." stage="Input Collection" /><input type="text" name="Field" narrative="The field to check for." stage="Field" /></inputs><onsuccess>da5abfb8-f52a-4a03-8f9f-ec5e42dd4566</onsuccess></stage><stage stageid="26b8ca01-8895-483f-93ef-66df5bbb0a34" name="End" type="End"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="255" /><outputs><output type="flag" name="Exists" narrative="True if the collection contains the field." stage="Exists" /></outputs></stage><stage stageid="da5abfb8-f52a-4a03-8f9f-ec5e42dd4566" name="Get Collection Fields" type="SubSheet"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="-30" w="90" h="60" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Field Names" /></outputs><onsuccess>470c6c27-3ed4-43b7-8c01-3fc7415ec55e</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="a910c0ad-5130-4073-8f3a-8cf76bc7d74e" name="Input Collection" type="Collection"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="15" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="66e1609e-c3e7-4e35-82df-90254a0d842f" name="Field" type="Data"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="470c6c27-3ed4-43b7-8c01-3fc7415ec55e" name="Field Names" type="LoopStart"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="45" w="120" h="30" /><onsuccess>eb7af2be-1265-40b6-8ea7-89fdda2b0ab1</onsuccess><groupid>755a928d-1109-4393-b44a-e265a1395a22</groupid><looptype>ForEach</looptype><loopdata>Field Names</loopdata></stage><stage stageid="54fa6a7b-f874-43d4-ac4a-4c16f28d1a9f" name="Field Names" type="LoopEnd"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="195" w="120" h="30" /><onsuccess>26b8ca01-8895-483f-93ef-66df5bbb0a34</onsuccess><groupid>755a928d-1109-4393-b44a-e265a1395a22</groupid></stage><stage stageid="15f784c0-4879-4a2e-ab6f-c44f5c384d85" name="Field Names" type="Collection"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="120" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="905724f1-237f-4641-9511-289841ec3498" name="Exists" type="Data"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="255" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="eb7af2be-1265-40b6-8ea7-89fdda2b0ab1" name="Match?" type="Decision"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="120" w="90" h="60" /><decision expression="[Field Names.Field Name] = Trim([Field])" /><ontrue>c4532590-c3c0-4014-98f4-bc3e1f30e5df</ontrue><onfalse>54fa6a7b-f874-43d4-ac4a-4c16f28d1a9f</onfalse></stage><stage stageid="d656772f-8ec9-4848-8f30-a4bda4f01837" name="anchor2" type="Anchor"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="210" y="255" w="10" h="10" /><onsuccess>26b8ca01-8895-483f-93ef-66df5bbb0a34</onsuccess></stage><stage stageid="c4532590-c3c0-4014-98f4-bc3e1f30e5df" name="Exists" type="Calculation"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="210" y="120" /><onsuccess>d656772f-8ec9-4848-8f30-a4bda4f01837</onsuccess><calculation expression="True" stage="Exists" /></stage><stage stageid="2e050fc0-fed0-49b4-bafc-a33a0aee5ad9" name="Success?" type="Decision"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="15" /><decision expression="[Success]" /><ontrue>c491f60e-4aa7-4abb-a203-5a78c0b64469</ontrue><onfalse>510a1b6e-59d7-40a0-8886-483ef66093e9</onfalse></stage><stage stageid="510a1b6e-59d7-40a0-8886-483ef66093e9" name="FAIL" type="Exception"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="15" w="30" h="30" /><exception type="UtilityException" detail="&quot;Error occurred removing null rows: &quot; &amp; [Message]" /></stage><stage stageid="d21a0d38-763e-4c60-a2ee-196651324403" name="Note3" type="Note"><loginhibit /><narrative>Version 10.4.0</narrative><display x="15" y="-150" w="90" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="89ce9a42-60b8-483b-ae61-e87db8beec5c" name="Get Unmatched Records" type="SubSheetInfo"><subsheetid>1b217763-c8fd-4c04-a40d-9c65089ffc73</subsheetid><narrative>This action returns the records from the first Collection that do not exist in the second Collection.

NOTE: The Collections must have the same column definitions.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="130be03d-6d7d-461d-8541-81fb9c6c4e79" name="Start" type="Start"><subsheetid>1b217763-c8fd-4c04-a40d-9c65089ffc73</subsheetid><loginhibit /><preconditions><condition narrative="The two Collections must have identical column definitions." /></preconditions><display x="15" y="-105" /><inputs><input type="collection" name="Main Collection" narrative="The primary Collection. This is the Collection from which records will be returned if they do not have a matching record in 'Comparison Collection'." stage="Main Collection" /><input type="collection" name="Comparison Collection" narrative="The comparison Collection. This is the Collection that 'Main Collection' is compared against to look for matching records." stage="Comparison Collection" /></inputs><onsuccess>d8164d30-1f24-437f-b946-4faa61c823c7</onsuccess></stage><stage stageid="e3619b42-fa4c-4699-8888-91c77c148d9a" name="End" type="End"><subsheetid>1b217763-c8fd-4c04-a40d-9c65089ffc73</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="collection" name="Unmatched Records" narrative="A Collection of records that exist in the Main Collection but do not exist in the Comparison Collection." stage="Unmatched Records" /></outputs></stage><stage stageid="adf99ec3-cd9e-45a4-9cdd-cc063d6ecac4" name="Main Collection" type="Collection"><subsheetid>1b217763-c8fd-4c04-a40d-9c65089ffc73</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="bf5db2be-322c-49c9-b60b-c04d3a7a0beb" name="Comparison Collection" type="Collection"><subsheetid>1b217763-c8fd-4c04-a40d-9c65089ffc73</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ccfb713c-ac9b-46e0-8852-f391f1ca01e2" name="Input" type="Block"><subsheetid>1b217763-c8fd-4c04-a40d-9c65089ffc73</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="62009e7a-6480-426d-a5e5-6d3a3b635655" name="Output" type="Block"><subsheetid>1b217763-c8fd-4c04-a40d-9c65089ffc73</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="ff9c0d74-401e-47ea-93e8-5d1f3cd0c65b" name="Local Data" type="Block"><subsheetid>1b217763-c8fd-4c04-a40d-9c65089ffc73</subsheetid><loginhibit /><display x="-270" y="135" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="d8164d30-1f24-437f-b946-4faa61c823c7" name="Linq - Except" type="Code"><subsheetid>1b217763-c8fd-4c04-a40d-9c65089ffc73</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="collection" name="Main Collection" expr="[Main Collection]" /><input type="collection" name="Comparison Collection" expr="[Comparison Collection]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /><output type="collection" name="Unmatched Records" stage="Unmatched Records" /></outputs><onsuccess>3602c39e-d674-46b6-9806-b6923f8c664e</onsuccess><code><![CDATA[Success = False

If Main_Collection.Columns.Count > 0 AndAlso Main_Collection.Columns.Count <> Comparison_Collection.Columns.Count Then
	Error_Message = "Field definitions do not match. The number of columns in each collection is different."
	Exit Sub
End If

For Each Col1 As DataColumn In Main_Collection.Columns
	If Not Comparison_Collection.Columns.Contains(Col1.ColumnName) Then
		Error_Message = "The Main Collection does not contain a column named '" & Col1.ColumnName & "'."
		Exit Sub
	End If

	If Comparison_Collection.Columns(Col1.ColumnName).DataType.Name <> Col1.DataType.Name Then
		Error_Message = "The data type of column '" & Col1.ColumnName & "' does not match between the two collections."
		Exit Sub
	End If
Next

Try
	Unmatched_Records = Main_Collection.AsEnumerable().Except(Comparison_Collection.AsEnumerable(), DataRowComparer.Default).CopyToDataTable()
Catch ex As InvalidOperationException
	' We'll get this error if all of the records in the main collection are found in the comparison collection.
	Unmatched_Records = Main_Collection.Clone()
End Try

Success = True
Error_Message = ""]]></code></stage><stage stageid="8a921dd2-1737-4d96-a588-c3e6ebb40024" name="Success" type="Data"><subsheetid>1b217763-c8fd-4c04-a40d-9c65089ffc73</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3622ddaa-8166-4d0f-bcc8-f1e6f7dd3b57" name="Error Message" type="Data"><subsheetid>1b217763-c8fd-4c04-a40d-9c65089ffc73</subsheetid><display x="-195" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f89adecd-0827-429b-8de3-8b01e5ccc89e" name="Unmatched Records" type="Collection"><subsheetid>1b217763-c8fd-4c04-a40d-9c65089ffc73</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3602c39e-d674-46b6-9806-b6923f8c664e" name="Success?" type="Decision"><subsheetid>1b217763-c8fd-4c04-a40d-9c65089ffc73</subsheetid><loginhibit /><display x="15" y="15" /><decision expression="[Success]" /><ontrue>e3619b42-fa4c-4699-8888-91c77c148d9a</ontrue><onfalse>8a86a8d9-d10b-4088-967a-2e9c1c368676</onfalse></stage><stage stageid="8a86a8d9-d10b-4088-967a-2e9c1c368676" name="System Exception" type="Exception"><subsheetid>1b217763-c8fd-4c04-a40d-9c65089ffc73</subsheetid><display x="120" y="15" w="90" h="30" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="0fb01066-3d3b-47fc-b63c-511e5bb33ad5" name="Get Matched Records" type="SubSheetInfo"><subsheetid>5abe0172-955b-476b-ad10-8c94292f2304</subsheetid><narrative>This action returns the records that exist in both input Collections.

NOTE: The Collections must have the same column definitions.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="8cff5de5-b6a7-4663-8b01-bd753a5c4c62" name="Start" type="Start"><subsheetid>5abe0172-955b-476b-ad10-8c94292f2304</subsheetid><loginhibit /><preconditions><condition narrative="The two Collections must have identical column definitions." /></preconditions><display x="15" y="-105" /><inputs><input type="collection" name="Main Collection" narrative="The primary Collection. This is the Collection from which records will be returned if they do not have a matching record in 'Comparison Collection'." stage="Main Collection" /><input type="collection" name="Comparison Collection" narrative="The comparison Collection. This is the Collection that 'Main Collection' is compared against to look for matching records." stage="Comparison Collection" /></inputs><onsuccess>f846fbd0-6ac6-47f4-8ae5-29608f424daa</onsuccess></stage><stage stageid="845396ae-206a-41f4-bc19-44551981df7a" name="End" type="End"><subsheetid>5abe0172-955b-476b-ad10-8c94292f2304</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="collection" name="Matched Records" narrative="A Collection of records that exist in both input Collections." stage="Matched Records" /></outputs></stage><stage stageid="2e074afe-6f8f-4657-9d75-f6693c7f5d2e" name="Main Collection" type="Collection"><subsheetid>5abe0172-955b-476b-ad10-8c94292f2304</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4c76f2c0-e4fe-4890-b929-4cabb3e10263" name="Comparison Collection" type="Collection"><subsheetid>5abe0172-955b-476b-ad10-8c94292f2304</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="23746902-9876-4974-938d-a0ed9a20293c" name="Input" type="Block"><subsheetid>5abe0172-955b-476b-ad10-8c94292f2304</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6e992ef5-02e9-4a05-bc31-bcbf17ce23c6" name="Output" type="Block"><subsheetid>5abe0172-955b-476b-ad10-8c94292f2304</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="f22bc52b-8dfd-4ebc-9c33-a4c4062e4896" name="Local Data" type="Block"><subsheetid>5abe0172-955b-476b-ad10-8c94292f2304</subsheetid><loginhibit /><display x="-270" y="135" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="f846fbd0-6ac6-47f4-8ae5-29608f424daa" name="Linq - Intersect" type="Code"><subsheetid>5abe0172-955b-476b-ad10-8c94292f2304</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="collection" name="Main Collection" expr="[Main Collection]" /><input type="collection" name="Comparison Collection" expr="[Comparison Collection]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /><output type="collection" name="Matched Records" stage="Matched Records" /></outputs><onsuccess>1cf943f4-3c9e-4913-a20b-7dcfe1481d4b</onsuccess><code><![CDATA[Success = False

If Main_Collection.Columns.Count > 0 AndAlso Main_Collection.Columns.Count <> Comparison_Collection.Columns.Count Then
	Error_Message = "Field definitions do not match. The number of columns in each collection is different."
	Exit Sub
End If

For Each Col1 As DataColumn In Main_Collection.Columns
	If Not Comparison_Collection.Columns.Contains(Col1.ColumnName) Then
		Error_Message = "The Main Collection does not contain a column named '" & Col1.ColumnName & "'."
		Exit Sub
	End If

	If Comparison_Collection.Columns(Col1.ColumnName).DataType.Name <> Col1.DataType.Name Then
		Error_Message = "The data type of column '" & Col1.ColumnName & "' does not match between the two collections."
		Exit Sub
	End If
Next

Try
	Matched_Records = Main_Collection.AsEnumerable().Intersect(Comparison_Collection.AsEnumerable(), DataRowComparer.Default).CopyToDataTable()
Catch ex As InvalidOperationException
	' We'll get this exception if there are no records returned by the Linq query (Intersect), so we just eat the exception and move on.
	Matched_Records = Main_Collection.Clone()
End Try

Success = True
Error_Message = ""]]></code></stage><stage stageid="317028a6-4ee4-4968-a171-9ad37391f8c9" name="Success" type="Data"><subsheetid>5abe0172-955b-476b-ad10-8c94292f2304</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fa3d3598-5364-45f3-aae6-227de0a985db" name="Error Message" type="Data"><subsheetid>5abe0172-955b-476b-ad10-8c94292f2304</subsheetid><display x="-195" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1073bfab-d432-43df-92eb-3bb3e3a09e5c" name="Matched Records" type="Collection"><subsheetid>5abe0172-955b-476b-ad10-8c94292f2304</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1cf943f4-3c9e-4913-a20b-7dcfe1481d4b" name="Success?" type="Decision"><subsheetid>5abe0172-955b-476b-ad10-8c94292f2304</subsheetid><loginhibit /><display x="15" y="15" /><decision expression="[Success]" /><ontrue>845396ae-206a-41f4-bc19-44551981df7a</ontrue><onfalse>f1142b28-450d-40b4-9962-027b2aa7f9a9</onfalse></stage><stage stageid="f1142b28-450d-40b4-9962-027b2aa7f9a9" name="System Exception" type="Exception"><subsheetid>5abe0172-955b-476b-ad10-8c94292f2304</subsheetid><display x="120" y="15" w="90" h="30" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="9c12429d-e57f-4f04-b2fb-6a7f4a991590" name="Get Union of Collections" type="SubSheetInfo"><subsheetid>cd8dfc11-f248-4b63-9116-1ae3637913ea</subsheetid><narrative>This action returns the union (a combined Collection of unique records) of the two input Collections.

NOTE: The Collections must have the same column definitions.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c149caca-4c1e-48b7-9dc9-a55f40ba231e" name="Start" type="Start"><subsheetid>cd8dfc11-f248-4b63-9116-1ae3637913ea</subsheetid><loginhibit /><preconditions><condition narrative="The two Collections must have identical column definitions." /></preconditions><display x="15" y="-105" /><inputs><input type="collection" name="Collection1" narrative="The first Collection to use in calculating the union." stage="Collection1" /><input type="collection" name="Collection2" narrative="The second Collection to use in calculating the union." stage="Collection2" /></inputs><onsuccess>aacf5f2c-fe64-463a-abfc-735f7403db87</onsuccess></stage><stage stageid="34ee905f-f445-4856-b08b-f9c8252da8b9" name="End" type="End"><subsheetid>cd8dfc11-f248-4b63-9116-1ae3637913ea</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="collection" name="Union" narrative="A Collection of unique records that exist in both input Collections." stage="Union" /></outputs></stage><stage stageid="b0772f48-b18c-4772-b4a4-d5b2de6a127f" name="Collection1" type="Collection"><subsheetid>cd8dfc11-f248-4b63-9116-1ae3637913ea</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="569d0969-6f5a-4e96-b9cb-5c05b10a9c14" name="Collection2" type="Collection"><subsheetid>cd8dfc11-f248-4b63-9116-1ae3637913ea</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="737dafa5-37d3-46b9-bd5c-967612f87b67" name="Input" type="Block"><subsheetid>cd8dfc11-f248-4b63-9116-1ae3637913ea</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d104ec15-cb63-441b-906b-2fe09fb97737" name="Output" type="Block"><subsheetid>cd8dfc11-f248-4b63-9116-1ae3637913ea</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="ed53674a-0bed-4e1f-bc7d-c9d1b7410b5a" name="Local Data" type="Block"><subsheetid>cd8dfc11-f248-4b63-9116-1ae3637913ea</subsheetid><loginhibit /><display x="-270" y="135" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="aacf5f2c-fe64-463a-abfc-735f7403db87" name="Linq - Union" type="Code"><subsheetid>cd8dfc11-f248-4b63-9116-1ae3637913ea</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="collection" name="Collection1" expr="[Collection1]" /><input type="collection" name="Collection2" expr="[Collection2]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /><output type="collection" name="Union" stage="Union" /></outputs><onsuccess>6829427f-d974-42a3-b200-4d920aee2c26</onsuccess><code><![CDATA[Success = False

If Collection1.Columns.Count > 0 AndAlso Collection1.Columns.Count <> Collection2.Columns.Count Then
	Error_Message = "Field definitions do not match. The number of columns in each collection is different."
	Exit Sub
End If

For Each Col1 As DataColumn In Collection1.Columns
	If Not Collection2.Columns.Contains(Col1.ColumnName) Then
		Error_Message = "Collection1 does not contain a column named '" & Col1.ColumnName & "'."
		Exit Sub
	End If

	If Collection2.Columns(Col1.ColumnName).DataType.Name <> Col1.DataType.Name Then
		Error_Message = "The data type of column '" & Col1.ColumnName & "' does not match between the two collections."
		Exit Sub
	End If
Next

Try
	Union = Collection1.AsEnumerable().Union(Collection2.AsEnumerable(), DataRowComparer.Default).CopyToDataTable()
Catch ex As InvalidOperationException
	' We get this exception in cases where the returned collection from the Union contains no records because 
	' there's no data to copy, so we just eat the exception. 
	Union = Collection1.Clone()
End Try

Success = True
Error_Message = ""]]></code></stage><stage stageid="fc41aab5-2bf4-47e2-a2ab-83a39804edd0" name="Success" type="Data"><subsheetid>cd8dfc11-f248-4b63-9116-1ae3637913ea</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d5656ed-d71f-49fa-b0c6-9229de2785fe" name="Error Message" type="Data"><subsheetid>cd8dfc11-f248-4b63-9116-1ae3637913ea</subsheetid><display x="-195" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8e57bffe-c18b-49be-a668-6adcd0e32395" name="Union" type="Collection"><subsheetid>cd8dfc11-f248-4b63-9116-1ae3637913ea</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6829427f-d974-42a3-b200-4d920aee2c26" name="Success?" type="Decision"><subsheetid>cd8dfc11-f248-4b63-9116-1ae3637913ea</subsheetid><loginhibit /><display x="15" y="15" /><decision expression="[Success]" /><ontrue>34ee905f-f445-4856-b08b-f9c8252da8b9</ontrue><onfalse>d659bb38-8d3b-4797-8768-d3396c64868a</onfalse></stage><stage stageid="d659bb38-8d3b-4797-8768-d3396c64868a" name="System Exception" type="Exception"><subsheetid>cd8dfc11-f248-4b63-9116-1ae3637913ea</subsheetid><display x="120" y="15" w="90" h="30" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="b2a46636-144a-42cc-9290-9df9dc802ce9" name="Append Calculated Field" type="SubSheetInfo"><subsheetid>524a0a3c-118a-4343-ba4b-bc184a72404e</subsheetid><narrative>Appends a new field to the collection with the value of that field, for each row, calculated based on the input expression.

NOTE: If the value of a field used in the expression is changed after the caluculated field is initially created, the calculated field will not be updated. The calculation expression only applies at the point where the field is created.</narrative><display x="-195" y="-105" w="240" h="90" /></stage><stage stageid="e6a147f0-f64c-4454-a74e-d2b422c0df75" name="Start" type="Start"><subsheetid>524a0a3c-118a-4343-ba4b-bc184a72404e</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have the new field appended to it." /></postconditions><display x="30" y="-105" /><inputs><input type="collection" name="Collection" narrative="The collection to append a field to." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the new field." stage="Field Name" /><input type="text" name="Expression" narrative="The expression value to apply to the field for each row." stage="Expression" /><input type="text" name="Data Type" narrative="The Blue Prism data type of the new field." stage="Data Type" /></inputs><onsuccess>9bad9a3a-e53b-4925-932e-944d77af88f3</onsuccess></stage><stage stageid="0ac07106-6a92-4828-b060-03e8a91ff2e1" name="End" type="End"><subsheetid>524a0a3c-118a-4343-ba4b-bc184a72404e</subsheetid><loginhibit /><display x="30" y="90" /><outputs><output type="collection" name="Appended Collection" narrative="The collection with field appended." stage="Collection Out" /></outputs></stage><stage stageid="9bad9a3a-e53b-4925-932e-944d77af88f3" name="Append Expression Field" type="Code"><subsheetid>524a0a3c-118a-4343-ba4b-bc184a72404e</subsheetid><loginhibit /><display x="30" y="-15" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Column" expr="[Field Name]" /><input type="text" name="Expression" expr="[Expression]" /><input type="text" name="DataType" expr="[Data Type]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>0ac07106-6a92-4828-b060-03e8a91ff2e1</onsuccess><code><![CDATA[DataType = DataType.ToLower()

If Not Collection.Columns.Contains(Column) Then
	Select DataType
		Case "number"
			Collection.Columns.Add(Column, Type.GetType("System.Decimal"), Expression)
		Case "date", "datetime", "time"
			Collection.Columns.Add(Column, Type.GetType("System.DateTime"), Expression)
		Case "timespan"
			Collection.Columns.Add(Column, Type.GetType("System.TimeSpan"), Expression)
		Case "flag"
			Collection.Columns.Add(Column, Type.GetType("System.Boolean"), Expression)
		Case "binary"
			Collection.Columns.Add(Column, Type.GetType("System.Byte[]"), Expression)
		Case Else
			Collection.Columns.Add(Column, Type.GetType("System.String"), Expression)
	End Select
End If

New_Collection = Collection
]]></code></stage><stage stageid="b702a8a4-e1de-4878-a917-029f8147b685" name="Collection Out" type="Collection"><subsheetid>524a0a3c-118a-4343-ba4b-bc184a72404e</subsheetid><display x="-180" y="165" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="965af2e9-9a3c-4877-a43d-3782bc2ed8f8" name="Field Name" type="Data"><subsheetid>524a0a3c-118a-4343-ba4b-bc184a72404e</subsheetid><display x="-180" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4bcd1496-990d-42fc-a96b-e29237041a9c" name="Collection In" type="Collection"><subsheetid>524a0a3c-118a-4343-ba4b-bc184a72404e</subsheetid><display x="-180" y="-15" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="96f24399-6f1c-4b04-ac55-828597e3dc4c" name="Expression" type="Data"><subsheetid>524a0a3c-118a-4343-ba4b-bc184a72404e</subsheetid><display x="-180" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7778dfe1-fe4c-4f51-9089-d4703a81b9b7" name="Data Type" type="Data"><subsheetid>524a0a3c-118a-4343-ba4b-bc184a72404e</subsheetid><display x="-180" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad600498-c148-4bc1-838e-0cea022c338a" name="Note2" type="Note"><narrative>© 2025 Blue Prism Limited
Licensed under Blue Prism Asset Terms for Modifiable Assets
https://portal.blueprism.com/agreements
</narrative><display x="210" y="-15" w="330" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="eb481d3b-bee5-423e-9701-4a63d97e36b3" name="Save Collection to CSV File" type="SubSheetInfo"><subsheetid>2d0438d1-70b1-4151-b8a1-33e7bab117ad</subsheetid><display x="-150" y="-150" w="150" h="90" /></stage><stage stageid="7c395a70-605f-45b1-ae21-26f3b64519a3" name="Start" type="Start"><subsheetid>2d0438d1-70b1-4151-b8a1-33e7bab117ad</subsheetid><loginhibit /><display x="60" y="-150" /><inputs><input type="collection" name="CollectionData" narrative="The collection to export to CSV" stage="CollectionData" /><input type="text" name="CSVFilePath" narrative="The path to save the file to." stage="CSVFilePath" /><input type="flag" name="Include Column Headers" narrative="True if you wish to include column headers as the first line." stage="Include Headers?" /></inputs><onsuccess>e24d39a7-4848-4f47-b8ca-000479ce1649</onsuccess></stage><stage stageid="32fe5ed5-2082-465b-9cfb-253144b564ee" name="End" type="End"><subsheetid>2d0438d1-70b1-4151-b8a1-33e7bab117ad</subsheetid><loginhibit /><display x="60" y="135" /><outputs><output type="text" name="ErrorMessage" narrative="Any resulting exception message." stage="ErrorMessage" /></outputs></stage><stage stageid="1cada6a0-371a-4153-b378-fe72063152f0" name="CSVFilePath" type="Data"><subsheetid>2d0438d1-70b1-4151-b8a1-33e7bab117ad</subsheetid><loginhibit /><display x="-150" y="-60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ed11ca9-c329-409a-9a45-34936029b439" name="CollectionData" type="Collection"><subsheetid>2d0438d1-70b1-4151-b8a1-33e7bab117ad</subsheetid><loginhibit /><display x="-150" y="0" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="651619ed-4ba5-470c-b33d-e388f8fc06b4" name="Save to CSV File" type="Code"><subsheetid>2d0438d1-70b1-4151-b8a1-33e7bab117ad</subsheetid><loginhibit /><display x="60" y="-30" /><inputs><input type="collection" name="CollectionData" expr="[CollectionData]" /><input type="text" name="CSVFilePath" expr="[CSVFilePath]" /><input type="flag" name="Include Column Headers" expr="[Include Headers?]" /></inputs><outputs><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>32fe5ed5-2082-465b-9cfb-253144b564ee</onsuccess><code><![CDATA[ErrorMessage = "No Error"
Try
	SaveDataTableToCSV(CollectionData, CSVFilePath, Include_Column_Headers)
Catch ex as Exception
	if not ex.InnerException is nothing then
		ErrorMessage = string.Format("Error:{0}:IE:{1}",ex.Message, ex.InnerException.Message)
	else
		ErrorMessage = string.Format("Error:{0}", ex.Message)
	End if
End Try
]]></code></stage><stage stageid="e24d39a7-4848-4f47-b8ca-000479ce1649" name="File path has content" type="Decision"><subsheetid>2d0438d1-70b1-4151-b8a1-33e7bab117ad</subsheetid><loginhibit /><display x="60" y="-90" /><decision expression="Len([CSVFilePath]) &gt; 0" /><ontrue>651619ed-4ba5-470c-b33d-e388f8fc06b4</ontrue><onfalse>5ba6fc9d-84d3-46d3-82bb-e0ea86acfd10</onfalse></stage><stage stageid="d156b399-9e4a-49d9-a023-3327ab2c1102" name="Include Headers?" type="Data"><subsheetid>2d0438d1-70b1-4151-b8a1-33e7bab117ad</subsheetid><loginhibit /><display x="-150" y="60" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="6cb8162d-c4b9-41b3-95a4-b5d512e720e7" name="Inputs" type="Block"><subsheetid>2d0438d1-70b1-4151-b8a1-33e7bab117ad</subsheetid><loginhibit /><display x="-225" y="-90" w="150" h="195" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="5ba6fc9d-84d3-46d3-82bb-e0ea86acfd10" name="Anchor1" type="Anchor"><subsheetid>2d0438d1-70b1-4151-b8a1-33e7bab117ad</subsheetid><loginhibit /><display x="180" y="-90" w="10" h="10" /><onsuccess>02b300b2-f9e0-492d-93d5-89088cb26256</onsuccess></stage><stage stageid="c457c4d5-bf7d-4309-b9e6-df3d33795a77" name="ErrorMessage" type="Data"><subsheetid>2d0438d1-70b1-4151-b8a1-33e7bab117ad</subsheetid><loginhibit /><display x="-150" y="165" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="02b300b2-f9e0-492d-93d5-89088cb26256" name="Set Error Message" type="Calculation"><subsheetid>2d0438d1-70b1-4151-b8a1-33e7bab117ad</subsheetid><loginhibit /><display x="180" y="-30" /><onsuccess>25778783-cbb2-44b8-abb9-44a1b910decc</onsuccess><calculation expression="&quot;Check provided file path variable. It is currently empty.&quot;" stage="ErrorMessage" /></stage><stage stageid="25778783-cbb2-44b8-abb9-44a1b910decc" name="Anchor2" type="Anchor"><subsheetid>2d0438d1-70b1-4151-b8a1-33e7bab117ad</subsheetid><loginhibit /><display x="180" y="135" w="10" h="10" /><onsuccess>32fe5ed5-2082-465b-9cfb-253144b564ee</onsuccess></stage><stage stageid="e4a28c6f-101b-486e-9581-76bd12c7eedb" name="Outputs" type="Block"><subsheetid>2d0438d1-70b1-4151-b8a1-33e7bab117ad</subsheetid><loginhibit /><display x="-225" y="120" w="150" h="75" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="d7c8aceb-4576-4fdf-9089-fdebf6934111" name="Get Unique Records" type="SubSheetInfo"><subsheetid>c63b2d7a-01d2-4a51-a0c0-edc02a4669cb</subsheetid><narrative>This action returns the records from the input Collection where the value of the specified column is unique across all records.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4fd518ae-a437-41e2-9859-3ff5e26fc1bb" name="Start" type="Start"><subsheetid>c63b2d7a-01d2-4a51-a0c0-edc02a4669cb</subsheetid><loginhibit /><preconditions><condition narrative="The two Collections must have identical column definitions." /></preconditions><display x="15" y="-105" /><inputs><input type="collection" name="Input Collection" narrative="The Collection to be checked." stage="Input Collection" /><input type="text" name="Column Name" narrative="The name of the column to check for unique values." stage="Column Name" /></inputs><onsuccess>2963fe3a-0cca-4869-84d8-edd12819c82a</onsuccess></stage><stage stageid="332aaa56-4d26-4eed-b94f-7b30b596b537" name="End" type="End"><subsheetid>c63b2d7a-01d2-4a51-a0c0-edc02a4669cb</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="collection" name="Unique Records" narrative="A Collection of unique records." stage="Unique Records" /></outputs></stage><stage stageid="e26acfd6-54ba-4e68-828b-0ea62d1b05a8" name="Input" type="Block"><subsheetid>c63b2d7a-01d2-4a51-a0c0-edc02a4669cb</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="13e8c4c9-2dee-4dd1-96a7-fc8f07d2c511" name="Output" type="Block"><subsheetid>c63b2d7a-01d2-4a51-a0c0-edc02a4669cb</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="2fb82201-c251-43ee-a548-2553841ba94b" name="Local Data" type="Block"><subsheetid>c63b2d7a-01d2-4a51-a0c0-edc02a4669cb</subsheetid><loginhibit /><display x="-270" y="135" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="2963fe3a-0cca-4869-84d8-edd12819c82a" name="Linq - Get Unique" type="Code"><subsheetid>c63b2d7a-01d2-4a51-a0c0-edc02a4669cb</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="collection" name="inputCollection" expr="[Input Collection]" /><input type="text" name="columnName" expr="[Column Name]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /><output type="collection" name="uniqueRecords" stage="Unique Records" /></outputs><onsuccess>ed36252a-0a94-4f29-b20c-75fa146ef5ff</onsuccess><code><![CDATA[Success = False

Try
	' Get a list of values in the specified column
	Dim testValues = inputCollection.AsEnumerable() _
				   .GroupBy(Function(row) row(columnName)) _
				   .Where(Function(group) group.Count() = 1) _
				   .Select(Function(group) group.Key) _
				   .ToList()

	' Create a copy of the existing DatTable structure.
	uniqueRecords = inputCollection.Clone() 

	' Filter rows where the value of columnName is unique
	For Each row As DataRow In inputCollection.Rows
		If testValues.Contains(row(columnName)) Then
			uniqueRecords.ImportRow(row)
		End If
	Next
Catch ex As Exception
	Error_Message = ex.Message
	uniqueRecords = Nothing
	Exit Sub
End Try

Success = True
Error_Message = ""]]></code></stage><stage stageid="c73632a0-dc6c-4916-8871-b0e64eaafe64" name="Success" type="Data"><subsheetid>c63b2d7a-01d2-4a51-a0c0-edc02a4669cb</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a5f5e99-69e7-473b-a12b-7fbeee439eae" name="Error Message" type="Data"><subsheetid>c63b2d7a-01d2-4a51-a0c0-edc02a4669cb</subsheetid><display x="-195" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d64994f9-6899-4f4a-a301-60b7df657e95" name="Unique Records" type="Collection"><subsheetid>c63b2d7a-01d2-4a51-a0c0-edc02a4669cb</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ed36252a-0a94-4f29-b20c-75fa146ef5ff" name="Success?" type="Decision"><subsheetid>c63b2d7a-01d2-4a51-a0c0-edc02a4669cb</subsheetid><loginhibit /><display x="15" y="15" /><decision expression="[Success]" /><ontrue>332aaa56-4d26-4eed-b94f-7b30b596b537</ontrue><onfalse>30052cf2-9cfc-48ae-be2d-e5cc46694486</onfalse></stage><stage stageid="30052cf2-9cfc-48ae-be2d-e5cc46694486" name="System Exception" type="Exception"><subsheetid>c63b2d7a-01d2-4a51-a0c0-edc02a4669cb</subsheetid><display x="120" y="15" w="90" h="30" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="1d3ebc32-3891-40a9-8564-f7fd74d43fd2" name="Input Collection" type="Collection"><subsheetid>c63b2d7a-01d2-4a51-a0c0-edc02a4669cb</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="dad025e7-abb7-40e9-a90a-e3a3d1c37019" name="Column Name" type="Data"><subsheetid>c63b2d7a-01d2-4a51-a0c0-edc02a4669cb</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="75c877a1-7852-4f0c-9f0f-4e56e2869404" name="Get Distinct Records" type="SubSheetInfo"><subsheetid>d35c0ad8-d252-4d67-b4d2-0654438d8bb8</subsheetid><narrative>This action returns the records from the input Collection where the value of the specified column is distinct across all records. In other words, even if there are repeasted values in the column, only the first appearance of a value in the specific column will be included in the output Collection.</narrative><display x="-195" y="-105" w="180" h="90" /></stage><stage stageid="d0f1854f-7474-4b46-b877-81fa460362e1" name="Start" type="Start"><subsheetid>d35c0ad8-d252-4d67-b4d2-0654438d8bb8</subsheetid><loginhibit /><preconditions><condition narrative="The two Collections must have identical column definitions." /></preconditions><display x="15" y="-105" /><inputs><input type="collection" name="Input Collection" narrative="The Collection to be checked." stage="Input Collection" /><input type="text" name="Column Name" narrative="The name of the column to check for unique values." stage="Column Name" /></inputs><onsuccess>6e2e038f-dea3-4791-aeb4-3cbde338dc1f</onsuccess></stage><stage stageid="0f1c44ca-9f42-4fc0-bfe8-77d4d579369a" name="End" type="End"><subsheetid>d35c0ad8-d252-4d67-b4d2-0654438d8bb8</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="collection" name="Distinct Records" narrative="A Collection of distinct records." stage="Distinct Records" /></outputs></stage><stage stageid="06c143bd-5e7e-4598-a203-e285e63a58a9" name="Input" type="Block"><subsheetid>d35c0ad8-d252-4d67-b4d2-0654438d8bb8</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6587eaae-9226-4ba3-a8bf-fede698f28d3" name="Output" type="Block"><subsheetid>d35c0ad8-d252-4d67-b4d2-0654438d8bb8</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="0eac0ebf-e16b-40ed-925c-d84445021c7a" name="Local Data" type="Block"><subsheetid>d35c0ad8-d252-4d67-b4d2-0654438d8bb8</subsheetid><loginhibit /><display x="-270" y="135" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="6e2e038f-dea3-4791-aeb4-3cbde338dc1f" name="Linq - Get Distinct" type="Code"><subsheetid>d35c0ad8-d252-4d67-b4d2-0654438d8bb8</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="collection" name="inputCollection" expr="[Input Collection]" /><input type="text" name="columnName" expr="[Column Name]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /><output type="collection" name="outputRecords" stage="Distinct Records" /></outputs><onsuccess>5bc54855-1483-4d1d-a749-5873d5418577</onsuccess><code><![CDATA[Success = False

Try
	' Use LINQ to project distinct values of the specified column
	Dim distinctValues = inputCollection.AsEnumerable().
		Select(Function(row) row.Field(Of Object)(columnName)).
		Distinct()

	' Clone the same table structure
	outputRecords = inputCollection.Clone()

	' Add the first matching row for each distinct value
	For Each value In distinctValues
		Dim firstMatch = inputCollection.AsEnumerable().
			FirstOrDefault(Function(row) row.Field(Of Object)(columnName).Equals(value))
		If firstMatch IsNot Nothing Then
			outputRecords.ImportRow(firstMatch)
		End If
	Next

Catch ex As Exception
	Error_Message = ex.Message
	outputRecords = Nothing
	Exit Sub
End Try

Success = True
Error_Message = ""]]></code></stage><stage stageid="e99768bc-d309-43ee-9a9e-07ceec342156" name="Success" type="Data"><subsheetid>d35c0ad8-d252-4d67-b4d2-0654438d8bb8</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd5b4b3f-07ca-4dfe-a9cb-eaba42d4a164" name="Error Message" type="Data"><subsheetid>d35c0ad8-d252-4d67-b4d2-0654438d8bb8</subsheetid><display x="-195" y="195" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f435ff08-82d3-4bac-b9ff-de7799985b25" name="Distinct Records" type="Collection"><subsheetid>d35c0ad8-d252-4d67-b4d2-0654438d8bb8</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5bc54855-1483-4d1d-a749-5873d5418577" name="Success?" type="Decision"><subsheetid>d35c0ad8-d252-4d67-b4d2-0654438d8bb8</subsheetid><loginhibit /><display x="15" y="15" /><decision expression="[Success]" /><ontrue>0f1c44ca-9f42-4fc0-bfe8-77d4d579369a</ontrue><onfalse>82274992-f589-4408-9f1a-c2c10628e9fe</onfalse></stage><stage stageid="82274992-f589-4408-9f1a-c2c10628e9fe" name="System Exception" type="Exception"><subsheetid>d35c0ad8-d252-4d67-b4d2-0654438d8bb8</subsheetid><display x="120" y="15" w="90" h="30" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="8beaf881-9047-4092-ac3f-d1945aaeb6b4" name="Input Collection" type="Collection"><subsheetid>d35c0ad8-d252-4d67-b4d2-0654438d8bb8</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="fb0da049-3a35-42fe-b019-ff514ecc47c5" name="Column Name" type="Data"><subsheetid>d35c0ad8-d252-4d67-b4d2-0654438d8bb8</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="92564613-f444-48c5-8ff7-abb4f7ea7548" name="Utility - Date and Time Manipulation" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Date and Time Manipulation" version="6.4.2.10610" bpversion="7.4.1.15931" narrative="Utility functions for manipulating dates and times." byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6516a093-7eae-4d9c-b6e4-f1cfd6ed5668" type="Normal" published="True"><name>Format Date</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3faad3c6-8a21-4d44-9df6-4c69213d552f" type="Normal" published="True"><name>DateAdd</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a15c8b3f-df2f-4461-a42c-41f5afdbf123" type="Normal" published="True"><name>Get Time of Day</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d92822f9-e820-40af-98f7-53accd5a8b1d" type="Normal" published="True"><name>Get Last Working Day</name><view><camerax>-6</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="44144695-c6e6-4781-80a7-cbda94215737" type="Normal" published="True"><name>Get Maximum TimeSpan</name><view><camerax>0</camerax><cameray>-36</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2593a374-b6d7-4604-9663-f29713768d5e" type="Normal" published="True"><name>UTC To Local</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cd37e9f9-3117-4a15-915b-2244c21cde9a" type="Normal" published="True"><name>Local To UTC</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="beb9635e-b787-4e2e-ae55-7eccc9fb8e14" type="Normal" published="True"><name>Get Time Zones</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8c3d3a23-6712-4bb6-a303-fe23aa33a0f4" type="Normal" published="True"><name>Get Unix Time Seconds From DateTime</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bdda5887-fa82-4a94-b3ba-be3baafbf3e9" type="Normal" published="True"><name>Get DateTime From Unix Time Seconds</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[
]]></globalcode><code><![CDATA[Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="2cc85317-9c46-427c-b966-cb7abb1454c6" name="Format Date" type="SubSheetInfo"><subsheetid>6516a093-7eae-4d9c-b6e4-f1cfd6ed5668</subsheetid><narrative>Formats a date according to the given format string.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4c3fe2ef-c631-4aae-bbd4-c5008db9045c" name="Start" type="Start"><subsheetid>6516a093-7eae-4d9c-b6e4-f1cfd6ed5668</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The date will be formatted." /></postconditions><display x="15" y="-105" /><inputs><input type="datetime" name="Date Time" narrative="The Date to format" stage="Date Time" /><input type="text" name="Format" narrative="The format template text" stage="Format" /></inputs><onsuccess>ec339a00-b716-496d-a202-d126d86d3b82</onsuccess></stage><stage stageid="77a0cce8-1a21-4165-9a0f-adf9fec90d5c" name="End" type="End"><subsheetid>6516a093-7eae-4d9c-b6e4-f1cfd6ed5668</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Formatted Date" narrative="The formatted date as text." stage="Formatted Date" /></outputs></stage><stage stageid="cf5e7769-db59-4bb7-8253-e366e619c115" name="Date Time" type="Data"><subsheetid>6516a093-7eae-4d9c-b6e4-f1cfd6ed5668</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>datetime</datatype><initialvalue>2009-03-16 07:40:48Z</initialvalue><private /><alwaysinit /></stage><stage stageid="ec339a00-b716-496d-a202-d126d86d3b82" name="Format Date" type="Code"><subsheetid>6516a093-7eae-4d9c-b6e4-f1cfd6ed5668</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="datetime" name="Date Time" expr="[Date Time]" /><input type="text" name="Formatting" expr="[Format]" /></inputs><outputs><output type="text" name="Formatted Date" stage="Formatted Date" /></outputs><onsuccess>77a0cce8-1a21-4165-9a0f-adf9fec90d5c</onsuccess><code><![CDATA[try

Formatted_Date = Format(Date_Time, Formatting)

catch e as exception
end try]]></code></stage><stage stageid="a7c1c56b-526f-42cb-8f9c-fd85e0dc4358" name="Formatted Date" type="Data"><subsheetid>6516a093-7eae-4d9c-b6e4-f1cfd6ed5668</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1d34679f-edb9-47df-8413-eb6529085bea" name="Format" type="Data"><subsheetid>6516a093-7eae-4d9c-b6e4-f1cfd6ed5668</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">yyyy-MM-dd hh:mm:ss</initialvalue><private /><alwaysinit /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /></stage><stage stageid="55239e62-5f23-4636-b00f-3f92c2dd2b57" name="DateAdd" type="SubSheetInfo"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><narrative>Adds a specified number of hours minutes or seconds to the given date.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="dbfbfb9d-819d-4766-b61d-23f72fdc3eac" name="Start" type="Start"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The date will have the specified quantity added to it." /></postconditions><display x="15" y="-105" /><inputs><input type="datetime" name="DateTime" narrative="The date to which to add Hours Minutes or Seconds" stage="DateTime" /><input type="number" name="Hours" narrative="OPTIONAL: The number of hours to add" stage="Hours" /><input type="number" name="Minutes" narrative="OPTIONAL: The number of minutes to add" stage="Minutes" /><input type="number" name="Seconds" narrative="OPTIONAL: The number of seconds to add" stage="Seconds" /></inputs><onsuccess>e9d3896b-765f-4351-99f6-d0c611db1d0f</onsuccess></stage><stage stageid="837296b5-d951-45d5-9a71-15d6adb842af" name="End" type="End"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="datetime" name="Result" narrative="The date with the number of hours minutes or seconds added to it" stage="Result DateTime" /></outputs></stage><stage stageid="e3a0af02-a848-4ea8-8995-8aa784761a7a" name="Hours" type="Data"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="cb09e128-7238-4da3-9961-ae76391bf4fa" name="Minutes" type="Data"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ef1f06cf-1992-4ffb-8340-f7c18a441aa9" name="Seconds" type="Data"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="b61357e2-8f6e-4e65-9981-95950bb33f23" name="DateTime" type="Data"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>datetime</datatype><initialvalue>2009-06-11 05:50:18Z</initialvalue><private /><alwaysinit /></stage><stage stageid="e9d3896b-765f-4351-99f6-d0c611db1d0f" name="DateAdd1" type="Code"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="datetime" name="d" expr="[DateTime]" /><input type="number" name="h" expr="[Hours]" /><input type="number" name="m" expr="[Minutes]" /><input type="number" name="s" expr="[Seconds]" /></inputs><outputs><output type="datetime" name="Result" stage="Result DateTime" /></outputs><onsuccess>837296b5-d951-45d5-9a71-15d6adb842af</onsuccess><code><![CDATA[

Result = d.AddHours(h).AddMinutes(m).AddSeconds(s)]]></code></stage><stage stageid="2335b3c0-55db-4269-94ed-200e9fcc07e9" name="Result DateTime" type="Data"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="22cedbad-f117-4ee4-bd71-2a5f6c220cb6" name="Get Time of Day" type="SubSheetInfo"><subsheetid>a15c8b3f-df2f-4461-a42c-41f5afdbf123</subsheetid><narrative>Gets the current time of day as a timespan, as reported by the operating system.

Use UTC - if true, the current time will be expressed in UTC. Otherwise, it is expressed in the local time, as configured in the operating system. This will include daylight saving adjustments.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="53fc2493-6fda-4782-8934-42e13b047e5c" name="End" type="End"><subsheetid>a15c8b3f-df2f-4461-a42c-41f5afdbf123</subsheetid><loginhibit /><display x="135" y="90" /><outputs><output type="timespan" name="Time of Day" narrative="The time of day as a timespan" stage="Time of Day" /></outputs></stage><stage stageid="19b73e7b-2913-41ec-9c1d-36c19f8de2fa" name="Get Time of Day" type="Code"><subsheetid>a15c8b3f-df2f-4461-a42c-41f5afdbf123</subsheetid><loginhibit /><display x="135" y="-15" w="120" h="30" /><inputs><input type="flag" name="Use UTC" expr="[Use UTC]" /></inputs><outputs><output type="timespan" name="Time of Day" stage="Time of Day" /></outputs><onsuccess>53fc2493-6fda-4782-8934-42e13b047e5c</onsuccess><code><![CDATA[Dim RightNow as DateTime = DateTime.Now
If Use_UTC Then
   RightNow = DateTime.UTCNow
End If

Time_of_Day = RightNow.Subtract(DateTime.Today)]]></code></stage><stage stageid="a091940e-6fdc-44cf-9d55-e516d14fa0c5" name="Time of Day" type="Data"><subsheetid>a15c8b3f-df2f-4461-a42c-41f5afdbf123</subsheetid><display x="240" y="-15" /><datatype>timespan</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b543f1fa-0821-4bbf-a15a-90deeea26246" name="Start" type="Start"><subsheetid>a15c8b3f-df2f-4461-a42c-41f5afdbf123</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The current time of day will have been calculated." /></postconditions><display x="135" y="-135" /><inputs><input type="flag" name="Use UTC" narrative="Set True if the time its required as Universal Time Coordinated" stage="Use UTC" /></inputs><onsuccess>19b73e7b-2913-41ec-9c1d-36c19f8de2fa</onsuccess></stage><stage stageid="4625da5f-2d4f-49a4-b134-a51c2425c157" name="Use UTC" type="Data"><subsheetid>a15c8b3f-df2f-4461-a42c-41f5afdbf123</subsheetid><display x="210" y="-135" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="63c99096-e244-4194-bce2-c13b3d3baed0" name="Get Last Working Day" type="SubSheetInfo"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><narrative>Gets the last weekday of the given month and year. If no month/year is given, the current month and year is used. If either of the parameters is given then both must be given.
The value returned is the date (ie. the day in the month) of the last weekday in the given month. A return value of -1 indicates an error - that month OR year has been given but not both.</narrative><display x="-180" y="-135" w="240" h="120" /></stage><stage stageid="3c50b663-acf3-4122-8e8b-ead4802ee437" name="Start" type="Start"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><narrative>Gets the last working day of the given month / year.
Currently synonymous with getting the last *week* day of the given month year, though bank holiday support might arrive one day.</narrative><display x="15" y="-135" /><inputs><input type="number" name="Month" narrative="The month of the year" stage="Month" /><input type="number" name="Year" narrative="The year." stage="Year" /></inputs><onsuccess>35e0a5d0-e3da-4255-a20d-6d45de202a6f</onsuccess></stage><stage stageid="b9d57b5c-797b-4592-83e4-7a24ca15c1a6" name="End" type="End"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="number" name="Working Day" narrative="The last working day of the month" stage="Working Day" /></outputs></stage><stage stageid="098af183-1667-4b2f-8deb-1cc0620b95b2" name="Year" type="Data"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><display x="-315" y="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f413fe16-e03f-4b67-b2bd-b49592366e3e" name="Month" type="Data"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><display x="-315" y="-15" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="92fbace1-d10b-433c-8fed-fe1c26dbc518" name="Working Day" type="Data"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><display x="-240" y="-15" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e625be80-4bab-4171-a32d-4016e936a412" name="GetLastWorkingDay" type="Code"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="15" y="45" w="150" h="30" /><inputs><input type="number" name="Month" expr="[Month]" /><input type="number" name="Year" expr="[Year]" /></inputs><outputs><output type="number" name="Day" stage="Working Day" /></outputs><onsuccess>b9d57b5c-797b-4592-83e4-7a24ca15c1a6</onsuccess><code><![CDATA[Day = DateTime.DaysInMonth(Year, Month)
Dim dt as New DateTime(Year, Month, Day)
While True
	Select Case dt.DayOfWeek
		Case DayOfWeek.Saturday,DayOfWeek.Sunday
			Day -= 1
			dt = New DateTime(Year, Month, Day)
		Case Else
			Return
	End Select
End While]]></code></stage><stage stageid="35e0a5d0-e3da-4255-a20d-6d45de202a6f" name="Month &amp; Year Empty?" type="Decision"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><decision expression="[Month] = 0 AND [Year] = 0" /><ontrue>b8ca2a17-7daf-4166-ba91-14ded7cce776</ontrue><onfalse>11958d80-d666-4466-a27e-977163030022</onfalse></stage><stage stageid="b8ca2a17-7daf-4166-ba91-14ded7cce776" name="Get Month of Today" type="Calculation"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="105" y="-90" /><onsuccess>aa7dcdfd-36c3-455e-ac32-d688f1ab4db8</onsuccess><calculation expression="FormatDate(Today(), &quot;MM&quot;)" stage="Month" /></stage><stage stageid="aa7dcdfd-36c3-455e-ac32-d688f1ab4db8" name="Get Year of Today" type="Calculation"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="180" y="-90" /><onsuccess>9cc58b0b-db3f-482e-95d9-ffa1380515ec</onsuccess><calculation expression="FormatDate(Today(), &quot;yyyy&quot;)" stage="Year" /></stage><stage stageid="9cc58b0b-db3f-482e-95d9-ffa1380515ec" name="anchor1" type="Anchor"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="180" y="0" w="10" h="10" /><onsuccess>6de1714a-92eb-4cd0-bef1-dbe4598f6b20</onsuccess></stage><stage stageid="6de1714a-92eb-4cd0-bef1-dbe4598f6b20" name="anchor2" type="Anchor"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="15" y="0" w="10" h="10" /><onsuccess>e625be80-4bab-4171-a32d-4016e936a412</onsuccess></stage><stage stageid="11958d80-d666-4466-a27e-977163030022" name="Month OR Year Empty?" type="Decision"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><decision expression="[Month] = 0 OR [Year] = 0" /><ontrue>61e4a055-8b98-4332-84e7-844b0b1f2b30</ontrue><onfalse>6de1714a-92eb-4cd0-bef1-dbe4598f6b20</onfalse></stage><stage stageid="61e4a055-8b98-4332-84e7-844b0b1f2b30" name="Error: Return -1" type="Calculation"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="-75" y="-45" /><onsuccess>55503d4b-dd2f-46a4-abf7-6b68b3f11c4e</onsuccess><calculation expression="-1" stage="Working Day" /></stage><stage stageid="55503d4b-dd2f-46a4-abf7-6b68b3f11c4e" name="End" type="End"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="-150" y="-45" /><outputs><output type="number" name="Working Day" narrative="The last working day of the month" stage="Working Day" /></outputs></stage><stage stageid="717a0494-c064-4882-b1fe-774df9a21423" name="Get Maximum TimeSpan" type="SubSheetInfo"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><narrative>Gets the maximum timespan from a collection of timespan values</narrative><display x="-195" y="-150" w="150" h="90" /></stage><stage stageid="3e99ca05-4f18-45c4-98cc-91ebfc8cf4f0" name="Start" type="Start"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The maximum timespan will be found." /></postconditions><display x="15" y="-105" /><inputs><input type="collection" name="Timespan Values" narrative="A collection of timespan values" stage="Timespan Values" /></inputs><onsuccess>b63b3567-309e-47ca-a1da-b12798e2cde0</onsuccess></stage><stage stageid="64485ded-6777-4852-a8cc-f866a980e3c0" name="End" type="End"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="15" y="180" /><outputs><output type="timespan" name="Maximum Timespan Value" narrative="The maximum of all of the timespan values supplied" stage="Maximum Timespan Value" /></outputs></stage><stage stageid="51491768-b683-4c5b-a150-f03943247d70" name="Timespan Values" type="Collection"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><display x="135" y="-105" w="120" h="90" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Timespan Value" type="timespan" /></collectioninfo></stage><stage stageid="1d879bc2-5cd1-4e25-8d37-c157e1133cf0" name="Minimum Timespan Value" type="Data"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="-210" y="-75" w="180" h="30" /><datatype>timespan</datatype><initialvalue>0.00:00:00</initialvalue><private /><alwaysinit /></stage><stage stageid="b63b3567-309e-47ca-a1da-b12798e2cde0" name="Start with Minimum" type="Calculation"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>78ab136e-f028-4c03-a776-9124fda261ad</onsuccess><calculation expression="[Minimum Timespan Value]" stage="Maximum Timespan Value" /></stage><stage stageid="9c67b24d-115a-481f-9054-ca7d6fa0408a" name="Maximum Timespan Value" type="Data"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><display x="150" y="180" w="180" h="30" /><datatype>timespan</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="78ab136e-f028-4c03-a776-9124fda261ad" name="For Each Value" type="LoopStart"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="15" y="15" /><onsuccess>598192e8-9ae7-4965-bd01-e661d68c1641</onsuccess><groupid>d78a55e4-d0ac-477c-b254-c21b2197d767</groupid><looptype>ForEach</looptype><loopdata>Timespan Values</loopdata></stage><stage stageid="11f34648-502a-4ea2-899f-4425d7c62d92" name="Next" type="LoopEnd"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="15" y="105" /><onsuccess>64485ded-6777-4852-a8cc-f866a980e3c0</onsuccess><groupid>d78a55e4-d0ac-477c-b254-c21b2197d767</groupid></stage><stage stageid="598192e8-9ae7-4965-bd01-e661d68c1641" name="Bigger?" type="Decision"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="15" y="60" /><decision expression="[Timespan Values.Timespan Value] &gt; [Maximum Timespan Value]" /><ontrue>5f08997c-0bb6-453f-ad1a-3326ca40e854</ontrue><onfalse>11f34648-502a-4ea2-899f-4425d7c62d92</onfalse></stage><stage stageid="5f08997c-0bb6-453f-ad1a-3326ca40e854" name="Assign As Maximum" type="Calculation"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="105" y="60" /><onsuccess>7504cba9-325e-45b9-ab65-e382e7e6806c</onsuccess><calculation expression="[Timespan Values.Timespan Value]" stage="Maximum Timespan Value" /></stage><stage stageid="7504cba9-325e-45b9-ab65-e382e7e6806c" name="anchor3" type="Anchor"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="105" y="105" w="10" h="10" /><onsuccess>11f34648-502a-4ea2-899f-4425d7c62d92</onsuccess></stage><stage stageid="2a516836-bff3-4b78-bdc4-330df04901d0" name="UTC To Local" type="SubSheetInfo"><subsheetid>2593a374-b6d7-4604-9663-f29713768d5e</subsheetid><narrative>Convert a UTC datetime to a local datetime. This will default to the current system's local time zone, unless a Time Zone ID input is specified. You can get a collection of the current system's available Time Zone ID values by running the "Get Time Zones" action.</narrative><display x="-195" y="-105" w="150" h="120" /></stage><stage stageid="0de534a1-d6e1-46ef-aa12-98fa3fa68a77" name="Start" type="Start"><subsheetid>2593a374-b6d7-4604-9663-f29713768d5e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="datetime" name="UTC" narrative="The UTC datetime to convert" stage="UTC" /><input type="text" name="Time Zone ID" narrative="The ID of the timezone to use; Empty means to use the time zone on the executing environment" stage="Time Zone ID" /></inputs><onsuccess>aee7adc4-1cbc-4041-8419-8baaf28efbd2</onsuccess></stage><stage stageid="e8f43b71-727a-4d71-b2c3-8328d54d619a" name="End" type="End"><subsheetid>2593a374-b6d7-4604-9663-f29713768d5e</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="datetime" name="local" narrative="The converted datetime" stage="local" /></outputs></stage><stage stageid="3222f3ee-169b-4360-bff5-f61770be52c8" name="Local To UTC" type="SubSheetInfo"><subsheetid>cd37e9f9-3117-4a15-915b-2244c21cde9a</subsheetid><narrative>Convert a local datetime to a UTC datetime. The local datetime will default to the current system's local time zone, unless a Time Zone ID input is specified. You can get a collection of the current system's available Time Zone ID values by running the "Get Time Zones" action.</narrative><display x="-195" y="-105" w="150" h="120" /></stage><stage stageid="8a24056a-bd55-42d4-912e-00817495beb0" name="Start" type="Start"><subsheetid>cd37e9f9-3117-4a15-915b-2244c21cde9a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="datetime" name="local" narrative="The local datetime to convert" stage="local" /><input type="text" name="Time Zone ID" narrative="The ID of the timezone to use; Empty means to use the time zone on the executing environment" stage="Time Zone ID" /></inputs><onsuccess>4c971a75-78df-40c8-a504-a01823ccbc30</onsuccess></stage><stage stageid="5003b4bf-c249-4844-b10e-e6eadd217a7a" name="End" type="End"><subsheetid>cd37e9f9-3117-4a15-915b-2244c21cde9a</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="datetime" name="UTC" narrative="The converted datetime" stage="UTC" /></outputs></stage><stage stageid="aee7adc4-1cbc-4041-8419-8baaf28efbd2" name="UTC To Local" type="Code"><subsheetid>2593a374-b6d7-4604-9663-f29713768d5e</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="datetime" name="UTC" expr="[UTC]" /><input type="text" name="Time Zone ID" expr="[Time Zone ID]" /></inputs><outputs><output type="datetime" name="local" stage="local" /></outputs><onsuccess>e8f43b71-727a-4d71-b2c3-8328d54d619a</onsuccess><code><![CDATA[Dim utcDateTime = DateTime.SpecifyKind(UTC, DateTimeKind.Utc)
Dim tz As TimeZoneInfo
If Time_Zone_ID <> "" Then
	tz = TimeZoneInfo.FindSystemTimeZoneById(Time_Zone_ID)
	local = TimeZoneInfo.ConvertTimeFromUtc(utcDateTime, tz)
Else
	local = utcDateTime.ToLocalTime()
End If

' BP converts local dates back to UTC for its
' internal representation; so we have to convince it that
' this is UTC already so it doesn't convert it further.
local = DateTime.SpecifyKind(local, DateTimeKind.UTC)



]]></code></stage><stage stageid="4c971a75-78df-40c8-a504-a01823ccbc30" name="Local To UTC" type="Code"><subsheetid>cd37e9f9-3117-4a15-915b-2244c21cde9a</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="datetime" name="local" expr="[local]" /><input type="text" name="Time Zone ID" expr="[Time Zone ID]" /></inputs><outputs><output type="datetime" name="UTC" stage="UTC" /></outputs><onsuccess>5003b4bf-c249-4844-b10e-e6eadd217a7a</onsuccess><code><![CDATA[Dim unspecTime As DateTime = DateTime.SpecifyKind(local, DateTimeKind.Unspecified)
Dim localTime As DateTime = DateTime.SpecifyKind(local, DateTimeKind.Local)

If Time_Zone_ID <> "" Then
	Dim tz = TimeZoneInfo.FindSystemTimeZoneById(Time_Zone_ID)
	UTC = TimeZoneInfo.ConvertTimeToUtc(unspecTime, tz)
Else
	UTC = localTime.ToUniversalTime()
End If]]></code></stage><stage stageid="2e384e01-3462-4407-9d4a-bb84e69fec5b" name="Get Time Zones" type="SubSheetInfo"><subsheetid>beb9635e-b787-4e2e-ae55-7eccc9fb8e14</subsheetid><narrative>Returns a collection of all the time zones IDs that are available on the local system. These values can be used for the Time Zone ID input in the "UTC To Local" and "Local To UTC" actions.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e07ebc8a-6c21-451a-9694-23a299cfeabb" name="Start" type="Start"><subsheetid>beb9635e-b787-4e2e-ae55-7eccc9fb8e14</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>35c9217e-be33-4598-be0f-8af78e1acd9d</onsuccess></stage><stage stageid="9f86a6cb-2466-4f71-9137-6e5dc0cfc917" name="End" type="End"><subsheetid>beb9635e-b787-4e2e-ae55-7eccc9fb8e14</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Time Zones" narrative="Collection of current system Time Zone IDs" stage="Time Zones" /></outputs></stage><stage stageid="35c9217e-be33-4598-be0f-8af78e1acd9d" name="Get Time Zones" type="Code"><subsheetid>beb9635e-b787-4e2e-ae55-7eccc9fb8e14</subsheetid><loginhibit /><display x="15" y="-15" /><outputs><output type="collection" name="Time Zones" stage="Time Zones" /></outputs><onsuccess>9f86a6cb-2466-4f71-9137-6e5dc0cfc917</onsuccess><code><![CDATA[If Not Time_Zones.Columns.Contains("ID") Then _
	Time_Zones.Columns.Add("ID", GetType(System.String))  
For Each tz As TimeZoneInfo In TimeZoneInfo.GetSystemTimeZones()
 	Dim row As DataRow = Time_Zones.NewRow()
	row("ID") = tz.ID
	Time_Zones.Rows.Add(row)
Next
]]></code></stage><stage stageid="4663cb62-3121-4cba-863e-4fbd4f05d1fd" name="Time Zones" type="Collection"><subsheetid>beb9635e-b787-4e2e-ae55-7eccc9fb8e14</subsheetid><display x="195" y="-105" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6c46c221-a69d-4f6c-84ca-23d88f61af59" name="UTC" type="Data"><subsheetid>cd37e9f9-3117-4a15-915b-2244c21cde9a</subsheetid><display x="135" y="90" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d9cfc61-5fb4-4473-871b-02a064756b1c" name="local" type="Data"><subsheetid>cd37e9f9-3117-4a15-915b-2244c21cde9a</subsheetid><display x="150" y="-105" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="62e5b5a2-36dd-4466-a99f-45686667b65a" name="local" type="Data"><subsheetid>2593a374-b6d7-4604-9663-f29713768d5e</subsheetid><display x="135" y="90" w="90" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="790a957b-4380-4207-b33d-26fded288a74" name="UTC" type="Data"><subsheetid>2593a374-b6d7-4604-9663-f29713768d5e</subsheetid><display x="135" y="-105" w="90" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="084a7c0c-3275-48c7-ad67-c771e3defbf1" name="Time Zone ID" type="Data"><subsheetid>2593a374-b6d7-4604-9663-f29713768d5e</subsheetid><display x="210" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8d168372-af57-473e-9a1c-bc7f1e05c5c7" name="Time Zone ID" type="Data"><subsheetid>cd37e9f9-3117-4a15-915b-2244c21cde9a</subsheetid><display x="225" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a88c33d0-88e9-408f-8f0e-a348eb7ef6e7" name="Get Unix Time Seconds From DateTime" type="SubSheetInfo"><subsheetid>8c3d3a23-6712-4bb6-a303-fe23aa33a0f4</subsheetid><narrative>Returns the number of seconds that have elapsed since 1970-01-01T00:00:00Z.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="10b213d8-e8d9-45a6-bafc-0f7a2c27ea53" name="Start" type="Start"><subsheetid>8c3d3a23-6712-4bb6-a303-fe23aa33a0f4</subsheetid><loginhibit /><display x="-15" y="-135" /><inputs><input type="datetime" name="DateTime" narrative="DateTime value to convert to Unix time seconds" stage="DateTime" /></inputs><onsuccess>c1115d06-17cd-4f47-bd6e-c0ca07e29d8d</onsuccess></stage><stage stageid="bce8003d-da2a-4c3b-9951-900c5be32944" name="End" type="End"><subsheetid>8c3d3a23-6712-4bb6-a303-fe23aa33a0f4</subsheetid><loginhibit /><display x="-15" y="0" /><outputs><output type="number" name="UnixTimeSeconds" narrative="Result of conversion from datetime to unix time seconds." stage="UnixTimeSeconds" /></outputs></stage><stage stageid="c1115d06-17cd-4f47-bd6e-c0ca07e29d8d" name="Convert to Unix Time Seconds" type="Code"><subsheetid>8c3d3a23-6712-4bb6-a303-fe23aa33a0f4</subsheetid><loginhibit /><display x="-15" y="-75" w="150" h="60" /><inputs><input type="datetime" name="dateTimeToConvert" expr="[DateTime]" /></inputs><outputs><output type="number" name="unixTime" stage="UnixTimeSeconds" /></outputs><onsuccess>bce8003d-da2a-4c3b-9951-900c5be32944</onsuccess><code><![CDATA[Dim dto as new DateTimeOffset(dateTimeToConvert)
unixTime = dto.ToUnixTimeSeconds()]]></code></stage><stage stageid="03e75a2c-b7eb-47fa-9193-b36f9dd1f97f" name="DateTime" type="Data"><subsheetid>8c3d3a23-6712-4bb6-a303-fe23aa33a0f4</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8594bcb-259b-4de1-b63e-6deb178e30b0" name="UnixTimeSeconds" type="Data"><subsheetid>8c3d3a23-6712-4bb6-a303-fe23aa33a0f4</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c306ba9-5b77-479b-890b-2b7674c1bc58" name="Input Data Items" type="Block"><subsheetid>8c3d3a23-6712-4bb6-a303-fe23aa33a0f4</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="1d1a4c79-e10b-4272-a14b-e6d077100432" name="Output Data Items" type="Block"><subsheetid>8c3d3a23-6712-4bb6-a303-fe23aa33a0f4</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="dd7b2f94-1044-4874-90b8-d2e59895b45b" name="Get DateTime From Unix Time Seconds" type="SubSheetInfo"><subsheetid>bdda5887-fa82-4a94-b3ba-be3baafbf3e9</subsheetid><narrative>Returns the DateTime representation of the number of seconds that have elapsed since 1970-01-01T00:00:00Z.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0e9eeb01-3791-447a-bb9a-1e9b2f4c1e3d" name="Start" type="Start"><subsheetid>bdda5887-fa82-4a94-b3ba-be3baafbf3e9</subsheetid><loginhibit /><display x="-15" y="-135" /><inputs><input type="number" name="UnixTimeSeconds" narrative="The Unix time seconds value to convert to a DateTime" stage="UnixTimeSeconds" /></inputs><onsuccess>c4300b49-a4c3-4aea-8d97-882ae78115df</onsuccess></stage><stage stageid="cb0230fd-17b4-49a4-94e8-8ccc001b70b3" name="End" type="End"><subsheetid>bdda5887-fa82-4a94-b3ba-be3baafbf3e9</subsheetid><loginhibit /><display x="-15" y="0" /><outputs><output type="datetime" name="DateTime" narrative="Result of conversion from unix time seconds to a datetime." stage="DateTime" /></outputs></stage><stage stageid="c4300b49-a4c3-4aea-8d97-882ae78115df" name="Convert to DateTime" type="Code"><subsheetid>bdda5887-fa82-4a94-b3ba-be3baafbf3e9</subsheetid><loginhibit /><display x="-15" y="-75" w="150" h="60" /><inputs><input type="number" name="unixTime" expr="[UnixTimeSeconds]" /></inputs><outputs><output type="datetime" name="dateTimeResult" stage="DateTime" /></outputs><onsuccess>cb0230fd-17b4-49a4-94e8-8ccc001b70b3</onsuccess><code><![CDATA[Dim dtDateTime As New DateTime(1970,1,1,0,0,0,0,System.DateTimeKind.Utc)
dateTimeResult = dtDateTime.AddSeconds(unixTime).ToLocalTime()]]></code></stage><stage stageid="d3b73442-bd6a-48ba-9fc0-a167c259f390" name="DateTime" type="Data"><subsheetid>bdda5887-fa82-4a94-b3ba-be3baafbf3e9</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2def5302-7b8f-421c-88e7-b5b43f43ca59" name="UnixTimeSeconds" type="Data"><subsheetid>bdda5887-fa82-4a94-b3ba-be3baafbf3e9</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="150fbff6-909e-4515-b7b7-353ffbb091c4" name="Input Data Items" type="Block"><subsheetid>bdda5887-fa82-4a94-b3ba-be3baafbf3e9</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="92f863e7-346a-4a1b-b572-206367134d6e" name="Output Data Items" type="Block"><subsheetid>bdda5887-fa82-4a94-b3ba-be3baafbf3e9</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="b7b37fda-4d0d-455a-8802-d810c6bef878" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="240" y="-15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="4b4f60b8-7617-49e1-91eb-fbc60a6e2571" name="Note1" type="Note"><loginhibit /><narrative>Version 10.0</narrative><display x="15" y="-150" w="90" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage></process></object>
        <object id="f32ab518-c4ab-46ad-afd3-af58dfd14a0a" name="Utility - Encryption" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Encryption" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="Provides symmetric encryption and decryption functionality in several algorithms (AES, Triple DES, Rjindael)" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>45c614da-352d-4350-bf2d-f017794e9f4a</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-26</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="55996104-28f5-49f6-97d4-efb012c1b922" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="046e33b1-0ea6-4340-a479-4d3ad1891862" type="Normal" published="True"><name>Encrypt</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.875</zoom></view></subsheet><subsheet subsheetid="9f519b11-a37b-4d80-b024-8c8637139b19" type="Normal" published="True"><name>Decrypt</name><view><camerax>3</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="c84c3019-3042-4c0c-af59-6cc5b91aee26" name="Start" type="Start"><loginhibit /><display x="-75" y="-135" /><onsuccess>ab00a6a4-79ea-4d72-b8e6-45e3308ee966</onsuccess></stage><stage stageid="ab00a6a4-79ea-4d72-b8e6-45e3308ee966" name="End" type="End"><loginhibit /><display x="-75" y="-45" /></stage><stage stageid="39da3d35-af06-45ab-ba69-9fdc054e5d35" name="Stage1" type="ProcessInfo"><display x="-210" y="-90" w="150" h="120" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.Security.dll</reference><reference>System.IO.dll</reference><reference>System.Core.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.Security.Cryptography</import><import>System.IO</import><import>System.Text</import></imports><language>csharp</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[Boolean IsKeyProvided(string inputKey)
{
	if (!String.IsNullOrEmpty(inputKey))
	{
		return true;
	}
	else
	{
		return false;
	}
}

string[] SplitEncryptedData(string encryptedData)
{	
	try
	{
		string[] encryptedDataSegments = encryptedData.Split(':');
		if (encryptedDataSegments.Length != 2)
		{
			throw new Exception("Failed to parse encrypted data. Encrypted data should have format of: <initialization vector>:<data>");
		}
		else
		{
			return encryptedDataSegments;
		}
	}
	catch (Exception ex)
	{
		throw new Exception(ex.Message);
	}
}

string EncryptData(string inputData, CryptoStream cryptoStream, MemoryStream encryptedOutputDataStream)
{
	StreamWriter encryptedStreamWriter = new StreamWriter(cryptoStream);
	encryptedStreamWriter.Write(inputData);
	encryptedStreamWriter.Flush();
	cryptoStream.FlushFinalBlock();	
	encryptedOutputDataStream.Seek(0, SeekOrigin.Begin);
	
	return Convert.ToBase64String(encryptedOutputDataStream.ToArray());
}

string DecryptData(CryptoStream cryptoStream)
{
	using (StreamReader streamReader = new StreamReader(cryptoStream))
	{
		return streamReader.ReadToEnd();
	}
}

string GetRSAKeyString(RSAParameters publicKey)
{
	var stringWriter = new System.IO.StringWriter();
	var xmlSerializer = new System.Xml.Serialization.XmlSerializer(typeof(RSAParameters));
	
	xmlSerializer.Serialize(stringWriter, publicKey);
	
	return stringWriter.ToString();
}]]></code></stage><stage stageid="1642acbf-23b8-43fe-9078-2dfb9db45969" name="Clean Up" type="SubSheetInfo"><subsheetid>55996104-28f5-49f6-97d4-efb012c1b922</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="69dc953a-0359-49de-ab9a-804e5622f7a2" name="Start" type="Start"><subsheetid>55996104-28f5-49f6-97d4-efb012c1b922</subsheetid><loginhibit /><display x="-75" y="-135" /><onsuccess>0cbf7163-2eb8-48fb-9ca4-c0c753816a93</onsuccess></stage><stage stageid="0cbf7163-2eb8-48fb-9ca4-c0c753816a93" name="End" type="End"><subsheetid>55996104-28f5-49f6-97d4-efb012c1b922</subsheetid><loginhibit /><display x="-75" y="-75" /></stage><stage stageid="e5d3f540-dea5-4aa0-8c58-db3342cb640e" name="Encrypt" type="SubSheetInfo"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><narrative>Encrypt text data using a selected algorithm</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c9d53da6-49eb-41e2-bfd3-ecd5712fbf49" name="Start" type="Start"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><display x="-60" y="-135" /><inputs><input type="text" name="Data" narrative="[Required] The data to be encrypted" stage="Data" /><input type="text" name="Key" narrative="[Optional] The secret key that should be used to encrypt the data. If no key is available, this action will generate and return a new key." stage="Key" /><input type="text" name="Algorithm" narrative="[Optional] The name of the algorithm to use for encryption. Valid values are: AES, TDES, Rjindael." stage="Algorithm" /></inputs><onsuccess>eaf217ee-d71d-4d21-892d-4c68b7e930e9</onsuccess></stage><stage stageid="fcb30227-18ef-4d0a-a5b3-98268228d265" name="End" type="End"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><display x="90" y="195" /><outputs><output type="text" name="Encrypted Data" narrative="The input data in encrypted form" stage="Encrypted Data" /><output type="text" name="New Key" narrative="If no key was supplied in the input parameter (named Key), then a new key will be generated and stored in this data item." stage="New Key" /></outputs></stage><stage stageid="56f6846e-f939-488e-9051-d3b44ced5b2b" name="Data" type="Data"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><narrative>[Required] The data to be encrypted</narrative><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f7acff17-735d-4b94-b010-8148ec943e1a" name="Key" type="Data"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><narrative>[Optional] The secret key that should be used to encrypt the data. If no key is available, this action will generate and return a new key.</narrative><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1a313369-1a15-4fef-b363-b9af7a8e48b5" name="Algorithm" type="Data"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><narrative>[Optional] The name of the algorithm to use for encryption. Valid values are: AES, TDES, Rijndael

If no value is supplied, AES will be used by default.</narrative><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">AES</initialvalue><private /><alwaysinit /></stage><stage stageid="ab7d83e0-80c6-48f3-8f5f-536b3ce2c3bc" name="Encrypted Data" type="Data"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><narrative>The input data in encrypted form</narrative><display x="-195" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b28a30c4-9d30-439f-acc3-8af740e2372d" name="New Key" type="Data"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><narrative>If no key was supplied in the input parameter (named Key), then a new key will be generated and stored in this data item.

Otherwise, if a Key was supplied, this data item will remain empty.</narrative><display x="-195" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c17dc297-dc1f-4cd8-8431-0a39a252103c" name="Input Data Items" type="Block"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d834ba9d-dd27-4da1-a635-1dcfec98969d" name="Output Data Items" type="Block"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="9e38f51c-839b-4fd1-8da5-6173659fdb5a" name="Choose Algorithm" type="ChoiceStart"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><narrative>Determine which algorithm should be used to encrypt the data</narrative><display x="-60" y="-15" /><groupid>8deb4f43-91b7-4e1e-b00b-0e1008f00745</groupid><choices><choice expression="Lower([Algorithm]) = &quot;aes&quot;"><name>AES</name><distance>75</distance><ontrue>05f239d9-ff6b-4a7e-ac0e-eeeaa55ec882</ontrue></choice><choice expression="Lower([Algorithm]) = &quot;tdes&quot;"><name>TDES</name><distance>150</distance><ontrue>6279f112-06f5-4da5-b394-ff80bacc13c9</ontrue></choice><choice expression="Lower([Algorithm]) = &quot;rijndael&quot;"><name>Rijndael</name><distance>225</distance><ontrue>171916df-0d6f-401f-b2e1-ecf688f348a3</ontrue></choice><choice expression="Lower([Algorithm]) = &quot;rsa&quot;"><name>RSA</name><distance>300</distance><ontrue>ba194a50-a3de-46a5-a90b-7d1be21cc816</ontrue></choice></choices></stage><stage stageid="e4f9db4e-f787-40ef-83f1-04a334bbd38d" name="Otherwise" type="ChoiceEnd"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><display x="300" y="-15" /><onsuccess>5eca297e-b281-4168-b466-7622fdde1a12</onsuccess><groupid>8deb4f43-91b7-4e1e-b00b-0e1008f00745</groupid></stage><stage stageid="5eca297e-b281-4168-b466-7622fdde1a12" name="System Exception" type="Exception"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><display x="390" y="-15" /><exception localized="yes" type="System Exception" detail="&quot;Invalid value for [Algorithm] data item. The value must be one of the following: AES, TDES, Rijndael. Current value for [Algorithm]: &quot; &amp; [Algorithm]" /></stage><stage stageid="6279f112-06f5-4da5-b394-ff80bacc13c9" name="Encrypt with TDES" type="Code"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><narrative>Encrypt the data with Triple DES</narrative><display x="90" y="60" /><inputs><input type="text" name="inputData" expr="[Data]" /><input type="text" name="inputKey" expr="[Key]" /></inputs><outputs><output type="text" name="encryptedData" stage="Encrypted Data" /><output type="text" name="newKey" stage="New Key" /></outputs><onsuccess>b78d6543-31da-418c-baaa-03cbeddb3d98</onsuccess><code><![CDATA[// initalize output variables
encryptedData = String.Empty;
newKey = String.Empty;

MemoryStream encryptedOutputDataStream = new MemoryStream();
TripleDESCryptoServiceProvider tdes = new TripleDESCryptoServiceProvider();
CryptoStream cryptoStream;
byte[] key;

if (IsKeyProvided(inputKey)) // if inputKey is blank, use a new key
{ 
	key = Convert.FromBase64String(inputKey); 
}
else
{
	key = tdes.Key;
	newKey = Convert.ToBase64String(key);
}

cryptoStream = new CryptoStream(encryptedOutputDataStream, tdes.CreateEncryptor(key, tdes.IV), CryptoStreamMode.Write);	
encryptedData = String.Format("{0}:{1}", Convert.ToBase64String(tdes.IV), EncryptData(inputData, cryptoStream, encryptedOutputDataStream));]]></code></stage><stage stageid="05f239d9-ff6b-4a7e-ac0e-eeeaa55ec882" name="Encrypt with AES" type="Code"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><display x="15" y="60" /><inputs><input type="text" name="inputData" expr="[Data]" /><input type="text" name="inputKey" expr="[Key]" /></inputs><outputs><output type="text" name="encryptedData" stage="Encrypted Data" /><output type="text" name="newKey" stage="New Key" /></outputs><onsuccess>4d7ac4c5-3599-4da3-b44f-46de50fcdd91</onsuccess><code><![CDATA[// initalize output variables
encryptedData = String.Empty;
newKey = String.Empty;

MemoryStream encryptedOutputDataStream = new MemoryStream();
AesCryptoServiceProvider aes = new AesCryptoServiceProvider();
CryptoStream cryptoStream;
byte[] key;

if (IsKeyProvided(inputKey)) // if inputKey is blank, use a new key
{ 
	key = Convert.FromBase64String(inputKey); 
}
else
{
	key = aes.Key;
	newKey = Convert.ToBase64String(key);
}

cryptoStream = new CryptoStream(encryptedOutputDataStream, aes.CreateEncryptor(key, aes.IV), CryptoStreamMode.Write);	
encryptedData = String.Format("{0}:{1}", Convert.ToBase64String(aes.IV), EncryptData(inputData, cryptoStream, encryptedOutputDataStream));]]></code></stage><stage stageid="171916df-0d6f-401f-b2e1-ecf688f348a3" name="Encrypt with Rijndael" type="Code"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><display x="165" y="60" /><inputs><input type="text" name="inputData" expr="[Data]" /><input type="text" name="inputKey" expr="[Key]" /></inputs><outputs><output type="text" name="encryptedData" stage="Encrypted Data" /><output type="text" name="newKey" stage="New Key" /></outputs><onsuccess>343de607-b319-4b92-8775-8ad9e8977a43</onsuccess><code><![CDATA[// initalize output variables
encryptedData = String.Empty;
newKey = String.Empty;

MemoryStream encryptedOutputDataStream = new MemoryStream();
RijndaelManaged rm = new RijndaelManaged();
CryptoStream cryptoStream;
byte[] key;

if (IsKeyProvided(inputKey)) // if inputKey is blank, use a new key
{ 
	key = Convert.FromBase64String(inputKey); 
}
else
{
	key = rm.Key;
	newKey = Convert.ToBase64String(key);
}

cryptoStream = new CryptoStream(encryptedOutputDataStream, rm.CreateEncryptor(key, rm.IV), CryptoStreamMode.Write);	
encryptedData = String.Format("{0}:{1}", Convert.ToBase64String(rm.IV), EncryptData(inputData, cryptoStream, encryptedOutputDataStream));]]></code></stage><stage stageid="3569ddef-de19-44c3-b283-f0f7023c21fe" name="Decrypt" type="SubSheetInfo"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><narrative>Decrypt text data using a selected algorithm and key</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1cf27186-7d32-407b-ab15-ac37ddfe74c7" name="Start" type="Start"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><display x="-60" y="-135" /><inputs><input type="text" name="Encrypted Data" narrative="[Required] The encrypted data to be decrypted" stage="Encrypted Data" /><input type="text" name="Key" narrative="[Required] The secret key that should be used to decrypt the data." stage="Key" /><input type="text" name="Algorithm" narrative="[Optional] The name of the algorithm to use for encryption. Valid values are: AES, TDES, Rijndael" stage="Algorithm" /></inputs><onsuccess>1fc09d50-d3ef-47f4-82fa-06a4dc7eff9f</onsuccess></stage><stage stageid="070f3d12-906b-4588-abd3-87e2f9a12631" name="End" type="End"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><display x="90" y="195" /><outputs><output type="text" name="Decrypted Data" narrative="The data in decrypted form" stage="Decrypted Data" /></outputs></stage><stage stageid="0e9b6936-068e-4298-9c9a-587db4d83333" name="Choose Algorithm" type="ChoiceStart"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><display x="-60" y="0" /><groupid>3688a7e4-adb2-4a89-9545-1aca8b92fc8c</groupid><choices><choice expression="Lower([Algorithm]) = &quot;aes&quot;"><name>AES</name><distance>78</distance><ontrue>b50a233a-bf1d-4f1d-b34b-eeff118e47b6</ontrue></choice><choice expression="Lower([Algorithm]) = &quot;tdes&quot;"><name>TDES</name><distance>150</distance><ontrue>dc0f5cc9-5a3a-4cbe-993d-fe39d16672a8</ontrue></choice><choice expression="Lower([Algorithm]) = &quot;rijndael&quot;"><name>Rijndael</name><distance>225</distance><ontrue>5c6c0835-f60f-4972-9790-3bb06a81a660</ontrue></choice><choice expression="Lower([Algorithm]) = &quot;rsa&quot;"><name>RSA</name><distance>300</distance><ontrue>6573c200-85df-41ef-8b2d-fbfdb412cfbf</ontrue></choice></choices></stage><stage stageid="16716f3c-b4b3-4c68-81de-74a35e60f0e2" name="Otherwise" type="ChoiceEnd"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><display x="300" y="0" /><onsuccess>f3c45c72-e668-47da-9701-1958d52671aa</onsuccess><groupid>3688a7e4-adb2-4a89-9545-1aca8b92fc8c</groupid></stage><stage stageid="b1064e8b-283f-4d0e-abdf-895932f48ec6" name="Algorithm" type="Data"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><narrative>[Optional] The name of the algorithm to use for encryption. Valid values are: AES, TDES, Rijndael

If no value is supplied, AES will be used by default.</narrative><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">AES</initialvalue><private /><alwaysinit /></stage><stage stageid="f3c45c72-e668-47da-9701-1958d52671aa" name="System Exception" type="Exception"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><display x="375" y="0" /><exception localized="yes" type="System Exception" detail="&quot;Invalid value for [Algorithm] data item. The value must be one of the following: AES, TDES, Rijndael. Current value for [Algorithm]: &quot; &amp; [Algorithm]" /></stage><stage stageid="8c9c3335-0c33-4eb4-913e-408b422d2a91" name="Encrypted Data" type="Data"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><narrative>[Required] The encrypted data to be decrypted</narrative><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a5acf533-f7e7-4ac5-b06b-5e8dcd6197e6" name="Key" type="Data"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><narrative>[Required] The secret key that should be used to decrypt the data.</narrative><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ffe3a337-faf6-41a5-9589-92780e57bfdb" name="Decrypted Data" type="Data"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><narrative>The data in decrypted form</narrative><display x="-195" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="768987d4-6b8b-4229-8742-fd40ef9bd398" name="Input Data Items" type="Block"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="66d06de2-18db-463a-8c1d-038b03890c52" name="Output Data Items" type="Block"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="eaf217ee-d71d-4d21-892d-4c68b7e930e9" name="Data Provided?" type="Decision"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><narrative>Determine if data has been provided for encryption. If False, throw exception.</narrative><display x="-60" y="-75" /><decision expression="[Data] &lt;&gt; &quot;&quot;" /><ontrue>9e38f51c-839b-4fd1-8da5-6173659fdb5a</ontrue><onfalse>26babfe2-112e-46b1-a929-8c9b61b339dd</onfalse></stage><stage stageid="26babfe2-112e-46b1-a929-8c9b61b339dd" name="System Exception" type="Exception"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><display x="15" y="-75" /><exception localized="yes" type="System Exception" detail="&quot;Missing required input parameter. [Data] cannot be blank.&quot;" /></stage><stage stageid="b50a233a-bf1d-4f1d-b34b-eeff118e47b6" name="Decrypt with AES" type="Code"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><display x="15" y="75" /><inputs><input type="text" name="inputEncryptedData" expr="[Encrypted Data]" /><input type="text" name="inputKey" expr="[Key]" /></inputs><outputs><output type="text" name="outputDecryptedData" stage="Decrypted Data" /></outputs><onsuccess>1b205410-02a1-4d1b-b00d-c030d58c1fd9</onsuccess><code><![CDATA[// initialize output variable
outputDecryptedData = String.Empty;

// split inputEncryptedData to separate IV from data
string[] encryptedDataSegments = SplitEncryptedData(inputEncryptedData);

// convert strings to byte arrays
byte[] iv = Convert.FromBase64String(encryptedDataSegments[0]);
byte[] encryptedData = Convert.FromBase64String(encryptedDataSegments[1]);
byte[] key = Convert.FromBase64String(inputKey);

// create streams and AesCyptoServiceProvider
AesCryptoServiceProvider aes = new AesCryptoServiceProvider();
MemoryStream encryptedDataStream = new MemoryStream(encryptedData);
CryptoStream cryptoStream = new CryptoStream(encryptedDataStream, aes.CreateDecryptor(key, iv), CryptoStreamMode.Read);

// decrypt data
outputDecryptedData = DecryptData(cryptoStream);]]></code></stage><stage stageid="dc0f5cc9-5a3a-4cbe-993d-fe39d16672a8" name="Decrypt with TDES" type="Code"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><display x="90" y="75" /><inputs><input type="text" name="inputEncryptedData" expr="[Encrypted Data]" /><input type="text" name="inputKey" expr="[Key]" /></inputs><outputs><output type="text" name="outputDecryptedData" stage="Decrypted Data" /></outputs><onsuccess>ba398c5f-b678-4088-b4e3-7e17d01b30eb</onsuccess><code><![CDATA[// initialize output variable
outputDecryptedData = String.Empty;

// split inputEncryptedData to separate IV from data
string[] encryptedDataSegments = SplitEncryptedData(inputEncryptedData);

// convert strings to byte arrays
byte[] iv = Convert.FromBase64String(encryptedDataSegments[0]);
byte[] encryptedData = Convert.FromBase64String(encryptedDataSegments[1]);
byte[] key = Convert.FromBase64String(inputKey);

// create streams and AesCyptoServiceProvider
TripleDESCryptoServiceProvider tdes = new TripleDESCryptoServiceProvider();
MemoryStream encryptedDataStream = new MemoryStream(encryptedData);
CryptoStream cryptoStream = new CryptoStream(encryptedDataStream, tdes.CreateDecryptor(key, iv), CryptoStreamMode.Read);

// decrypt data
outputDecryptedData = DecryptData(cryptoStream);]]></code></stage><stage stageid="5c6c0835-f60f-4972-9790-3bb06a81a660" name="Decrypt with Rijndael" type="Code"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><display x="165" y="75" /><inputs><input type="text" name="inputEncryptedData" expr="[Encrypted Data]" /><input type="text" name="inputKey" expr="[Key]" /></inputs><outputs><output type="text" name="outputDecryptedData" stage="Decrypted Data" /></outputs><onsuccess>d55a87e2-7c78-4477-939d-741bad851c0a</onsuccess><code><![CDATA[// initialize output variable
outputDecryptedData = String.Empty;

// split inputEncryptedData to separate IV from data
string[] encryptedDataSegments = SplitEncryptedData(inputEncryptedData);

// convert strings to byte arrays
byte[] iv = Convert.FromBase64String(encryptedDataSegments[0]);
byte[] encryptedData = Convert.FromBase64String(encryptedDataSegments[1]);
byte[] key = Convert.FromBase64String(inputKey);

// create streams and AesCyptoServiceProvider
RijndaelManaged rm = new RijndaelManaged();
MemoryStream encryptedDataStream = new MemoryStream(encryptedData);
CryptoStream cryptoStream = new CryptoStream(encryptedDataStream, rm.CreateDecryptor(key, iv), CryptoStreamMode.Read);

// decrypt data
outputDecryptedData = DecryptData(cryptoStream);]]></code></stage><stage stageid="1fc09d50-d3ef-47f4-82fa-06a4dc7eff9f" name="Data Provided?" type="Decision"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><narrative>Determine if data has been provided for decryption. If False, throw exception.</narrative><display x="-60" y="-90" /><decision expression="[Encrypted Data] &lt;&gt; &quot;&quot;" /><ontrue>93adb6ab-7215-4ec7-8966-73bc5a838897</ontrue><onfalse>de6de3ec-6f9d-42e1-945f-716547326ba2</onfalse></stage><stage stageid="93adb6ab-7215-4ec7-8966-73bc5a838897" name="Key Provided?" type="Decision"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><narrative>Determine if key has been provided for decryption. If False, throw exception.</narrative><display x="-60" y="-45" /><decision expression="[Key] &lt;&gt; &quot;&quot;" /><ontrue>0e9b6936-068e-4298-9c9a-587db4d83333</ontrue><onfalse>581655ce-da1d-4d05-ae90-b64263686c9a</onfalse></stage><stage stageid="de6de3ec-6f9d-42e1-945f-716547326ba2" name="System Exception" type="Exception"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><display x="30" y="-90" /><exception localized="yes" type="System Exception" detail="&quot;Missing required input parameter. [Encrypted Data] cannot be blank.&quot;" /></stage><stage stageid="581655ce-da1d-4d05-ae90-b64263686c9a" name="System Exception" type="Exception"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><display x="30" y="-45" /><exception localized="yes" type="System Exception" detail="&quot;Missing required input parameter. [Key] cannot be blank.&quot;" /></stage><stage stageid="55475a93-0093-4297-98cd-494e8b0a4bee" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182
</narrative><display x="135" y="-75" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="343de607-b319-4b92-8775-8ad9e8977a43" name="Anchor1" type="Anchor"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><display x="165" y="135" w="10" h="10" /><onsuccess>b78d6543-31da-418c-baaa-03cbeddb3d98</onsuccess></stage><stage stageid="4d7ac4c5-3599-4da3-b44f-46de50fcdd91" name="Anchor1" type="Anchor"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><display x="15" y="135" w="10" h="10" /><onsuccess>b78d6543-31da-418c-baaa-03cbeddb3d98</onsuccess></stage><stage stageid="b78d6543-31da-418c-baaa-03cbeddb3d98" name="Anchor1" type="Anchor"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><display x="90" y="135" w="10" h="10" /><onsuccess>fcb30227-18ef-4d0a-a5b3-98268228d265</onsuccess></stage><stage stageid="ba194a50-a3de-46a5-a90b-7d1be21cc816" name="Encrypt with RSA" type="Code"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><display x="240" y="60" /><inputs><input type="text" name="inputData" expr="[Data]" /><input type="text" name="inputKey" expr="[Key]" /></inputs><outputs><output type="text" name="encryptedData" stage="Encrypted Data" /><output type="text" name="newKey" stage="New Key" /></outputs><onsuccess>479b2012-f8fd-4be2-8da6-6ca62334449e</onsuccess><code><![CDATA[// initalize output variables
encryptedData = String.Empty;
newKey = String.Empty;

string publicKeyString = string.Empty;
string privateKeyString = string.Empty;

using (var rsaCryptoServiceProvider = new RSACryptoServiceProvider(2048)) //2048 - Key length
{
	if (!IsKeyProvided(inputKey)) // if inputKey is blank, use a new key
	{ 
		var privateKey = rsaCryptoServiceProvider.ExportParameters(true); //Generating private key
		var publicKey = rsaCryptoServiceProvider.ExportParameters(false); //Generating public key
		
		publicKeyString = GetRSAKeyString(publicKey);
		privateKeyString = GetRSAKeyString(privateKey);
		newKey = privateKeyString;
	}
	else
	{
		publicKeyString = inputKey;
	}

	var bytesToEncrypt = Encoding.UTF8.GetBytes(inputData);

	try
	{               
		rsaCryptoServiceProvider.FromXmlString(publicKeyString);
		
		var encryptedBytes = rsaCryptoServiceProvider.Encrypt(bytesToEncrypt, true);
		encryptedData = Convert.ToBase64String(encryptedBytes);
	}
	catch (Exception ex)
	{
		throw ex;
	}
	finally
	{
		rsaCryptoServiceProvider.PersistKeyInCsp = false;
	}
}
]]></code></stage><stage stageid="479b2012-f8fd-4be2-8da6-6ca62334449e" name="Anchor2" type="Anchor"><subsheetid>046e33b1-0ea6-4340-a479-4d3ad1891862</subsheetid><loginhibit /><display x="240" y="135" w="10" h="10" /><onsuccess>343de607-b319-4b92-8775-8ad9e8977a43</onsuccess></stage><stage stageid="6573c200-85df-41ef-8b2d-fbfdb412cfbf" name="Decrypt with RSA" type="Code"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><display x="240" y="75" /><inputs><input type="text" name="inputEncryptedData" expr="[Encrypted Data]" /><input type="text" name="inputKey" expr="[Key]" /></inputs><outputs><output type="text" name="outputDecryptedData" stage="Decrypted Data" /></outputs><onsuccess>07aba2fd-e324-4d51-9f76-83dd0322a664</onsuccess><code><![CDATA[// initalize output variables
outputDecryptedData = String.Empty;

var bytesToDescrypt = Encoding.UTF8.GetBytes(inputEncryptedData);

using (var rsaCryptoServiceProvider = new RSACryptoServiceProvider(2048)) //2048 - Key length
{
	try
	{               
		rsaCryptoServiceProvider.FromXmlString(inputKey);
		
		var resultBytes = Convert.FromBase64String(inputEncryptedData);
        var decryptedBytes = rsaCryptoServiceProvider.Decrypt(resultBytes, true);
        var decryptedData = Encoding.UTF8.GetString(decryptedBytes);
		
		outputDecryptedData = decryptedData;

	}
	catch (Exception ex)
	{
		throw ex;
	}
	finally
	{
		rsaCryptoServiceProvider.PersistKeyInCsp = false;
	}
}
]]></code></stage><stage stageid="1b205410-02a1-4d1b-b00d-c030d58c1fd9" name="Anchor3" type="Anchor"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><display x="15" y="150" w="10" h="10" /><onsuccess>ba398c5f-b678-4088-b4e3-7e17d01b30eb</onsuccess></stage><stage stageid="d55a87e2-7c78-4477-939d-741bad851c0a" name="Anchor4" type="Anchor"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><display x="165" y="150" w="10" h="10" /><onsuccess>ba398c5f-b678-4088-b4e3-7e17d01b30eb</onsuccess></stage><stage stageid="07aba2fd-e324-4d51-9f76-83dd0322a664" name="Anchor5" type="Anchor"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><display x="240" y="150" w="10" h="10" /><onsuccess>d55a87e2-7c78-4477-939d-741bad851c0a</onsuccess></stage><stage stageid="ba398c5f-b678-4088-b4e3-7e17d01b30eb" name="Anchor6" type="Anchor"><subsheetid>9f519b11-a37b-4d80-b024-8c8637139b19</subsheetid><loginhibit /><display x="90" y="150" w="10" h="10" /><onsuccess>070f3d12-906b-4588-abd3-87e2f9a12631</onsuccess></stage><stage stageid="25fea3e8-8424-426b-ac66-decf625bc7aa" name="Note1" type="Note"><loginhibit /><narrative>Version 10.0</narrative><display x="-75" y="-195" w="90" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage></process></object>
        <object id="1755dccf-ee8a-456b-86d6-6d83220f12de" name="Utility - Environment" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Environment" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="Utilities for interacting with the environment - read screen resolution, determine OS type, etc." byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>257afd68-bed2-460b-94e5-17b2b6263b15</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>58</camerax><cameray>-46</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="50ea2955-c157-4803-b16c-fea2255ce9e2" type="Normal" published="True"><name>Clear Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="72ac1b78-ac00-4ede-b5fa-13beef468814" type="Normal" published="True"><name>Font Smoothing Enabled</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cf31a66d-5534-4af0-9a07-433066d1a4b9" type="Normal" published="True"><name>Get Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c556a801-8bd8-4e0e-bf8e-2dd6b5642063" type="Normal" published="True"><name>Get Machine Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4987fdec-ac7a-4166-a60b-adef47ecdcc7" type="Normal" published="True"><name>Get Screen Resolution</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b6e051bf-8afe-4ea3-9ae0-52eee58eec76" type="Normal" published="True"><name>Get User Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5864a25-e7a2-430a-9045-78a116e64701" type="Normal" published="True"><name>Kill Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3d4412bd-579a-4d1e-937e-12fbb756630c" type="Normal" published="True"><name>Read Memory Stats</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7b5cc7aa-ca53-495f-a51e-4ed559efe88b" type="Normal" published="True"><name>Read Process Working Set</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="29015311-1659-438e-b7b6-b8ff65e4a840" type="Normal" published="True"><name>Run Process Until Ended</name><view><camerax>0</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cf9f6573-f06c-4ab6-9672-34d2e644415e" type="Normal" published="True"><name>Set Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7" type="Normal" published="True"><name>Start Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="80ee143b-0379-4ba5-b13f-5d42dde3160d" type="Normal" published="True"><name>Start Process Read Stderr and Stdout</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a1f1d9b6-bb36-4449-a41f-abe80db43c70" type="Normal" published="True"><name>Set Screen Resolution</name><view><camerax>57</camerax><cameray>1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="13c8f06e-8a7c-4da8-b813-d5738ce5369a" type="Normal" published="True"><name>Wait for Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e22dc28-2f71-421b-9687-c367358919e3" type="Normal" published="True"><name>Wait for Process Window</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fd494d31-daad-4e53-a0be-892311ddfc9b" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="5f046b4e-e1db-4786-ae90-3d5d6c6d9302" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>9e4646d0-d8c7-44d6-a5d9-9509e3ba8883</onsuccess></stage><stage stageid="9e4646d0-d8c7-44d6-a5d9-9509e3ba8883" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="d9e9a8ad-308f-49f4-9dd0-9dafbc1f625a" name="Stage1" type="ProcessInfo"><display x="-180" y="-120" w="180" h="120" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>system.windows.forms.dll</reference><reference>Microsoft.VisualBasic.dll</reference><reference>System.Management.dll</reference><reference>mscorlib.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Windows.Forms</import><import>System.Diagnostics</import><import>System.Data</import><import>Microsoft.VisualBasic</import><import>System.Threading</import><import>System.Management</import><import>System.Runtime.InteropServices</import><import>System.Threading.Tasks</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[

]]></globalcode><code><![CDATA[<DllImport("kernel32.dll", SetLastError:=True)> _
Private Shared Function CreateToolhelp32Snapshot(ByVal dwFlags As UInteger, ByVal th32ProcessID As UInteger) As IntPtr
End Function

<DllImport("kernel32.dll")> _
Private Shared Function Process32First(ByVal hSnapshot As IntPtr, ByRef lppe As PROCESSENTRY32) As Boolean
End Function

<DllImport("kernel32.dll")> _
Private Shared Function Process32Next(ByVal hSnapshot As IntPtr, ByRef lppe As PROCESSENTRY32) As Boolean
End Function

<StructLayout(LayoutKind.Sequential)>
Public Structure PROCESSENTRY32
	Public dwSize As UInteger
	Public cntUsage As UInteger
	Public th32ProcessID As UInteger
	Public th32DefaultHeapID As IntPtr
	Public th32ModuleID As UInteger
	Public cntThreads As UInteger
	Public th32ParentProcessID As UInteger
	Public pcPriClassBase As Integer
	Public dwFlags As UInteger
	<MarshalAs(UnmanagedType.ByValTStr, SizeConst:=260)>
	Public szExeFile As String
End Structure

Shared TH32CS_SNAPPROCESS As UInteger = 2

<StructLayout(LayoutKind.Sequential)> _
Public Structure DEVMODE1
	<MarshalAs(UnmanagedType.ByValTStr, SizeConst:=32)> _
	Public dmDeviceName As String
	Public dmSpecVersion As Short
	Public dmDriverVersion As Short
	Public dmSize As Short
	Public dmDriverExtra As Short
	Public dmFields As Integer
	Public dmOrientation As Short
	Public dmPaperSize As Short
	Public dmPaperLength As Short
	Public dmPaperWidth As Short
	Public dmScale As Short
	Public dmCopies As Short
	Public dmDefaultSource As Short
	Public dmPrintQuality As Short
	Public dmColor As Short
	Public dmDuplex As Short
	Public dmYResolution As Short
	Public dmTTOption As Short
	Public dmCollate As Short
	<MarshalAs(UnmanagedType.ByValTStr,  SizeConst:=32)> _
	Public dmFormName As String
	Public dmLogPixels As Short
	Public dmBitsPerPel As Short
	Public dmPelsWidth As Integer
	Public dmPelsHeight As Integer
	Public dmDisplayFlags As Integer
	Public dmDisplayFrequency As Integer
	Public dmICMMethod As Integer
	Public dmICMIntent As Integer
	Public dmMediaType As Integer
	Public dmDitherType As Integer
	Public dmReserved1 As Integer
	Public dmReserved2 As Integer
	Public dmPanningWidth As Integer
	Public dmPanningHeight As Integer
End Structure

Class User_32
	<DllImport("user32.dll")> _
	Public Shared Function EnumDisplaySettings(ByVal deviceName As String, ByVal modeNum As Integer, ByRef devMode As DEVMODE1) As Integer
	End Function

	<DllImport("user32.dll")> _
	Public Shared Function ChangeDisplaySettings(ByRef devMode As DEVMODE1, ByVal flags As Integer) As Integer
	End Function

	Public Const ENUM_CURRENT_SETTINGS As Integer = -1
	Public Const CDS_UPDATEREGISTRY As Integer = 1
	Public Const CDS_TEST As Integer = 2
	Public Const DISP_CHANGE_SUCCESSFUL As Integer = 0
	Public Const DISP_CHANGE_RESTART As Integer = 1
	Public Const DISP_CHANGE_FAILED As Integer = -1
End Class

Private Shared Function GetParentProcess(iCurrentPid As Integer ) As Process
	Dim iParentPid As Integer = 0
	Dim oHnd As IntPtr = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0)
	If oHnd = IntPtr.Zero Then Return Nothing
	Dim oProcInfo As PROCESSENTRY32 = New PROCESSENTRY32()
	oProcInfo.dwSize = CUInt(System.Runtime.InteropServices.Marshal.SizeOf(GetType(PROCESSENTRY32)))
	If Process32First(oHnd, oProcInfo) = False Then Return Nothing

	Do
		If iCurrentPid = oProcInfo.th32ProcessID Then iParentPid = CInt(oProcInfo.th32ParentProcessID)
	Loop While iParentPid = 0 AndAlso Process32Next(oHnd, oProcInfo)

	If iParentPid > 0 Then
		Return Process.GetProcessById(iParentPid)
	Else
		Return Nothing
	End If
End Function

' Internal subroutine to kill a specific process and any child processes it owns.
Private Shared Sub KillProcessAndChildren(ByVal pid As Integer)
    Dim processSearcher As ManagementObjectSearcher = New ManagementObjectSearcher("Select * From Win32_Process Where ParentProcessID=" & pid)
    Dim processCollection As ManagementObjectCollection = processSearcher.[Get]()

    Try
        Dim proc As Process = Process.GetProcessById(pid)
        If Not proc.HasExited Then proc.Kill()
    Catch __unusedArgumentException1__ As ArgumentException
    End Try

    If processCollection IsNot Nothing Then

        For Each mo As ManagementObject In processCollection
            KillProcessAndChildren(Convert.ToInt32(mo("ProcessID")))
        Next
    End If
End Sub
]]></code></stage><stage stageid="f50788a0-79a5-446b-b3cc-fc8d66091330" name="Get Screen Resolution" type="SubSheetInfo"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><narrative>Gets the resolution of the screen in pixels for the current environment.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d9e8deba-018e-4402-bb33-773a299ae864" name="Start" type="Start"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>bd2d0918-9c73-4138-90b8-538eaa06f135</onsuccess></stage><stage stageid="3348aa7d-5b76-4d3f-a590-e571a9a83494" name="End" type="End"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="number" name="Horizontal Resolution" narrative="The number of pixels in the horizontal screen axis" stage="Horizontal Resolution" /><output type="number" name="Vertical Resolution" narrative="The number of pixels in the vertical screen axis" stage="Vertical Resolution" /></outputs></stage><stage stageid="faf2adc8-9198-4483-b6dc-e67e978cbf7b" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="bd2d0918-9c73-4138-90b8-538eaa06f135" name="GetResolution" type="Code"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><outputs><output type="number" name="Horizontal Resolution" stage="Horizontal Resolution" /><output type="number" name="Vertical Resolution" stage="Vertical Resolution" /></outputs><onsuccess>3348aa7d-5b76-4d3f-a590-e571a9a83494</onsuccess><code><![CDATA[dim S As Size = Screen.PrimaryScreen.Bounds.Size
Horizontal_Resolution = S.Width
Vertical_Resolution = S.Height]]></code></stage><stage stageid="37500b62-bdb6-42ed-91a3-02fbcffc75ee" name="Horizontal Resolution" type="Data"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><display x="105" y="90" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8edafede-371d-454f-a5ca-0b28eda542e5" name="Vertical Resolution" type="Data"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><display x="165" y="90" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e8bff191-0772-44c3-bea4-1d4ff701d49f" name="Kill Process" type="SubSheetInfo"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><narrative>If you provide just the Process Name, all processes with the given name will be terminated. If you provide the Process Name and  the Process ID (or just the Process ID), the Process ID takes precendence and only that specific process will be terminated.</narrative><display x="-195" y="-105" w="210" h="90" /></stage><stage stageid="e3791a92-d20e-4afe-81bf-5aab170c3aba" name="Start" type="Start"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="All processes with the given name will be terminated." /></postconditions><display x="15" y="-105" /><inputs><input type="text" name="Process Name" narrative="The name of the process to kill" stage="Process Name" /><input type="number" name="Process ID" narrative="The unique numeric identifier of a specific process on the system." stage="Process ID" /></inputs><onsuccess>697bc06f-0d64-430d-a5ea-b3fd02b746c8</onsuccess></stage><stage stageid="e9c6833a-30a3-4233-840b-35d605e44199" name="End" type="End"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="06a89dc2-9ed1-497c-b7f0-14664bdb76c5" name="Process Name" type="Data"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="697bc06f-0d64-430d-a5ea-b3fd02b746c8" name="Kill Process1" type="Code"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /><input type="number" name="Process ID" expr="[Process ID]" /></inputs><onsuccess>e9c6833a-30a3-4233-840b-35d605e44199</onsuccess><code><![CDATA[Try
	If (Len(Trim(Process_Name)) > 0) And (Process_ID = 0) Then
		For Each p As System.Diagnostics.Process in System.Diagnostics.Process.GetProcessesByName(Process_Name)
			p.Kill
		Next
	ElseIf (Process_ID > 0) Then
		KillProcessAndChildren(Convert.ToInt32(Process_ID))
	End If
Catch ex As Exception
End Try]]></code></stage><stage stageid="374fc1ad-8b82-4d95-b3d4-9710692a2725" name="Read Memory Stats" type="SubSheetInfo"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><narrative>Get memory statistics for a given set of processes including the working set and the virtual memory size.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="237994c5-9c89-409f-9459-a9f1ce60d7ad" name="Start" type="Start"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="" /></postconditions><display x="15" y="-105" /><inputs><input type="collection" name="Process Names" narrative="The names of the processes to get memory statistics for" stage="Processes" /></inputs><onsuccess>c64eaa40-85d5-42b9-bcfe-0e314328bccb</onsuccess></stage><stage stageid="83912618-be8e-4f5a-860a-03cc449519c4" name="End" type="End"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Process Statistics" narrative="A collection of process statistics including the working set and the virtual memory size" stage="Process Statistics" /></outputs></stage><stage stageid="c64eaa40-85d5-42b9-bcfe-0e314328bccb" name="Get Stats" type="Code"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="Processes" expr="[Processes]" /></inputs><outputs><output type="collection" name="Process Statistics" stage="Process Statistics" /></outputs><onsuccess>83912618-be8e-4f5a-860a-03cc449519c4</onsuccess><code><![CDATA[GC.Collect()
Process_Statistics = New DataTable
process_statistics.Columns.Add("Process Name", GetType(String))
process_statistics.Columns.Add("PID", GetType(Decimal))
process_statistics.Columns.Add("Working Set", GetType(Decimal))
process_statistics.Columns.Add("Virtual Memory", GetType(Decimal))

For Each R As DataRow in Processes.Rows
	dim ProcName As String = CStr(R("Process Name"))
	Dim PID As Integer = CInt(R("PID"))
	For Each P As Process in Process.GetProcesses()
		If P.ProcessName = ProcName OrElse P.ID = PID Then
			Process_Statistics.Rows.Add(New Object() {P.ProcessName, P.ID, P.WorkingSet64, P.VirtualMemorySize64})
		End If
	Next
Next]]></code></stage><stage stageid="2d4e55c2-5e4d-45d5-8fd3-27d58de71615" name="Processes" type="Collection"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><display x="120" y="-105" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Process Name" type="text" /><field name="PID" type="number" /></collectioninfo><initialvalue><row><field name="Process Name" type="text" value="Automate" /><field name="PID" type="number" value="-1" /></row><row><field name="Process Name" type="text" value="javaw" /><field name="PID" type="number" value="-1" /></row></initialvalue></stage><stage stageid="99b25e8c-cd81-4e2f-99c3-d4c8afb738fc" name="Process Statistics" type="Collection"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><display x="120" y="90" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Process Name" type="text" /><field name="PID" type="number" /><field name="Working Set" type="number" /><field name="Virtual Memory" type="number" /></collectioninfo></stage><stage stageid="f781848e-f409-4be9-aea7-4672e21e840e" name="Read Process Working Set" type="SubSheetInfo"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><narrative>Gets the size of the working set for the given process.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="41b78729-d533-460b-98af-6180066d831b" name="Start" type="Start"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Process Name" narrative="The name of the process you want stats for" stage="Process Name" /></inputs><onsuccess>92e54184-9c46-425a-a681-ca15d5f38671</onsuccess></stage><stage stageid="d9a48cd9-620d-4b45-87bb-cb1a223d729e" name="End" type="End"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="number" name="Working Set" narrative="The working set number holding memory stats for your process" stage="Working Set" /></outputs></stage><stage stageid="92e54184-9c46-425a-a681-ca15d5f38671" name="Get Memory Set" type="Code"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><narrative>Used += to return the total memory used by the application we are interested - just in case it is running multiple times.</narrative><display x="15" y="-15" /><inputs><input type="text" name="Proc" expr="[Process Name]" /></inputs><outputs><output type="number" name="Working Set" stage="Working Set" /></outputs><onsuccess>d9a48cd9-620d-4b45-87bb-cb1a223d729e</onsuccess><code><![CDATA[
For Each P As Process in Process.GetProcesses()
	If P.ProcessName = Proc Then
		Working_Set += P.WorkingSet64
	End If
Next]]></code></stage><stage stageid="2db08314-74db-4968-8a01-2fffb03cc350" name="Process Name" type="Data"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="135" y="-105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="192be4f9-084a-4c4d-99a1-67383bb9cf30" name="Working Set" type="Data"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><display x="135" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">0</initialvalue><private /><alwaysinit /></stage><stage stageid="fb42bad5-7a16-4ac1-8cc7-148cb8ad1d0f" name="Font Smoothing Enabled" type="SubSheetInfo"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><narrative>Gets the font smoothing setting for the current environment.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ad641c65-2bb5-4746-a61c-38a70a4e0b89" name="Start" type="Start"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><onsuccess>96f9fe29-f641-44ab-ab0e-a4091edaec4c</onsuccess></stage><stage stageid="9150eaee-22ec-4228-803e-123c888b87e5" name="End" type="End"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Enabled" narrative="True if font smoothing is enabled" stage="Enabled?" /></outputs></stage><stage stageid="96f9fe29-f641-44ab-ab0e-a4091edaec4c" name="Get Font Smoothing Enabled" type="Code"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="60" /><outputs><output type="flag" name="Enabled" stage="Enabled?" /></outputs><onsuccess>9150eaee-22ec-4228-803e-123c888b87e5</onsuccess><code><![CDATA[Enabled=System.Windows.Forms.Systeminformation.IsFontSmoothingEnabled]]></code></stage><stage stageid="d7db2bff-a394-483d-a249-bae03f688e95" name="Enabled?" type="Data"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><display x="120" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80a2dcaa-31dd-419b-9fd4-a61249245b1b" name="Start Process" type="SubSheetInfo"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><narrative>Starts a process directly with the given arguments.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6d5177aa-21f6-4dac-b731-60fd85c76097" name="Start" type="Start"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Application" narrative="The application or short cut to start" stage="Application" /><input type="text" name="Arguments" narrative="Any arguments needed for the app" stage="Arguments" /><input type="flag" name="Use Shell" narrative="Optional. Boolean value that determines whether the Windows shell should be used to launch the process. Default value is True. If you experience issue launching a process, try changing this value to False." stage="Use Shell" /></inputs><onsuccess>8fd5d005-95ec-43c3-acae-de13b914eb3e</onsuccess></stage><stage stageid="9c57d68b-5d25-4c88-8bb1-8f7c6aa327d3" name="End" type="End"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="number" name="Process ID" narrative="The unique identifier of the new process." stage="Process ID" /><output type="text" name="Process Name" narrative="The the name of the process." stage="Process Name" /></outputs></stage><stage stageid="b3401dc5-5639-4e5d-b55a-b633330db327" name="Run Process Until Ended" type="SubSheetInfo"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><narrative>Run a process and wait until completion or timeout.</narrative><display x="-195" y="-120" w="150" h="90" /></stage><stage stageid="f6878e25-301c-4540-a15d-7a83dfc57a75" name="End" type="End"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-15" /></stage><stage stageid="ca8b3a6e-c15d-4b6b-bf9f-96c0675d8e04" name="Application" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9d495c29-e0f2-4bdd-ac85-b7875f7b1117" name="Arguments" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8fd5d005-95ec-43c3-acae-de13b914eb3e" name="Start Process" type="Code"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Application" expr="[Application]" /><input type="text" name="Arguments" expr="[Arguments]" /><input type="flag" name="Use Shell" expr="[Use Shell]" /></inputs><outputs><output type="number" name="id" stage="Process ID" /><output type="text" name="name" stage="Process Name" /></outputs><onsuccess>9c57d68b-5d25-4c88-8bb1-8f7c6aa327d3</onsuccess><code><![CDATA[Dim processName As String = Application

Dim process As New Process() With {
	.StartInfo = New ProcessStartInfo() With {
		.FileName = processName,
		.Arguments = Arguments,
		.UseShellExecute = Use_Shell
	}
}

process.Start()

id = Convert.ToInt32(process.Id)
name = process.ProcessName
]]></code></stage><stage stageid="085fdcca-3a7c-4a20-8b83-69add0889a54" name="Application" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e53a27fe-26fe-4503-ab86-8a5208e43d80" name="Arguments" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b84d4bb-deea-40c5-96eb-6adcf59fe7cf" name="Run Process" type="Code"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-105" w="90" h="30" /><inputs><input type="text" name="appn" expr="[Application]" /><input type="text" name="args" expr="[Arguments]" /><input type="text" name="dir" expr="[Working Folder]" /><input type="timespan" name="timeout" expr="[Timeout]" /><input type="flag" name="ignoreTimeout" expr="[Ignore Timeout]" /></inputs><outputs><output type="flag" name="timedOut" stage="Fail Datetime Reached?" /></outputs><onsuccess>7fa022c9-fce8-496a-a40b-9119406000db</onsuccess><code><![CDATA[Dim timeoutInMillisec as Integer
Dim startTime as Date = Date.Now
Dim info as New ProcessStartInfo(appn)

timedOut = False

If args <> "" Then info.Arguments = args
If dir <> "" Then info.WorkingDirectory = dir

' 20211006
' Adjusted the logic to account for situations where the use wants the Digital Worker to
' wait indefinitely until the specified process completes.
If (ignoreTimeout) Then
	timeoutInMillisec = -1 ' Infinite wait
Else
	timeoutInMillisec = CInt(timeout.TotalMilliseconds)
End If

Using proc As Process = Process.Start(info)
	timedOut = Not proc.WaitForExit(timeoutInMillisec)
End Using
]]></code></stage><stage stageid="f0792b52-0999-4f35-a46c-513fdcc3c381" name="Timeout" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="75" w="90" h="30" /><datatype>timespan</datatype><initialvalue>0.00:00:10</initialvalue><private /><alwaysinit /></stage><stage stageid="2adaf80c-c627-4556-8b6d-64929056128b" name="Start" type="Start"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-150" /><inputs><input type="text" name="Application" narrative="The application or shortcut to start" stage="Application" /><input type="text" name="Arguments" narrative="Optional - any arguments needed to run the application" stage="Arguments" /><input type="text" name="Working Folder" narrative="Optional - the application working folder" stage="Working Folder" /><input type="timespan" name="Timeout" narrative="How long to wait for the application to finish. Default is 10 seconds" stage="Timeout" /><input type="flag" name="Ignore Timeout" narrative="Flag that indicates the Digital Worker should wait for the process to complete indefinitely. Default is False." stage="Ignore Timeout" /></inputs><onsuccess>0b84d4bb-deea-40c5-96eb-6adcf59fe7cf</onsuccess></stage><stage stageid="c91ac000-31f2-44b8-a481-a878929285ae" name="Fail Datetime Reached?" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="180" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="7fa022c9-fce8-496a-a40b-9119406000db" name="Timed Out?" type="Decision"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-60" /><decision expression="[Fail Datetime Reached?]" /><ontrue>433c4289-a312-4554-bc27-6ee3c7ace153</ontrue><onfalse>f6878e25-301c-4540-a15d-7a83dfc57a75</onfalse></stage><stage stageid="433c4289-a312-4554-bc27-6ee3c7ace153" name="System Exception" type="Exception"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="45" y="-60" /><exception type="System Exception" detail="&quot;Application &quot; &amp; [Application] &amp; &quot; was still running after the maximum time period&quot;" /></stage><stage stageid="bcdc67ee-3c90-443c-9c4f-ec02fc8ee8d2" name="Wait for Process" type="SubSheetInfo"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><narrative>Attach to a process and wait for it to complete.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0dcbb991-85d4-45bb-aaa9-a8bf5da36d15" name="Start" type="Start"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Maximum wait time (seconds)" narrative="The maximum time to wait for the process to complete" stage="Maximum wait time (seconds)" /><input type="text" name="Process Name" narrative="The name of the process to attach to" stage="Process Name" /></inputs><onsuccess>dfe0f2dc-5806-4cf9-82f3-269f9b06b03f</onsuccess></stage><stage stageid="55ae0a29-1ee0-4fd1-b077-eeb2e6f1e9dd" name="End" type="End"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="flag" name="Found?" narrative="True=process found, false=process not found" stage="Found?" /></outputs></stage><stage stageid="e1eea34b-f6e4-49b3-bcae-930f70caec29" name="Maximum wait time (seconds)" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dfe0f2dc-5806-4cf9-82f3-269f9b06b03f" name="Wait for process" type="Code"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /><input type="number" name="Max Wait" expr="[Maximum wait time (seconds)]" /></inputs><outputs><output type="flag" name="Found?" stage="Found?" /></outputs><onsuccess>55ae0a29-1ee0-4fd1-b077-eeb2e6f1e9dd</onsuccess><code><![CDATA[Try
	Found_ = False
	Dim bProcFound as Boolean = False
	Dim iLoop as Integer = 0
	Dim myProcesses() As System.Diagnostics.Process
	Dim instance As System.Diagnostics.Process
	Do While bProcFound = False AND iLoop < Max_Wait
		myProcesses = System.Diagnostics.Process.GetProcessesByName(Process_Name)
		For Each instance In myProcesses
			bProcFound = True
			Found_ = True
		Next
		Threading.Thread.Sleep(1000)
		iloop += 1
	Loop
Catch ex As Exception
End Try]]></code></stage><stage stageid="9344b166-5d5d-4b99-bc53-0c0331b8c776" name="Found?" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8a02d7fb-31ed-4c83-92c9-9a9a7831920e" name="Process Name" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="952ca62f-afb2-4f25-adea-21d86339081c" name="Wait for Process Window" type="SubSheetInfo"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><narrative>Waits for a process with a given name has displayed a window with the given title.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="19ea35dc-66b8-406e-9eca-4c6ef4d4e0ab" name="Start" type="Start"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Process Name" narrative="The name of the process to attach to" stage="Process Name" /><input type="text" name="Window Title" narrative="The title of the window within the process" stage="Window Title" /><input type="number" name="Wait" narrative="The maximum amount of time to wait for" stage="Wait" /></inputs><onsuccess>d3b1986a-fa70-41e9-a8af-cd2ffc78342e</onsuccess></stage><stage stageid="b6fdc874-6a8d-405b-946e-10b6b47a6ae1" name="End" type="End"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Found" stage="Found" /></outputs></stage><stage stageid="d3b1986a-fa70-41e9-a8af-cd2ffc78342e" name="Find Process" type="Code"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /><input type="text" name="Window Title" expr="[Window Title]" /></inputs><outputs><output type="flag" name="Found" stage="Found" /></outputs><onsuccess>d0d526bd-c3dd-4eb6-bbe7-2d46cca6e06f</onsuccess><code><![CDATA[try

for each p as system.diagnostics.process in system.diagnostics.process.getprocessesbyname(process_name)

	if p.mainwindowtitle.trim.tolower like window_title.trim.tolower then
		found = true
		exit sub
	end if

next

catch e as exception
end try]]></code></stage><stage stageid="6088ca18-1f7c-4db7-84af-ccecfe1ced0f" name="Time Out2" type="WaitEnd"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="-45" w="30" h="30" /><onsuccess>d3b1986a-fa70-41e9-a8af-cd2ffc78342e</onsuccess><groupid>d8f20257-87c3-4cf6-a20e-b44dbd21ce6a</groupid></stage><stage stageid="4498756a-e9e1-4bef-86e6-3b7ed91a7439" name="Wait" type="WaitStart"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="195" y="-45" w="30" h="30" /><groupid>d8f20257-87c3-4cf6-a20e-b44dbd21ce6a</groupid><choices /><timeout>0.5</timeout></stage><stage stageid="ba11e756-90e9-4cd7-a787-a41c2818e4b6" name="Count Down" type="Calculation"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="195" y="15" /><onsuccess>4498756a-e9e1-4bef-86e6-3b7ed91a7439</onsuccess><calculation expression="[Wait]-0.5" stage="Wait" /></stage><stage stageid="a5225d0b-41b3-4ed2-9f7c-31461a1f262a" name="Wait?" type="Decision"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="15" /><decision expression="[Wait]&gt;0" /><ontrue>ba11e756-90e9-4cd7-a787-a41c2818e4b6</ontrue><onfalse>ec831f1a-5b48-4bc2-8ceb-a362fa4e15d9</onfalse></stage><stage stageid="d0d526bd-c3dd-4eb6-bbe7-2d46cca6e06f" name="Found?" type="Decision"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="15" /><decision expression="[Found]" /><ontrue>b6fdc874-6a8d-405b-946e-10b6b47a6ae1</ontrue><onfalse>a5225d0b-41b3-4ed2-9f7c-31461a1f262a</onfalse></stage><stage stageid="ec831f1a-5b48-4bc2-8ceb-a362fa4e15d9" name="anchor1" type="Anchor"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="75" w="10" h="10" /><onsuccess>b6fdc874-6a8d-405b-946e-10b6b47a6ae1</onsuccess></stage><stage stageid="00581602-0606-4a0b-8f92-3dab2b97c72d" name="Process Name" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d6f981e4-e1f7-40a1-bf9e-461e118c4bf3" name="Window Title" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5eaecb90-3ed2-45ac-9948-5fb96f2b416a" name="Found" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="60" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="80076f3c-7351-4c27-97b5-c8578ae2761c" name="Wait" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7fc8557d-14e7-4b64-b495-23b8a7c76ef7" name="Get Clipboard" type="SubSheetInfo"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><narrative>Gets the contents of the clipboard.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d1de3e23-13cc-4058-95cb-5d1b72e68cac" name="Start" type="Start"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="-60" /><onsuccess>106d82b6-72c5-41b6-af2c-3ab3709a9c4e</onsuccess></stage><stage stageid="211e889c-ac33-46c2-8c6a-3d01c6f1ae4a" name="End" type="End"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="text" name="Clipboard" narrative="The value from the clipboard." stage="Clipboard" /></outputs></stage><stage stageid="106d82b6-72c5-41b6-af2c-3ab3709a9c4e" name="Get" type="Calculation"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="-15" /><onsuccess>211e889c-ac33-46c2-8c6a-3d01c6f1ae4a</onsuccess><calculation expression="GetClipboard()" stage="Clipboard" /></stage><stage stageid="0634315f-c572-4cf9-8727-98308e50c2c2" name="Clipboard" type="Data"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><display x="90" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="62bf25c7-7263-4fb3-bef2-20c9d9c2113d" name="Set Clipboard" type="SubSheetInfo"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><narrative>Sets the contents of the clipboard.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="57eca987-ec5e-485a-a03b-40c653f72a34" name="Start" type="Start"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Clipboard" narrative="The value to set the clipboard to." stage="Clipboard" /></inputs><onsuccess>1e934dc5-5507-4854-bf49-df3d1e55998f</onsuccess></stage><stage stageid="d2b91dd7-f7a4-45e5-8b5c-8f867e6be05c" name="End" type="End"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="75" /></stage><stage stageid="54826c34-2991-4964-b0a3-0e0a2f951f29" name="Set" type="Code"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="30" /><inputs><input type="text" name="Clipboard" expr="[Clipboard]" /></inputs><onsuccess>d2b91dd7-f7a4-45e5-8b5c-8f867e6be05c</onsuccess><code><![CDATA['System.Windows.Forms.Clipboard.SetDataObject(Clipboard)

Dim thread As New Thread(
	Sub(ByVal data As Object)
		System.Windows.Forms.Clipboard.SetText(data)
	End Sub
)
thread.SetApartmentState(ApartmentState.STA)
thread.Start(Clipboard)
thread.join()]]></code></stage><stage stageid="121f76bc-6b69-43a4-9484-16729e37267b" name="Clipboard" type="Data"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b8fa4afe-4c2c-409d-9691-e213b773c434" name="Clear Clipboard" type="SubSheetInfo"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><narrative>Clears the clipboard contents.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="706b08af-a9e1-4484-8c41-b06b8e76af1e" name="Start" type="Start"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>d1113981-40f5-450a-8b7e-e059eed37e76</onsuccess></stage><stage stageid="e13b6d4e-e05c-491e-ace6-54389e4a99fb" name="End" type="End"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="d1113981-40f5-450a-8b7e-e059eed37e76" name="Set Clipboard" type="SubSheet"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Clipboard" narrative="The value to set the clipboard to." expr="Chr(0)" /></inputs><onsuccess>e13b6d4e-e05c-491e-ace6-54389e4a99fb</onsuccess><processid>cf9f6573-f06c-4ab6-9672-34d2e644415e</processid></stage><stage stageid="15c6de75-886d-492c-8c12-5f0de483e1f7" name="Get User Name" type="SubSheetInfo"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a6bce0ea-b898-4abc-9a4f-bcfce32b3bb9" name="Start" type="Start"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-135" /><onsuccess>c731c906-58b6-4969-bd70-b7ecd7fa47ae</onsuccess></stage><stage stageid="ddc4be1a-94ee-4487-b6dc-0f12e4fc40ae" name="End" type="End"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-45" /><outputs><output type="text" name="User Name" narrative="The name of the logged in user in the current system" stage="Username" /></outputs></stage><stage stageid="c731c906-58b6-4969-bd70-b7ecd7fa47ae" name="GetUserName" type="Code"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-90" w="90" h="30" /><outputs><output type="text" name="username" stage="Username" /></outputs><onsuccess>ddc4be1a-94ee-4487-b6dc-0f12e4fc40ae</onsuccess><code><![CDATA[
username = Environment.UserName]]></code></stage><stage stageid="b3608be8-eeaa-4984-891b-4d8c705ac7f4" name="Username" type="Data"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b47157dd-5fca-4b0b-989b-b23a03641f3f" name="Get Machine Name" type="SubSheetInfo"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b4f26fd0-6cfa-4de8-b62a-fd9c09f47be4" name="Start" type="Start"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-135" /><onsuccess>61db579f-944a-4ba8-aedc-bdf80bc31cb7</onsuccess></stage><stage stageid="a69b53e7-8e67-4383-9b6f-28c57c9a82eb" name="End" type="End"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-45" /><outputs><output type="text" name="Machine Name" narrative="The hostname of the machine running this action" stage="Machine Name" /></outputs></stage><stage stageid="61db579f-944a-4ba8-aedc-bdf80bc31cb7" name="GetMachineName" type="Code"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-90" w="120" h="30" /><outputs><output type="text" name="machineName" stage="Machine Name" /></outputs><onsuccess>a69b53e7-8e67-4383-9b6f-28c57c9a82eb</onsuccess><code><![CDATA[
machineName = Environment.MachineName]]></code></stage><stage stageid="e3b5bdc7-5646-4f63-b78b-c9824a496d2f" name="Machine Name" type="Data"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94b4d694-3e3a-4bb2-bcb6-15a401f31b76" name="Working Folder" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc49d63c-0e29-422f-b99c-4689f5b5afd1" name="Input Args" type="Block"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="180" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="91242c6b-8086-4fd1-99ea-efb0549f2517" name="Variables" type="Block"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-270" y="150" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="fe09088f-160d-4f5e-af9d-a2cf44a91d21" name="Start Process Read Stderr and Stdout" type="SubSheetInfo"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><narrative>Starts a process with the given arguments, reads from the standard output and standard error until the process exits, and outputs them in seperate data items.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="56b0bbbe-2836-41b5-8ccf-30fa098e975f" name="Start" type="Start"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-15" y="-90" /><inputs><input type="text" name="Process Name" narrative="The name of the process to start." stage="Process Name" /><input type="text" name="Arguments" narrative="The arguments that coincide with the process." stage="Arguments" /><input type="number" name="Timeout" narrative="Optional: The number of milliseconds to wait for the process to exit. Default value is -1 which waits indefinitely." stage="Timeout" /></inputs><onsuccess>d8552129-84eb-4d65-8bee-d06820fb6e5f</onsuccess></stage><stage stageid="e9699401-5328-4e3b-ad11-bd29880236e4" name="End" type="End"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-15" y="30" /><outputs><output type="text" name="Standard Output" stage="Standard Output" /><output type="text" name="Standard Error" stage="Standard Error" /></outputs></stage><stage stageid="1a31c8d4-725e-4b41-8b64-72ff5feccd2f" name="Arguments" type="Data"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8552129-84eb-4d65-8bee-d06820fb6e5f" name="Run Process read Output" type="Code"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-15" y="-30" /><inputs><input type="text" name="Argument" expr="[Arguments]" /><input type="text" name="Process Name" expr="[Process Name]" /><input type="number" name="Timeout" expr="[Timeout]" /></inputs><outputs><output type="text" name="Standard Output" stage="Standard Output" /><output type="text" name="Standard Error" stage="Standard Error" /></outputs><onsuccess>e9699401-5328-4e3b-ad11-bd29880236e4</onsuccess><code><![CDATA[' create a Process object
Dim startInfo As New ProcessStartInfo()
startInfo.FileName = Process_Name
startInfo.Arguments = Argument
startInfo.RedirectStandardOutput = True
startInfo.RedirectStandardError = True
startInfo.UseShellExecute = False
startInfo.CreateNoWindow = False

Dim process As New Process()
process.StartInfo = startInfo

' add handlers to read stdout and stderr content
Dim stdOutput As String = ""
Dim stdError As String = ""
AddHandler process.OutputDataReceived, Sub(sender, args)
											If args.Data IsNot Nothing Then
												stdOutput += args.Data
											End If
										End Sub
AddHandler process.ErrorDataReceived, Sub(sender, args)
											If args.Data IsNot Nothing Then
												stdError += args.Data
											End If
										End Sub

' run process until exit or timeout
Try
	process.Start()
	process.BeginOutputReadLine()
	process.BeginErrorReadLine()

	Dim timeoutTask As Task = Task.Delay(timeout)
	Dim processExitTask As Task = Task.Run(Sub() process.WaitForExit())

	If Task.WhenAny(timeoutTask, processExitTask).Result Is timeoutTask Then
		Dim timeoutMessage As String = Environment.NewLine & "Timeout reached: " & timeout & "ms"
		Standard_Output = stdOutput & timeoutMessage
		Standard_Error += stdError & timeoutMessage
		process.Kill()
	Else
		process.WaitForExit()
		Standard_Output = stdOutput
		Standard_Error = stdError
	End If
	

Catch ex As Exception
	Standard_Output = stdOutput
	Standard_Error = stdError & Environment.NewLine & "Code stage error: " & ex.Message

Finally
	If process IsNot Nothing Then
		process.Dispose()
	End If
End Try]]></code></stage><stage stageid="458272d5-fe32-4588-9ef3-7af2fbacdf25" name="Standard Output" type="Data"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><display x="-195" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a63c7a4b-9add-4e2e-8f28-e8886b11dee1" name="Standard Error" type="Data"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><display x="-195" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1fe26b2b-6b1d-4e63-9679-97779a9da64f" name="Inputs" type="Block"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="679cebbb-478d-4647-9cf9-6459799440aa" name="Outputs" type="Block"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="8f6e9278-4ab8-4754-935f-66082c13a038" name="Process Name" type="Data"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="39258065-1e18-4bab-a733-c1dca96896e6" name="Note2" type="Note"><narrative>© 2024 Blue Prism Limited
Licensed under the Blue Prism Asset Terms for Modifiable Assets
https://portal.blueprism.com/agreements</narrative><display x="255" y="-45" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="e5477667-caa7-4629-93e7-0f375600a7fb" name="Ignore Timeout" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="105" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0eb2c15b-34c0-40ed-b0df-53cf297023e3" name="Version Info" type="Note"><loginhibit /><narrative>Version: 10.1.8</narrative><display x="15" y="-195" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="b9cc5d73-bc01-42f2-9e63-b22a31808b03" name="Note3" type="Note"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><narrative>20201006
The Ignore Timeout flag was added to addres an issue with using a TimeSpan to specify the timeout value. If the user wants the process to wait indefinitely for the process to complete the timeout value needs to be -1. However, you cannot create a TimeSpan with a millisecond value of -1 using the Blue Prism MakeTimeSpan() function. To address this, we added a flag that controls how to code stage handled the timeout value. By doing this we don't break existing deployments that actually make use of the TimeSpan data type for inputting the timeout.</narrative><display x="135" y="105" w="240" h="180" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="4b28b3ae-fdee-4d06-90fb-6881322015b1" name="Process ID" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><display x="-195" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9d967be0-455d-446f-8d7d-7f18f61f2a08" name="Input" type="Block"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d58ed3fd-2939-4a66-bde7-6b06b5f710d5" name="Output" type="Block"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="0076035f-2a9f-4ef2-b4cf-9395c86a3cb0" name="Process Name" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><display x="-195" y="150" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="028c8f92-1eee-46ba-bcde-d1df49193821" name="Process ID" type="Data"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="45fc84ee-d467-4eb1-bf86-5e843f8298cb" name="Input" type="Block"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b4b400cb-3262-4692-9566-cb02ffc65918" name="Timeout" type="Data"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="a8e06466-b698-4e3a-8cbb-400cd5ef2ec1" name="Input" type="Block"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0f92247e-231b-4e64-9766-9c660ec5d9fb" name="Output" type="Block"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="aba4896e-b6ee-4369-a4ed-fe544be66f4c" name="Set Screen Resolution" type="SubSheetInfo"><subsheetid>a1f1d9b6-bb36-4449-a41f-abe80db43c70</subsheetid><narrative>Sets the resolution of the screen in pixels for the current environment.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="668bec5c-c280-4584-aa65-ce658e46ee1d" name="Start" type="Start"><subsheetid>a1f1d9b6-bb36-4449-a41f-abe80db43c70</subsheetid><loginhibit /><preconditions><condition narrative="The specified resolution must be supported by the system." /></preconditions><display x="15" y="-105" /><inputs><input type="number" name="Vertical Resolution" stage="Vertical Resolution" /><input type="number" name="Horizontal Resolution" stage="Horizontal Resolution" /></inputs><onsuccess>e060664b-b423-4175-b38c-3ea531203b49</onsuccess></stage><stage stageid="c6bd6956-f378-418e-8880-30d84f5acad6" name="End" type="End"><subsheetid>a1f1d9b6-bb36-4449-a41f-abe80db43c70</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="number" name="Horizontal Resolution" narrative="The number of pixels in the horizontal screen axis" stage="Horizontal Resolution" /><output type="number" name="Vertical Resolution" narrative="The number of pixels in the vertical screen axis" stage="Vertical Resolution" /><output type="flag" name="Success" narrative="A Flag indicating success or failure of the action." stage="Success" /><output type="number" name="Return Code" narrative="The numeric return code returned by the operating system." stage="Return Code" /></outputs></stage><stage stageid="a627499e-61aa-4abe-acc1-f16ae3866118" name="Horizontal Resolution" type="Data"><subsheetid>a1f1d9b6-bb36-4449-a41f-abe80db43c70</subsheetid><display x="-240" y="-15" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2203c5fe-9233-44d9-b5aa-0fa81bb4d016" name="Vertical Resolution" type="Data"><subsheetid>a1f1d9b6-bb36-4449-a41f-abe80db43c70</subsheetid><display x="-180" y="-15" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e7d661e-1347-404d-9773-b20b66982d72" name="Timeout" type="Data"><subsheetid>a1f1d9b6-bb36-4449-a41f-abe80db43c70</subsheetid><loginhibit /><display x="-120" y="-15" /><datatype>timespan</datatype><initialvalue>0.00:00:30</initialvalue><private /><alwaysinit /></stage><stage stageid="d4a94b84-c140-4d74-9ece-7b75b2548a30" name="Note1" type="Note"><subsheetid>a1f1d9b6-bb36-4449-a41f-abe80db43c70</subsheetid><loginhibit /><narrative>Note: Make sure you only pass in the screen resolution that is supported</narrative><display x="210" y="-150" w="240" h="60" /><font family="Segoe UI" size="16" style="Bold" color="FF0000" /></stage><stage stageid="e060664b-b423-4175-b38c-3ea531203b49" name="Set Screen Resolution" type="Code"><subsheetid>a1f1d9b6-bb36-4449-a41f-abe80db43c70</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="number" name="Horizontal" expr="[Horizontal Resolution]" /><input type="number" name="Vertical" expr="[Vertical Resolution]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="number" name="Return Code" stage="Return Code" /></outputs><onsuccess>a06cb66a-a25f-4170-9364-4fa4104a9393</onsuccess><code><![CDATA[' Set the default return value.
Success = False
Return_Code = -2

Dim screen As Screen = screen.PrimaryScreen
Dim iWidth As Integer = Horizontal
Dim iHeight As Integer = Vertical
Dim dm As DEVMODE1 = New DEVMODE1

dm.dmDeviceName = New String(New Char(32) {})
dm.dmFormName = New String(New Char(32) {})
dm.dmSize = CType(Marshal.SizeOf(dm), Short)

Dim modeIndex as Integer = 0
Do While (User_32.EnumDisplaySettings(Nothing, modeIndex, dm) > 0)
	If ((dm.dmPelsWidth = iWidth) And (dm.dmPelsHeight = iHeight)) Then
		Dim iRet As Integer = User_32.ChangeDisplaySettings(dm, User_32.CDS_TEST)
		If iRet = User_32.DISP_CHANGE_FAILED Then
			Success = False
		Else
			iRet = User_32.ChangeDisplaySettings(dm, User_32.CDS_UPDATEREGISTRY)
		
			Select Case iRet
				Case User_32.DISP_CHANGE_SUCCESSFUL
					' Success!!
					Success = True
				Case Else
					Success = False
			End Select
		End If	
		Return_Code = iRet
		Exit Do
	End If
	modeIndex = modeIndex + 1
Loop]]></code></stage><stage stageid="7a2691fe-9374-4184-ac69-a0c99d14f257" name="Success" type="Data"><subsheetid>a1f1d9b6-bb36-4449-a41f-abe80db43c70</subsheetid><display x="105" y="-45" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a06cb66a-a25f-4170-9364-4fa4104a9393" name="Success?" type="Decision"><subsheetid>a1f1d9b6-bb36-4449-a41f-abe80db43c70</subsheetid><loginhibit /><display x="15" y="15" /><decision expression="[Success] = True" /><ontrue>c6bd6956-f378-418e-8880-30d84f5acad6</ontrue><onfalse>d317d7bf-2ed3-4b48-8e0c-62e5598f7a11</onfalse></stage><stage stageid="d317d7bf-2ed3-4b48-8e0c-62e5598f7a11" name="Clear Dimensions" type="MultipleCalculation"><subsheetid>a1f1d9b6-bb36-4449-a41f-abe80db43c70</subsheetid><loginhibit /><display x="105" y="15" /><onsuccess>c6bd6956-f378-418e-8880-30d84f5acad6</onsuccess><steps><calculation expression="0" stage="Horizontal Resolution" /><calculation expression="0" stage="Vertical Resolution" /></steps></stage><stage stageid="53a8d868-af7c-43cd-826e-000b927101dd" name="Return Code" type="Data"><subsheetid>a1f1d9b6-bb36-4449-a41f-abe80db43c70</subsheetid><display x="-180" y="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9d1c2600-75fb-4131-9fc3-e8ea80597586" name="Use Shell" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="8e694b92-fe89-43a0-bf62-33370a1e844e" name="Clean Up" type="SubSheetInfo"><subsheetid>fd494d31-daad-4e53-a0be-892311ddfc9b</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a6e4c30c-535d-4c09-bbd8-5d384bbb8a35" name="Start" type="Start"><subsheetid>fd494d31-daad-4e53-a0be-892311ddfc9b</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>8b25238a-79e9-40d3-80f6-810d9937f1da</onsuccess></stage><stage stageid="8b25238a-79e9-40d3-80f6-810d9937f1da" name="End" type="End"><subsheetid>fd494d31-daad-4e53-a0be-892311ddfc9b</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="1e934dc5-5507-4854-bf49-df3d1e55998f" name="Is Empty?" type="Decision"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len(Trim([Clipboard])) = 0" /><ontrue>bcb5c983-a5fb-4b30-b14f-7a1509fff980</ontrue><onfalse>8f17525a-5aad-4508-8219-fc409bcb0681</onfalse></stage><stage stageid="bcb5c983-a5fb-4b30-b14f-7a1509fff980" name="Set Value" type="Calculation"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="-15" /><onsuccess>54826c34-2991-4964-b0a3-0e0a2f951f29</onsuccess><calculation expression="Chr(0)" stage="Clipboard" /></stage><stage stageid="8f17525a-5aad-4508-8219-fc409bcb0681" name="Anchor1" type="Anchor"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="75" y="-60" w="10" h="10" /><onsuccess>9f34b3eb-71cb-467a-9c05-7cf9c2c267b8</onsuccess></stage><stage stageid="9f34b3eb-71cb-467a-9c05-7cf9c2c267b8" name="Anchor2" type="Anchor"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="75" y="30" w="10" h="10" /><onsuccess>54826c34-2991-4964-b0a3-0e0a2f951f29</onsuccess></stage><stage stageid="ca8701cd-9470-4aaf-9bab-6b0b35610381" name="Input" type="Block"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage></process></object>
        <object id="3a5f7760-1621-4a03-bd1e-c7477b5a6de4" name="Utility - File Management" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - File Management" version="6.5.0.12573" bpversion="7.4.1.15931" narrative="Utility methods for interacting with the file System." byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>55</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>149</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2530b0d-5530-4692-8a60-1f91d1c5a9c9" type="Normal" published="True"><name>Append to Text File</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c80dea92-57e8-4e2e-8df4-f3ee6ceeb717" type="Normal" published="True"><name>Combine Path</name><view><camerax>202</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e3c209b-a109-46a0-9ff0-e2dc6b8791fb" type="Normal" published="True"><name>Configure</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c890e900-9dd0-4188-8acf-e888f9eac0d8" type="Normal" published="True"><name>Copy Directory</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e9dd304c-7d26-40f5-b193-eef36f0a370c" type="Normal" published="True"><name>Copy File</name><view><camerax>49</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1ff30a41-e177-40c5-a756-a6b466004f32" type="Normal" published="True"><name>Create Directory</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d68f192f-eeb7-420e-b156-9636503b6082" type="Normal" published="True"><name>Delete Directory</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="70940cba-8680-4eb9-8066-9e383fc5b39b" type="Normal" published="True"><name>Delete File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed509af2-4b4a-447d-8196-18105ed12739" type="Normal" published="True"><name>Delete Files</name><view><camerax>-76</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea" type="Normal" published="True"><name>Download File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="20e6a636-d89b-4c08-b90d-8852894005a4" type="Normal" published="True"><name>Directory Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="60b8a01d-1f74-4169-b192-5e363a7b5e61" type="Normal" published="True"><name>File Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fac88315-ccef-4e72-b044-d98848b6bfe1" type="Normal" published="True"><name>File Search</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="40c9ce0e-5070-49e9-82fb-91a8d218142c" type="Normal" published="True"><name>Get Checksum</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f7fa43ec-67e2-4acb-8d13-ced3c5027761" type="Normal" published="True"><name>Get CSV Text As Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="83f62e1e-a505-4c29-ae0c-fda5765f9381" type="Normal" published="True"><name>Get CSV Text As Collection - Chunk</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dd791081-408f-47c8-a372-c83598db1093" type="Normal" published="True"><name>Get FileInfo</name><view><camerax>0</camerax><cameray>68</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ca00106-fe4e-46c0-bffc-0dda1561434f" type="Normal" published="True"><name>Get File Size</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3a12dbad-57fd-45a4-b859-62df514a34d3" type="Normal" published="True"><name>Get Files</name><view><camerax>106</camerax><cameray>37</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bafee17-a81a-40f0-9b6b-80b78142dd87" type="Normal" published="True"><name>Get Folders</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="40c6e605-9948-429a-ac84-d2810bca75fc" type="Normal" published="True"><name>Get Special Folder Path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="85156833-c61c-4c78-916f-0b75a9a83e8d" type="Normal" published="True"><name>Move File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8043916d-2ef9-45b8-ab66-f4c20ef1b8e3" type="Normal" published="False"><name>Raise Exception If Appropriate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8eb61369-ddab-4205-9a55-81054c2e4afb" type="Normal" published="True"><name>Read All Text from File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6a9cff0d-c7c5-440a-bd8d-0007e15eae4d" type="Normal" published="True"><name>Read Lines From File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b3050915-ad2e-446e-a1d6-99d11506f55e" type="Normal" published="True"><name>Split Path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8" type="Normal" published="True"><name>Sub Directory Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="842c79f8-aa64-4781-ad18-3982e21f0fd1" type="Normal" published="True"><name>Write Binary Data</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d70bb43c-a4e2-42ad-8969-407219268ebd" type="Normal" published="True"><name>Read Binary Data</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="602b7aad-2626-40ba-8c4b-1ec926ae9098" type="Normal" published="True"><name>Write Text File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="978cf02e-a104-4f37-82cb-a40859ffa1f2" type="Normal" published="True"><name>Write Text Large Text File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>mscorlib.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>System.Data.OleDB</import><import>System.Text</import><import>System.Security.Cryptography</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[
]]></globalcode><code><![CDATA[Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			If objColumn.DataType = GetType(DateTime) Then
				objColumn.DateTimeMode = DataSetDateTime.Utc
			End If
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="07048754-58c7-4201-9869-e206f1d6c32a" name="Get Files" type="SubSheetInfo"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><narrative>Gets all files in the specified folder matching the supplied file type pattern string.

Patterns - A comma-separated list of file patterns identifying the type(s) of files sought. Eg "*.jpg, *.png" retrieves all jpg and png files. The pattern "*.*" will return all files. It does not matter whether you leave a space between each pattern, or not. Where a comma is required in a file pattern it should be escaped out using the backslash character, e.g. a pattern of "*\,November.xlsx" will return all files that end with ",November.xlsx"</narrative><display x="-195" y="-105" w="270" h="120" /></stage><stage stageid="8448350e-b6a9-4a15-a3d0-501c4967c0f9" name="Start" type="Start"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="All matching files will be returned." /></postconditions><display x="15" y="-105" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for files" stage="Folder" /><input type="text" name="Patterns CSV" narrative="The comma seperated list of wildcard patterns" stage="Patterns CSV" /></inputs><onsuccess>acbbbddf-8b42-4353-8b0a-83eaeb216a63</onsuccess></stage><stage stageid="acbbbddf-8b42-4353-8b0a-83eaeb216a63" name="Get Files" type="Code"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="Patterns CSV" expr="[Patterns CSV]" /></inputs><outputs><output type="collection" name="Files" stage="Files" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9cdf0f78-05d1-44d4-80a0-9f78ca0b22ae</onsuccess><code><![CDATA[
Dim objTable As DataTable
Dim objRow As DataRow
Dim aFiles As FileInfo()
Dim aPatterns As String()
Dim oDirectory As New DirectoryInfo(Folder)

Try

	'Create a data table to output as a collection
	objTable = GetDataTable( _
		"Path," _
		& "Folder," _
		& "Name," _
		& "Extension," _
		& "Created," _
		& "Last Accessed," _
		& "Last Written," _
		& "Read Only," _
		& "Bytes", _
		"System.String," _
		& "System.String," _
		& "System.String," _
		& "System.String," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.Boolean," _
		& "System.Double")
		
	Patterns_CSV = Patterns_CSV.replace("\,", "?")
	aPatterns = Patterns_CSV.split(",")

	For each sPattern As String in aPatterns
		sPattern = sPattern.replace("?", ",")
		aFiles = oDirectory.GetFiles(sPattern.Trim)
		For each oFile as FileInfo in aFiles
			objRow = objTable.NewRow()
			objRow("Path") = oFile.FullName
			objRow("Folder") = oFile.DirectoryName
			objRow("Name") = oFile.Name
			objRow("Extension") = oFile.Extension
			objRow("Created") = oFile.CreationTimeUtc
			objRow("Last Accessed") = oFile.LastAccessTimeUtc
			objRow("Last Written") = oFile.LastWriteTimeUtc
			objRow("Read Only") = oFile.IsReadOnly
			objRow("Bytes") = oFile.Length

			objTable.Rows.Add(objRow)
		Next
	Next

	objTable = objTable.DefaultView.ToTable(True, _
		"Path", _
		"Folder", _
		"Name", _
		"Extension", _
		"Created", _
		"Last Accessed", _
		"Last Written", _
		"Read Only", _
		"Bytes")

	Files = objTable
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="913867cd-7535-4857-b6b9-1b1ead2bc67f" name="Folder" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\development</initialvalue><private /><alwaysinit /></stage><stage stageid="624240c2-02c8-48c3-9040-e9388fddf1b1" name="Patterns CSV" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">*.jpg</initialvalue><private /><alwaysinit /></stage><stage stageid="95f234d2-8c1a-466c-b8a6-fb7dc34de936" name="Files" type="Collection"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="75" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3764ae17-85d7-4ebb-99b5-502b95d7abd6" name="End" type="End"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="A message if unsuccessful" stage="Message" /><output type="collection" name="Files" narrative="The collection of files found" stage="Files" /></outputs></stage><stage stageid="8e80cc1d-27ed-43d9-985e-90d828191fb7" name="Success" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="950111b1-7b05-4076-a673-b07166b76cdb" name="Message" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32964141-871e-474a-a1f8-eea0b10c5df2" name="Delete Files" type="SubSheetInfo"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><narrative>Deletes all files in the specified folder, matching the supplied file extension pattern.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="82b919fe-64b2-4c2b-8173-5706f671c5ce" name="End" type="End"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="45" /><outputs><output type="flag" name="Success" narrative="A flag indicating success or failure of the action." stage="Success" /><output type="text" name="Message" narrative="If the action failed, this may contain additional information related to the failure." stage="Message" /></outputs></stage><stage stageid="ea337dc4-4fd9-4d31-8cc6-23da41cd5665" name="Start" type="Start"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><preconditions><condition narrative="The named folder must exist." /></preconditions><postconditions><condition narrative="All files within the named folder which match the supplied pattern will have been deleted." /></postconditions><display x="15" y="-135" /><inputs><input type="text" name="Folder" narrative="The path from which to delete the files" stage="Folder" /><input type="text" name="Pattern" narrative="The wildcard pattern of files to delete" stage="Pattern" /><input type="flag" name="Case Sensitive Search" narrative="Optional. A flag indicating whether the search should be performed in a case sensitive nature. Default value is 'False'." stage="Case Sensitive Search" /></inputs><onsuccess>7bdecae0-a97f-4945-87c4-c98b305dffe6</onsuccess></stage><stage stageid="202c81a6-fd90-46ed-9eee-73c24863b69b" name="Delete Files" type="Code"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="Pattern" expr="[Pattern]" /><input type="flag" name="Case Sensitive Search" expr="[Case Sensitive Search]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>d0021635-222d-46f1-93ad-a7435640cf9f</onsuccess><code><![CDATA[Dim local_pattern As String

If (Case_Sensitive_Search) Then
	local_pattern = Pattern
Else
	local_pattern = Pattern.ToLower()
End If

Try
	Dim di As DirectoryInfo = New DirectoryInfo(Folder)
	Dim listOfFiles As FileInfo() = di.GetFiles(Pattern)
	For Each f As FileInfo In listOfFiles
		Dim fileName As String
		If (Case_Sensitive_Search) Then
			fileName = f.Name
		Else
			fileName = f.Name.ToLower()
		End If

		If (fileName Like local_pattern) Then
			f.Delete()
		End If
	Next
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try
]]></code></stage><stage stageid="119002ff-ee61-4f32-b096-f3953ad107e1" name="Folder" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="121b4fd7-a9da-4498-a8d5-6a0ab2dae758" name="Pattern" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="623ad5b5-f965-4f97-9d46-435717e70b25" name="Success" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77c8238b-c415-496f-87c3-50033ec4d2a5" name="Message" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="120" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7891b89f-2307-4444-8b6e-17e25e53501f" name="Append to Text File" type="SubSheetInfo"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><narrative>Appends some text to the specified file.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="83010bd2-019e-4b04-af0b-b401efe8d128" name="Start" type="Start"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><preconditions><condition narrative="There must be sufficient disk space to accommodate the new data. The destination file need not exist already. If it does not exist then it will be created." /></preconditions><postconditions><condition narrative="The supplied text will have been appended." /></postconditions><display x="15" y="-105" /><inputs><input type="text" name="File Name" narrative="The full path of the text file to append to" stage="File Name" /><input type="text" name="Text" narrative="The text to append to the file" stage="Text" /><input type="text" name="File Encoding" narrative="Optional. Defaults to utf-8." stage="File Encoding" /><input type="flag" name="Use BOM" narrative="Optional. Flag indicating whether to use Byte Order Mark with a Unicode encoding. Default is False." stage="UseBOM" /></inputs><onsuccess>eeb7f0eb-73fc-4849-96a9-35f410bbde67</onsuccess></stage><stage stageid="39862014-df78-414b-9ccd-5c0d392aa282" name="End" type="End"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="f9d3e8a1-7f67-4991-b9f1-e8ec160de075" name="Success" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-195" y="105" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2ef09390-e450-4d10-a32b-4448a65b0aaf" name="Message" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-195" y="135" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e77fcf2-8d12-4f3b-acf3-e15dccb8e90a" name="Text" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f599b6ac-5574-438b-8617-8821d9800cf7" name="File Name" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eeb7f0eb-73fc-4849-96a9-35f410bbde67" name="Append" type="Code"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /><input type="text" name="File Encoding" expr="[File Encoding]" /><input type="flag" name="UseBOM" expr="[UseBOM]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1e441202-3878-4eb6-b156-6f517be6de00</onsuccess><code><![CDATA[Try
	Dim encoding As Encoding

	' This block of logic is for determining whether BOM should be used with a Unicode encoding and what the endianness should be.
	If (File_Encoding.Trim().ToLower() = "utf-8") Then
		If (UseBOM) Then
			encoding = New UTF8Encoding(True)
		Else
			encoding = New UTF8Encoding(False)
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "utf-16") Then
		If (UseBOM) Then
			encoding = New UnicodeEncoding(False, True )
		Else
			encoding = New UnicodeEncoding(False, False )
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "unicodefffe") Then
		If (UseBOM) Then
			encoding = New UnicodeEncoding(True, True)
		Else
			encoding = New UnicodeEncoding(True, False)
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "utf-32") Then
		If (UseBOM) Then
			encoding = New UTF32Encoding(False, True)
		Else
			encoding = New UTF32Encoding(False, False)
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "utf-32be") Then
		If (UseBOM) Then
			encoding = New UTF32Encoding(True, True)
		Else
			encoding = New UTF32Encoding(True, False)
		End If
	Else
		encoding = Encoding.GetEncoding(File_Encoding)
	End If

	Using sw As StreamWriter = New StreamWriter(File_Name, True, encoding)
        sw.WriteLine(Text)
    End Using

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="6428e7b4-8ed6-4930-bc8f-636cc71e955a" name="Read All Text from File" type="SubSheetInfo"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><narrative>Reads the entire contents of a file as text.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a783ee6f-6425-4420-9b9f-759c781f3544" name="Start" type="Start"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><preconditions><condition narrative="The file must exist." /></preconditions><postconditions><condition narrative="The full text of the file will be read." /></postconditions><display x="15" y="-105" /><inputs><input type="text" name="File Name" narrative="The full path the file to read the text from" stage="File Name" /><input type="text" name="File Encoding" narrative="Optional. Defaults to UTF8" stage="File Encoding" /><input type="flag" name="Use BOM" narrative="Optional. Flag indicating whether to use Byte Order Mark with a Unicode encoding. Default is False." stage="UseBOM" /></inputs><onsuccess>8107f164-7ef3-4164-8a2c-500055c7b374</onsuccess></stage><stage stageid="0a76495e-bc0d-4cea-bae0-85da1e15c74f" name="End" type="End"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="text" name="Text" narrative="The text of the file" stage="Text" /></outputs></stage><stage stageid="995662eb-baf3-436e-a2c1-2cc3ccfcf8fb" name="Success" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-195" y="105" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ee454760-e4c3-44cc-b071-30cdafbe8355" name="Message" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-195" y="135" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dbbbe6e-0b94-4d90-940a-c99f9671b774" name="Text" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="265e14ba-8649-477d-9d21-092a9bc9ad2d" name="File Name" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8107f164-7ef3-4164-8a2c-500055c7b374" name="Read Text" type="Code"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="File Encoding" expr="[File Encoding]" /><input type="flag" name="UseBOM" expr="[UseBOM]" /></inputs><outputs><output type="text" name="Text" stage="Text" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7419fb71-5c79-4fb6-9e59-b9fbc1d63e45</onsuccess><code><![CDATA[Try
	If File.Exists(File_Name) Then

		Dim encoding As Encoding

		' This block of logic is for determining whether BOM should be used with a Unicode encoding and what the endianness should be.
		If (File_Encoding.Trim().ToLower() = "utf-8") Then
			If (UseBOM) Then
				encoding = New UTF8Encoding(True)
			Else
				encoding = New UTF8Encoding(False)
			End If
		ElseIf (File_Encoding.Trim().ToLower() = "utf-16") Then
			If (UseBOM) Then
				encoding = New UnicodeEncoding(False, True )
			Else
				encoding = New UnicodeEncoding(False, False )
			End If
		ElseIf (File_Encoding.Trim().ToLower() = "unicodefffe") Then
			If (UseBOM) Then
				encoding = New UnicodeEncoding(True, True)
			Else
				encoding = New UnicodeEncoding(True, False)
			End If
		ElseIf (File_Encoding.Trim().ToLower() = "utf-32") Then
			If (UseBOM) Then
				encoding = New UTF32Encoding(False, True)
			Else
				encoding = New UTF32Encoding(False, False)
			End If
		ElseIf (File_Encoding.Trim().ToLower() = "utf-32be") Then
			If (UseBOM) Then
				encoding = New UTF32Encoding(True, True)
			Else
				encoding = New UTF32Encoding(True, False)
			End If
		Else
			encoding = Encoding.GetEncoding(File_Encoding)
		End If

		Dim sr As New StreamReader(File_Name, encoding)
		Text = sr.ReadToEnd
		sr.Close()
		Success = True
		Message = ""
	Else
		Throw New ApplicationException("The file at " & File_Name & " does not exist")
	End If
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="a3f9a500-e2f0-4f48-9bb2-38ad1a4592b9" name="Write Text File" type="SubSheetInfo"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><narrative>Writes text to a file. Any existing text in the file (if it exists) will be replaced. This is not an ideal solution for large amount of text.</narrative><display x="-210" y="-105" w="150" h="90" /></stage><stage stageid="3f408f78-c150-49f6-9f52-a3fb59ce307e" name="Start" type="Start"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><preconditions><condition narrative="There must be sufficient disk space to accommodate the new data." /></preconditions><postconditions><condition narrative="The supplied text will have been written to the destination file." /></postconditions><display x="-30" y="-135" /><inputs><input type="text" name="File Name" narrative="The full path to the file to write the text to" stage="File Name" /><input type="text" name="Text" narrative="The text to write to the file" stage="Text" /><input type="text" name="File Encoding" narrative="Optional. Defaults to utf-8" stage="File Encoding" /><input type="flag" name="Use BOM" narrative="Optional. Flag indicating whether to use Byte Order Mark with a Unicode encoding. Default is False." stage="UseBOM" /></inputs><onsuccess>7d5efe35-64fc-48a0-b5a7-a5b787e90578</onsuccess></stage><stage stageid="1aab3a10-a813-470b-97c8-57938a0d0024" name="End" type="End"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="0" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="e85add3f-f65a-47dd-8be7-5ee764878dee" name="Success" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-195" y="105" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="3ba21666-440e-40ea-80e4-bb02ff535775" name="Message" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-195" y="135" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="951ed278-f157-450e-90d0-06cc330e358c" name="Text" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20ca70ee-ce56-4594-90ca-a03ba1934f47" name="File Name" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d5efe35-64fc-48a0-b5a7-a5b787e90578" name="Write" type="Code"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="-90" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /><input type="text" name="File Encoding" expr="[File Encoding]" /><input type="flag" name="UseBOM" expr="[UseBOM]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9219c3c4-effd-4dfc-9020-8dafd054ea8f</onsuccess><code><![CDATA[Try
	Dim encoding As Encoding

	' This block of logic is for determining whether BOM should be used with a Unicode encoding and what the endianness should be.
	If (File_Encoding.Trim().ToLower() = "utf-8") Then
		If (UseBOM) Then
			encoding = New UTF8Encoding(True)
		Else
			encoding = New UTF8Encoding(False)
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "utf-16") Then
		If (UseBOM) Then
			encoding = New UnicodeEncoding(False, True )
		Else
			encoding = New UnicodeEncoding(False, False )
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "unicodefffe") Then
		If (UseBOM) Then
			encoding = New UnicodeEncoding(True, True)
		Else
			encoding = New UnicodeEncoding(True, False)
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "utf-32") Then
		If (UseBOM) Then
			encoding = New UTF32Encoding(False, True)
		Else
			encoding = New UTF32Encoding(False, False)
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "utf-32be") Then
		If (UseBOM) Then
			encoding = New UTF32Encoding(True, True)
		Else
			encoding = New UTF32Encoding(True, False)
		End If
	Else
		encoding = Encoding.GetEncoding(File_Encoding)
	End If

	File.WriteAllText(File_Name, Text, encoding)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="7dfd4754-e49a-447b-b9c3-c36266dfa2e8" name="File Exists" type="SubSheetInfo"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><narrative>Determines whether the specified file exsts. The full path must be specified.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="da1de8a5-b06c-4fc0-b316-2fec1a802056" name="End" type="End"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-60" y="-45" /><outputs><output type="flag" name="Exists" narrative="True if the file exists" stage="Exists" /></outputs></stage><stage stageid="6b0d4683-2748-485e-88ed-cdf57c76992d" name="Start" type="Start"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The existence of the file of interest will have been determined." /></postconditions><display x="-60" y="-135" /><inputs><input type="text" name="File Name" narrative="The name of the file to check" stage="File Name" /></inputs><onsuccess>7cc66b68-5ab8-4f99-95fa-fde9dbfa38ed</onsuccess></stage><stage stageid="f92a43a8-74e6-4f49-bf65-dc7663017f2b" name="File Name" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7cc66b68-5ab8-4f99-95fa-fde9dbfa38ed" name="File Exists" type="Code"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-60" y="-90" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>da1de8a5-b06c-4fc0-b316-2fec1a802056</onsuccess><code><![CDATA[Try
	Exists = File.Exists(File_Name)
Catch
	Exists = False
End Try]]></code></stage><stage stageid="817167f9-bb73-4622-9254-e249dff5369f" name="Exists" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="c50578e4-df15-4b21-8a4c-469dae40724d" name="Copy File" type="SubSheetInfo"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><narrative>Copies a file to the named destination.</narrative><display x="-195" y="-135" w="150" h="90" /></stage><stage stageid="30f8df38-bbc1-4b94-916b-ce06a40b630c" name="Start" type="Start"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><preconditions><condition narrative="The file to be copied must exist. The full destination path must be specified. There must be sufficient free disk space to complete the operation." /></preconditions><postconditions><condition narrative="The file will have been copied to the specified destination." /><condition narrative="" /></postconditions><display x="15" y="-105" /><inputs><input type="text" name="File Path" narrative="The full path to the file to be copied" stage="File Path" /><input type="text" name="Destination Path" narrative="The path of the directory to copy the file to" stage="Destination Path" /></inputs><onsuccess>8de7d816-2984-4b8f-a1f0-dfdf25b3f108</onsuccess></stage><stage stageid="53e1058f-89a5-4172-b9b5-89530de8ef51" name="Success" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="471fd171-54c1-4c9b-aa1d-6f471b939942" name="Message" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8de7d816-2984-4b8f-a1f0-dfdf25b3f108" name="Copy" type="Code"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Destination" expr="[Destination Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>acf72cc7-cf73-466f-8c22-9fb633ed3c24</onsuccess><code><![CDATA[Try

	Dim sSourceFolder As String = Mid(File_Path, 1, File_Path.LastIndexOf("\") + 1)
	Dim sSourceFileName As String = Mid(File_Path, File_Path.LastIndexOf("\") + 2)
 
	Dim sDestinationFolder As String
	Dim sDestinationFile As String
	If Directory.Exists(Destination) Then
		sDestinationFolder = Destination
		If Not sDestinationFolder.EndsWith("\") Then
			sDestinationFolder &= "\"
		End If
		sDestinationFile = ""
	Else
		sDestinationFolder = ""
		sDestinationFile = Destination
	End If
 
	Dim objDirectoryInfo As DirectoryInfo = New DirectoryInfo(sSourceFolder)
	Dim aFiles As FileInfo() = objDirectoryInfo.GetFiles(sSourceFileName)

	If aFiles Is Nothing OrElse aFiles.Length <= 0 Then
		Success = False
		Message = "No files found"
		Return
	End If

	For Each oFile As FileInfo In aFiles
		If sDestinationFolder = "" Then
			oFile.CopyTo(sDestinationFile, True)
		Else
			oFile.CopyTo(sDestinationFolder & oFile.Name, True)
		End If
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="f12e4bba-1185-469f-aea9-0b8954cbed77" name="File Path" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30982d9d-8e54-4d64-af7e-2a7df861c94f" name="Destination Path" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d608807-5c80-49f5-a177-05a15f6d0ff7" name="Get File Size" type="SubSheetInfo"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><narrative>Gets the size of the specified file.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d07f9435-79c9-4cd5-b803-1cde78f5262c" name="End" type="End"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="number" name="Size" narrative="The size of the file in bytes" stage="Bytes" /></outputs></stage><stage stageid="d573bf14-6cce-4455-ae05-908d9a527dcb" name="Start" type="Start"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><preconditions><condition narrative="The specified file must exist." /></preconditions><postconditions><condition narrative="The file size will have been determined." /></postconditions><display x="15" y="-105" /><inputs><input type="text" name="File Path" narrative="Full path to the file to get the file size" stage="File Path" /></inputs><onsuccess>6543595a-59fb-4304-b9f3-1acf662a1237</onsuccess></stage><stage stageid="0c8b0631-90f5-4646-b0cf-8fab74f80999" name="File Path" type="Data"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6543595a-59fb-4304-b9f3-1acf662a1237" name="Get Byte Count" type="Code"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="File Path" expr="[File Path]" /></inputs><outputs><output type="number" name="Bytes" stage="Bytes" /></outputs><onsuccess>d07f9435-79c9-4cd5-b803-1cde78f5262c</onsuccess><code><![CDATA[Try

	Bytes = File.ReadAllBytes(File_Path).Length

Catch e As Exception
	Bytes = 0
End Try]]></code></stage><stage stageid="3eb7673c-2193-4d7f-ac06-85b1da9ce046" name="Bytes" type="Data"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /></stage><stage stageid="d1f13191-1583-4a03-865c-3f0758139ca3" name="Delete File" type="SubSheetInfo"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><narrative>Deletes a single file from the file system.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="31d32d9a-4f5c-4793-afc7-d84f096922b9" name="Start" type="Start"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><preconditions><condition narrative="The file to be deleted must exist." /></preconditions><postconditions><condition narrative="The named file will have been deleted." /></postconditions><display x="15" y="-105" /><inputs><input type="text" name="File Name" narrative="The full path to the file to delete" stage="File Name" /></inputs><onsuccess>07943bb6-df9a-48f8-9f3c-db87f5e21742</onsuccess></stage><stage stageid="cd763cbc-81c0-42b1-9d9d-b2b7d325235d" name="File Name" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6262d8e-0c7b-459d-b177-37ae4d226ddf" name="Delete File" type="Code"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>249acd28-3283-498f-aca8-76c67cb2295c</onsuccess><code><![CDATA[Try
   If Not File.Exists(File_Name) Then
      Throw New ApplicationException("The specified file at " & File_Name & " does not exist.")
   Else
	   File.Delete(File_Name)
	   Success = True
   End If
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="1cd4abb9-4dc3-494c-86a7-d85877a1827a" name="Success" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc5b5c19-fe76-4278-95d2-f89c3588893c" name="Message" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7bae4fd-01fc-4447-8cf4-fbfd04353f72" name="End" type="End"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="576295b9-757e-4588-948e-34aac5140c29" name="End" type="End"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="cef63c98-a65d-4862-9d1d-ff02fbfc92f5" name="Get Folders" type="SubSheetInfo"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><narrative>Gets a collection of all subfolders in the specified file system folder.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f90df4f3-71ee-4470-b90b-1e8a0513cad8" name="Start" type="Start"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><preconditions><condition narrative="The named folder must exist." /></preconditions><postconditions><condition narrative="All sub-folders will be returned, if any exist." /></postconditions><display x="15" y="-105" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for sub-folders" stage="Folder" /></inputs><onsuccess>ff503eb2-2cb7-4dbb-90fe-2ab47a5e4a43</onsuccess></stage><stage stageid="ff503eb2-2cb7-4dbb-90fe-2ab47a5e4a43" name="Get Folders" type="Code"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="Folder" expr="[Folder]" /></inputs><outputs><output type="collection" name="Folders" stage="Folders" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>3dde4f26-00a8-4e1a-af12-b8a14178d89c</onsuccess><code><![CDATA[
Dim objTable As DataTable
Dim objRow As DataRow
Dim aFolders As DirectoryInfo()
Dim oDirectory As New DirectoryInfo(Folder)

Try

	'Create a data table to output as a collection
	objTable = GetDataTable( _
		"Path," _
		& "Name," _
		& "Created," _
		& "Last Accessed," _
		& "Last Written", _
		"System.String," _
		& "System.String," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.DateTime")
		
	aFolders = oDirectory.GetDirectories()
	For each oFolder as DirectoryInfo in aFolders
		objRow = objTable.NewRow()
		objRow("Path") = oFolder.FullName
		objRow("Name") = oFolder.Name
		objRow("Created") = oFolder.CreationTimeUtc
		objRow("Last Accessed") = oFolder.LastAccessTimeUtc
		objRow("Last Written") = oFolder.LastWriteTimeUtc

		objTable.Rows.Add(objRow)
	Next

	Folders = objTable
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="f72d7f92-f944-412b-8890-737f3be3b0a1" name="Folder" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\</initialvalue><private /><alwaysinit /></stage><stage stageid="1384f5ee-e382-4900-9900-e2e2eb7a9a78" name="Folders" type="Collection"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="75" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="aa67216d-b83f-4c14-9f71-5ec6df626c08" name="End" type="End"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="collection" name="Folders" narrative="A collection of the sub-folders found within the folder" stage="Folders" /></outputs></stage><stage stageid="759f9ebb-96f6-432b-a21e-6673b71cac22" name="Success" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5afbf383-4ea5-42f7-a298-d02bf6dc267a" name="Message" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="076db864-0743-4339-b606-174f056c63f9" name="Move File" type="SubSheetInfo"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><narrative>Moves the specified file to a new location.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="8c383fb0-b58b-44cd-8dec-c5934289e107" name="Start" type="Start"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><preconditions><condition narrative="The file to be moved must exist. There must be sufficient disk space to move the file." /></preconditions><display x="15" y="-105" /><inputs><input type="text" name="File Path" narrative="The full path to the file to move" stage="File Path" /><input type="text" name="Destination Path" narrative="The path to the folder to move the file to" stage="Destination Path" /></inputs><onsuccess>8cb5b945-a1c1-451f-b39e-fba3e2b5ab1b</onsuccess></stage><stage stageid="2c8abe9a-1466-4283-999a-c5c7838a0e27" name="End" type="End"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="a980280c-98cd-41d0-8a54-734c9bfacc5c" name="Success" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="779e3dfa-a01e-47f9-98c4-9ac10fcd5a11" name="Message" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8cb5b945-a1c1-451f-b39e-fba3e2b5ab1b" name="Move" type="Code"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Destination" expr="[Destination Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>acbc8cd8-d4ad-4eae-a7c3-ebbac1d3f4c7</onsuccess><code><![CDATA[Try

	Dim sSourceFolder As String = Mid(File_Path, 1, File_Path.LastIndexOf("\") + 1)
	Dim sSourceFileName As String = Mid(File_Path, File_Path.LastIndexOf("\") + 2)
 
	Dim sDestinationFolder As String
	Dim sDestinationFile As String
	If Directory.Exists(Destination) Then
		sDestinationFolder = Destination
		If Not sDestinationFolder.EndsWith("\") Then
			sDestinationFolder &= "\"
		End If
		sDestinationFile = ""
	Else
		sDestinationFolder = ""
		sDestinationFile = Destination
	End If
 
	Dim objDirectoryInfo As DirectoryInfo = New DirectoryInfo(sSourceFolder)
	Dim aFiles As FileInfo() = objDirectoryInfo.GetFiles(sSourceFileName)

	If aFiles Is Nothing OrElse aFiles.Length <= 0 Then
		Success = False
		Message = "No files found"
		Return
	End If

	For Each oFile As FileInfo In aFiles
		If sDestinationFolder = "" Then
			oFile.MoveTo(sDestinationFile)
		Else
			oFile.MoveTo(sDestinationFolder & oFile.Name)
		End If
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="ba83bbd5-0c51-49b0-ac63-de9e754aab48" name="File Path" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><display x="-195" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57b074ac-98b9-40d1-a342-36dc0a514f77" name="Destination Path" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c83a23da-bc05-4aa4-8a8e-6c09524e2baf" name="Split Path" type="SubSheetInfo"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><narrative>Splits a file path into its component parts - the filename and the folder path. The trailing backslash is omitted from the directory part.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6c655f85-fb96-448d-be05-5f6c833e1882" name="Start" type="Start"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><preconditions><condition narrative="The specified path must correspond to a file which exists on disk." /></preconditions><postconditions><condition narrative="The path will have been separated." /></postconditions><display x="90" y="-105" /><inputs><input type="text" name="File Path" narrative="The path to split" stage="File Path" /></inputs><onsuccess>138061d1-d866-403d-af52-37ea509c7e78</onsuccess></stage><stage stageid="138061d1-d866-403d-af52-37ea509c7e78" name="Split Path" type="Code"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="90" y="-45" /><inputs><input type="text" name="File Path" expr="[File Path]" /></inputs><outputs><output type="text" name="Folder" stage="Folder" /><output type="text" name="File Name" stage="File Name" /></outputs><onsuccess>0e35cb6c-257d-40a6-ba20-d661c3ad83fe</onsuccess><code><![CDATA[
Folder = Path.GetDirectoryName(File_Path)
File_Name = Path.GetFileName(File_Path)
]]></code></stage><stage stageid="69bae4e1-98fe-460c-807d-30657ae18ebf" name="File Name" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de3608a3-9cb7-41c3-ae88-da3dad92053e" name="Folder" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e0497cae-7418-46ec-a442-ac21369c7a2f" name="File Path" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e35cb6c-257d-40a6-ba20-d661c3ad83fe" name="End" type="End"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="90" y="15" /><outputs><output type="text" name="File Name" narrative="The filename" stage="File Name" /><output type="text" name="Folder" narrative="The folder" stage="Folder" /></outputs></stage><stage stageid="3068b898-6d19-4469-8efd-f355853fda4e" name="Directory Exists" type="SubSheetInfo"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><narrative>Determines whether the specified directory exsts. The full path must be specified.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="14e7b70b-4620-4b05-a9f8-5c31396209bd" name="Start" type="Start"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-135" /><inputs><input type="text" name="Directory Name" narrative="The directory to check exists" stage="Directory Name" /></inputs><onsuccess>50ef1149-8307-4080-9028-d6bec6eafd78</onsuccess></stage><stage stageid="4f5a5ea1-9bcf-4b0d-b58b-fb6b18580e44" name="End" type="End"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-45" /><outputs><output type="flag" name="Exists" narrative="True if the directory exists" stage="Exists" /></outputs></stage><stage stageid="50ef1149-8307-4080-9028-d6bec6eafd78" name="Directory Exists" type="Code"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-90" /><inputs><input type="text" name="Directory Name" expr="[Directory Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>4f5a5ea1-9bcf-4b0d-b58b-fb6b18580e44</onsuccess><code><![CDATA[Try
	Exists = Directory.Exists(Directory_Name)
Catch
	Exists = False
End Try]]></code></stage><stage stageid="89cff60a-371d-476b-bc55-f0e56150ef45" name="Exists" type="Data"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><display x="30" y="-90" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9da119d-dbd9-4320-90e1-ca33fae50a91" name="Directory Name" type="Data"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><display x="30" y="-135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1f89739-7f1c-4179-82ea-b123ecfc2854" name="Write Binary Data" type="SubSheetInfo"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><narrative>Writes binary data to a file. Any existing data in the file (if it exists) will be replaced.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="067fe5ce-ad15-436e-92fa-11e920e00501" name="Start" type="Start"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="binary" name="Binary Data" narrative="The data to write to the file" stage="Binary Data" /><input type="text" name="File Name" narrative="The full path of the file to write to" stage="FileName" /></inputs><onsuccess>48430903-e8af-4e4a-8544-8b04afc3478b</onsuccess></stage><stage stageid="83dc26e0-402d-403d-a18c-0d3ca147ba6d" name="Binary Data" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><display x="90" y="-105" /><datatype>binary</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="48430903-e8af-4e4a-8544-8b04afc3478b" name="Write Binary Data" type="Code"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="binary" name="Binary Data" expr="[Binary Data]" /><input type="text" name="FileName" expr="[FileName]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>aed480e9-2938-4d36-b400-a3bd2580921a</onsuccess><code><![CDATA[Try
	File.WriteAllBytes(FileName, Binary_Data)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="709d1a16-f19e-4504-ae79-4a48d1e058c7" name="End" type="End"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="43cbdbc2-6fdc-4080-b257-af95daad3fe4" name="Success" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-120" y="45" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0aebe753-5358-4cf3-982a-a9f0a9870be7" name="Message" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-120" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e035935-d499-4706-8ba0-78fdee0a782f" name="FileName" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><display x="-60" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7604000-e2fb-4a03-b8b4-caac4c6b9f9b" name="Combine Path" type="SubSheetInfo"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><narrative>Takes a file and folder and combines them into a full path.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="71908284-0a93-418a-9205-32dc4780032c" name="Start" type="Start"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The path will have been combined." /></postconditions><display x="120" y="-105" /><inputs><input type="text" name="Folder" narrative="The folder to combine" stage="Folder" /><input type="text" name="File Name" narrative="The file to combine" stage="File Name" /></inputs><onsuccess>39d35633-fc08-4dd1-a13a-1bfc9a0a9bd1</onsuccess></stage><stage stageid="39d35633-fc08-4dd1-a13a-1bfc9a0a9bd1" name="Combine Path" type="Code"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="120" y="-45" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="text" name="Path" stage="Path" /></outputs><onsuccess>b4d82bcb-e011-4728-a3ec-4c052dcebaaf</onsuccess><code><![CDATA[
Path = IO.Path.Combine(Folder, File_Name)
]]></code></stage><stage stageid="dca04a3f-b696-45b1-95c8-63dce520abe3" name="File Name" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-90" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e27e592f-8a2e-4df9-9453-1cdc8621051b" name="Folder" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-90" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4d82bcb-e011-4728-a3ec-4c052dcebaaf" name="End" type="End"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="120" y="15" /><outputs><output type="text" name="Path" narrative="The combined full path" stage="Path" /></outputs></stage><stage stageid="ef4fc19c-8897-431e-8688-11a52561113f" name="Path" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="195" y="15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a664d6c1-8951-4309-95b7-b7ae2edced0d" name="Create Directory" type="SubSheetInfo"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><narrative>Creates a directory under the given path.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="82e63828-72ff-4705-8c88-89c3316aa73e" name="Start" type="Start"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Directory Path" narrative="The path in which to create the directory" stage="Directory Path" /><input type="flag" name="Error If Already Exists" narrative="True to generate an error if the directory already exists" stage="Error If Already Exists" /></inputs><onsuccess>98af3f34-4ec7-49c5-a6cc-1cf6192b0e05</onsuccess></stage><stage stageid="e061382f-4149-485b-9668-f2fc0ca334bd" name="End" type="End"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="800212c5-6bfb-4df9-b501-39f55906a7b2" name="Directory Path" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="120" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e00501ce-6aa6-4616-9bf2-3904d515656c" name="Error If Already Exists" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="180" y="-105" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="98af3f34-4ec7-49c5-a6cc-1cf6192b0e05" name="Create Directory" type="Code"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /><input type="flag" name="ErrorIfAlreadyExists" expr="[Error If Already Exists]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>060a1fdb-6243-40f1-96e0-1c0b54382bfa</onsuccess><code><![CDATA[Try
   If Not Directory.Exists(Directory_Path) Then
   	Directory.CreateDirectory(Directory_Path)
   Else
      If ErrorIfAlreadyExists Then Throw New ApplicationException("Directory already exists")
   End If

	Success = True
Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()
End Try]]></code></stage><stage stageid="3b33d39b-1c7c-4664-ab8b-859aa2e15836" name="Success" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="120" y="-60" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9cbff7ae-931b-479f-b70f-7773ddda315c" name="Error Message" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="180" y="-60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20cbacd9-1e17-4fc0-85de-64615b1f3d18" name="Delete Directory" type="SubSheetInfo"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><narrative>Deletes a directory and if Recursive is True will delete all subdirectories if present</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="df3458a7-2e7e-451c-b27a-efc3737c22a4" name="Start" type="Start"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-135" /><inputs><input type="text" name="Directory Path" narrative="The path of the directory to delete" stage="Directory Path" /><input type="flag" name="Error If Not Exists" narrative="Set True to raise an error if the path does not exist" stage="Error If Not Exists" /><input type="flag" name="Recursive" narrative="Set True to delete all sub-directories of the path aswell" stage="Recursive" /></inputs><onsuccess>ef40ac3e-3a06-4ca9-a3be-daae97b8c700</onsuccess></stage><stage stageid="09677c01-2e36-4330-ae33-defa66a1e7b1" name="End" type="End"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="0" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="3afa3efd-a788-4410-a16c-5e2ecfc599d8" name="Directory Path" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="75" y="-135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef40ac3e-3a06-4ca9-a3be-daae97b8c700" name="Delete Directory" type="Code"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-90" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /><input type="flag" name="Recursive" expr="[Recursive]" /><input type="flag" name="ErrorIfNotExists" expr="[Error If Not Exists]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>8db31208-966a-494a-9315-8a4add93c64c</onsuccess><code><![CDATA[Try
   If Directory.Exists(Directory_Path) Then

		Dim SubDirectories As Boolean
		SubDirectories = False

		Dim SubdirectoryEntries As String() 
		SubdirectoryEntries = Directory.GetDirectories(Directory_Path) 
		
		If SubdirectoryEntries.Length > 0 Then SubDirectories = True

		If SubDirectories And Not Recursive Then Throw New ApplicationException("Directory has sub directories and will not be deleted")
   	
		Directory.Delete(Directory_Path, Recursive) 
   
Else
      If ErrorIfNotExists Then Throw New ApplicationException("Directory does not exist")
   End If

	Success = True


Catch UAEx as UnauthorizedAccessException
	Success = False
	Error_Message = "The caller does not have the required permission to delete this directory or sub directories"

Catch ANEx as ArgumentNullException
	Success = False
	Error_Message = "Please check Directory Path parameter is not null"

Catch AEx as ArgumentException
	Success = False
	Error_Message = "Please check Directory Path parameter is a valid string"

Catch PTLEx as PathTooLongException
	Success = False
	Error_Message = "The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters."

Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()

End Try]]></code></stage><stage stageid="1ea4ba58-4e52-4229-9f95-9f91c0fda672" name="Success" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="105" y="-75" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd89d345-b43b-43b1-a112-d69cd7b07387" name="Error Message" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="240" y="-45" w="180" h="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="498faab3-e919-4560-a284-8303f82f3c54" name="Recursive" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="180" y="-135" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="c7f09a8a-5e8c-4bd8-ae1c-03c88a61bc8b" name="Error If Not Exists" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="285" y="-135" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1a001ca1-2f75-4d52-8668-8537da4738b3" name="Sub Directory Exists" type="SubSheetInfo"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><narrative>Checks if a directory contains sub directories</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9d21f26b-5ccc-4f2f-b6f3-3443cb23a95f" name="Start" type="Start"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-150" /><inputs><input type="text" name="Directory Path" narrative="The path of the directory to check for sub directories" stage="Directory Path" /></inputs><onsuccess>9bd1eb97-f903-4b5b-bdb0-9aa7d84feead</onsuccess></stage><stage stageid="167ee595-8609-4b40-9cbb-70394613201b" name="End" type="End"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-15" /><outputs><output type="flag" name="Exists" narrative="True if sub directories exist" stage="Exists" /><output type="flag" name="Success" narrative="True if the check was successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="9bd1eb97-f903-4b5b-bdb0-9aa7d84feead" name="Get Sub Directories" type="Code"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-105" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>33ba9e06-b05b-4e51-baa6-7f6c9165c558</onsuccess><code><![CDATA[Try
   
Exists = False
If Directory.Exists(Directory_Path) Then
   	Dim subdirectoryEntries As String() 
		
		subdirectoryEntries = Directory.GetDirectories(Directory_Path) 
		
		If subdirectoryEntries.Length > 0 Then Exists = True

   Else
      Throw New ApplicationException("Directory does not exist")
   End If

	Success = True
Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()
End Try
]]></code></stage><stage stageid="50a0102e-8884-426d-b94f-ed07f6b9eb46" name="Exists" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="225" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c52a3808-5f20-4498-a5a6-6e8bd391e41c" name="Directory Path" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="225" y="-105" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\TEMP\Test Directory\A\c</initialvalue><private /><alwaysinit /></stage><stage stageid="227470b6-fe82-4351-a497-6094c99e4193" name="Success" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="330" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="586142aa-051e-4ec9-8b60-fe063eb60b77" name="Error Message" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="450" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="12caee97-e82e-461c-8b22-dabe4248d7a8" name="Get CSV Text As Collection" type="SubSheetInfo"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><narrative>Turns a comma seperated values file into a collection</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="939139f9-83c3-4076-85ca-1daa3e637601" name="Start" type="Start"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-135" /><inputs><input type="text" name="CSV File Path" narrative="The full path to the CSV file" stage="CSV Location" /><input type="flag" name="First Line Is Header" narrative="Set True if you want to treat the first line as a header" stage="First Line Is Header" /></inputs><onsuccess>dd7efc8a-65d0-432e-a205-643037779b8d</onsuccess></stage><stage stageid="c85955cf-695f-4e82-acdb-72332a337fc7" name="End" type="End"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-45" /><outputs><output type="collection" name="CSV Values" narrative="The collection populated with the values of the CSV file" stage="CSV Values" /></outputs></stage><stage stageid="96016690-fb73-49d3-bcfc-56b25dd9d3db" name="CSV Location" type="Data"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="60" y="-135" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\BluePrism\Medalytix\iGrading\Test_Suite\ImagesIndex.csv</initialvalue><private /><alwaysinit /></stage><stage stageid="dd7efc8a-65d0-432e-a205-643037779b8d" name="Parse CSV" type="Code"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-90" w="90" h="30" /><inputs><input type="text" name="CSV Location" expr="[CSV Location]" /><input type="flag" name="First_Line_Is_Header" expr="[First Line Is Header]" /></inputs><outputs><output type="collection" name="Values" stage="CSV Values" /></outputs><onsuccess>c85955cf-695f-4e82-acdb-72332a337fc7</onsuccess><code><![CDATA[Dim HDRString As String = "No"
If First_Line_Is_Header Then HDRSTring = "Yes"


Dim Folder as String = nothing
Dim FileName As String = Nothing
Split_Path(CSV_Location, Folder, Filename)

Dim cn As New OleDbConnection("Provider=Microsoft.ACE.OLEDB.12.0; Data Source=" & Folder & ";Extended Properties=""Text;HDR=" & HDRString & ";Format=Delimited""")
Dim da As New OleDbDataAdapter()
Dim ds As New DataSet()
Dim cd As New OleDbCommand("SELECT * FROM [" & Filename & "]", cn)

cn.Open()
da.SelectCommand = cd
ds.Clear()
da.Fill(ds, "CSV")
Values = ds.Tables(0)
cn.Close()]]></code></stage><stage stageid="5fe33334-21a0-4751-931d-92622545fe5d" name="CSV Values" type="Collection"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="75" y="-30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1dc002ef-16ce-4e9b-9eed-1c4c8a375f11" name="First Line Is Header" type="Data"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="120" y="-135" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e1836bd9-a0bc-45e9-9f62-2835fb1f6144" name="Get Special Folder Path" type="SubSheetInfo"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><narrative>Gets the path of a special folder.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="984cc49d-2710-42f2-85cc-b02b1af6ff97" name="Start" type="Start"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="text" name="Special Folder Name" narrative="The name of the special folder. Supported values include ApplicationData, DesktopDirectory, MyDocuments, ProgramFiles. The values correspond to the .NET Environment.SpecialFolder enumeration." stage="Special Folder Name" /></inputs><onsuccess>548052a7-4e77-4da0-a80e-07ce9d38ecba</onsuccess></stage><stage stageid="f77e4b56-0c20-4361-b1ac-7fbae4cebd0a" name="End" type="End"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-30" /><outputs><output type="text" name="Folder Path" narrative="The corresponding path of the requested special folder" stage="Folder Path" /></outputs></stage><stage stageid="1eb8ae16-c4b3-4a26-9476-974fec0fb4c4" name="Special Folder Name" type="Data"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><display x="75" y="-135" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">InternetCache</initialvalue><private /><alwaysinit /></stage><stage stageid="548052a7-4e77-4da0-a80e-07ce9d38ecba" name="Get Folder Path" type="Code"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><inputs><input type="text" name="Special Folder" expr="[Special Folder Name]" /></inputs><outputs><output type="text" name="Folder Path" stage="Folder Path" /></outputs><onsuccess>f77e4b56-0c20-4361-b1ac-7fbae4cebd0a</onsuccess><code><![CDATA[Dim EnumVal as Environment.SpecialFolder
Try
	EnumVal = Ctype(System.Enum.Parse(GetType(Environment.SpecialFolder), Special_Folder), Environment.SpecialFolder)
Catch Ex As Exception
	Throw New ApplicationException("Value '" & Special_Folder & "' is not recognised as a special folder")
End Try

Folder_Path = Environment.GetFolderPath(EnumVal)]]></code></stage><stage stageid="394a43a7-79f9-4edb-887f-d051122fa5f0" name="Folder Path" type="Data"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><display x="75" y="-30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9a81b69-65ad-4194-8361-a2e49aab6c2c" name="Download File" type="SubSheetInfo"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><narrative>Downloads a file from a web URL and saves it in a folder on disk.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ce6133ff-352a-4e74-b9a9-a2bb5d8c8858" name="Start" type="Start"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><display x="0" y="-135" /><inputs><input type="text" name="Source URL" narrative="The URL of the file that is to be downloaded" stage="Source URL" /><input type="text" name="Destination Path" narrative="The location of the folder where the file is to be saved" stage="Destination Path" /></inputs><onsuccess>a9bb95cf-84c0-42b2-9fac-e36252a56808</onsuccess></stage><stage stageid="00124bb2-c920-40c3-92e1-efb49b029dc0" name="End" type="End"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="0" y="-45" /></stage><stage stageid="5b30cabb-184c-427b-860e-a315e03763ba" name="Destination Path" type="Data"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1ee09d3b-a12d-48c7-89a2-7a947d431ac5" name="Source URL" type="Data"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9bb95cf-84c0-42b2-9fac-e36252a56808" name="Download File" type="Code"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="0" y="-90" w="90" h="30" /><inputs><input type="text" name="Url" expr="[Source URL]" /><input type="text" name="Path" expr="[Destination Path]" /></inputs><onsuccess>00124bb2-c920-40c3-92e1-efb49b029dc0</onsuccess><code><![CDATA[Using wc As New System.Net.WebClient()
	wc.DownloadFile(Url, Path)
End Using]]></code></stage><stage stageid="744e3f22-df5c-4d9e-984b-eceb276cbb95" name="Read Lines From File" type="SubSheetInfo"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><narrative>Reads a range of lines fom a text file</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="09ef75fb-7cbe-4b43-900b-bd0112866589" name="File Path" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3721f65-c0fd-4187-9e61-da35cecde126" name="Start Line" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="0" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3444d260-8bd2-44b4-91c8-1f4dc3a07e1d" name="End Line" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de2f0517-71e7-4bfa-b20b-0f6049ee064d" name="EOF" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="270" w="150" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e19c2d2b-f05b-48b3-a6c0-e6c368a0720b" name="Success" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-195" y="135" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2814638b-191d-44de-9e9d-e38ce3a2bdb5" name="Message" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="677752c3-298c-4ea1-abaf-244b239d65d0" name="Lines" type="Collection"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="225" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e5bbb949-f610-4f45-bcb7-10a0fc6b123d" name="Line Count" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="300" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bf17d04b-65f1-4bf3-a12c-7121e3c2a075" name="Start" type="Start"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><preconditions><condition narrative="The text file exists and the user has appropriate privileges to allow reading it" /><condition narrative="The Start Line argument is less than or equal to the End Line argument" /></preconditions><postconditions><condition narrative="The lines between and including Start Line and End Line are returned" /><condition narrative="EOF will indicate if the end of the file was reached before End Line was reached" /></postconditions><display x="-15" y="-135" /><inputs><input type="text" name="File Path" narrative="The file to read" stage="File Path" /><input type="number" name="Start Line" narrative="The first line to read" stage="Start Line" /><input type="number" name="End Line" narrative="The last line to read" stage="End Line" /><input type="text" name="File Encoding" narrative="Optional. Defaults to utf-8" stage="File Encoding" /><input type="flag" name="Use BOM" narrative="Optional. Flag indicating whether to use Byte Order Mark with a Unicode encoding. Default is False." stage="UseBOM" /></inputs><onsuccess>4942f615-9ff9-497d-b3ff-dd697860c232</onsuccess></stage><stage stageid="76661ec7-b5b7-4cf5-9b34-27ca45c70b40" name="Read Lines" type="Code"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="-45" w="90" h="30" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="number" name="Start Line" expr="[Start Line]" /><input type="number" name="End Line" expr="[End Line]" /><input type="text" name="File Encoding" expr="[File Encoding]" /><input type="flag" name="UseBOM" expr="[UseBOM]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Lines" stage="Lines" /><output type="number" name="Line Count" stage="Line Count" /><output type="flag" name="EOF" stage="EOF" /></outputs><onsuccess>7d20fad4-4b50-4841-94e9-5f38571de063</onsuccess><code><![CDATA[' Assume success
Success = True
Message = ""

Try
	Lines = New DataTable()
	Lines.Columns.Add("Line", GetType(String))

	Dim encoding As Encoding

	' This block of logic is for determining whether BOM should be used with a Unicode encoding and what the endianness should be.
	If (File_Encoding.Trim().ToLower() = "utf-8") Then
		If (UseBOM) Then
			encoding = New UTF8Encoding(True)
		Else
			encoding = New UTF8Encoding(False)
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "utf-16") Then
		If (UseBOM) Then
			encoding = New UnicodeEncoding(False, True )
		Else
			encoding = New UnicodeEncoding(False, False )
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "unicodefffe") Then
		If (UseBOM) Then
			encoding = New UnicodeEncoding(True, True)
		Else
			encoding = New UnicodeEncoding(True, False)
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "utf-32") Then
		If (UseBOM) Then
			encoding = New UTF32Encoding(False, True)
		Else
			encoding = New UTF32Encoding(False, False)
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "utf-32be") Then
		If (UseBOM) Then
			encoding = New UTF32Encoding(True, True)
		Else
			encoding = New UTF32Encoding(True, False)
		End If
	Else
		encoding = Encoding.GetEncoding(File_Encoding)
	End If

	Using sr As New StreamReader(File_Path, encoding)

		EOF = False
		Start_Line = Math.Max(1, Start_Line)

		Dim line as String
		Dim lineNo As Integer = 0
		Do
			line = sr.ReadLine()
			lineNo += 1

			If line Is Nothing Then EOF = True : Exit Do
			If lineNo >= Start_Line Then Lines.Rows.Add(line)
			If lineNo = End_Line Then Exit Do

		Loop Until line Is Nothing
		Line_Count = Lines.Rows.Count

	End Using

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try
]]></code></stage><stage stageid="bcb21a17-13b7-404f-b11f-16d75385411f" name="End" type="End"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="45" /><outputs><output type="flag" name="Success" narrative="True is the read was successful" stage="Success" /><output type="text" name="Message" narrative="The exception detail if the read was unsuccessful" stage="Message" /><output type="collection" name="Lines" narrative="The lines read - the collection contains a single text column 'Line'" stage="Lines" /><output type="number" name="Line Count" narrative="The number of lines read" stage="Line Count" /><output type="flag" name="End of File" narrative="True if the end of the file was reached before the 'End Line' was reached" stage="EOF" /></outputs></stage><stage stageid="4942f615-9ff9-497d-b3ff-dd697860c232" name="Start Line &gt; End Line?" type="Decision"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><decision expression="[Start Line] &gt; [End Line]" /><ontrue>fb13e8fc-442c-4cbb-87c1-b4ec596ee962</ontrue><onfalse>76661ec7-b5b7-4cf5-9b34-27ca45c70b40</onfalse></stage><stage stageid="fb13e8fc-442c-4cbb-87c1-b4ec596ee962" name="Semi-Exception" type="MultipleCalculation"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="105" y="-90" /><onsuccess>362c841e-8d1e-4972-b0b5-710b7bdb1f27</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Start Line (&quot; &amp; [Start Line] &amp; &quot;) cannot be later than End Line (&quot; &amp; [End Line] &amp; &quot;)&quot;" stage="Message" /></steps></stage><stage stageid="362c841e-8d1e-4972-b0b5-710b7bdb1f27" name="anchor1" type="Anchor"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><onsuccess>7d20fad4-4b50-4841-94e9-5f38571de063</onsuccess></stage><stage stageid="d049bf7c-ac22-489e-bf3d-f62d1b4b744a" name="Configure" type="SubSheetInfo"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><narrative>Configures this instance of the utility VBO. Calling it with no parameters will cause the configuration to be reset to default values.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1f64d939-b1af-4604-a33c-d730215d51aa" name="Start" type="Start"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="flag" name="Raise exception on any failure" narrative="Flag indicating if failure should cause an exception to be raised rather than a return of a success output value" stage="Raise exception on any failure" /></inputs><onsuccess>63f0aaf5-553d-43fd-b40d-6b3196b7c075</onsuccess></stage><stage stageid="63f0aaf5-553d-43fd-b40d-6b3196b7c075" name="End" type="End"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="9e00cf6f-bf06-484e-bcc5-5c0ea5f2dcf1" name="Raise exception on any failure" type="Data"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><display x="-195" y="-30" w="180" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="e8d8821c-ea33-4e7e-a499-9095f71ab91f" name="Raise Exception If Appropriate" type="SubSheetInfo"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="360a869a-24fc-4d19-abbe-b1444dd28c58" name="Start" type="Start"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" stage="Success" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" stage="Error Message" /></inputs><onsuccess>f72ef338-2cee-4c45-8a9a-31011244644f</onsuccess></stage><stage stageid="94d641fc-9887-40ca-8919-8613e5fafda0" name="End" type="End"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-15" /></stage><stage stageid="af41ccc8-b3bd-4925-84ba-5df075402e08" name="Success" type="Data"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd0e1bfa-b960-4e5e-b8e5-9a24adfd36e1" name="Error Message" type="Data"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f72ef338-2cee-4c45-8a9a-31011244644f" name="Should Raise Exception?" type="Decision"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><decision expression="[Success] = False AND [Raise exception on any failure]" /><ontrue>f42fee03-c39b-416a-b55f-3d69a9ebe812</ontrue><onfalse>94d641fc-9887-40ca-8919-8613e5fafda0</onfalse></stage><stage stageid="f42fee03-c39b-416a-b55f-3d69a9ebe812" name="FAIL" type="Exception"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="90" y="-60" w="30" h="30" /><exception type="Action Failed" detail="[Error Message]" /></stage><stage stageid="9cdf0f78-05d1-44d4-80a0-9f78ca0b22ae" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>3764ae17-85d7-4ebb-99b5-502b95d7abd6</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="3dde4f26-00a8-4e1a-af12-b8a14178d89c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>aa67216d-b83f-4c14-9f71-5ec6df626c08</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="060a1fdb-6243-40f1-96e0-1c0b54382bfa" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>e061382f-4149-485b-9668-f2fc0ca334bd</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="8db31208-966a-494a-9315-8a4add93c64c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-45" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>09677c01-2e36-4330-ae33-defa66a1e7b1</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="33ba9e06-b05b-4e51-baa6-7f6c9165c558" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-60" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>167ee595-8609-4b40-9cbb-70394613201b</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="d0021635-222d-46f1-93ad-a7435640cf9f" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>82b919fe-64b2-4c2b-8173-5706f671c5ce</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="249acd28-3283-498f-aca8-76c67cb2295c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>576295b9-757e-4588-948e-34aac5140c29</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="acf72cc7-cf73-466f-8c22-9fb633ed3c24" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>a7bae4fd-01fc-4447-8cf4-fbfd04353f72</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="acbc8cd8-d4ad-4eae-a7c3-ebbac1d3f4c7" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>2c8abe9a-1466-4283-999a-c5c7838a0e27</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="1e441202-3878-4eb6-b156-6f517be6de00" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>39862014-df78-414b-9ccd-5c0d392aa282</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="7419fb71-5c79-4fb6-9e59-b9fbc1d63e45" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>0a76495e-bc0d-4cea-bae0-85da1e15c74f</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="7d20fad4-4b50-4841-94e9-5f38571de063" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="0" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>bcb21a17-13b7-404f-b11f-16d75385411f</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="9219c3c4-effd-4dfc-9020-8dafd054ea8f" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="-45" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>1aab3a10-a813-470b-97c8-57938a0d0024</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="aed480e9-2938-4d36-b400-a3bd2580921a" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>709d1a16-f19e-4504-ae79-4a48d1e058c7</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="66ca6e8f-1361-4e22-886f-e00c72ac2250" name="Note2" type="Note"><narrative>© 2024 Blue Prism Limited
Licensed under Blue Prism Asset Terms for Modifiable Assets
https://portal.blueprism.com/agreements
</narrative><display x="225" y="-15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="37667e26-2e85-426f-9ba9-478373f1d354" name="Copy Directory" type="SubSheetInfo"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><narrative>Copies the contents of a directory to another directory.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="01991213-577c-46bb-bfc2-163abb45bf1e" name="Start" type="Start"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Source Directory" narrative="The directory to be copied." stage="Source Directory" /><input type="text" name="Destination Directory" narrative="The location to which the directory contents should be copied." stage="Destination Directory" /></inputs><onsuccess>69a0ae34-e52a-4a3b-8e8c-dff1469ffc71</onsuccess></stage><stage stageid="ad794f37-6935-48d3-a6e8-a6aea988108c" name="End" type="End"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><loginhibit /><display x="15" y="120" /><outputs><output type="flag" name="Success" narrative="Flag indicating success or failure of the action." stage="Success" /><output type="text" name="Message" narrative="If an error is encountered, this may hold additional information." stage="Message" /></outputs></stage><stage stageid="7841512a-3694-4ebe-b450-5dc5fd3425b1" name="Source Directory" type="Data"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ce49bd31-d4dc-4640-8963-ab6244f4a657" name="Destination Directory" type="Data"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f51724d8-0606-40b6-acf9-0a11328aa1a2" name="Input" type="Block"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ab93c2a2-7520-4db8-be89-da54991df7fb" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><loginhibit /><display x="15" y="75" w="90" h="30" /><inputs><input type="flag" name="Success" friendlyname="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" friendlyname="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>ad794f37-6935-48d3-a6e8-a6aea988108c</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="72b14320-c2dd-4a24-96b8-e5ed1cf72eff" name="Output" type="Block"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="484dc034-9d50-4f73-bcfd-c76e842f7e3e" name="Success" type="Data"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><loginhibit /><display x="-195" y="90" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="34a98b8f-9d03-4f0f-ab9a-8cbaeeff1bf1" name="Message" type="Data"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><loginhibit /><display x="-195" y="120" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e8d9685-7d0c-4387-99a3-39db3446d408" name="Copy Directory" type="Code"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><loginhibit /><display x="15" y="30" /><inputs><input type="text" name="sourceDirectoryName" expr="[Source Directory]" /><input type="text" name="destinationDirectoryName" expr="[Destination Directory]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>ab93c2a2-7520-4db8-be89-da54991df7fb</onsuccess><code><![CDATA[
Try
	My.Computer.FileSystem.CopyDirectory(sourceDirectoryName, destinationDirectoryName)
	Success = True
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try]]></code></stage><stage stageid="69a0ae34-e52a-4a3b-8e8c-dff1469ffc71" name="Directory Exists" type="SubSheet"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="Directory Name" friendlyname="Directory Name" narrative="The directory to check exists" expr="[Source Directory]" /></inputs><outputs><output type="flag" name="Exists" friendlyname="Exists" narrative="True if the directory exists" stage="Exists" /></outputs><onsuccess>f8ba6677-0ee8-46b8-bbaa-7f10f2a8eee8</onsuccess><processid>20e6a636-d89b-4c08-b90d-8852894005a4</processid></stage><stage stageid="ca16eca4-01cc-444c-b722-c63cd5fc2a83" name="Exists" type="Data"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><display x="-195" y="195" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d81b88c4-8527-4a6a-9b5e-ed7d468a02c2" name="Local" type="Block"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><loginhibit /><display x="-270" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="f8ba6677-0ee8-46b8-bbaa-7f10f2a8eee8" name="Source Exists?" type="Decision"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><loginhibit /><display x="15" y="-15" /><decision expression="[Exists]" /><ontrue>5e8d9685-7d0c-4387-99a3-39db3446d408</ontrue><onfalse>5b9e07c3-1105-47f0-8e69-3ba965f77423</onfalse></stage><stage stageid="5b9e07c3-1105-47f0-8e69-3ba965f77423" name="Set Output" type="MultipleCalculation"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><loginhibit /><display x="120" y="-15" /><onsuccess>9610e08b-5fec-4a8f-b3d7-97c2756bf7a0</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;The source directory does not exist.&quot;" stage="Message" /></steps></stage><stage stageid="9610e08b-5fec-4a8f-b3d7-97c2756bf7a0" name="Anchor1" type="Anchor"><subsheetid>c890e900-9dd0-4188-8acf-e888f9eac0d8</subsheetid><loginhibit /><display x="120" y="75" w="10" h="10" /><onsuccess>ab93c2a2-7520-4db8-be89-da54991df7fb</onsuccess></stage><stage stageid="3718ee2b-5afa-427f-a514-b3b2fe004339" name="Note1" type="Note"><loginhibit /><narrative>Version: 10.3.5</narrative><display x="15" y="-180" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="af2421c1-8454-4e28-9aed-b65dccc99684" name="Get CSV Text As Collection - Chunk" type="SubSheetInfo"><subsheetid>83f62e1e-a505-4c29-ae0c-fda5765f9381</subsheetid><narrative>Returns a number of rows (aka a "chunk") of data from a CSV file as a Blue Prism Collection.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="17c3ae0c-1d02-4054-b7c7-ff8f486cd9a4" name="Start" type="Start"><subsheetid>83f62e1e-a505-4c29-ae0c-fda5765f9381</subsheetid><loginhibit /><display x="-15" y="-135" /><inputs><input type="text" name="CSV File Path" narrative="The full path to the CSV file" stage="CSV Location" /><input type="flag" name="First Line Is Header" narrative="Set True if you want to treat the first line as a header" stage="First Line Is Header" /><input type="number" name="Starting Row" narrative="The row number where the reading of CSV data should begin." stage="Starting Row" /><input type="number" name="Chunk Size" narrative="The total number of rows to read in the chunk." stage="Chunk Size" /></inputs><onsuccess>567b7af2-12c8-4621-a142-81501a2b51ab</onsuccess></stage><stage stageid="024cce92-5a9c-4261-9b8e-5a6efa9abc3b" name="End" type="End"><subsheetid>83f62e1e-a505-4c29-ae0c-fda5765f9381</subsheetid><loginhibit /><display x="-15" y="-45" /><outputs><output type="collection" name="CSV Values" narrative="The collection populated with the values of the CSV file" stage="CSV Values" /><output type="number" name="Next Row Number" narrative="The number of the row following the chunk returned in the collection." stage="Next Row Number" /><output type="number" name="Number of Rows in Chunk" narrative="The number of rows in the current chunk." stage="Total Rows Read" /></outputs></stage><stage stageid="8a821572-9576-49fb-bc7d-8cc9bd2165ea" name="CSV Location" type="Data"><subsheetid>83f62e1e-a505-4c29-ae0c-fda5765f9381</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="567b7af2-12c8-4621-a142-81501a2b51ab" name="Parse CSV - Chunk" type="Code"><subsheetid>83f62e1e-a505-4c29-ae0c-fda5765f9381</subsheetid><loginhibit /><display x="-15" y="-90" w="90" h="30" /><inputs><input type="text" name="CSV Location" expr="[CSV Location]" /><input type="flag" name="First_Line_Is_Header" expr="[First Line Is Header]" /><input type="number" name="Starting Row" expr="[Starting Row]" /><input type="number" name="Chunk Size" expr="[Chunk Size]" /></inputs><outputs><output type="collection" name="Values" stage="CSV Values" /><output type="number" name="Next Row Number" stage="Next Row Number" /><output type="number" name="Total Rows Read" stage="Total Rows Read" /></outputs><onsuccess>024cce92-5a9c-4261-9b8e-5a6efa9abc3b</onsuccess><code><![CDATA[' Set the header flag.
Dim HDRString As String = "No"
If First_Line_Is_Header Then HDRSTring = "Yes"

' Get the file path and folder name as individual values.
Dim Folder as String = nothing
Dim FileName As String = Nothing
Split_Path(CSV_Location, Folder, Filename)

Dim rows As Int32
Dim dt as New DataTable()

Using cn As New OleDbConnection("Provider=Microsoft.ACE.OLEDB.12.0; Data Source=" & Folder & ";Extended Properties=""Text;HDR=" & HDRString & ";Format=Delimited""")
	Using cd As New OleDbCommand("SELECT * FROM [" & Filename & "]", cn)
		Using da As New OleDbDataAdapter(cd)
			cn.Open()
			rows = da.Fill(Starting_Row, Chunk_Size, dt)
			Next_Row_Number = Starting_Row + rows
		End Using
	End Using
End Using

Total_Rows_Read = rows
Values = dt
]]></code></stage><stage stageid="f3054097-f5cf-43e8-b128-d2b8998c4d52" name="CSV Values" type="Collection"><subsheetid>83f62e1e-a505-4c29-ae0c-fda5765f9381</subsheetid><display x="-195" y="150" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="248c508a-4e53-4a09-8633-01bece610125" name="First Line Is Header" type="Data"><subsheetid>83f62e1e-a505-4c29-ae0c-fda5765f9381</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="991475ee-c707-428a-95be-7c1e9d082852" name="Starting Row" type="Data"><subsheetid>83f62e1e-a505-4c29-ae0c-fda5765f9381</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86871b97-d667-4587-a3d5-a80c7509a2e9" name="Next Row Number" type="Data"><subsheetid>83f62e1e-a505-4c29-ae0c-fda5765f9381</subsheetid><display x="-195" y="180" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6580a52-8ab2-4454-b9ad-add7c84b96f0" name="Chunk Size" type="Data"><subsheetid>83f62e1e-a505-4c29-ae0c-fda5765f9381</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de49d4da-5240-41c2-acc4-358e2383dda2" name="Total Rows Read" type="Data"><subsheetid>83f62e1e-a505-4c29-ae0c-fda5765f9381</subsheetid><display x="-195" y="210" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a10f7e00-904f-43d3-873f-89564b66e163" name="Input" type="Block"><subsheetid>83f62e1e-a505-4c29-ae0c-fda5765f9381</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="CCFFFF" /></stage><stage stageid="54ad7f54-9613-4af5-a932-893eaa6d906d" name="Output" type="Block"><subsheetid>83f62e1e-a505-4c29-ae0c-fda5765f9381</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="3984cf85-4973-4129-829c-b87cdd7c4c63" name="Write Text Large Text File" type="SubSheetInfo"><subsheetid>978cf02e-a104-4f37-82cb-a40859ffa1f2</subsheetid><narrative>Writes text to a file. Any existing text in the file (if it exists) will be replaced. This option should work better for large amounts of data.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="fd3a4ee6-b135-41f0-a8c6-7d2450476fb4" name="Start" type="Start"><subsheetid>978cf02e-a104-4f37-82cb-a40859ffa1f2</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filename" narrative="The full path to the file to write the text to" stage="File Name" /><input type="text" name="Text" narrative="The text to write to the file" stage="Text" /><input type="text" name="File Encoding" narrative="Optional. Defaults to utf-8" stage="File Encoding" /><input type="flag" name="Use BOM" narrative="Optional. Flag indicating whether to use Byte Order Mark with a Unicoide encoding. Default is False." stage="UseBOM" /></inputs><onsuccess>d35d7903-9da8-4e28-a60c-ef88be59962f</onsuccess></stage><stage stageid="b7b3ac15-9557-4c90-a8a5-3cb4ef004d02" name="End" type="End"><subsheetid>978cf02e-a104-4f37-82cb-a40859ffa1f2</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="d35d7903-9da8-4e28-a60c-ef88be59962f" name="Write Text" type="Code"><subsheetid>978cf02e-a104-4f37-82cb-a40859ffa1f2</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /><input type="text" name="File Encoding" expr="[File Encoding]" /><input type="flag" name="UseBOM" expr="[UseBOM]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1e4ab048-c82a-420e-bb6c-1734041a1e35</onsuccess><code><![CDATA[Try
	Dim encoding As Encoding

	' This block of logic is for determining whether BOM should be used with a Unicode encoding and what the endianness should be.
	If (File_Encoding.Trim().ToLower() = "utf-8") Then
		If (UseBOM) Then
			encoding = New UTF8Encoding(True)
		Else
			encoding = New UTF8Encoding(False)
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "utf-16") Then
		If (UseBOM) Then
			encoding = New UnicodeEncoding(False, True )
		Else
			encoding = New UnicodeEncoding(False, False )
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "unicodefffe") Then
		If (UseBOM) Then
			encoding = New UnicodeEncoding(True, True)
		Else
			encoding = New UnicodeEncoding(True, False)
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "utf-32") Then
		If (UseBOM) Then
			encoding = New UTF32Encoding(False, True)
		Else
			encoding = New UTF32Encoding(False, False)
		End If
	ElseIf (File_Encoding.Trim().ToLower() = "utf-32be") Then
		If (UseBOM) Then
			encoding = New UTF32Encoding(True, True)
		Else
			encoding = New UTF32Encoding(True, False)
		End If
	Else
		encoding = Encoding.GetEncoding(File_Encoding)
	End If

	Using sw As StreamWriter = New StreamWriter(File_Name, False, encoding, 65536)
        sw.WriteLine(Text)
    End Using
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="1e4ab048-c82a-420e-bb6c-1734041a1e35" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>978cf02e-a104-4f37-82cb-a40859ffa1f2</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>b7b3ac15-9557-4c90-a8a5-3cb4ef004d02</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="37f8273c-7c3c-40da-8f19-62ae68a1191b" name="Success" type="Data"><subsheetid>978cf02e-a104-4f37-82cb-a40859ffa1f2</subsheetid><loginhibit /><display x="-195" y="120" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0ea9309b-c29f-4cd7-8370-e308e7fda8e4" name="Message" type="Data"><subsheetid>978cf02e-a104-4f37-82cb-a40859ffa1f2</subsheetid><loginhibit /><display x="-195" y="150" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df27f821-85d7-4961-891a-0bcb6f66ac4c" name="Text" type="Data"><subsheetid>978cf02e-a104-4f37-82cb-a40859ffa1f2</subsheetid><display x="-195" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="26e5b4b4-5546-46af-8168-da033f08c5f8" name="File Name" type="Data"><subsheetid>978cf02e-a104-4f37-82cb-a40859ffa1f2</subsheetid><display x="-195" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e3436985-e60f-4839-9a1f-0086e0721cd6" name="Read Binary Data" type="SubSheetInfo"><subsheetid>d70bb43c-a4e2-42ad-8969-407219268ebd</subsheetid><narrative>Reads binary data to a data item.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="68a9002b-a396-47a9-bca9-14bc89e1c45f" name="Start" type="Start"><subsheetid>d70bb43c-a4e2-42ad-8969-407219268ebd</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="File Name" narrative="The full path of the file to write to" stage="FileName" /></inputs><onsuccess>c7f097f1-3fe6-423f-8c76-5cd421233814</onsuccess></stage><stage stageid="b1155161-c741-4431-b42f-da1fbb887e94" name="Binary Data" type="Data"><subsheetid>d70bb43c-a4e2-42ad-8969-407219268ebd</subsheetid><display x="-150" y="-30" /><datatype>binary</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7f097f1-3fe6-423f-8c76-5cd421233814" name="Read Binary Data" type="Code"><subsheetid>d70bb43c-a4e2-42ad-8969-407219268ebd</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="FileName" expr="[FileName]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="binary" name="Binary_Data" stage="Binary Data" /></outputs><onsuccess>59d3351e-0f24-4b75-b5a2-21c8ec632168</onsuccess><code><![CDATA[Try
	Binary_Data = File.ReadAllBytes(FileName)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="ab3e44d4-c7d5-4f69-b2c6-a70410fa9506" name="End" type="End"><subsheetid>d70bb43c-a4e2-42ad-8969-407219268ebd</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="binary" name="Binary_Data" narrative="The output binary data." stage="Binary Data" /></outputs></stage><stage stageid="7507091a-f3d8-4ca6-bb8d-9464c30f0054" name="Success" type="Data"><subsheetid>d70bb43c-a4e2-42ad-8969-407219268ebd</subsheetid><loginhibit /><display x="-240" y="30" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5bc33f8b-0d28-4748-ac47-ce35c8028915" name="Message" type="Data"><subsheetid>d70bb43c-a4e2-42ad-8969-407219268ebd</subsheetid><loginhibit /><display x="-150" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ab6a1598-0310-481d-9195-06fc05ff0703" name="FileName" type="Data"><subsheetid>d70bb43c-a4e2-42ad-8969-407219268ebd</subsheetid><display x="-225" y="-30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59d3351e-0f24-4b75-b5a2-21c8ec632168" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d70bb43c-a4e2-42ad-8969-407219268ebd</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>ab3e44d4-c7d5-4f69-b2c6-a70410fa9506</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="fd5c95b2-2234-48d2-8aaf-42654f14b5c1" name="Get FileInfo" type="SubSheetInfo"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="87e4c5f1-6d2e-4800-9350-a64eec48e187" name="Start" type="Start"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filepath" stage="Filepath" /></inputs><onsuccess>67c4a2b5-9057-42d6-a466-30496a28be3a</onsuccess></stage><stage stageid="81c87c4b-195e-4bb9-ac80-4cc55da7955d" name="End" type="End"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="DirectoryName" stage="DirectoryName" /><output type="number" name="Length" stage="Length" /><output type="flag" name="IsReadOnly" stage="IsReadOnly" /><output type="text" name="FileExtension" stage="FileExtension" /><output type="datetime" name="CreationTime" stage="CreationTime" /><output type="datetime" name="CreationTimeUTC" stage="CreationTimeUTC" /><output type="datetime" name="LastWriteTime" stage="LastWriteTime" /><output type="datetime" name="LastWriteTimeUTC" stage="LastWriteTimeUtc" /><output type="datetime" name="LastAccessTime" stage="LastAccessTime" /><output type="datetime" name="LastAccessTimeUTC" stage="LastAccessTimeUtc" /></outputs></stage><stage stageid="67c4a2b5-9057-42d6-a466-30496a28be3a" name="Get File Info" type="Code"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="FilePath" expr="[Filepath]" /></inputs><outputs><output type="text" name="FileExtension" stage="FileExtension" /><output type="datetime" name="CreationTime" stage="CreationTime" /><output type="datetime" name="CreationTimeUTC" stage="CreationTimeUTC" /><output type="text" name="DirectoryName" stage="DirectoryName" /><output type="flag" name="IsReadOnly" stage="IsReadOnly" /><output type="datetime" name="LastAccessTime" stage="LastAccessTime" /><output type="datetime" name="LastAccessTimeUtc" stage="LastAccessTimeUtc" /><output type="datetime" name="LastWriteTime" stage="LastWriteTime" /><output type="datetime" name="LastWriteTimeUtc" stage="LastWriteTimeUtc" /><output type="number" name="Length" stage="Length" /></outputs><onsuccess>81c87c4b-195e-4bb9-ac80-4cc55da7955d</onsuccess><code><![CDATA[Dim fi as new FileInfo(FilePath)

FileExtension = fi.Extension.Substring(1)
If File.Exists(FilePath) then
	CreationTime = fi.CreationTime
	CreationTimeUTC = fi.CreationTimeUtc
	DirectoryName = fi.DirectoryName
	IsReadOnly = fi.IsReadOnly
	LastAccessTime = fi.LastAccessTime
	LastAccessTimeUtc = fi.LastAccessTimeUtc
	LastWriteTime = fi.LastWriteTime
	LastWriteTimeUtc = fi.LastWriteTimeUtc
	Length = fi.Length
else
	CreationTime = DateTime.MinValue
	CreationTimeUTC = DateTime.MinValue
	DirectoryName = String.Empty
	IsReadOnly = False
	LastAccessTime = DateTime.MinValue
	LastAccessTimeUtc = DateTime.MinValue
	LastWriteTime = DateTime.MinValue
	LastWriteTimeUtc = DateTime.MinValue
	Length = 0
End If



]]></code></stage><stage stageid="33d7e1ea-2118-4122-b9c2-1bbfccb3c0fd" name="Filepath" type="Data"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><display x="-195" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ae8e516-0ea7-4edc-9fe0-d61ada7339f3" name="FileExtension" type="Data"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><display x="-150" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0836c89b-bc0c-4037-a8b1-6fae9d696d7f" name="CreationTime" type="Data"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><display x="-240" y="150" w="90" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="42d1aa7c-ace9-471f-882f-6e19c2e6386b" name="CreationTimeUTC" type="Data"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><display x="-150" y="150" w="90" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff2d3eb1-face-4bc8-b377-3dd7938de142" name="DirectoryName" type="Data"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><display x="-240" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="12a91849-f0f7-4eb8-aa2c-ccd6fa108d8f" name="IsReadOnly" type="Data"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><display x="-240" y="105" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="899fbb3d-448e-4b64-9675-821da896e410" name="LastAccessTime" type="Data"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><display x="-240" y="240" w="90" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="35c8fbd5-9bb3-45a3-9bbd-dfe0069593b3" name="LastAccessTimeUtc" type="Data"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><display x="-150" y="195" w="90" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3216c4a-b099-4bca-84be-57080a1c56b2" name="LastWriteTime" type="Data"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><display x="-240" y="195" w="90" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4fe242e0-33c6-4ed2-b27e-451e1e871351" name="LastWriteTimeUtc" type="Data"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><display x="-150" y="240" w="90" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0acb7c51-389b-4cd4-80f7-746b4caf5517" name="Length" type="Data"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><display x="-150" y="60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cbf8d979-fe9f-4f1e-bbe2-368f8e01dfa4" name="Outputs" type="Block"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><loginhibit /><display x="-300" y="30" w="210" h="240" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="af210095-c094-4229-9834-dbd9217bcb34" name="Inputs" type="Block"><subsheetid>dd791081-408f-47c8-a372-c83598db1093</subsheetid><loginhibit /><display x="-285" y="-45" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="caf4207a-72ed-4bd4-9339-d608c58e1467" name="File Encoding" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">utf-8</initialvalue><private /><alwaysinit /></stage><stage stageid="b3e22d26-261d-4db6-9689-e82cc59e9ca7" name="File Encoding" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">utf-8</initialvalue><private /><alwaysinit /></stage><stage stageid="6416af77-fedf-4f81-8007-53cd53799169" name="File Encoding" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">utf-8</initialvalue><private /><alwaysinit /></stage><stage stageid="6173bd5f-ac70-4fae-9803-e94a8a1450ec" name="File Encoding" type="Data"><subsheetid>978cf02e-a104-4f37-82cb-a40859ffa1f2</subsheetid><display x="-195" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">utf-8</initialvalue><private /><alwaysinit /></stage><stage stageid="201b4c52-1f87-45c0-ac6f-4157d6689243" name="File Encoding" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">utf-8</initialvalue><private /><alwaysinit /></stage><stage stageid="1dec7714-2f04-41a2-b082-0f9728e97589" name="File Search" type="SubSheetInfo"><subsheetid>fac88315-ccef-4e72-b044-d98848b6bfe1</subsheetid><narrative>Searches the specified folder tree for files that match the input criteria.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a0ebadf7-e00f-49b0-8f7e-406feacf379a" name="Start" type="Start"><subsheetid>fac88315-ccef-4e72-b044-d98848b6bfe1</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Path" narrative="The relative or absolute path to the directory to search. This string is not case-sensitive." stage="Path" /><input type="text" name="Search Pattern" narrative="The search string to match against the names of files in 'Path'. This parameter can contain a combination of valid literal path and wildcard (* and ?) characters, but it doesn't support regular expressions." stage="Search Pattern" /><input type="flag" name="Incude Subfolders" narrative="A flag indicating that subfolders should also be searched. Otherwise, only the folder specified in 'Path' is searched. Default value is False." stage="Incude Subfolders" /></inputs><onsuccess>23ac0cf4-753b-4add-b923-ef17353fbdc1</onsuccess></stage><stage stageid="e3a74c6d-6680-4e32-986d-0c451288e1ac" name="End" type="End"><subsheetid>fac88315-ccef-4e72-b044-d98848b6bfe1</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="collection" name="Files" narrative="A Collection of files that matched the input search criteria." stage="Files" /></outputs></stage><stage stageid="ca3bc2c3-253f-4d43-8f0b-3a7acb57dc6a" name="Path" type="Data"><subsheetid>fac88315-ccef-4e72-b044-d98848b6bfe1</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8d430c27-8a6e-4a55-b0d4-c9f8b664af2f" name="Search Pattern" type="Data"><subsheetid>fac88315-ccef-4e72-b044-d98848b6bfe1</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3bbef47-3987-4c3d-ba72-ca9a6912bc4f" name="Incude Subfolders" type="Data"><subsheetid>fac88315-ccef-4e72-b044-d98848b6bfe1</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9de2a7a3-e90f-4e61-93fb-2122140ef9c6" name="Input" type="Block"><subsheetid>fac88315-ccef-4e72-b044-d98848b6bfe1</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8393d9a5-8089-4741-a5c7-cf66d0062b79" name="Output" type="Block"><subsheetid>fac88315-ccef-4e72-b044-d98848b6bfe1</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="980b8b75-3568-489f-a916-5c9f62b6d2aa" name="Local" type="Block"><subsheetid>fac88315-ccef-4e72-b044-d98848b6bfe1</subsheetid><loginhibit /><display x="-270" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="815168ad-944f-48be-a4e6-05d3788a6f94" name="Files" type="Collection"><subsheetid>fac88315-ccef-4e72-b044-d98848b6bfe1</subsheetid><loginhibit /><display x="-195" y="120" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="File" type="text" description="A fully qualified file name." /></collectioninfo></stage><stage stageid="23ac0cf4-753b-4add-b923-ef17353fbdc1" name="Validate Input" type="Decision"><subsheetid>fac88315-ccef-4e72-b044-d98848b6bfe1</subsheetid><loginhibit /><display x="15" y="-45" /><decision expression="(Len(Trim([Path])) &gt; 0) AND (Len(Trim([Search Pattern])) &gt; 0)" /><ontrue>daf2e070-cffd-4fdb-840c-1b9a04ca4557</ontrue><onfalse>4027b62d-3d83-408d-a273-a9636b4c64f1</onfalse></stage><stage stageid="daf2e070-cffd-4fdb-840c-1b9a04ca4557" name="File Search" type="Code"><subsheetid>fac88315-ccef-4e72-b044-d98848b6bfe1</subsheetid><loginhibit /><display x="15" y="15" /><inputs><input type="text" name="Path" expr="[Path]" /><input type="text" name="SearchPattern" expr="[Search Pattern]" /><input type="flag" name="IncludeSubfolders" expr="[Incude Subfolders]" /></inputs><outputs><output type="collection" name="Matches" stage="Files" /></outputs><onsuccess>e3a74c6d-6680-4e32-986d-0c451288e1ac</onsuccess><code><![CDATA[Matches = New DataTable()
Matches.Columns.Add("File", GetType(String))

Try
	Dim MatchedFiles = Directory.EnumerateFiles(Path, SearchPattern, IIf (IncludeSubfolders = True, SearchOption.AllDirectories, SearchOption.TopDirectoryOnly))

	For Each currentFile As String In MatchedFiles
		Matches.Rows.Add(currentFile)
	Next

Catch ex As Exception

End Try
]]></code></stage><stage stageid="4027b62d-3d83-408d-a273-a9636b4c64f1" name="Invalid Input" type="Exception"><subsheetid>fac88315-ccef-4e72-b044-d98848b6bfe1</subsheetid><display x="120" y="-45" /><exception localized="yes" type="Invalid Input Parameter" detail="&quot;Please review and correct your input. A valid 'Path' and 'Search Pattern' must be provided.&quot;" /></stage><stage stageid="dabe1a4d-5072-48ac-89a8-6cc2b0612556" name="Get Checksum" type="SubSheetInfo"><subsheetid>40c9ce0e-5070-49e9-82fb-91a8d218142c</subsheetid><narrative>Calculates the MD5 checksum for the specified file.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="3a50dee6-fa66-40e6-ac79-adf453506b15" name="Start" type="Start"><subsheetid>40c9ce0e-5070-49e9-82fb-91a8d218142c</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="File" narrative="The fully qualified path and name of the file." stage="File" /></inputs><onsuccess>3931fed3-8d70-44e1-ad20-0a7d6a879bb2</onsuccess></stage><stage stageid="492aa253-e7ba-4652-a8bd-b8b9d14589bd" name="End" type="End"><subsheetid>40c9ce0e-5070-49e9-82fb-91a8d218142c</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="text" name="Checksum" narrative="The computed MD5 checksum for the supplied file. If the value is empty, there was an error calculating the checksum. Please verify the file input." stage="Checksum" /></outputs></stage><stage stageid="d2f8d619-21ba-4347-9353-266e1de4cdb8" name="File" type="Data"><subsheetid>40c9ce0e-5070-49e9-82fb-91a8d218142c</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f8bb40bb-8ab8-4b31-ad28-e74a0768d329" name="Calculate Checksum" type="Code"><subsheetid>40c9ce0e-5070-49e9-82fb-91a8d218142c</subsheetid><loginhibit /><display x="15" y="15" /><inputs><input type="text" name="filename" expr="[File]" /></inputs><outputs><output type="text" name="checksum" stage="Checksum" /></outputs><onsuccess>492aa253-e7ba-4652-a8bd-b8b9d14589bd</onsuccess><code><![CDATA[checksum = ""

Using md5 As MD5 = MD5.Create()
	Using stream = File.OpenRead(filename)
		Dim hash = md5.ComputeHash(stream)
		Dim stringBuilder = New System.Text.StringBuilder()
		For Each x In hash
			stringBuilder.Append(x.ToString("x2").ToLower())
		Next
		checksum = stringBuilder.ToString()
	End Using
End Using
]]></code></stage><stage stageid="76be1cb1-b71d-4040-9192-f99fcba04c19" name="Checksum" type="Data"><subsheetid>40c9ce0e-5070-49e9-82fb-91a8d218142c</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3931fed3-8d70-44e1-ad20-0a7d6a879bb2" name="Filename?" type="Decision"><subsheetid>40c9ce0e-5070-49e9-82fb-91a8d218142c</subsheetid><loginhibit /><narrative>Verify a filename was provided.</narrative><display x="15" y="-45" /><decision expression="Len(Trim([File])) &gt; 0" /><ontrue>f8bb40bb-8ab8-4b31-ad28-e74a0768d329</ontrue><onfalse>ed12613f-75ec-48da-9d8c-0d2f2b65cf2e</onfalse></stage><stage stageid="ed12613f-75ec-48da-9d8c-0d2f2b65cf2e" name="Set Empty" type="Calculation"><subsheetid>40c9ce0e-5070-49e9-82fb-91a8d218142c</subsheetid><loginhibit /><display x="105" y="-45" /><onsuccess>469719bb-4a98-4190-9187-4b86468067b5</onsuccess><calculation expression="&quot;&quot;" stage="Checksum" /></stage><stage stageid="469719bb-4a98-4190-9187-4b86468067b5" name="Anchor2" type="Anchor"><subsheetid>40c9ce0e-5070-49e9-82fb-91a8d218142c</subsheetid><loginhibit /><display x="105" y="75" w="10" h="10" /><onsuccess>492aa253-e7ba-4652-a8bd-b8b9d14589bd</onsuccess></stage><stage stageid="7f27abd6-a618-4f9e-bb61-641f132b0470" name="Input" type="Block"><subsheetid>40c9ce0e-5070-49e9-82fb-91a8d218142c</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="699c1140-3f45-49fe-a84f-46419ccb2400" name="Output" type="Block"><subsheetid>40c9ce0e-5070-49e9-82fb-91a8d218142c</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="246cf3c6-ad81-4e99-abe3-34e0ede1eebf" name="Local" type="Block"><subsheetid>40c9ce0e-5070-49e9-82fb-91a8d218142c</subsheetid><loginhibit /><display x="-270" y="105" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="3f47b1fc-1c45-4c71-8d9c-4fbc149f320e" name="UseBOM" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f3aac278-e040-417d-a135-d4334a569705" name="UseBOM" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="6c64b86c-a555-4056-9ea5-66ecc337432b" name="UseBOM" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c32a5c3a-ca80-4278-8ffc-d27f80d2673c" name="UseBOM" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-195" y="60" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="fba6bdb4-dd4c-44bd-a3fb-dc85730dffd6" name="UseBOM" type="Data"><subsheetid>978cf02e-a104-4f37-82cb-a40859ffa1f2</subsheetid><display x="-195" y="75" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7bdecae0-a97f-4945-87c4-c98b305dffe6" name="Check Input" type="Decision"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="-90" /><decision expression="(Len(Trim([Folder])) &gt; 0) AND (Len(Trim([Pattern])) &gt; 0)" /><ontrue>202c81a6-fd90-46ed-9eee-73c24863b69b</ontrue><onfalse>f7d25fb0-eeb0-4d94-af8a-249bb96714eb</onfalse></stage><stage stageid="f7d25fb0-eeb0-4d94-af8a-249bb96714eb" name="Set Error" type="MultipleCalculation"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="105" y="-90" /><onsuccess>2ae857f8-caa6-4d39-9cbf-f6a752c93d47</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;You must provide values for Folder and Pattern.&quot;" stage="Message" /></steps></stage><stage stageid="2ae857f8-caa6-4d39-9cbf-f6a752c93d47" name="Anchor3" type="Anchor"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><onsuccess>d0021635-222d-46f1-93ad-a7435640cf9f</onsuccess></stage><stage stageid="07943bb6-df9a-48f8-9f3c-db87f5e21742" name="Check Input" type="Decision"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Len(Trim([File Name])) &gt; 0" /><ontrue>b6262d8e-0c7b-459d-b177-37ae4d226ddf</ontrue><onfalse>477390d4-f764-4d44-a975-120ea1909dd8</onfalse></stage><stage stageid="477390d4-f764-4d44-a975-120ea1909dd8" name="Set Error" type="MultipleCalculation"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="105" y="-60" /><onsuccess>24a8ff09-2ac8-4e63-bbed-e3005a702bd4</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;You must provide a value for File Name.&quot;" stage="File Name" /></steps></stage><stage stageid="24a8ff09-2ac8-4e63-bbed-e3005a702bd4" name="Anchor4" type="Anchor"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="105" y="30" w="10" h="10" /><onsuccess>249acd28-3283-498f-aca8-76c67cb2295c</onsuccess></stage><stage stageid="cd89250a-19e0-4fdf-af53-b20aee4f6a17" name="Case Sensitive Search" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage></process></object>
        <object id="88d28317-a894-42e7-b45c-abe265af61ce" name="Utility - Foreground Locker" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Foreground Locker" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="Controls access to foreground operations by providing a locking mechanism" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>39df7fdf-f935-430d-b087-fc08039e36a0</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="- Requires the Utility - Locking VBO." /></preconditions><endpoint narrative="" /><subsheet subsheetid="61114d9e-13f2-4fad-bfb5-4a1975e731f4" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e76e12db-361a-43d0-9b04-13bc9ce2162f" type="Normal" published="False"><name>Overview</name><view><camerax>0</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="59019d20-d12a-4725-9721-8dad1e952c11" type="Normal" published="False"><name>Set Up Master Key</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f40a9168-d73c-43ef-abc0-e269b4b0e992" type="Normal" published="True"><name>Lock Foreground</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7a999ee6-140f-462d-964e-446debef89e2" type="Normal" published="True"><name>Release Foreground Lock</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="fd9f6a6b-8dc2-4036-a978-72263497bdaa" name="Start" type="Start"><loginhibit /><display x="15" y="-240" /><onsuccess>cf562934-8d9b-4de7-81c5-2dcd3653bd2f</onsuccess></stage><stage stageid="ce5b2570-bd06-4537-8677-e89987af3159" name="End" type="End"><loginhibit /><display x="15" y="165" /></stage><stage stageid="afe72005-0746-41d8-96c4-e490bd32aedc" name="Stage1" type="ProcessInfo"><display x="-195" y="-240" w="150" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[

]]></globalcode><code><![CDATA[

]]></code></stage><stage stageid="23f8ad6c-4a17-456f-aa49-218b48f086bf" name="Clean Up" type="SubSheetInfo"><subsheetid>61114d9e-13f2-4fad-bfb5-4a1975e731f4</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c5b752f8-3115-4e90-8d15-9faf2150e4df" name="Start" type="Start"><subsheetid>61114d9e-13f2-4fad-bfb5-4a1975e731f4</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>924bee34-4d20-496d-b7c2-9e7b533b540c</onsuccess></stage><stage stageid="924bee34-4d20-496d-b7c2-9e7b533b540c" name="End" type="End"><subsheetid>61114d9e-13f2-4fad-bfb5-4a1975e731f4</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="18fffa33-9ffe-4ecd-b236-bfbbf088e9a4" name="Lock Foreground" type="SubSheetInfo"><subsheetid>f40a9168-d73c-43ef-abc0-e269b4b0e992</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d4a6ad5a-5b79-4fd0-852f-0944b85c3fba" name="Start" type="Start"><subsheetid>f40a9168-d73c-43ef-abc0-e269b4b0e992</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="timespan" name="Timeout" narrative="The timeout " stage="Timeout" /></inputs><onsuccess>9c60978a-68d2-4812-954d-21a8ffad59eb</onsuccess></stage><stage stageid="7ab69f85-6478-414b-bbbe-f85afaaf07a3" name="End" type="End"><subsheetid>f40a9168-d73c-43ef-abc0-e269b4b0e992</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="a26a272e-f867-41f6-9c43-16b132a1b347" name="new" type="Note"><subsheetid>61114d9e-13f2-4fad-bfb5-4a1975e731f4</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="9c60978a-68d2-4812-954d-21a8ffad59eb" name="Lock" type="Action"><subsheetid>f40a9168-d73c-43ef-abc0-e269b4b0e992</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="text" name="Item Key" expr="[Foreground Lock For This Resource]" /><input type="timespan" name="Timeout" expr="[Timeout]" /></inputs><onsuccess>7ab69f85-6478-414b-bbbe-f85afaaf07a3</onsuccess><resource object="Utility - Locking" action="Lock Item" /></stage><stage stageid="0192fbd9-907d-484d-8e29-9034faafd0a5" name="Release Foreground Lock" type="SubSheetInfo"><subsheetid>7a999ee6-140f-462d-964e-446debef89e2</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="06d54752-a9f4-4c20-9911-df2f1ad5ff25" name="Start" type="Start"><subsheetid>7a999ee6-140f-462d-964e-446debef89e2</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="flag" name="Error If Not Locked" narrative="Indicates whether an exception should be thrown if the foreground is not locked" stage="Error If Not Locked" /></inputs><onsuccess>e5235bdf-ff57-4020-a9e4-97e4fe67d8d1</onsuccess></stage><stage stageid="b59391d7-81e0-4bfe-aaea-45fe8a963480" name="End" type="End"><subsheetid>7a999ee6-140f-462d-964e-446debef89e2</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="e5235bdf-ff57-4020-a9e4-97e4fe67d8d1" name="Release" type="Action"><subsheetid>7a999ee6-140f-462d-964e-446debef89e2</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="text" name="Item Key" narrative="The key of the item to be unlocked." expr="[Foreground Lock For This Resource]" /><input type="flag" name="Error If Not Locked" narrative="Indicates whether an exception should be thrown if the specified item is not locked" expr="[Error If Not Locked]" /></inputs><onsuccess>b59391d7-81e0-4bfe-aaea-45fe8a963480</onsuccess><resource object="Utility - Locking" action="Release Lock" /></stage><stage stageid="b03db9c9-39e9-4958-8f9c-931ead033beb" name="Error If Not Locked" type="Data"><subsheetid>7a999ee6-140f-462d-964e-446debef89e2</subsheetid><display x="90" y="-105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a2fa4ae6-e62e-4280-b7c1-d38798f7fcc0" name="Overview" type="SubSheetInfo"><subsheetid>e76e12db-361a-43d0-9b04-13bc9ce2162f</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="60580345-e73d-4a94-b102-def07e750eae" name="Start" type="Start"><subsheetid>e76e12db-361a-43d0-9b04-13bc9ce2162f</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>911aecf2-9832-4245-b99d-8c04b7e41b1e</onsuccess></stage><stage stageid="911aecf2-9832-4245-b99d-8c04b7e41b1e" name="End" type="End"><subsheetid>e76e12db-361a-43d0-9b04-13bc9ce2162f</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="31ab2245-b34a-4e4a-bbd5-bda030b464fb" name="Note1" type="Note"><subsheetid>e76e12db-361a-43d0-9b04-13bc9ce2162f</subsheetid><loginhibit /><narrative>- OVERVIEW - 

This object is designed to control access to "foreground" operations by two processes requiring global mouse clicks and such.

It works by automatically creating a queue item key on the current machine. Thus at runtime there will be one queue item per resource PC.

To prevent a possible race condition in which two processes create duplicate locks on the same machine, a master lock is obtained in order to have the right to create a new queue item. This master lock is shared by all machines.</narrative><display x="210" y="-60" w="270" h="240" /></stage><stage stageid="b6806a5b-4ba2-4fd6-a412-b139b918d676" name="Note1" type="Note"><subsheetid>e76e12db-361a-43d0-9b04-13bc9ce2162f</subsheetid><loginhibit /><narrative>- SETUP - 

Import the Locking business object used by this process.

Set up the queue expected by that business object.

Use this business object it to create a unique "Foreground Master Lock" key - see the appropriate page in this object.

Use this business object by peppering it around your business objects. Respect the "try-finally" approach by always releasing any foreground lock that your page has obtained.

Your business objects can be marked as "background" provided you implement your locking properly.</narrative><display x="210" y="195" w="270" h="240" /></stage><stage stageid="ab47a353-e238-48df-9df1-ec203a834cb0" name="Ensure Queue Item Exists For This Resource" type="Action"><loginhibit /><display x="15" y="45" w="120" h="60" /><inputs><input type="text" name="Item Key" narrative="The item key of the queue item to be created" expr="[Foreground Lock For This Resource]" /><input type="flag" name="Ignore If Exists" narrative="When true, no action will be taken if the item already exists. Otherwise an exception will be thrown." expr="True" /></inputs><onsuccess>9159bccb-c8f5-4136-9832-7242da1784fe</onsuccess><resource object="Utility - Locking" action="Set Up Queue Item" /></stage><stage stageid="dbd73bf9-7c61-4aca-8b76-114da4a7ce76" name="Foreground Lock For This Resource" type="Data"><loginhibit /><display x="210" y="165" w="210" h="30" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="25ef5771-771f-431c-ae7c-7fb5fd308922" name="Decide Key Based On Resource Name" type="Calculation"><loginhibit /><display x="15" y="-45" w="120" h="60" /><onsuccess>ab47a353-e238-48df-9df1-ec203a834cb0</onsuccess><calculation expression="Left(&quot;FG Lock - &quot; &amp; [Resource Name], 30)" stage="Foreground Lock For This Resource" /></stage><stage stageid="cf562934-8d9b-4de7-81c5-2dcd3653bd2f" name="Lock Master Key" type="Action"><loginhibit /><display x="15" y="-180" /><inputs><input type="text" name="Item Key" expr="[Master Lock Key Item]" /><input type="timespan" name="Timeout" expr="MakeTimeSpan(0,0,1,0,0)" /></inputs><onsuccess>4a0a15e7-9d46-4888-aeac-245f144c40e9</onsuccess><resource object="Utility - Locking" action="Lock Item" /></stage><stage stageid="da76554d-e098-4906-8724-26392d2c15f8" name="Master Lock Key Item" type="Data"><loginhibit /><display x="180" y="-180" w="210" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Foreground Locking Master Key</initialvalue><alwaysinit /></stage><stage stageid="9159bccb-c8f5-4136-9832-7242da1784fe" name="Release Master Key" type="Action"><loginhibit /><display x="15" y="105" /><inputs><input type="text" name="Item Key" narrative="The key of the item to be unlocked." expr="[Master Lock Key Item]" /><input type="flag" name="Error If Not Locked" narrative="Indicates whether an exception should be thrown if the specified item is not locked" expr="False" /></inputs><onsuccess>ce5b2570-bd06-4537-8677-e89987af3159</onsuccess><resource object="Utility - Locking" action="Release Lock" /></stage><stage stageid="0569c9b3-b85f-460f-8090-fd59cb464856" name="Recover1" type="Recover"><loginhibit /><display x="180" y="60" /><onsuccess>06b2785e-65e8-445e-9a5d-f5934cd28b56</onsuccess></stage><stage stageid="06b2785e-65e8-445e-9a5d-f5934cd28b56" name="Resume1" type="Resume"><loginhibit /><display x="180" y="105" /><onsuccess>9159bccb-c8f5-4136-9832-7242da1784fe</onsuccess></stage><stage stageid="da84a764-4d04-49fa-bee9-3d67d3b7b53a" name="Set Up Master Key" type="SubSheetInfo"><subsheetid>59019d20-d12a-4725-9721-8dad1e952c11</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6c7467b5-9374-4ea0-8075-80f4b2c0a758" name="Start" type="Start"><subsheetid>59019d20-d12a-4725-9721-8dad1e952c11</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>b7ca0c89-877b-447b-ac49-cd70ddb17514</onsuccess></stage><stage stageid="b243a25a-2eb4-4a26-b804-fa32201dfd57" name="End" type="End"><subsheetid>59019d20-d12a-4725-9721-8dad1e952c11</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="b7ca0c89-877b-447b-ac49-cd70ddb17514" name="Set Up Master Key" type="Action"><subsheetid>59019d20-d12a-4725-9721-8dad1e952c11</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Item Key" narrative="The item key of the queue item to be created" expr="[Master Lock Key Item]" /><input type="flag" name="Ignore If Exists" narrative="When true, no action will be taken if the item already exists. Otherwise an exception will be thrown." expr="True" /></inputs><onsuccess>b243a25a-2eb4-4a26-b804-fa32201dfd57</onsuccess><resource object="Utility - Locking" action="Set Up Queue Item" /></stage><stage stageid="614580a0-bf30-4db9-acb7-ef8f4b9319b0" name="Note2" type="Note"><subsheetid>59019d20-d12a-4725-9721-8dad1e952c11</subsheetid><loginhibit /><narrative>Private page for setup

Run once only on each database - not needed for each machine. Further per-machine keys are created automatically on the fly.</narrative><display x="180" y="-15" w="120" h="90" /></stage><stage stageid="7d81d9fb-8fa5-4c2b-9af8-6cf0a0c22a6f" name="Timeout" type="Data"><subsheetid>f40a9168-d73c-43ef-abc0-e269b4b0e992</subsheetid><display x="90" y="-105" /><datatype>timespan</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea4e1a60-f68c-43d3-aeae-71ad16f8b73c" name="Get Resource Name" type="Calculation"><loginhibit /><display x="135" y="-120" w="90" h="30" /><onsuccess>25ef5771-771f-431c-ae7c-7fb5fd308922</onsuccess><calculation expression="GetResourceName()" stage="Resource Name" /></stage><stage stageid="a3aa9026-6c07-4ca6-8d64-4cda91d8bb1b" name="Note3" type="Note"><loginhibit /><narrative>Bug 5029 means that GetResourceName() does not work</narrative><display x="300" y="-120" w="180" h="30" /><onsuccess>ea4e1a60-f68c-43d3-aeae-71ad16f8b73c</onsuccess></stage><stage stageid="65804118-1e81-4ef4-a7b4-7cd1d6fd9aa9" name="Resource Name" type="Data"><display x="-75" y="-120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a0a15e7-9d46-4888-aeac-245f144c40e9" name="Get Resource Name" type="Code"><loginhibit /><display x="15" y="-120" w="90" h="30" /><outputs><output type="text" name="Resource Name" stage="Resource Name" /></outputs><onsuccess>25ef5771-771f-431c-ae7c-7fb5fd308922</onsuccess><code><![CDATA[Resource_Name = Environment.MachineName()]]></code></stage><stage stageid="99d9c90a-236c-4e7c-81d7-ea387034dca6" name="Note4" type="Note"><loginhibit /><narrative>Version 10.0</narrative><display x="15" y="-300" w="90" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="c27ce57c-bf91-45db-890d-fe8cfd01bfac" name="Note2" type="Note"><narrative>© 2024 Blue Prism Limited
Licensed under Blue Prism Asset Terms for Modifiable Assets
https://portal.blueprism.com/agreements
</narrative><display x="-315" y="-75" w="330" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage></process></object>
        <object id="bf926e5b-5a53-4629-bf02-31a58a120117" name="Utility - General" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - General" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="General utility functions which don't fit into specific categories" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>1f3e584e-cb89-48ad-bd40-602968bdf4b9</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="177b593b-1118-4903-802c-d939d96ab07d" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="59cd9346-b5d1-4acb-ba11-68ee084fb577" type="Normal" published="True"><name>Click X,Y</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="812d80d2-5be4-4ee1-ae53-4af307316810" type="Normal" published="True"><name>Generate Password</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67838a25-5b88-4849-816c-fb25b998fa1a" type="Normal" published="True"><name>Get Windows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d0540501-519a-45f1-b6f3-3af4af12e619" type="Normal" published="True"><name>Process Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1cfff60e-8c0b-4cec-af1e-645eaa20d5cd" type="Normal" published="True"><name>Sleep</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd" type="Normal" published="True"><name>Window Exists</name><view><camerax>-27</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="644da7bd-f4b1-44af-af67-fcf711356e70" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>9c3f9d10-70e5-4ac1-b987-48f7bd33f56d</onsuccess></stage><stage stageid="9c3f9d10-70e5-4ac1-b987-48f7bd33f56d" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="3395d1a0-fcba-4944-9f09-7c218000fc1f" name="Stage1" type="ProcessInfo"><display x="-135" y="-75" w="150" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.dll</reference><reference>System.Core.dll</reference><reference>System.Windows.Forms.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Diagnostics</import><import>System.Collections.Generic</import><import>System.Linq</import><import>System.Security.Cryptography</import><import>System.Text.RegularExpressions</import><import>System.Text</import><import>System.Runtime.InteropServices</import><import>System.Data</import><import>System.Windows.Forms</import></imports><language>csharp</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[[DllImport("user32.dll")]
private static extern void mouse_event(int dwFlags, int dx, int dy, int dwData, int dwExtraInfo);
   
private delegate bool EnumWindowsProc(System.IntPtr hWnd, int lParam);

[DllImport("USER32.DLL")]
private static extern bool EnumWindows(EnumWindowsProc enumFunc, int lParam);

[DllImport("USER32.DLL")]
private static extern int GetWindowTextA(System.IntPtr hWnd, StringBuilder lpString, int nMaxCount);

[DllImport("USER32.DLL")]
private static extern int GetWindowText(System.IntPtr hWnd, StringBuilder lpString, int nMaxCount);

[DllImport("USER32.DLL")]
private static extern int GetWindowTextLength(System.IntPtr hWnd);

[DllImport("user32.dll")]
private static extern bool SetForegroundWindow(IntPtr hWnd);

[DllImport("USER32.DLL")]
private static extern bool IsWindowVisible(System.IntPtr hWnd);

[DllImport("USER32.DLL")]
private static extern IntPtr GetShellWindow();

[DllImport("user32.dll", SetLastError = true, CharSet = CharSet.Auto)]
private static extern int GetClassName(IntPtr hWnd, StringBuilder lpClassName, int nMaxCount);

[DllImport("user32.dll")]
private static extern IntPtr FindWindow(string lpClassName, string lpWindowName);

[DllImport("user32.dll")]
private static extern IntPtr FindWindowA(string lpClassName, string lpWindowName);
        
[DllImport("user32.dll", SetLastError = true)]
private static extern uint GetWindowThreadProcessId(IntPtr hWnd, out Int32 lpdwProcessId);

[DllImport("user32.dll", SetLastError = true, CharSet = CharSet.Unicode)]
static extern int GetClassNameW(IntPtr hWnd, StringBuilder lpClassName, int nMaxCount);
		
[DllImport("user32.dll", CharSet = CharSet.Auto)]
private static extern IntPtr SendMessage(IntPtr hWnd, UInt32 Msg, IntPtr wParam, IntPtr lParam);  

[DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]
static extern IntPtr FindWindowEx(IntPtr hwndParent, IntPtr hwndChildAfter, string lpszClass, string lpszWindow);

public static DataTable GetOpenWindows(string classname = "", string title = "",string processname="",int processid=0)
{
	System.IntPtr shellWindow = GetShellWindow();
	DataTable dt = new DataTable();
	dt.Columns.Add("Window Title");
	dt.Columns.Add("Class Name");
	dt.Columns.Add("Handle");
	dt.Columns.Add("Process ID");
	dt.Columns.Add("Process Name");
	EnumWindows(delegate (System.IntPtr hWnd, int lParam)
	{
		Int32 pid = 0;
		if (hWnd == shellWindow) return true;
		if (!IsWindowVisible(hWnd)) return true;

		int length = GetWindowTextLength(hWnd);
		if (length == 0) return true;

		StringBuilder builder = new StringBuilder(length);
		GetWindowText(hWnd, builder, length + 1);
		string thisClassname=GetWindowClass(hWnd);
		if (title != "" && classname != "")
		{
			if ((!builder.ToString().ToLower().Contains(title)) && (!thisClassname.ToLower().Contains(classname)))
				return true;
		}
		if (title != "")
		{
			if (!builder.ToString().ToLower().Contains(title)) return true;
		}

		if (classname != "")
		{
			if (!thisClassname.ToLower().Contains(classname)) return true;
		}

		DataRow _row = dt.NewRow();

		GetWindowThreadProcessId(hWnd, out pid);
		if (processid != 0)
		{
			if (processid!=pid) return true;
		}
		Process[] processList = Process.GetProcesses();
		foreach (Process p in processList)
		{
			if (p.Id == pid)
			{
				if (processname != "")
				{
					if (!p.ProcessName.ToLower().Contains(processname)) return true;
				}
				_row["Process ID"] = p.Id;
				_row["Process Name"] = p.ProcessName;
				break;
			}
		}
		
		_row["Window Title"] = builder.ToString();
		_row["Class Name"] = thisClassname;
		_row["Handle"]=hWnd.ToString();
		dt.Rows.Add(_row);
		return true;

	}, 0);

	return dt;
}

public static string GetWindowClass(IntPtr hWnd)
{
    const int size = 256;
    StringBuilder buffer = new StringBuilder(size + 1);

    if (GetClassName(hWnd, buffer, size) == 0)
        Marshal.ThrowExceptionForHR(Marshal.GetHRForLastWin32Error());

    return buffer.ToString();
}

public static void CloseWindow(IntPtr hwnd) {
  const UInt32 WM_CLOSE = 0x0010;
  SendMessage(hwnd, WM_CLOSE, IntPtr.Zero, IntPtr.Zero);
}

[Flags]
public enum MouseEventFlags
{
	LEFTDOWN = 0x00000002,
	LEFTUP = 0x00000004,
	MIDDLEDOWN = 0x00000020,
	MIDDLEUP = 0x00000040,
	MOVE = 0x00000001,
	ABSOLUTE = 0x00008000,
	RIGHTDOWN = 0x00000008,
	RIGHTUP = 0x00000010
}

//*****************************************************************************
//
// BEGIN Global Section for 'Generate Password'
//
//*****************************************************************************

//*****************************************************************************
// NOTE: This code is adapted from the 'Password Generator' open source project
// created by Paul Seal. You can find the original project on GitHub at the 
// following link:
//
// https://github.com/prjseal/PasswordGenerator
//*****************************************************************************
protected const string LowercaseCharacters = "abcdefghijklmnopqrstuvwxyz";
protected const string UppercaseCharacters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
protected const string NumericCharacters = "0123456789";
protected const string SpecialCharacters = @"!@#$%&?";
protected const int MinPasswordLength = 4;
protected const int MaxPasswordLength = 128;
protected const int MaxIdenticalConsecutiveChars = 2;
protected const int MaxPasswordAttempts = 100;
protected static RNGCryptoServiceProvider rngcsp;

// Main method of the 'Generate Password' action.
protected static string GenerateRandomPassword(int passwordLength, string characterSet)
{
	var password = new char[passwordLength];
	var characters = characterSet.ToCharArray();
	var shuffledChars = Shuffle(characters.Select(x => x)).ToArray();

	var shuffledCharacterSet = string.Join(null, shuffledChars);
	var characterSetLength = shuffledCharacterSet.Length;

	for (var characterPosition = 0; characterPosition < passwordLength; characterPosition++)
	{
		password[characterPosition] = shuffledCharacterSet[GetRandomNumberInRange(0,characterSetLength - 1)];

		var moreThanTwoIdenticalInARow =
			characterPosition > MaxIdenticalConsecutiveChars
			&& password[characterPosition] == password[characterPosition - 1]
			&& password[characterPosition - 1] == password[characterPosition - 2];

		if (moreThanTwoIdenticalInARow) characterPosition--;
	}

	return string.Join(null, password);
}

// Get a random number to use in picking a character from the character set.
protected static int GetRandomNumberInRange(int min, int max)
{
	if (min > max)
		throw new ArgumentOutOfRangeException();

	var data = new byte[sizeof(int)];
	rngcsp.GetBytes(data);
	var randomNumber = BitConverter.ToInt32(data, 0);

	return (int)Math.Floor((double)(min + Math.Abs(randomNumber % (max - min))));
}

// Validation function used only with the default character set.
protected static bool PasswordIsValid(string password, bool includeLowercase, bool includeUppercase, bool includeNumeric, bool includeSpecial)
{
	const string regexLowercase = @"[a-z]";
	const string regexUppercase = @"[A-Z]";
	const string regexNumeric = @"[\d]";

	var lowerCaseIsValid = !includeLowercase || includeLowercase && Regex.IsMatch(password, regexLowercase);
	var upperCaseIsValid = !includeUppercase || includeUppercase && Regex.IsMatch(password, regexUppercase);
	var numericIsValid = !includeNumeric || includeNumeric && Regex.IsMatch(password, regexNumeric);

	var specialIsValid = !includeSpecial;
	if (includeSpecial && !string.IsNullOrWhiteSpace(SpecialCharacters))
	{
		var listA = SpecialCharacters.ToCharArray();
		var listB = password.ToCharArray();

		specialIsValid = listA.Any(x => listB.Contains(x));
	}

	return lowerCaseIsValid && upperCaseIsValid && numericIsValid && specialIsValid;
}

// Internal method used to build the default character set used to generate the password. That is unless the user specifies
// their own custom character set.
protected string BuildCharacterSet(bool includeLowercase, bool includeUppercase, bool includeNumeric, bool includeSpecial)
{
	var characterSet = new StringBuilder();

	if (includeLowercase) characterSet.Append(LowercaseCharacters);
	if (includeUppercase) characterSet.Append(UppercaseCharacters);
	if (includeNumeric) characterSet.Append(NumericCharacters);
	if (includeSpecial) characterSet.Append(SpecialCharacters);
	
	return characterSet.ToString();
}

private static IEnumerable<T> Shuffle<T>(IEnumerable<T> items)
{
	return from item in items orderby Guid.NewGuid() select item;
}

//*****************************************************************************
//
// END Global Section for 'Generate Password'
//
//*****************************************************************************
]]></code></stage><stage stageid="baccb181-ead3-4cec-abfa-94bb52412e67" name="Clean Up" type="SubSheetInfo"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="7ab68dda-e80a-4e91-b3ca-b9bbeecb0ca0" name="Start" type="Start"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>3475f7ae-9063-4cbe-85b1-f8f5b0dc90dd</onsuccess></stage><stage stageid="3475f7ae-9063-4cbe-85b1-f8f5b0dc90dd" name="End" type="End"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="27709e12-6519-4529-8d76-45eb27236042" name="Process Exists" type="SubSheetInfo"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><narrative>Checks to see if a process with the given name exists.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="541b75f3-1868-4536-9ed1-f0340805cf52" name="End" type="End"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Exists" narrative="True if the process exists" stage="Exists" /></outputs></stage><stage stageid="9e9ff0c4-2102-4dde-851b-568ecca9dd5c" name="Start" type="Start"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Process Name" narrative="The name of the process" stage="Process Name" /></inputs><onsuccess>a65e5d31-3b82-44bd-85e8-42d30bf96cec</onsuccess></stage><stage stageid="2987b0b2-bcfe-44df-8d60-3cf441c023bf" name="Process Name" type="Data"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a65e5d31-3b82-44bd-85e8-42d30bf96cec" name="Process Exists" type="Code"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>541b75f3-1868-4536-9ed1-f0340805cf52</onsuccess><code><![CDATA[Exists = false;
try
{
	foreach (Process p in Process.GetProcessesByName(Process_Name))
	{
		Exists = true;
		return;
	}
}
catch (Exception e)
{
	throw new ApplicationException("An exception was encountered while trying to parse the list of processes. Exception: " + e.Message);	
}
]]></code></stage><stage stageid="d97aef89-802a-4cf4-b301-aaa31126177f" name="Exists" type="Data"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4adb19bc-3b13-48e7-9f69-079649e29bdc" name="Window Exists" type="SubSheetInfo"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><narrative>Checks to see if a window with the given title exists.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="071bf0aa-e2d9-416a-813b-a48a15296bf7" name="Start" type="Start"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Window Title" narrative="The title of the window to check" stage="Title" /><input type="flag" name="Use Wildcard Match" narrative="Set true to allow wildcards in the window title match" stage="Wildcard" /></inputs><onsuccess>f04edf78-80f6-4e20-90ad-cea14b6a29ff</onsuccess></stage><stage stageid="94672b8d-1060-4a0a-91f9-0c96cd778618" name="End" type="End"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="Exists" /></outputs></stage><stage stageid="a7f48e3c-d61a-43dc-8546-646ae6b6c63b" name="End" type="End"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="Exists" /></outputs></stage><stage stageid="f04edf78-80f6-4e20-90ad-cea14b6a29ff" name="Window Exists" type="Code"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Title" expr="[Title]" /><input type="flag" name="Wildcard" expr="[Wildcard]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>a7f48e3c-d61a-43dc-8546-646ae6b6c63b</onsuccess><code><![CDATA[Exists = false;
try
{
	if (Wildcard)
	{
		Title = Title.Replace("*", ".*");
		Title = Title.Replace("?", @"\w");
	}

	Exists = false;
	foreach (Process p in Process.GetProcesses())
	{
		if (Wildcard)
		{
			if (Regex.IsMatch(p.MainWindowTitle, Title))
			{
				Exists = true;
				return;
			}
		}
		else if (p.MainWindowTitle.ToLower() == Title.ToLower())
		{
			Exists = true;
			return;
		}
	}
}
catch (Exception e)
{
	throw new ApplicationException("An exception was encountered while trying to parse the list of processes. Exception: " + e.Message);
}
]]></code></stage><stage stageid="911b7620-4b36-4299-a8fe-8be896ab0176" name="Exists" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="588fd5df-2393-49f6-8dec-e6205287dedf" name="Title" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9df24660-8a75-41df-bf4c-69e3e18a14fa" name="Wildcard" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="3d281508-283c-4d63-81dd-ec07cb0c7697" name="Test" type="Calculation"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="135" y="-105" /><onsuccess>a65e5d31-3b82-44bd-85e8-42d30bf96cec</onsuccess><calculation expression="&quot;iexplore&quot;" stage="Process Name" /></stage><stage stageid="149317ed-25d5-4998-b8d2-9e8793a9cebe" name="Test" type="MultipleCalculation"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="165" y="-105" /><onsuccess>f04edf78-80f6-4e20-90ad-cea14b6a29ff</onsuccess><steps><calculation expression="&quot;* - Windows Internet Explorer&quot;" stage="Title" /><calculation expression="True" stage="Wildcard" /></steps></stage><stage stageid="645b3fce-eacd-4d15-be94-499bf9d05f19" name="Sleep" type="SubSheetInfo"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><narrative>Pauses for a given time (in seconds).</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f8281856-0b5c-4d54-bcb5-dd2aea75e3a6" name="Start" type="Start"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="-15" y="-90" /><inputs><input type="number" name="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" stage="Sleep Time (Seconds)" /></inputs><onsuccess>bdd3e5d7-002e-4c18-b363-b1474b2b1868</onsuccess></stage><stage stageid="64257152-cf77-42ee-814a-16c63b20d83b" name="End" type="End"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="-15" y="135" /></stage><stage stageid="fed99019-3566-4cf6-a7ab-82e05808dee6" name="Sleep Time (Seconds)" type="Data"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd29fe1-ab40-4cc5-b409-a4e444b93f51" name="Time Out1" type="WaitEnd"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="-15" y="60" w="30" h="30" /><onsuccess>64257152-cf77-42ee-814a-16c63b20d83b</onsuccess><groupid>997b23cb-7481-4893-b115-278ce1c05c0a</groupid></stage><stage stageid="bdd3e5d7-002e-4c18-b363-b1474b2b1868" name="Wait1" type="WaitStart"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="-15" y="-15" w="30" h="30" /><groupid>997b23cb-7481-4893-b115-278ce1c05c0a</groupid><choices /><timeout>[Sleep Time (Seconds)]</timeout></stage><stage stageid="ef0daf58-4ace-4ba0-8f21-d99f0ead7a78" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="240" y="15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="b141f536-04e7-40fc-9afa-a43282cbb6ed" name="Input" type="Block"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b201dcbf-4a43-4071-8ad4-6ca40b965916" name="Output" type="Block"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="fbdbe503-a502-406f-8fca-5e17e4f52463" name="Output" type="Block"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="969aab86-4c3f-4e90-89f9-915d8004a7ad" name="Input" type="Block"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7c70bc5d-7c7d-419f-a51e-87ab13f2e11b" name="Input" type="Block"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ffc86e69-5c28-43aa-9ef9-5cbdd83a9c7b" name="Generate Password" type="SubSheetInfo"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><narrative>This action can be used to generate random passwords. The default character set is composed of [A-Z], [a-z], [0-9], and [!@#$%&amp;?]. You can override the default character set through the various flags, or you may supply your own custom character set. This action will not permit the same character to be repeated more than two times consecutively.
</narrative><display x="-195" y="-105" w="210" h="90" /></stage><stage stageid="923be7ea-9202-4044-88ee-aeec95c8846e" name="Start" type="Start"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="-120" /><inputs><input type="number" name="Password Length" narrative="The length of the generated password. Must be a value between 4 and 128. Default value is 8 characters." stage="Password Length" /><input type="flag" name="Include Lowercase" narrative="Flag indicating whether lowercase letters (i.e. [a-z]) should be included in the generated password. Default value is True." stage="Include Lowercase" /><input type="flag" name="Include Uppercase" narrative="Flag indicating whether uppercase letters (i.e. [A-Z]) should be included in the generated password. Default value is True." stage="Include Uppercase" /><input type="flag" name="Include Numbers" narrative="Flag indicating whether numbers (i.e. [0-9]) should be included in the generated password. Default value is True." stage="Include Numbers" /><input type="flag" name="Include Special" narrative="Flag indicating whether special characters (i.e. [!@#$%&amp;?]) should be included in the generated password. Default value is True." stage="Include Special" /><input type="text" name="Custom Character Set" narrative="Optional: User supplied set of characters for password generation. Note, supplying your own set of characters overrides the default character set." stage="Custom Character Set" /></inputs><onsuccess>4869a139-33e8-4852-8743-7020b80b8f0d</onsuccess></stage><stage stageid="def15afc-14af-4f1b-9b1a-d6eb018c4c39" name="End" type="End"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="345" /><outputs><output type="text" name="Password" narrative="The generated password." stage="Password" /></outputs></stage><stage stageid="dba341f1-3732-4950-bd2d-1264f1bb0b30" name="Input" type="Block"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d9dded7d-045e-4871-bb06-e286e1c10452" name="Output" type="Block"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-270" y="180" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="8d2ead2c-9053-4870-8018-0d24214585e1" name="Password Length" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-195" y="-15" w="120" h="30" /><datatype>number</datatype><initialvalue>8</initialvalue><private /><alwaysinit /></stage><stage stageid="1453136e-036c-489a-b27b-9f2717e2c317" name="Include Lowercase" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-195" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="bf52c4df-05e2-4cd2-9ab4-5bd0f8e4744e" name="Include Uppercase" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="353473f0-937a-44c5-8cb8-e0509815cfc5" name="Include Numbers" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-195" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="12ca1b22-db52-4e35-8c86-83a78140f10d" name="Password" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-195" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f428f21f-fcf3-4ab6-b401-6cb57bd01451" name="Include Special" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4869a139-33e8-4852-8743-7020b80b8f0d" name="Valid Length" type="Decision"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="-75" /><decision expression="([Password Length] &gt;= 4) AND ([Password Length] &lt;= 128)" /><ontrue>4ccf7a83-8c07-4434-b987-8f613c522841</ontrue><onfalse>cc1b3b1c-1d19-420c-b0e0-63b6f27dd007</onfalse></stage><stage stageid="319281d4-5b5b-4b0a-abfd-a99e031bc68a" name="Generate Password" type="Code"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="300" /><inputs><input type="number" name="passwordLength" expr="[Password Length]" /><input type="flag" name="includeLowercase" expr="[Include Lowercase]" /><input type="flag" name="includeUppercase" expr="[Include Uppercase]" /><input type="flag" name="includeNumeric" expr="[Include Numbers]" /><input type="flag" name="includeSpecial" expr="[Include Special]" /><input type="flag" name="useCustomCharacterSet" expr="[Use Custom Character Set]" /><input type="text" name="customCharacterSet" expr="[Custom Character Set]" /></inputs><outputs><output type="text" name="password" stage="Password" /></outputs><onsuccess>def15afc-14af-4f1b-9b1a-d6eb018c4c39</onsuccess><code><![CDATA[password = "";
int length = Decimal.ToInt32(passwordLength);

// Check the Global RandomNumberGenerator instance to see if it's already been initalized (i.e. this action has been called before).
if (rngcsp == null)
	rngcsp = new RNGCryptoServiceProvider();

var characterSet = useCustomCharacterSet ? customCharacterSet : BuildCharacterSet(includeLowercase, includeUppercase, includeNumeric, includeSpecial);

// We do not perform any validity checks on the generated password when using a custom character set.
if (useCustomCharacterSet)
{
	password = GenerateRandomPassword(length, characterSet);
}
else
{
	var passwordAttempts = 0;

	do
	{
		password = GenerateRandomPassword(length, characterSet);
		passwordAttempts++;
	} while (passwordAttempts < MaxPasswordAttempts && !PasswordIsValid(password, includeLowercase, includeUppercase, includeNumeric, includeSpecial));

	if (!PasswordIsValid(password, includeLowercase, includeUppercase, includeNumeric, includeSpecial))
	{
		password = "";
		throw new ApplicationException("Failed to generate a valid password within the maximum number of attempts.");
	}
}
]]></code></stage><stage stageid="cc1b3b1c-1d19-420c-b0e0-63b6f27dd007" name="Invalid Length" type="Exception"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><display x="135" y="-75" w="90" h="30" /><exception localized="yes" type="Input Exception" detail="&quot;Please review and correct your input. The minimum password length is 4 characters. The maximum password length is 128 characters.&quot;" /></stage><stage stageid="eba8c7b7-5ec2-4bae-9ba6-94d996861e1b" name="Custom Character Set" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><display x="-195" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea3dff35-2c48-4819-a46c-4678051770a9" name="Use Custom Character Set" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-195" y="285" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="45e3e4b9-5550-433e-9602-c9d40b59e432" name="Internal" type="Block"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-270" y="255" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="4ccf7a83-8c07-4434-b987-8f613c522841" name="Use Custom" type="Decision"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="-30" /><decision expression="Len([Custom Character Set]) &gt; 0" /><ontrue>0808df8e-7208-47be-bddf-557a9041f15f</ontrue><onfalse>9b083e92-3132-4d09-aa88-6dd20f0a290d</onfalse></stage><stage stageid="0808df8e-7208-47be-bddf-557a9041f15f" name="Set Custom Flag" type="Calculation"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>c21b0f28-1efa-4b0c-969c-3248d55e8896</onsuccess><calculation expression="True" stage="Use Custom Character Set" /></stage><stage stageid="9b083e92-3132-4d09-aa88-6dd20f0a290d" name="Anchor1" type="Anchor"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-75" y="-30" w="10" h="10" /><onsuccess>2d7fb7ea-6e9d-4b62-a2b6-e1d470510b28</onsuccess></stage><stage stageid="bdbb6bc1-15f5-4ae6-bb26-d5d3702bed2b" name="Note1" type="Note"><loginhibit /><narrative>Version: 10.0</narrative><display x="15" y="-165" w="90" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="4bc4440d-ab95-4d9e-92d4-f7e305129de0" name="Valid Flags" type="Decision"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><narrative>If the user sets all of the flags to False and they don't provide their own custom set of characters we need to throw an exception.</narrative><display x="15" y="255" /><decision expression="([Include Lowercase] = True) OR ([Include Numbers] = True) OR ([Include Uppercase] = True) OR ([Include Special] = True) OR ([Use Custom Character Set] = True)" /><ontrue>319281d4-5b5b-4b0a-abfd-a99e031bc68a</ontrue><onfalse>612ecf06-04b5-4c21-9f56-3b57ce6c56f8</onfalse></stage><stage stageid="612ecf06-04b5-4c21-9f56-3b57ce6c56f8" name="Invalid Options" type="Exception"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><display x="135" y="255" w="90" h="30" /><exception localized="yes" type="Input Exception" detail="&quot;Please review and correct your input. At least one option must be set to True, or you must provide your own custom character set.&quot;" /></stage><stage stageid="c21b0f28-1efa-4b0c-969c-3248d55e8896" name="Check Custom Character Set" type="Code"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><narrative>This stage checks to ensure the user hasn't input a set of characters that include repeated characters. The set should only include distinct characters.</narrative><display x="15" y="90" /><inputs><input type="text" name="customCharacterSet" expr="[Custom Character Set]" /></inputs><outputs><output type="flag" name="isDistinct" stage="Is Distinct" /></outputs><onsuccess>fad2ba09-a213-40f3-bfb7-f2af4ba81682</onsuccess><code><![CDATA[isDistinct = customCharacterSet.Distinct().Count() == customCharacterSet.Length;
]]></code></stage><stage stageid="62cfe659-f9f6-4f5d-b07c-e4f68ea27db0" name="Is Distinct" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><display x="-195" y="315" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fad2ba09-a213-40f3-bfb7-f2af4ba81682" name="Custom Set Is Distinct" type="Decision"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="135" /><decision expression="[Is Distinct]" /><ontrue>80b023c9-88f3-42db-aa7b-0804331331cc</ontrue><onfalse>e632b89e-c776-4d98-bf67-8c0d805398b4</onfalse></stage><stage stageid="e632b89e-c776-4d98-bf67-8c0d805398b4" name="Invalid Char Set" type="Exception"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><display x="135" y="135" w="90" h="30" /><exception localized="yes" type="Input Exception" detail="&quot;Please review and correct your input. A custom character set must contain only distinct characters. No character should be repeated.&quot;" /></stage><stage stageid="2d7fb7ea-6e9d-4b62-a2b6-e1d470510b28" name="Anchor2" type="Anchor"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-75" y="255" w="10" h="10" /><onsuccess>4bc4440d-ab95-4d9e-92d4-f7e305129de0</onsuccess></stage><stage stageid="ac2ae6ce-346d-4c9f-b613-4bd572512c93" name="Custom Set Min Length" type="Data"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><narrative>If the user specifies a custom character set, it must contain at least 5 distinct characters.</narrative><display x="-195" y="345" w="120" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="80b023c9-88f3-42db-aa7b-0804331331cc" name="Valid Length" type="Decision"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="15" y="180" /><decision expression="Len([Custom Character Set]) &gt;= [Custom Set Min Length]" /><ontrue>4bc4440d-ab95-4d9e-92d4-f7e305129de0</ontrue><onfalse>e7ace412-396c-434a-8b5f-4a8a1e05ddd9</onfalse></stage><stage stageid="e7ace412-396c-434a-8b5f-4a8a1e05ddd9" name="Invalid Number" type="Exception"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><display x="135" y="180" w="90" h="30" /><exception localized="yes" type="Input Exception" detail="&quot;Please review and correct your input. The minimum number of distinct characters in a custom character set is &quot; &amp; [Custom Set Min Length] &amp; &quot;.&quot;" /></stage><stage stageid="0975f107-c3af-4f73-b59d-496e52897be4" name="Handle Custom Character Set" type="Block"><subsheetid>812d80d2-5be4-4ee1-ae53-4af307316810</subsheetid><loginhibit /><display x="-45" y="15" w="120" h="195" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="6d35c14f-c98f-4bd8-8464-ecb024f8cc7f" name="Get Windows" type="SubSheetInfo"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><narrative>Get all Windows matching the specified criteria.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9e47bdf8-0314-42ce-83c6-e3d0329626ae" name="Start" type="Start"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Window Title" stage="Window Title" /><input type="text" name="Class Name" stage="Class Name" /><input type="text" name="Process Name" stage="Process Name" /><input type="number" name="Process ID" stage="Process ID" /></inputs><onsuccess>ca61cede-d3f9-47d9-a06a-4c3cf0279098</onsuccess></stage><stage stageid="c727d3ae-510a-4dd8-aa9a-91c3c808492c" name="End" type="End"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Windows" stage="Windows" /></outputs></stage><stage stageid="ca61cede-d3f9-47d9-a06a-4c3cf0279098" name="Get Windows" type="Code"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="title" expr="[Window Title]" /><input type="text" name="classname" expr="[Class Name]" /><input type="text" name="ProcessName" expr="[Process Name]" /><input type="number" name="PID" expr="[Process ID]" /></inputs><outputs><output type="collection" name="Windows" stage="Windows" /></outputs><onsuccess>c727d3ae-510a-4dd8-aa9a-91c3c808492c</onsuccess><code><![CDATA[Windows = GetOpenWindows(classname,title,ProcessName,Convert.ToInt32(PID));]]></code></stage><stage stageid="20e0ca69-3f77-41cb-bf00-cdd2a91f7fe2" name="Windows" type="Collection"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><loginhibit /><display x="225" y="-15" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="130b1402-2cac-47cc-9dd9-37319118dd70" name="Window Title" type="Data"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f976e166-9aae-4867-8699-3074ef97b459" name="Class Name" type="Data"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bc17f33-3a7a-4e16-bd04-8edb021ccccb" name="Process Name" type="Data"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><loginhibit /><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="afb347f9-a4a7-4b33-9602-ef1760144986" name="Process ID" type="Data"><subsheetid>67838a25-5b88-4849-816c-fb25b998fa1a</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="806ed446-2a77-4833-8fe9-cb9199bd58eb" name="Click X,Y" type="SubSheetInfo"><subsheetid>59cd9346-b5d1-4acb-ba11-68ee084fb577</subsheetid><narrative>Clicks on the specified coordinate.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9acfe3e2-823b-43b6-b0b1-2e5043dea3e5" name="Start" type="Start"><subsheetid>59cd9346-b5d1-4acb-ba11-68ee084fb577</subsheetid><loginhibit /><narrative>Start of action</narrative><display x="-15" y="-90" /><inputs><input type="number" name="X" narrative="X coordinate to perform mouse click" stage="X" /><input type="number" name="Y" narrative="Y coordinate to perform mouse click" stage="Y" /></inputs><onsuccess>5b95dbad-10ee-4941-a74f-0b460d1e419c</onsuccess></stage><stage stageid="269f47d0-82c8-4722-8572-4e3293ff17de" name="End" type="End"><subsheetid>59cd9346-b5d1-4acb-ba11-68ee084fb577</subsheetid><loginhibit /><narrative>End of action</narrative><display x="-15" y="60" /></stage><stage stageid="5b95dbad-10ee-4941-a74f-0b460d1e419c" name="Click X,Y" type="Code"><subsheetid>59cd9346-b5d1-4acb-ba11-68ee084fb577</subsheetid><loginhibit /><narrative>Clicks on the specified coordinate</narrative><display x="-15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="X" expr="[X]" /><input type="number" name="Y" expr="[Y]" /></inputs><onsuccess>269f47d0-82c8-4722-8572-4e3293ff17de</onsuccess><code><![CDATA[Cursor.Position = new System.Drawing.Point((int)X, (int)Y);
mouse_event((int)(MouseEventFlags.LEFTDOWN), 0, 0, 0, 0);
mouse_event((int)(MouseEventFlags.LEFTUP), 0, 0, 0, 0);]]></code></stage><stage stageid="d1140ff4-54e2-4919-a41b-5179b90cff79" name="X" type="Data"><subsheetid>59cd9346-b5d1-4acb-ba11-68ee084fb577</subsheetid><narrative>X coordinate to perform mouse click</narrative><display x="-195" y="-30" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="84dbed38-f020-4f6a-a981-fb263852f1d6" name="Y" type="Data"><subsheetid>59cd9346-b5d1-4acb-ba11-68ee084fb577</subsheetid><narrative>Y coordinate to perform mouse click</narrative><display x="-195" y="0" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="6efb1579-126a-4563-b2e9-3d9e432c1a79" name="Utility - HTTP" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - HTTP" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="Communicates with web services using the HTTP protocol.&#xD;&#xA;ChangeLog &#xD;&#xA;&#xD;&#xA;March 2024 &#xD;&#xA;&#xD;&#xA;Changed exception handler in http webrequest actions to deal with 4xx and 5xx errors rather than just throwing exception. The response will be handled and returned back to Blue Prism. Please check compatibility with your existing applications before moving into production." byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>2ba17e26-49eb-43ed-84dd-c40e67e990b0</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-141</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="925e0261-2b2e-41ed-b555-4c5ccf8a00fc" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d30e8f45-db72-40d2-9f17-9700006fe152" type="Normal" published="True"><name>HTTP Request</name><view><camerax>-325</camerax><cameray>-15</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="74a20e65-147b-4dea-867e-fa08fbea81cb" type="Normal" published="True"><name>HTTP Request File</name><view><camerax>0</camerax><cameray>-1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="701af150-fe0b-4f6b-a823-dc6d09569c09" type="Normal" published="True"><name>HTTP Request Multipart</name><view><camerax>-100</camerax><cameray>39</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f3a55ad6-3bfa-4401-baa9-0e50afe42879" type="Normal" published="True"><name>Post</name><view><camerax>-3</camerax><cameray>147</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ecff5a78-99b1-4ecb-a356-a075c487ef71" type="Normal" published="True"><name>Post JSON</name><view><camerax>-61</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="519a0dc7-b254-478b-b2ed-c7883124e31b" type="Normal" published="True"><name>Load Certificate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="704436d5-f51b-4369-b763-a4fdc6e894c2" type="Normal" published="True"><name>URL Encode</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="bee831af-f964-4218-87f3-d3378e2eab10" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>071f13b7-de3d-4625-9498-9da634d452b4</onsuccess></stage><stage stageid="11e111be-101c-4df7-9d5c-910a10c02e2d" name="End" type="End"><loginhibit /><display x="15" y="15" /></stage><stage stageid="9c4d6f4e-1d32-4d1f-a37d-f279b42fa480" name="Stage1" type="ProcessInfo"><display x="-225" y="-60" w="330" h="210" /><font family="Segoe UI" size="12" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Web.dll</reference><reference>System.Xml.dll</reference><reference>System.Web.dll</reference><reference>Newtonsoft.Json.dll</reference><reference>System.Net.Http.dll</reference></references><imports><import>System</import><import>System.Net</import><import>System.Data</import><import>System.Security.Cryptography.X509Certificates</import><import>System.Collections.Generic</import><import>System.Web</import><import>System.Media</import><import>System.IO</import><import>System.Text</import><import>Newtonsoft.Json</import><import>System.Net.Http.Headers</import><import>Microsoft.VisualBasic</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[

]]></globalcode><code><![CDATA[Private m_Certificates As New Dictionary(Of String, X509Certificate2)

Private Function GetCertificate(ByVal subject As String) As X509Certificate2
	Dim store As New X509Store(StoreName.My, StoreLocation.LocalMachine)
	Try
		store.Open(OpenFlags.ReadOnly)
		Dim certs As X509Certificate2Collection = store.Certificates.Find(X509FindType.FindBySubjectName, subject, True)
		For Each cert As X509Certificate2 In certs
			Return cert
		Next
	Finally
		store.Close()
	End Try
	Return Nothing
End Function

Function ToDictionary(webResponse As HttpWebResponse ) As Dictionary(Of String, String)

	Dim dict = New Dictionary(Of String, String)()

	For index As Integer = 0 To webResponse.Headers.Count - 1

		If webResponse.Headers.Keys.Count -1 >= index Then

			dict.Add(webResponse.Headers.Keys(index), webResponse.Headers(index) )

		End if

	Next

	Return dict

End Function]]></code></stage><stage stageid="b48af877-43b3-4056-b8b4-88bac82a5c80" name="Clean Up" type="SubSheetInfo"><subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d35cb9b6-000c-45e5-9a29-9001404a21d0" name="Start" type="Start"><subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>f1054fe8-46c8-42ab-b236-5b07592ec5eb</onsuccess></stage><stage stageid="f1054fe8-46c8-42ab-b236-5b07592ec5eb" name="End" type="End"><subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="ab202953-451b-4e7c-8cd5-c050e06e286a" name="Post" type="SubSheetInfo"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><narrative>Sends a message to HTTP endpoint using the POST method. The collection data is encoded using "application/x-www-form-urlencoded"</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e2777b38-8eba-4a04-a611-28bcd6c4add6" name="Start" type="Start"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP Post data to" stage="Address URL" /><input type="collection" name="Post Data" narrative="A collection of values to send as Post data" stage="Post Data" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" /><input type="collection" name="Headers" narrative="OPTIONAL: HTTP Headers" stage="Headers" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" stage="Accept" /><input type="flag" name="Use Bearer Token" narrative="OPTIONAL: Set this to true if you have been supplied a bearer token." stage="Use Bearer Token" /><input type="text" name="Bearer Token" narrative="OPTIONAL: The bearer token supplied for use with the destination you are working with." stage="Bearer Token" /><input type="number" name="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." stage="Request Timeout" /><input type="text" name="User Agent" narrative="OPTIONAL: The User-Agent request header is a characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent." stage="UserAgent" /></inputs><onsuccess>e42b0caa-40c1-4a89-a873-f6977581053b</onsuccess></stage><stage stageid="f51a79a9-1213-484c-bedc-065f44051a02" name="End" type="End"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="15" y="180" /><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Post Headers" narrative="The headers related to the Post query" stage="ResultHeadersJson" /><output type="number" name="Status Code" narrative="The HTTP status code associated with the request." stage="ResultCode" /></outputs></stage><stage stageid="14154308-012d-47e4-a707-8ca80b73651e" name="new" type="Note"><subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="e42b0caa-40c1-4a89-a873-f6977581053b" name="Get Body" type="Code"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="15" y="45" /><inputs><input type="collection" name="postData" expr="[Post Data]" /></inputs><outputs><output type="text" name="body" stage="Body" /></outputs><onsuccess>e9085eba-5f15-4b65-91ed-41abf7c6917f</onsuccess><code><![CDATA[Dim sb As New System.Text.StringBuilder
For Each r As DataRow In postData.Rows
	Dim first As Boolean = True
	For Each c As DataColumn In postData.Columns
		If first Then
			first = False
		Else
			sb.Append("&")
		End If
		Dim columnName As String = c.ColumnName
		Dim encodedCol As String = System.Web.HttpUtility.UrlEncode(columnName)
		sb.Append(encodedCol)
		sb.Append("=")
		Dim val As String = r(columnName).ToString
		Dim encodedVal As String = System.Web.HttpUtility.UrlEncode(val)
		sb.Append(encodedVal)
	Next
	Exit For 'Only one row is allowed
Next

body=sb.ToString()
]]></code></stage><stage stageid="1c58d0fb-9a9b-4d2f-861f-5c22ab835c31" name="Result" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-240" y="285" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b98abed4-9669-476c-87d9-3f485683d049" name="Address URL" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-240" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f4c2a5eb-36de-4904-a963-a8513b7e8840" name="Post Data" type="Collection"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-150" y="-15" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="071f13b7-de3d-4625-9498-9da634d452b4" name="Setup" type="Code"><loginhibit /><display x="15" y="-45" /><onsuccess>11e111be-101c-4df7-9d5c-910a10c02e2d</onsuccess><code><![CDATA[System.Net.ServicePointManager.Expect100Continue = False]]></code></stage><stage stageid="f6ed43b3-714e-4161-b44b-b60490592281" name="Proxy Password" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-150" y="45" w="90" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="bcedbed1-3ed7-42d7-8f16-7e2071c3e187" name="Proxy Username" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-240" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66afe5b7-37e4-4ed7-a9fc-a78e1ab8890c" name="Proxy URL" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-150" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="be7856fe-4027-4226-8caa-851bb6e7df21" name="Use Proxy" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-240" y="15" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="38c313e6-bc0d-49e5-a6ab-4042a0682d3d" name="Post JSON" type="SubSheetInfo"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><narrative>Sends a message to HTTP endpoint using the POST method. The action expects a raw string and sets the content type to "application/json"</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="37166627-b66b-4a9c-a321-539933de2123" name="End" type="End"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><display x="-15" y="135" /><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Result Headers" narrative="The headers related to the Post Query" stage="ResultHeadersJson" /><output type="number" name="Status Code" narrative="The HTTP status code associated with the request." stage="ResultCode" /></outputs></stage><stage stageid="878a70a1-d658-4563-b27c-245f947b74be" name="Result" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-255" y="210" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6875cda6-dbbe-47b6-ab82-b62f89c90a88" name="JSON" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-165" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4956e14f-001c-4406-a401-38c63ff06696" name="Start" type="Start"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><display x="-15" y="15" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP Post data to" stage="Address URL" /><input type="text" name="JSON" narrative="The JSON to send" stage="JSON" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers Collection" stage="Headers" /><input type="flag" name="Use Bearer Token" narrative="OPTIONAL: Set to True if using a Bearer Token for Authorization" stage="Use Bearer Token" /><input type="text" name="Bearer Token" narrative="OPTIONAL: Enter bearer token value here if one has been provided." stage="Bearer Token" /><input type="number" name="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." stage="Request Timeout" /><input type="text" name="User Agent" narrative="OPTIONAL: The User-Agent request header is a characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent." stage="UserAgent" /></inputs><onsuccess>6b571f09-555c-45a8-9475-957d41cafb24</onsuccess></stage><stage stageid="696696c8-af04-4075-aea0-a8024e2431fe" name="Address URL" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-255" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="582df200-7287-4dc1-a9a2-6c9e09276f77" name="Proxy Password" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-165" y="45" w="90" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="924eb1dd-b782-4f71-82b6-9923ea0093ec" name="Proxy Username" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-255" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ed09a5ed-6c7b-4dd3-9bf0-8df61da66ea3" name="Proxy URL" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-165" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e35c8d6-3f97-4ae4-8566-35fb0981e145" name="Use Proxy" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-255" y="15" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4a9fcaf1-4310-45cb-a775-ebfadc75ac8a" name="Headers" type="Collection"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-240" y="75" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9e64259d-1a91-444b-8620-b8cd186832d1" name="Accept" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-150" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58e7a470-3ec3-4033-bb19-0fee1bdcaaed" name="HTTP Request" type="SubSheetInfo"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative>Sends a message to HTTP endpoint using the specified HTTP method and content-type</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d0a11dcd-f002-46b5-aff6-1026c3be2da8" name="End" type="End"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="0" y="75" /><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" /><output type="number" name="Status Code" narrative="The HTTP status code associated with the request." stage="ResultCode" /></outputs></stage><stage stageid="1fa7def4-c6a8-4325-9bc8-2c6027c0b8e8" name="HTTP Request" type="Code"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="0" y="0" /><inputs><input type="text" name="addressURL" expr="[Address URL]" /><input type="text" name="body" expr="[Body]" /><input type="text" name="contentType" expr="[Content Type]" /><input type="text" name="method" expr="[Method]" /><input type="text" name="proxyURL" expr="[Proxy URL]" /><input type="flag" name="useProxy" expr="[Use Proxy]" /><input type="text" name="proxyUsername" expr="[Proxy Username]" /><input type="password" name="proxyPassword" expr="[Proxy Password]" /><input type="collection" name="headers" expr="[Headers]" /><input type="text" name="accept" expr="[Accept]" /><input type="text" name="username" expr="[Username]" /><input type="password" name="password" expr="[Password]" /><input type="text" name="certID" expr="[Certificate ID]" /><input type="flag" name="forcePreAuth" expr="[Force Pre Authorization]" /><input type="flag" name="usingFile" expr="[File]" /><input type="text" name="Bearer Token" expr="[Bearer Token]" /><input type="flag" name="UseBearerToken" expr="[Use Bearer Token]" /><input type="flag" name="allowAutoRedirects" expr="[Allow Auto Redirects]" /><input type="number" name="maxRedirects" expr="[Maximum Redirects]" /><input type="number" name="requestTimeout" expr="[Request Timeout]" /><input type="text" name="UserAgent" expr="[UserAgent]" /></inputs><outputs><output type="text" name="resultData" stage="Result" /><output type="text" name="resultHeadersJson" stage="ResultHeadersJson" /><output type="number" name="resultCode" stage="ResultCode" /></outputs><onsuccess>d0a11dcd-f002-46b5-aff6-1026c3be2da8</onsuccess><code><![CDATA[Try
	Dim request As WebRequest = WebRequest.Create(addressURL)

	If forcePreAuth Then
	   ' Sometimes a web server will require the authorisation header in the initial request
	   ' In which case we have to add the basic authorization header manually.
	   Dim bytes() As Byte = System.Text.Encoding.UTF8.GetBytes(String.Format("{0}:{1}",username,password))
	   Dim base64 As String = Convert.ToBase64String(bytes)
	   request.Headers.Add("Authorization", "Basic " & base64)
	Else
	  If Not String.IsNullOrEmpty(username) AndAlso Not String.IsNullOrEmpty(password) Then
		request.Credentials = New NetworkCredential(username,password)
	  End If
	End If

	' Be aware that if you use forcePreAuth as well as UseBearerToken then forcePreAuth gets priority.
	If UseBearerToken And Not forcePreAuth Then
		request.Headers.Add("Authorization","Bearer " & Bearer_Token)
	End If

	If useProxy Then
		Dim proxyURI As New Uri(proxyURL)
		Dim proxy As New WebProxy(proxyURI, True)
		Dim proxyCred As New NetworkCredential(proxyUsername, proxyPassword)
		Dim credCache As New CredentialCache()
		credCache.Add(proxyURI, "Basic", proxyCred)
		proxy.UseDefaultCredentials = False
		proxy.Credentials = credCache
		request.Proxy = proxy
	End If

	' Set the request timeout. Need to see if the user specified 'Infinite' (a value of -1 according to 
	' https://docs.microsoft.com/en-us/dotnet/api/system.net.webrequest.timeout?view=net-5.0)
	If ((requestTimeout = -1) Or (requestTimeout > 0)) Then
		request.Timeout = requestTimeout
	Else 
		request.Timeout = 100000 ' Default
	End If

	request.Method = method
	request.ContentType = contentType

	Dim httpRequest As HttpWebRequest = TryCast(request, HttpWebRequest)
	If httpRequest IsNot Nothing Then
	  If Not String.IsNullOrEmpty(accept) Then
		httpRequest.Accept = accept
	  End If
	  If Not String.IsNullOrEmpty(certID) Then
		httpRequest.ClientCertificates.Add(m_Certificates(certID))
	  End If

	  ' Set the AllowAutoRedirect attribute.
	  httpRequest.AllowAutoRedirect = allowAutoRedirects
	  httpRequest.MaximumAutomaticRedirections = maxRedirects

	End If
	
    ' Copy the user-provided headers into the request headers collection.
	If Not headers Is Nothing Then
		For Each r As DataRow In headers.Rows
			For Each c As DataColumn In headers.Columns
				Dim columnName As String = c.ColumnName
				Dim val As String = r(columnName).ToString
				
				' This check ensures that we only include a single Authorization header in the request header collection.
				If Not columnName.ToUpper().Equals("AUTHORIZATION") Then
					request.Headers.Add(columnName,val)
				Else
					If Not forcePreAuth And Not UseBearerToken Then
						request.Headers.Add(columnName,val)					
					End If
				End If
			Next
			Exit For ' Only one row is allowed
		Next
	End If

	' Normal stream writer, we aren't encoding a file etc.
	If Not usingFile Then

		If Not String.IsNullOrEmpty(body) Then
		  Dim requestStream As IO.Stream = request.GetRequestStream()
		  Using sw As New IO.StreamWriter(requestStream, New Text.UTF8Encoding(False))
			sw.Write(body)
		  End Using
		End If

	Else If usingFile Then
		' Prep the request body
		Dim byteArray = File.ReadAllBytes( body )
		Dim requestStream As IO.Stream = request.GetRequestStream()
		requestStream.Write(byteArray,0, byteArray.Length)
	End If

	If Not String.IsNullOrEmpty(UserAgent) Then
		httpRequest.UserAgent = UserAgent
	End If

	Using response As WebResponse = request.GetResponse()
		' Need to cast the WebResponse to an HttpWebResponse so we can get the StatusCode and check compression status.
		Dim httpResponse As HttpWebResponse = CType(response, HttpWebResponse)
		resultCode = Convert.ToInt32(httpResponse.StatusCode)

		resultHeadersJson = JsonConvert.SerializeObject(ToDictionary(response))
		Dim responseStream As IO.Stream = response.GetResponseStream()

		' Was compression used on the data?
		If (httpResponse.ContentEncoding.ToLower().Contains("gzip"))
			responseStream = New System.IO.Compression.GZipStream(responseStream, System.IO.Compression.CompressionMode.Decompress)
		ElseIf (httpResponse.ContentEncoding.ToLower().Contains("deflate"))
			responseStream = New System.IO.Compression.DeflateStream(responseStream, System.IO.Compression.CompressionMode.Decompress)            
		End If

		Dim sr As New IO.StreamReader(responseStream)
		resultData = sr.ReadToEnd()
	End Using

Catch e As WebException

	If Not e.Response Is Nothing Then

		Using webResponse as HttpWebResponse = e.Response()
			Using dataStream as Stream = webResponse.GetResponseStream()
				Using reader as StreamReader = new StreamReader(dataStream)
					resultData = reader.ReadToEnd()
				End Using
			End Using
			resultCode = Convert.ToInt32(webResponse.StatusCode)
			resultHeadersJson = JsonConvert.SerializeObject(ToDictionary(webResponse))
		End Using
	Else
		throw 
	End If

End Try]]></code></stage><stage stageid="96e2df5a-429a-4030-9565-b8cbbf7be6b3" name="Result" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="390" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8f28cc4e-4ae2-4b01-ad23-0b632027d627" name="Body" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e305dce1-1fd7-459b-8211-27c26350676d" name="Block1" type="Block"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="-60" y="-30" w="195" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0e0138a9-ccaa-44b1-b742-ad843c39aca1" name="Recover1" type="Recover"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="75" y="0" /><onsuccess>0645751f-e202-459a-b704-5fb0e0cbebe7</onsuccess></stage><stage stageid="0645751f-e202-459a-b704-5fb0e0cbebe7" name="Exception1" type="Exception"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="180" y="0" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="d8c39895-52d1-45ad-8cd0-be309896d0e5" name="Start" type="Start"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="0" y="-75" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" stage="Address URL" /><input type="text" name="Body" narrative="The body text of the HTTP request" stage="Body" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." stage="Content Type" /><input type="text" name="Method" narrative="The method of the HTTP request." stage="Method" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" stage="Headers" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" stage="Accept" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" stage="Username" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" stage="Password" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" stage="Certificate ID" /><input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the 'Authorization' header for HTTP Basic." stage="Force Pre Authorization" /><input type="flag" name="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" stage="File" /><input type="flag" name="Use Bearer Token" stage="Use Bearer Token" /><input type="text" name="Bearer Token" narrative="OPTIONAL: If you 'Use Bearer Token' is set to True, this must be set to the value of the actual Bearer Token." stage="Bearer Token" /><input type="flag" name="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." stage="Allow Auto Redirects" /><input type="number" name="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." stage="Maximum Redirects" /><input type="number" name="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." stage="Request Timeout" /><input type="text" name="User Agent" narrative="OPTIONAL: The user agent property supplied by browsers or other applications." stage="UserAgent" /></inputs><onsuccess>1fa7def4-c6a8-4325-9bc8-2c6027c0b8e8</onsuccess></stage><stage stageid="c4e87c4e-8150-4a15-8fc5-ddc736b949ae" name="Address URL" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="038a7411-25dc-456c-8007-bb82f3d94de7" name="Proxy Password" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="135" w="90" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="8ef02e3a-8214-4163-b44d-a5081ed8b9e4" name="Proxy Username" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="135" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1c6f3a8d-428e-4a61-815c-f32a8a117ae3" name="Proxy URL" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c4cc5f6-0531-4375-b9c1-3fcb529dde9b" name="Use Proxy" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="105" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4a98d0d5-c3b8-42fb-933f-2168265f12d6" name="Content Type" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fc9f21c4-39ba-4135-8356-f9a516bf6b99" name="Method" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b571f09-555c-45a8-9475-957d41cafb24" name="HTTP Request" type="SubSheet"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><display x="-15" y="75" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="[JSON]" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="[Use Proxy]" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/json&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;POST&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="[Proxy URL]" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="[Proxy Username]" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="[Proxy Password]" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="[Headers]" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /><input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the 'Authorization' header for HTTP Basic." expr="" /><input type="flag" name="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" expr="" /><input type="flag" name="Use Bearer Token" friendlyname="Use Bearer Token" expr="[Use Bearer Token]" /><input type="text" name="Bearer Token" friendlyname="Bearer Token" narrative="OPTIONAL: If you 'Use Bearer Token' is set to True, this must be set to the value of the actual Bearer Token." expr="[Bearer Token]" /><input type="flag" name="Allow Auto Redirects" friendlyname="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." expr="" /><input type="number" name="Maximum Redirects" friendlyname="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." expr="" /><input type="number" name="Request Timeout" friendlyname="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." expr="[Request Timeout]" /><input type="text" name="User Agent" friendlyname="User Agent" narrative="OPTIONAL: The user agent property supplied by browsers or other applications." expr="[UserAgent]" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" /><output type="number" name="Status Code" friendlyname="Status Code" narrative="The HTTP status code associated with the request." stage="ResultCode" /></outputs><onsuccess>37166627-b66b-4a9c-a321-539933de2123</onsuccess><processid>d30e8f45-db72-40d2-9f17-9700006fe152</processid></stage><stage stageid="33b3447c-a55e-4af3-be35-6cb5624d6a4f" name="Headers" type="Collection"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="45" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ac16a164-f018-4111-949f-3db9d4d873d9" name="Accept" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="23c8dd77-277a-4aac-8df7-31c951626abd" name="Body" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-195" y="210" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e9085eba-5f15-4b65-91ed-41abf7c6917f" name="HTTP Request" type="SubSheet"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="15" y="120" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="[Body]" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="[Use Proxy]" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/x-www-form-urlencoded&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;POST&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="[Proxy URL]" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="[Proxy Username]" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="[Proxy Password]" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="[Headers]" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="[Accept]" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /><input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the 'Authorization' header for HTTP Basic." expr="" /><input type="flag" name="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" expr="" /><input type="flag" name="Use Bearer Token" friendlyname="Use Bearer Token" expr="[Use Bearer Token]" /><input type="text" name="Bearer Token" friendlyname="Bearer Token" narrative="OPTIONAL: If you 'Use Bearer Token' is set to True, this must be set to the value of the actual Bearer Token." expr="[Bearer Token]" /><input type="flag" name="Allow Auto Redirects" friendlyname="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." expr="" /><input type="number" name="Maximum Redirects" friendlyname="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." expr="" /><input type="number" name="Request Timeout" friendlyname="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." expr="[Request Timeout]" /><input type="text" name="User Agent" friendlyname="User Agent" narrative="OPTIONAL: The user agent property supplied by browsers or other applications." expr="[UserAgent]" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" /><output type="number" name="Status Code" friendlyname="Status Code" narrative="The HTTP status code associated with the request." stage="ResultCode" /></outputs><onsuccess>f51a79a9-1213-484c-bedc-065f44051a02</onsuccess><processid>d30e8f45-db72-40d2-9f17-9700006fe152</processid></stage><stage stageid="4bd01e67-49a4-4082-be0d-df1bb9cecb13" name="Username" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="165" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dac70b0c-83cb-4605-8f7b-d1d8d21922d3" name="Password" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="165" w="90" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="9091a189-b87b-4ed7-9747-1e1e9fe657f6" name="Load Certificate" type="SubSheetInfo"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><narrative>This action loads an X.509 certificate from a file and returns the certificate ID.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="3cff8803-c15f-4ab4-a032-d0afb9fa20ae" name="Start" type="Start"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filename" narrative="OPTIONAL: The full path to a file containing the certificate" stage="Filename" /><input type="text" name="Subject" narrative="OPTIONAL: The subject of the certificate if loading from the store" stage="Subject" /><input type="password" name="Password" narrative="OPTIONAL: The password to load the certificate if needed" stage="Password" /></inputs><onsuccess>8962b858-f6e2-413c-9ceb-3d80dee88de2</onsuccess></stage><stage stageid="17fddf56-07f2-4942-8515-e1b183458a7f" name="End" type="End"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><display x="15" y="15" /><outputs><output type="text" name="Certificate ID" narrative="The ID of the certificate" stage="Certificate ID" /></outputs></stage><stage stageid="e9b8de2b-8e54-4772-b186-046ca262c94c" name="Filename" type="Data"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><display x="-240" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f0ec822-a1c0-4b6b-91ba-739b0b2762b8" name="Subject" type="Data"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><display x="-150" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8962b858-f6e2-413c-9ceb-3d80dee88de2" name="Load" type="Code"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="text" name="filename" expr="[Filename]" /><input type="password" name="password" expr="[Password]" /><input type="text" name="subject" expr="[Subject]" /></inputs><outputs><output type="text" name="thumbprint" stage="Certificate ID" /></outputs><onsuccess>17fddf56-07f2-4942-8515-e1b183458a7f</onsuccess><code><![CDATA[Dim cert As X509Certificate2 = Nothing
If Not String.IsNullOrEmpty(filename) Then
  cert = New X509Certificate2(filename,password)
End If

If Not String.IsNullOrEmpty(subject) Then
  cert=GetCertificate(subject)
End If

thumbprint = cert.Thumbprint
m_Certificates.Add(thumbprint,cert)
]]></code></stage><stage stageid="745e7557-7761-4078-8ff7-334b6873f126" name="Certificate ID" type="Data"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><display x="-195" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="471ae54f-286f-4472-b48c-114fc7d04bf9" name="Password" type="Data"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><display x="-240" y="30" w="90" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="452476e7-b29f-4e5f-999a-c67789bbb0db" name="Certificate ID" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="195" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5de144f5-aa91-46e0-8f9c-ac8495d2ab0c" name="Force Pre Authorization" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="75" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c83483da-e145-4802-8407-a40cf74fc86a" name="URL Encode" type="SubSheetInfo"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><narrative>This action provides the ability to encode a URL. URL encoding converts characters that are not allowed in a URL into character-entity equivalents. For example, when the characters &lt; and &gt; are embedded in a URL, they are encoded as %3c and %3e.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f640efd4-cb34-48ee-b07d-de356b07b09b" name="Start" type="Start"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><display x="15" y="-120" /><inputs><input type="text" name="URL" narrative="The URL to encode" stage="URL" /></inputs><onsuccess>d0c241bd-a746-44fc-9fdd-5f73a4c55bf9</onsuccess></stage><stage stageid="0d4cffb2-879f-49d1-b815-43da8446a39c" name="End" type="End"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="text" name="URL" narrative="The encoded URL" stage="URL" /></outputs></stage><stage stageid="d0c241bd-a746-44fc-9fdd-5f73a4c55bf9" name="Encode URL" type="Code"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="text" name="URL" expr="[URL]" /></inputs><outputs><output type="text" name="Encoded URL" stage="URL" /></outputs><onsuccess>0d4cffb2-879f-49d1-b815-43da8446a39c</onsuccess><code><![CDATA[
Encoded_URL = HttpUtility.UrlEncode( URL )]]></code></stage><stage stageid="7a1cd30a-feef-4786-89fd-cf1838f4dfaa" name="URL" type="Data"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><display x="-195" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e627cc07-7d3a-40bd-a02a-0a2952f079d0" name="Headers" type="Collection"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-255" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="FF6600" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="495a88d6-260c-4b89-a04c-64a12af7b759" name="File" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="75" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="765d4221-5509-4c70-97c4-a946b7d3d186" name="ResultHeadersJson" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="390" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea993d2e-35df-484b-9c46-a2d69a172ceb" name="ResultHeadersJson" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-165" y="210" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="031e4c4f-fa80-4e54-b2ab-847483e49414" name="ResultHeadersJson" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-150" y="285" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="caabb2b2-6772-4932-8ad6-0695d1a170d9" name="Inputs" type="Block"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="-300" y="-45" w="210" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ae023e33-e349-4bf0-80e0-7e3794a1dbc2" name="Protected Variables" type="Block"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="-300" y="180" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="76b976d1-2b36-4ea6-8c01-04fa5ea31f20" name="Outputs" type="Block"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="-300" y="255" w="210" h="90" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="4b809006-50ee-41b3-b1db-2bc0165f895f" name="Inputs" type="Block"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><display x="-315" y="-45" w="210" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2e4c34da-85e1-4b3d-86a2-de7a6b10fcf6" name="Outputs" type="Block"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><display x="-315" y="180" w="210" h="105" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="cad4106c-2c71-48d0-960d-4d2c78a91eff" name="Inputs" type="Block"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="-300" y="-45" w="210" h="360" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a42642fa-1d93-42e4-942a-cb7a7087efef" name="Outputs" type="Block"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="-300" y="360" w="210" h="90" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="4a325f2f-9650-490c-b4bb-61928ef10e68" name="Inputs" type="Block"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><display x="-300" y="-45" w="210" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="67c03883-48e2-4ef1-8e3a-98ca0652e901" name="Outputs" type="Block"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><display x="-300" y="75" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="1d4b7d60-b4f9-48d1-8e90-6759e1bfc573" name="Input / Output" type="Block"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="161716ff-18e8-4dd0-8005-b4955791a4de" name="HTTP Request File" type="SubSheetInfo"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><narrative>Sends a message to HTTP endpoint using the specified HTTP method and content-type and receives the binary response.</narrative><display x="-195" y="-150" w="150" h="90" /></stage><stage stageid="18d7e0ce-f7cc-47fd-8172-4bca401593ae" name="End" type="End"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><loginhibit /><display x="15" y="45" /><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" /><output type="number" name="Status Code" narrative="The HTTP status code associated with the request." stage="ResultCode" /></outputs></stage><stage stageid="00fb6208-ae39-4f9d-92d7-a336172eff1e" name="HTTP Request File" type="Code"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><loginhibit /><narrative>Use this action to request binary files (ex. PDF) over HTTP.</narrative><display x="15" y="-30" /><inputs><input type="text" name="addressURL" expr="[Address URL]" /><input type="text" name="body" expr="[Body]" /><input type="text" name="contentType" expr="[Content Type]" /><input type="text" name="method" expr="[Method]" /><input type="text" name="proxyURL" expr="[Proxy URL]" /><input type="flag" name="useProxy" expr="[Use Proxy]" /><input type="text" name="proxyUsername" expr="[Proxy Username]" /><input type="password" name="proxyPassword" expr="[Proxy Password]" /><input type="collection" name="headers" expr="[Headers]" /><input type="text" name="accept" expr="[Accept]" /><input type="text" name="username" expr="[Username]" /><input type="password" name="password" expr="[Password]" /><input type="text" name="certID" expr="[Certificate ID]" /><input type="flag" name="forcePreAuth" expr="[Force Pre Authorization]" /><input type="flag" name="usingFile" expr="[File]" /><input type="text" name="FilePath" expr="[FilePath]" /><input type="flag" name="Use Bearer Token" expr="[Use Bearer Token]" /><input type="text" name="Bearer Token" expr="[Bearer Token]" /><input type="flag" name="allowAutoRedirects" expr="[Allow Auto Redirects]" /><input type="number" name="maxRedirects" expr="[Maximum Redirects]" /><input type="number" name="requestTimeout" expr="[Request Timeout]" /><input type="text" name="UserAgent" expr="[UserAgent]" /></inputs><outputs><output type="text" name="resultData" stage="Result" /><output type="text" name="resultHeadersJson" stage="ResultHeadersJson" /><output type="number" name="resultCode" stage="ResultCode" /></outputs><onsuccess>18d7e0ce-f7cc-47fd-8172-4bca401593ae</onsuccess><code><![CDATA[Try
	Dim request As WebRequest = WebRequest.Create(addressURL)

	If forcePreAuth Then
	   ' Sometimes a web server will require the authorisation header in the initial request
	   ' In which case we have to add the basic authorization header manually.
	   Dim bytes() As Byte = System.Text.Encoding.UTF8.GetBytes(String.Format("{0}:{1}",username,password))
	   Dim base64 As String = Convert.ToBase64String(bytes)
	   request.Headers.Add("Authorization", "Basic " & base64)
	Else
	  If Not String.IsNullOrEmpty(username) AndAlso Not String.IsNullOrEmpty(password) Then
		request.Credentials = New NetworkCredential(username,password)
	  End If
	End If

    ' Be aware that if you use forcePreAuth as well as UseBearerToken then forcePreAuth gets priority.
	If Use_Bearer_Token And Not forcePreAuth Then
		request.Headers.Add("Authorization","Bearer " & Bearer_Token)
	End If

	If useProxy Then
		Dim proxyURI As New Uri(proxyURL)
		Dim proxy As New WebProxy(proxyURI, True)
		Dim proxyCred As New NetworkCredential(proxyUsername, proxyPassword)
		Dim credCache As New CredentialCache()
		credCache.Add(proxyURI, "Basic", proxyCred)
		proxy.UseDefaultCredentials = False
		proxy.Credentials = credCache
		request.Proxy = proxy
	End If

	' Set the request timeout. Need to see if the user specified 'Infinite' (a value of -1 according to 
	' https://docs.microsoft.com/en-us/dotnet/api/system.net.webrequest.timeout?view=net-5.0)
	If ((requestTimeout = -1) Or (requestTimeout > 0)) Then
		request.Timeout = requestTimeout
	Else 
		request.Timeout = 100000 ' Default
	End If

	request.Method = method
	request.ContentType = contentType

	Dim httpRequest As HttpWebRequest = TryCast(request, HttpWebRequest)
	If httpRequest IsNot Nothing Then
	  If Not String.IsNullOrEmpty(accept) Then
		httpRequest.Accept = accept
	  End If
	  If Not String.IsNullOrEmpty(certID) Then
		httpRequest.ClientCertificates.Add(m_Certificates(certID))
	  End If

	  ' Set the AllowAutoRedirect attribute.
	  httpRequest.AllowAutoRedirect = allowAutoRedirects
	  httpRequest.MaximumAutomaticRedirections = maxRedirects

	End If

	For Each r As DataRow In headers.Rows
		For Each c As DataColumn In headers.Columns
			Dim columnName As String = c.ColumnName
			Dim val As String = r(columnName).ToString

			' This check ensures that we only include a single Authorization header in the request header collection.
			If Not columnName.ToUpper().Equals("AUTHORIZATION") Then
				request.Headers.Add(columnName,val)
			Else
				If Not forcePreAuth And Not Use_Bearer_Token Then
					request.Headers.Add(columnName,val)					
				End If
			End If
		Next
		Exit For ' Only one row is allowed
	Next

	' Normal stream writer, we aren't encoding a file etc.
	If Not usingFile Then

		If Not String.IsNullOrEmpty(body) Then
		  Dim requestStream As IO.Stream = request.GetRequestStream()
		  Using sw As New IO.StreamWriter(requestStream, New Text.UTF8Encoding(False))
			sw.Write(body)
		  End Using
		End If

	Else If usingFile Then
		' Prep the request body
		Dim byteArray = File.ReadAllBytes( body )
		Dim requestStream As IO.Stream = request.GetRequestStream()
		requestStream.Write(byteArray,0, byteArray.Length)
	End If

	If Not String.IsNullOrEmpty(UserAgent) Then
		httpRequest.UserAgent = UserAgent
	End If
	

	Using response As WebResponse = request.GetResponse()
		' Need to cast the WebResponse to an HttpWebResponse so we can get the StatusCode and check to see if compression was used.
		Dim httpResponse As HttpWebResponse = CType(response, HttpWebResponse)
		resultCode = Convert.ToInt32(httpResponse.StatusCode)

		resultHeadersJson = JsonConvert.SerializeObject(ToDictionary(response))
		Dim responseStream As IO.Stream = response.GetResponseStream()
        Dim lWriter As New IO.FileStream(FilePath, IO.FileMode.Create)

		' Was compression used on the data?
		If (httpResponse.ContentEncoding.ToLower().Contains("gzip"))
			responseStream = New System.IO.Compression.GZipStream(responseStream, System.IO.Compression.CompressionMode.Decompress)
		ElseIf (httpResponse.ContentEncoding.ToLower().Contains("deflate"))
			responseStream = New System.IO.Compression.DeflateStream(responseStream, System.IO.Compression.CompressionMode.Decompress)            
		End If

		Dim lLength As Long
		Dim lBytes(256) As Byte

		Do
			lLength = responseStream.Read(lBytes, 0, lBytes.Length)
			lWriter.Write(lBytes, 0, lLength)
		Loop While lLength > 0

		lWriter.Close()
		responseStream.Close()

		resultData = "done"

	End Using

Catch e As WebException

	If Not e.Response Is Nothing Then
		Using webResponse as HttpWebResponse = e.Response()
			Using dataStream as Stream = webResponse.GetResponseStream()
				Using reader as StreamReader = new StreamReader(dataStream)
					resultData = reader.ReadToEnd()
				End Using
			End Using
			resultCode = Convert.ToInt32(webResponse.StatusCode)
			resultHeadersJson = JsonConvert.SerializeObject(ToDictionary(webResponse))
		End Using
	Else
		throw ' if there is no valid response object, let the process handle the exception
	End If

End Try]]></code></stage><stage stageid="170b9d76-a47e-4df2-97a6-9ddfbc95078b" name="Result" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-210" y="330" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bb727f57-eba7-4393-a5c0-5be33be37d80" name="Body" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-135" y="-45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="995fdfcf-58d1-4097-8f13-7d6badc2f4a3" name="Block1" type="Block"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><loginhibit /><display x="-30" y="-60" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="34f43df2-1204-4bc2-b250-f2840e842d0f" name="Recover1" type="Recover"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><loginhibit /><display x="105" y="-30" /><onsuccess>910ea143-a909-4eca-a5e6-4c2142b95720</onsuccess></stage><stage stageid="910ea143-a909-4eca-a5e6-4c2142b95720" name="Exception1" type="Exception"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><loginhibit /><display x="210" y="-30" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="bc43a2e3-432a-467a-812d-4ccb88a62b02" name="Start" type="Start"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" stage="Address URL" /><input type="text" name="Body" narrative="The body text of the HTTP request" stage="Body" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." stage="Content Type" /><input type="text" name="Method" narrative="The method of the HTTP request." stage="Method" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" stage="Headers" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" stage="Accept" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" stage="Username" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" stage="Password" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" stage="Certificate ID" /><input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the authorization headers" stage="Force Pre Authorization" /><input type="flag" name="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" stage="File" /><input type="text" name="FilePath" narrative="OPTIONAL: If requesting a binary file (ex. PDF) set this to the path and file name where the file should be saved. NOTE: File name should include the file extension." stage="FilePath" /><input type="flag" name="Use Bearer Token" stage="Use Bearer Token" /><input type="text" name="Bearer Token" narrative="OPTIONAL: Enter bearer token value here if one has been provided. " stage="Bearer Token" /><input type="flag" name="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." stage="Allow Auto Redirects" /><input type="number" name="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." stage="Maximum Redirects" /><input type="number" name="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." stage="Request Timeout" /><input type="text" name="User Agent" narrative="OPTIONAL: This property is the string identifier used by software that connects over the internet." stage="UserAgent" /></inputs><onsuccess>00fb6208-ae39-4f9d-92d7-a336172eff1e</onsuccess></stage><stage stageid="e8540bec-f19c-4797-b6cb-aba944384ca1" name="Address URL" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-225" y="-45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9f90b8e6-1112-4012-bbc5-92805ffd869d" name="Proxy Password" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-135" y="105" w="90" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="dcfc84d2-6734-4a0d-98f7-c911c33335a3" name="Proxy Username" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-225" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="05c0b4f2-a550-41da-bad4-1f5ba7f34716" name="Proxy URL" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-135" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d510d39e-2e3f-4737-8e0c-2783c2bd7e08" name="Use Proxy" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-225" y="75" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5ad50174-fbe1-4847-8f57-6e02ffe66bcb" name="Content Type" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-225" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="26446a3f-6b6d-4cbe-b594-acc849fbc4d6" name="Method" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-135" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e9e08346-5eda-4e77-9567-f5c5c7a3a093" name="Headers" type="Collection"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-225" y="15" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="70903a73-74d7-4d6a-9228-9cf2bdc8e28c" name="Accept" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-135" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="45f3c763-f7cb-406e-a52f-c07238826e1f" name="Username" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-225" y="135" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="62706f83-ea14-4c02-a49f-85ae54dd685f" name="Password" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-135" y="135" w="90" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="e4445dd3-ea80-4a41-bd03-7b7254fbf6db" name="Certificate ID" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-225" y="165" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a0ed3881-bfbe-4dab-aab1-207853314195" name="Force Pre Authorization" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-225" y="45" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="13306d41-fcb6-4cc2-8efc-09e808bd5b60" name="File" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-135" y="45" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="94762f9b-44d9-4432-a791-36066057437e" name="ResultHeadersJson" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-135" y="330" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1aefb8da-ea0d-4243-9682-014d7ebbdad9" name="Inputs" type="Block"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><loginhibit /><display x="-285" y="-75" w="210" h="360" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="dd3bc439-ff26-4457-876e-06b3b8139364" name="Outputs" type="Block"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><loginhibit /><display x="-285" y="300" w="210" h="105" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="722458e4-71be-48d2-a1f2-6f6f5d1f01e1" name="FilePath" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><loginhibit /><display x="-135" y="165" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd79fc43-be32-4457-abf6-08993c1bc0ec" name="Block1" type="Block"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="-45" y="15" w="195" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d30b7a5b-599a-4875-a432-762079b25e61" name="Recover1" type="Recover"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="90" y="45" /><onsuccess>5d022479-efd0-49fa-8743-5b3b1c53fac1</onsuccess></stage><stage stageid="5d022479-efd0-49fa-8743-5b3b1c53fac1" name="Exception1" type="Exception"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="195" y="45" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="e13740fe-13bd-41cd-9d8e-7a1bfcc9739f" name="Block1" type="Block"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><display x="-30" y="-75" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a938783d-2fd8-441f-ae6c-689921e1d1f6" name="Recover1" type="Recover"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><display x="105" y="-45" /><onsuccess>7a1733ba-d4c4-4d6f-a601-8be80f4f9491</onsuccess></stage><stage stageid="7a1733ba-d4c4-4d6f-a601-8be80f4f9491" name="Exception1" type="Exception"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><display x="210" y="-45" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="91934b81-a8b6-4f29-8aa9-3b738e9d53da" name="Block1" type="Block"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><display x="-45" y="-75" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e8388e84-a3ff-407e-8997-1c708c4e18c9" name="Recover1" type="Recover"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><display x="90" y="-45" /><onsuccess>06948128-c0df-4c96-84ac-2fa362ff3e4d</onsuccess></stage><stage stageid="06948128-c0df-4c96-84ac-2fa362ff3e4d" name="Exception1" type="Exception"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><display x="195" y="-45" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="3509042f-2bb3-41c4-9b2e-0c3e3dba0b41" name="ResultCode" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="420" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a2685e68-661c-4e2e-a9c2-4fb8eed23bf2" name="ResultCode" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-240" y="315" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d59c1284-70d5-46c0-ae05-77e776b685b9" name="ResultCode" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-255" y="255" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89150ecf-1822-47a1-905e-e7d1b49b9ed8" name="ResultCode" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-210" y="375" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4cc1b3b6-1b93-49d1-b5e1-a5dc0e638c79" name="Bearer Token" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="-150" y="225" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a66aa3f4-5be4-4b29-89e7-0d6d6290a959" name="Use Bearer Token" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="225" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="d5dbfc7e-9901-49fd-b89b-add521619228" name="Note1" type="Note"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><narrative>Force Pre Authorization - Make sure that this isn't used with Use Bearer Token. Only one Authorization header is needed.

Headers Collection - If you use Use Bearer Token, make sure that this collection doesn't contain an Authorization header.

Use Bearer Token is not configured to work using a Proxy.</narrative><display x="-495" y="60" w="330" h="210" /><font family="Segoe UI" size="14" style="Regular" color="FF0000" /></stage><stage stageid="83c65d81-f13a-4c5c-bfcb-4b96df052746" name="Bearer Token" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="-150" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d31ae653-1789-4539-9ddb-15301d438d16" name="Use Bearer Token" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-240" y="105" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="efaa6f7c-43f9-4c18-aa5c-5cd3f3506386" name="Use Bearer Token" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-255" y="105" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e39cecbe-6abc-430a-b5c2-7281e57af9af" name="Bearer Token" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-165" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28f476b7-37b6-4e88-93ad-d4a1b1e289f0" name="Use Bearer Token" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-225" y="195" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="a1f6da3d-53c9-44b3-8489-e6db32ace249" name="Bearer Token" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-135" y="195" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="db3476b1-7e22-44fa-94ea-22a3292b2866" name="Note3" type="Note"><loginhibit /><narrative>Version: 10.0.2</narrative><display x="15" y="-195" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="585a3401-d73c-4b6c-a098-15337afed881" name="HTTP Request Multipart" type="SubSheetInfo"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><narrative>Sends a message to HTTP endpoint using the POST HTTP method with multipart as the content-type.</narrative><display x="-180" y="-135" w="150" h="90" /></stage><stage stageid="3adec6c2-46c0-4bd4-ab34-03908e5a7d5c" name="End" type="End"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><loginhibit /><display x="15" y="45" /><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" /><output type="number" name="Status Code" narrative="The HTTP status code associated with the request." stage="ResultCode" /></outputs></stage><stage stageid="32a4e0a5-1366-40aa-9519-e62142789499" name="HTTP Request Multipart" type="Code"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><loginhibit /><narrative>Sends a multipart HTTP request</narrative><display x="15" y="-30" /><inputs><input type="text" name="addressURL" expr="[Address URL]" /><input type="text" name="proxyURL" expr="[Proxy URL]" /><input type="flag" name="useProxy" expr="[Use Proxy]" /><input type="text" name="proxyUsername" expr="[Proxy Username]" /><input type="password" name="proxyPassword" expr="[Proxy Password]" /><input type="collection" name="headers" expr="[Headers]" /><input type="text" name="accept" expr="[Accept]" /><input type="text" name="username" expr="[Username]" /><input type="password" name="password" expr="[Password]" /><input type="text" name="certID" expr="[Certificate ID]" /><input type="flag" name="forcePreAuth" expr="[Force Pre Authorization]" /><input type="text" name="Bearer Token" expr="[Bearer Token]" /><input type="flag" name="UseBearerToken" expr="[Use Bearer Token]" /><input type="collection" name="FileMetadata" expr="[FileMetadata]" /><input type="collection" name="FieldMetadata" expr="[FieldMetadata]" /><input type="flag" name="allowAutoRedirects" expr="[Allow Auto Redirects]" /><input type="number" name="maxRedirects" expr="[Maximum Redirects]" /><input type="number" name="requestTimeout" expr="[Request Timeout]" /><input type="text" name="UserAgent" expr="[UserAgent]" /></inputs><outputs><output type="text" name="resultData" stage="Result" /><output type="text" name="resultHeadersJson" stage="ResultHeadersJson" /><output type="number" name="resultCode" stage="ResultCode" /></outputs><onsuccess>3adec6c2-46c0-4bd4-ab34-03908e5a7d5c</onsuccess><code><![CDATA[Try
	Dim request As WebRequest = WebRequest.Create(addressURL)
	Dim boundary As String = "boundaryboundary"
    Dim boundaryBytes As Byte() = System.Text.Encoding.ASCII.GetBytes(vbCrLf & "--" & boundary & vbCrLf)

	' Set the request timeout. Need to see if the user specified 'Infinite' (a value of -1 according to 
	' https://docs.microsoft.com/en-us/dotnet/api/system.net.webrequest.timeout?view=net-5.0)
	If ((requestTimeout = -1) Or (requestTimeout > 0)) Then
		request.Timeout = requestTimeout
	Else 
		request.Timeout = 100000 ' Default
	End If

	If forcePreAuth Then
	   ' Sometimes a web server will require the authorisation header in the initial request
	   ' In which case we have to add the basic authorization header manually.
	   Dim bytes() As Byte = System.Text.Encoding.UTF8.GetBytes(String.Format("{0}:{1}",username,password))
	   Dim base64 As String = Convert.ToBase64String(bytes)
	   request.Headers.Add("Authorization", "Basic " & base64)
	Else
	  If Not String.IsNullOrEmpty(username) AndAlso Not String.IsNullOrEmpty(password) Then
		request.Credentials = New NetworkCredential(username,password)
	  End If
	End If

	' Be aware that if you use forcePreAuth as well as UseBearerToken then forcePreAuth gets priority.
	If UseBearerToken And Not forcePreAuth Then
		request.Headers.Add("Authorization","Bearer " & Bearer_Token)
	End If

	If useProxy Then
		Dim proxyURI As New Uri(proxyURL)
		Dim proxy As New WebProxy(proxyURI, True)
		Dim proxyCred As New NetworkCredential(proxyUsername, proxyPassword)
		Dim credCache As New CredentialCache()
		credCache.Add(proxyURI, "Basic", proxyCred)
		proxy.UseDefaultCredentials = False
		proxy.Credentials = credCache
		request.Proxy = proxy
	End If

	request.Method = "POST"
	request.ContentType = "multipart/form-data; boundary=" + boundary

	Dim httpRequest As HttpWebRequest = TryCast(request, HttpWebRequest)
	If httpRequest IsNot Nothing Then
	  If Not String.IsNullOrEmpty(accept) Then
		httpRequest.Accept = accept
	  End If
	  If Not String.IsNullOrEmpty(certID) Then
		httpRequest.ClientCertificates.Add(m_Certificates(certID))
	  End If
	End If



	' Set the AllowAutoRedirect attribute.
	httpRequest.AllowAutoRedirect = allowAutoRedirects
	httpRequest.MaximumAutomaticRedirections = maxRedirects

	If Not String.IsNullOrEmpty(UserAgent) Then
		httpRequest.UserAgent = UserAgent
	End If

    ' Make sure that if you use UseBearerToken check that the Headers parameter doesn't have an Authorization entry.
	If Not headers Is Nothing Then
		For Each r As DataRow In headers.Rows
			For Each c As DataColumn In headers.Columns
				Dim columnName As String = c.ColumnName
				Dim val As String = r(columnName).ToString
				
				' This check ensures that we only include a single Authorization header in the request header collection.
				If Not columnName.ToUpper().Equals("AUTHORIZATION") Then
					request.Headers.Add(columnName,val)
				Else
					If Not forcePreAuth And Not UseBearerToken Then
						request.Headers.Add(columnName,val)					
					End If
				End If
			Next
			Exit For ' Only one row is allowed
		Next
	End If

	Dim requestStream As IO.Stream = request.GetRequestStream()

	Dim FileName As String
	Dim FieldName As String
	Dim ContentType As String

	' Add the Field Metadata to the request body first.
	For Each fieldData As DataRow In FieldMetadata.Rows
	
		requestStream.Write(boundaryBytes, 0, boundaryBytes.Length)

		Dim Data As String = "Content-Disposition: form-data; name=""" & fieldData.Item("Name") & """" & vbCrLf
        If fieldData.Item("ContentType") <> "" Then 
			Data = Data & "Content-Type: " + fieldData.Item("ContentType") & vbCrLf & vbCrLf
            Data = Data & fieldData.Item("Value")
            Else
	        Data = Data & vbCrLf & fieldData.Item("Value")
		End If
        
		Dim DataBytes As Byte() = System.Text.Encoding.UTF8.GetBytes(Data)
		
        requestStream.Write(DataBytes, 0, DataBytes.Length)

	Next

	' Now add the various files to the body.
    For Each fileData As DataRow In FileMetadata.Rows
		
		'Start of multipart boundary
		requestStream.Write(boundaryBytes, 0, boundaryBytes.Length)

		If fileData.Item("FieldName")="" Then 
		FieldName="file" 
		Else FieldName=fileData.Item("FieldName") 
		End If

		If fileData.Item("FileName")="" Then 
		FileName=Path.GetFileName(fileData.Item("filepath"))
		Else FileName=fileData.Item("FileName") 
		End If

		If fileData.Item("ContentType")="" Then 
		ContentType=MimeMapping.GetMimeMapping(Path.GetFileName(fileData.Item("filepath")))
		Else ContentType=fileData.Item("ContentType") 
		End If

		Dim header As String = "Content-Disposition: form-data; name=""" & FieldName & """; filename=""" & FileName & """" & vbCrLf & "Content-Type: " + ContentType & vbCrLf & vbCrLf
		Dim bytes As Byte() = System.Text.Encoding.UTF8.GetBytes(header)
		requestStream.Write(bytes, 0, bytes.Length)
    	
		Dim bytesRead = File.ReadAllBytes(fileData.Item("FilePath"))
        	requestStream.Write(bytesRead, 0, bytesRead.Length)

	Next

	'End of multipart boundary
	Dim trailer As Byte() = System.Text.Encoding.ASCII.GetBytes(vbCrLf & "--" & boundary & "--" & vbCrLf)
    requestStream.Write(trailer, 0, trailer.Length)
    requestStream.Close()

	Using response As WebResponse = request.GetResponse()
		' Need to cast the WebResponse to an HttpWebResponse so we can get the StatusCode and check to see if compression was used.
		Dim httpResponse As HttpWebResponse = CType(response, HttpWebResponse)
		resultCode = Convert.ToInt32(httpResponse.StatusCode)

		resultHeadersJson = JsonConvert.SerializeObject(ToDictionary(response))
		Dim responseStream As IO.Stream = response.GetResponseStream()

		' Was compression used on the data?
		If (httpResponse.ContentEncoding.ToLower().Contains("gzip"))
			responseStream = New System.IO.Compression.GZipStream(responseStream, System.IO.Compression.CompressionMode.Decompress)
		ElseIf (httpResponse.ContentEncoding.ToLower().Contains("deflate"))
			responseStream = New System.IO.Compression.DeflateStream(responseStream, System.IO.Compression.CompressionMode.Decompress)            
		End If

		Dim sr As New IO.StreamReader(responseStream)
		resultData = sr.ReadToEnd()
	End Using

Catch e As WebException

	If Not e.Response Is Nothing Then

		Using webResponse as HttpWebResponse = e.Response()
			Using dataStream as Stream = webResponse.GetResponseStream()
				Using reader as StreamReader = new StreamReader(dataStream)
					resultData = reader.ReadToEnd()
				End Using
			End Using
			resultCode = Convert.ToInt32(webResponse.StatusCode)
			resultHeadersJson = JsonConvert.SerializeObject(ToDictionary(webResponse))
		End Using
	Else
		throw 
	End If

End Try]]></code></stage><stage stageid="963972a4-a007-4341-af9f-c6ef75f14920" name="Result" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-225" y="315" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="903cac1f-30ca-40dc-98b8-42f2d11cb6a4" name="Block1" type="Block"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><loginhibit /><display x="-45" y="-60" w="195" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="10d2bb33-8542-4bda-8b8d-0c8cd4290385" name="Recover1" type="Recover"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><loginhibit /><display x="90" y="-30" /><onsuccess>d7bacdf2-b0bf-4934-943d-d226e9a09264</onsuccess></stage><stage stageid="d7bacdf2-b0bf-4934-943d-d226e9a09264" name="Exception1" type="Exception"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><loginhibit /><display x="195" y="-30" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="063dce59-4ddf-4e2e-8de5-88f7ffe33530" name="Start" type="Start"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" stage="Address URL" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" /><input type="collection" name="FileMetadata" narrative="Files to be sent in the multipart HTTP  request" stage="FileMetadata" /><input type="collection" name="FieldMetadata" narrative="Text data to be sent in the multipart HTTP  request" stage="FieldMetadata" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" stage="Headers" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" stage="Accept" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" stage="Username" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" stage="Password" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" stage="Certificate ID" /><input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the authorization headers" stage="Force Pre Authorization" /><input type="flag" name="Use Bearer Token" narrative="OPTIONAL: If you need bearer token authorization set this to true." stage="Use Bearer Token" /><input type="text" name="Bearer Token" narrative="OPTIONAL: If you have a bearer token and need to use authorization" stage="Bearer Token" /><input type="flag" name="Allow Auto Redirects" narrative="OPTIONAL: If you prefer to manually handle redirects (ie. HTTP 302) set this flag to False. Default value is True." stage="Allow Auto Redirects" /><input type="number" name="Maximum Redirects" narrative="OPTIONAL: If 'Allow Auto Redirect' is True, this controls the maximum number of redirects to allow. Default value is 50." stage="Maximum Redirects" /><input type="number" name="Request Timeout" narrative="OPTIONAL: This  property controls the length of time, in milliseconds, until the request times out and throws a WebException. Default value is 100000 milliseconds (i.e. 100 seconds)." stage="Request Timeout" /><input type="text" name="User Agent" narrative="OPTIONAL: The User-Agent request header is a characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent." stage="UserAgent" /></inputs><onsuccess>32a4e0a5-1366-40aa-9519-e62142789499</onsuccess></stage><stage stageid="bad6d1f4-bdbf-4eaf-bbba-cae87e0adc5b" name="Address URL" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-225" y="-45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80dba3fd-4152-45bb-bcf8-a96c3c05828d" name="Proxy Password" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-135" y="45" w="90" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="6d18a12b-6f9d-47e9-ba19-7729733d51b3" name="Proxy Username" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-225" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0ebe6750-8f30-4797-9cce-cc945a880403" name="Proxy URL" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-135" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30a7630d-d5db-422c-80e6-97b45f287851" name="Use Proxy" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-225" y="15" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2545caff-1d1d-47c0-b752-1d1dd073b912" name="Headers" type="Collection"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-135" y="-45" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="11ff9930-c087-4c05-ad52-07130ab67b42" name="Accept" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-135" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b72acba7-f345-40f3-b349-d159af3d71ee" name="Username" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-225" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="960d9197-e030-4efd-b3c2-7843e15ec1fe" name="Password" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-135" y="75" w="90" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="e9590c7c-8515-4c91-9e18-f503b20a4a23" name="Certificate ID" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-225" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c27d4469-a0a9-4e5d-9e4e-4486bf3cb9ea" name="Force Pre Authorization" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-225" y="-15" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5084587f-09a9-4613-b6de-ae9a47782c43" name="ResultHeadersJson" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-135" y="315" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e7d807d6-0eb8-49b1-8d03-3e661ef44996" name="Inputs" type="Block"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><loginhibit /><display x="-285" y="-75" w="210" h="330" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="9d4a3881-f78f-4556-8d00-46b27f2a1239" name="Outputs" type="Block"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><loginhibit /><display x="-285" y="285" w="210" h="105" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="26c19eae-b220-41e2-83d8-ac3293103537" name="ResultCode" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-225" y="360" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1442ce0-f887-4b3f-9afc-17e6be7d7285" name="Bearer Token" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><loginhibit /><display x="-135" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd8093ae-9f60-4e6b-bfbc-f31f8ee98538" name="Use Bearer Token" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-225" y="135" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0a47da72-c6f3-4e80-a710-f934d1c630f3" name="Note1" type="Note"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><loginhibit /><narrative>Force Pre Authorization - Make sure that this isn't used with Use Bearer Token. Only one Authorization header is needed.

Headers Collection - If you use Use Bearer Token, make sure that this collection doesn't contain an Authorization header.

Use Bearer Token is not configured to work using a Proxy.</narrative><display x="-480" y="30" w="330" h="210" /><font family="Segoe UI" size="14" style="Regular" color="FF0000" /></stage><stage stageid="f001adc6-fb62-4adc-b1f7-65b719ad6ea6" name="FileMetadata" type="Collection"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><loginhibit /><narrative>Files to be sent in the multipart HTTP  request</narrative><display x="-135" y="135" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="FileName" type="text" description="Optional. Used to populate the filename header for this file's section in the multi-part form body. If a value is not specified, the filename is used from the provided filepath" /><field name="FieldName" type="text" description="Optional. Used to populate the name header for this file's section in the multi-part form body. If a value is not specified, the filename is set to 'file'" /><field name="ContentType" type="text" description="Optional. Used to populate the Content-Type header for this file's section in the multi-part form body. If a value is not specified, the mimetype of the document is used." /><field name="FilePath" type="text" description="The path of the file" /></collectioninfo></stage><stage stageid="62b83467-979b-4a52-a90e-a856a953fd3f" name="FieldMetadata" type="Collection"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><loginhibit /><narrative>Text data to be sent in the multipart HTTP  request</narrative><display x="-225" y="165" w="90" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Name" type="text" description="Name of the field" /><field name="Value" type="text" description="Value to be set for the field" /><field name="ContentType" type="text" description="Optional. Used to populate the Content-Type header for this field" /></collectioninfo></stage><stage stageid="569bdaa6-7e4b-4d05-b5bc-ff806a445071" name="Allow Auto Redirects" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="195" w="90" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="95efd336-3d93-4cfd-9efe-0fae5d6ae81b" name="Maximum Redirects" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="255" w="90" h="30" /><datatype>number</datatype><initialvalue>50</initialvalue><private /><alwaysinit /></stage><stage stageid="de90ac26-44e7-4ad3-8b91-55a9582febf6" name="Allow Auto Redirects" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-225" y="225" w="90" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="c5081f57-562b-429d-abde-1c154baa6826" name="Maximum Redirects" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-135" y="225" w="90" h="30" /><datatype>number</datatype><initialvalue>50</initialvalue><private /><alwaysinit /></stage><stage stageid="26021f76-0f40-42f2-83be-4623616b4060" name="Allow Auto Redirects" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-135" y="195" w="90" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="298f7a26-0ac5-4d44-b31c-f06ed8fa7458" name="Maximum Redirects" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-225" y="195" w="90" h="30" /><datatype>number</datatype><initialvalue>50</initialvalue><private /><alwaysinit /></stage><stage stageid="6475dcb8-adb9-4c9d-b082-6cc53cb732f6" name="Request Timeout" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-135" y="165" w="90" h="30" /><datatype>number</datatype><initialvalue>100000</initialvalue><private /><alwaysinit /></stage><stage stageid="5a02b6c1-39e7-4ef4-ab0d-b1a1f128c86a" name="Request Timeout" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-240" y="135" w="90" h="30" /><datatype>number</datatype><initialvalue>100000</initialvalue><private /><alwaysinit /></stage><stage stageid="1effbf75-66b8-4089-a7b9-56d7f5644c97" name="Request Timeout" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="255" w="90" h="30" /><datatype>number</datatype><initialvalue>100000</initialvalue><private /><alwaysinit /></stage><stage stageid="2b2e57e2-cc82-46bd-9c9f-780c3261ca07" name="Request Timeout" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-165" y="75" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86ecfacb-ce2d-4af3-9691-42c245cec896" name="Request Timeout" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-225" y="255" w="90" h="30" /><datatype>number</datatype><initialvalue>100000</initialvalue><private /><alwaysinit /></stage><stage stageid="f3706ccf-bd8c-4906-8909-f44dd8da40bd" name="UserAgent" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="285" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fdedf5ea-7d21-41bd-85e9-86ea12ff4cf4" name="Note2" type="Note"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><narrative>User Agent details can be found at
https://www.useragents.me/</narrative><display x="-510" y="255" w="180" h="90" /><font family="Segoe UI" size="14" style="Regular" color="3366FF" /></stage><stage stageid="d187d18f-42b3-4387-8edc-e47b7819d27c" name="Note4" type="Note"><loginhibit /><narrative>© 2024 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://portal.blueprism.com/agreements

Support URL

https://community.blueprism.com</narrative><display x="240" y="-60" w="360" h="150" /><font family="Segoe UI" size="14" style="Regular" color="3366FF" /></stage><stage stageid="e96218bd-a200-401f-be80-9817fd95ab62" name="UserAgent" type="Data"><subsheetid>74a20e65-147b-4dea-867e-fa08fbea81cb</subsheetid><display x="-135" y="255" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c6870fd6-3fad-4390-a2e9-6eab18e24cf0" name="UserAgent" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-150" y="135" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bf27639-14b2-4688-a56d-0ce974241957" name="UserAgent" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><narrative>The User-Agent request header is a characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent.</narrative><display x="-255" y="135" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc1ed6e9-0795-4e1f-b868-f2b3c7de2f1f" name="UserAgent" type="Data"><subsheetid>701af150-fe0b-4f6b-a823-dc6d09569c09</subsheetid><display x="-225" y="225" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="35ff84bb-c65a-4d40-b776-e77f90e721d2" name="Utility - Image Manipulation" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Image Manipulation" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="Utility methods for analysing and manipulating images." byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>373c66fe-ed50-4347-8826-961c605c36a2</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="5afcdaf5-28c3-4fa9-9c82-296be88ed2bf" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="770f130d-2233-4b18-b427-a6b2068004c9" type="Normal" published="True"><name>Image is White</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="58ce2146-7428-4658-8368-0a657b4650b8" type="Normal" published="True"><name>Image Contains Colour</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="51f754b0-95a4-49ae-8911-4df231659481" type="Normal" published="True"><name>Image Is Uniform Colour</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6" type="Normal" published="True"><name>Get Sub Image Position</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1415e255-6251-4f44-84a2-9def682b5033" type="Normal" published="True"><name>Find First Pixel From Left</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="86993a9b-04d3-4088-97b9-173ee7ae96e5" type="Normal" published="True"><name>Find First Pixel From Bottom</name><view><camerax>154</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="260695ce-598a-45da-857b-faaf399998a1" type="Normal" published="False"><name>Find First Pixel From Direction</name><view><camerax>97</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d5928a3a-277e-4cb7-9ec6-6fce646a091f" type="Normal" published="True"><name>Crop Image</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="65658da5-49dd-45b2-bb03-d813b0b44612" type="Normal" published="True"><name>Resize Image</name><view><camerax>158</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="171af258-95db-4ca1-bfa1-4ae099ac4b78" type="Normal" published="True"><name>Convert Image Format</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="1682a9b9-5e52-4020-9af1-4903109033fc" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>c42f55e8-f668-45da-b9d4-c31d1674ded1</onsuccess></stage><stage stageid="c42f55e8-f668-45da-b9d4-c31d1674ded1" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="6a2af24c-7a9d-4380-b981-d03dd8ae1334" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>Microsoft.VisualBasic</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[

]]></globalcode><code><![CDATA[
Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

Public Function ResizeImage(ByVal InputImage As Image, ByVal Width As Integer, ByVal Height As Integer) As Image
        Return New Bitmap(InputImage, New Size(Width, Height))
End Function]]></code></stage><stage stageid="ac71c3ed-405e-43d0-90d0-40a5cbc70038" name="Clean Up" type="SubSheetInfo"><subsheetid>5afcdaf5-28c3-4fa9-9c82-296be88ed2bf</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2466cb5f-eb76-43fb-8eb4-6c9abc075131" name="Start" type="Start"><subsheetid>5afcdaf5-28c3-4fa9-9c82-296be88ed2bf</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>e18f9486-056a-4f45-af10-ebf4fe0dfaa8</onsuccess></stage><stage stageid="e18f9486-056a-4f45-af10-ebf4fe0dfaa8" name="End" type="End"><subsheetid>5afcdaf5-28c3-4fa9-9c82-296be88ed2bf</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="7edd516c-669b-4090-8945-e74489e05155" name="new" type="Note"><subsheetid>5afcdaf5-28c3-4fa9-9c82-296be88ed2bf</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="55619304-07ca-4697-a7ec-4ab708a96063" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="989c9452-a94a-4dd7-bd86-c6108901a496" name="Image is White" type="SubSheetInfo"><subsheetid>770f130d-2233-4b18-b427-a6b2068004c9</subsheetid><narrative>Determines whether the supplied image is all white</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="50daf261-a2c1-4a71-b422-c3930b774d87" name="Start" type="Start"><subsheetid>770f130d-2233-4b18-b427-a6b2068004c9</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><display x="15" y="-105" /><inputs><input type="image" name="Image" narrative="The image to check" stage="Image" /></inputs><onsuccess>e3a5956c-32d6-4363-8c93-10a8d6654be2</onsuccess></stage><stage stageid="055b2548-e116-4bfa-9d08-e32e53324111" name="End" type="End"><subsheetid>770f130d-2233-4b18-b427-a6b2068004c9</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="White" narrative="True if the image is white" stage="White" /></outputs></stage><stage stageid="e3a5956c-32d6-4363-8c93-10a8d6654be2" name="Image Is White" type="Code"><subsheetid>770f130d-2233-4b18-b427-a6b2068004c9</subsheetid><display x="15" y="-15" /><inputs><input type="image" name="Image" expr="[Image]" /></inputs><outputs><output type="flag" name="White" stage="White" /></outputs><onsuccess>055b2548-e116-4bfa-9d08-e32e53324111</onsuccess><code><![CDATA[
Dim c as System.Drawing.Color
White = False

For y As Integer = 0 To Image.Height - 1
 For x As Integer = 0 To Image.Width - 1
  c = Image.GetPixel(x, y)
   If c.Name <> "ffffffff" Then
		White = False
		Exit Sub
   End If
 Next
Next
White = True]]></code></stage><stage stageid="d5332b0b-0700-4136-a598-1e2d5679bcd1" name="Image" type="Data"><subsheetid>770f130d-2233-4b18-b427-a6b2068004c9</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d109ed4d-380e-4c12-82c7-bdcc50b8fd73" name="White" type="Data"><subsheetid>770f130d-2233-4b18-b427-a6b2068004c9</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="806e2448-b127-47af-82cf-20a97d90299e" name="Image Contains Colour" type="SubSheetInfo"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><narrative>Determines whether the specified colour is contained in the image.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="99d72a81-ce2e-4def-b84a-69a636b594f5" name="Start" type="Start"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><display x="15" y="-105" /><inputs><input type="image" name="Image" narrative="The image to check" stage="Image" /><input type="text" name="Test Colour" narrative="The colour to check for in the hexadecimal format AARRGGBB (eg 'FF336699')" stage="Test Colour" /></inputs><onsuccess>d485eeca-314d-47ab-88d7-da0d7a86bfc1</onsuccess></stage><stage stageid="8ee84eda-d89e-44be-9a93-9d421c786b4a" name="End" type="End"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="flag" name="Contains Colour" stage="Contains Colour" /></outputs></stage><stage stageid="d485eeca-314d-47ab-88d7-da0d7a86bfc1" name="Image Contains Colour" type="Code"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><display x="15" y="-15" w="90" h="30" /><inputs><input type="image" name="Image" expr="[Image]" /><input type="text" name="Test Colour" expr="[Test Colour]" /></inputs><outputs><output type="flag" name="Contains Colour" stage="Contains Colour" /></outputs><onsuccess>8ee84eda-d89e-44be-9a93-9d421c786b4a</onsuccess><code><![CDATA['First Validate the input colour
If Test_Colour.Length = 8
  For Each ch as Char In Test_Colour.ToCharArray()
     If Not char.IsNumber(ch) Then
        Dim IsValidChar As Boolean = False
        For Each ValidChar As Char In New Char() {"A", "B", "C", "D", "E", "F"}
           If char.ToUpper(ch).Equals(ValidChar) Then
              IsValidChar = True
              Exit For
           End If
        Next

        If Not IsValidChar Then
           Throw New ArgumentException("The supplied test colour '" & Test_Colour & "' is not valid. Please use a string in the hexadecimal format AARRGGBB (eg 'FF336699')")
        End If
     End If
  Next
End If

Dim c as System.Drawing.Color
Contains_Colour = False

For y As Integer = 0 To Image.Height - 1
 For x As Integer = 0 To Image.Width - 1
  c = Image.GetPixel(x, y)
   If c.Name.ToUpper() = Test_Colour.ToUpper() Then
		Contains_Colour = True
		Exit Sub
   End If
 Next
Next
]]></code></stage><stage stageid="3ff3d56c-4233-4e9b-9707-f9c463efcc9e" name="Image" type="Data"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1b1064cd-42e6-4418-b77c-ed32265cec51" name="Black" type="Data"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="44c80ec6-4258-4d28-b48b-6d5b5793b82f" name="Test Colour" type="Data"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e65c1106-cd95-4665-b535-7c767f58f68a" name="Get Sub Image Position" type="SubSheetInfo"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><narrative>Finds whether the main image contains a sub image, and if found gives the X,Y coordinates of the sub image.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a7e30009-84a0-48b0-b4ee-8ac3f7e18719" name="Start" type="Start"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="image" name="Main Image" narrative="The image to check" stage="Main Image" /><input type="image" name="Potential SubImage" narrative="The image to check for" stage="Potential SubImage" /></inputs><onsuccess>9581a702-c064-4ee6-a892-a8f051d39872</onsuccess></stage><stage stageid="1d937619-473b-4d9b-b9bc-03d10e8e426a" name="End" type="End"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="number" name="X Index" narrative="The X location of the sub image" stage="X Index" /><output type="number" name="Y Index" narrative="The Y location of the sub image" stage="Y Index" /><output type="flag" name="Contained" narrative="True if the main image contains the sub image" stage="Contained" /></outputs></stage><stage stageid="9581a702-c064-4ee6-a892-a8f051d39872" name="Detect Partial Image" type="Code"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="30" /><inputs><input type="image" name="Potential SubImage" expr="[Potential SubImage]" /><input type="image" name="Main Image" expr="[Main Image]" /></inputs><outputs><output type="number" name="X Index" stage="X Index" /><output type="number" name="Y Index" stage="Y Index" /><output type="flag" name="Contained" stage="Contained" /></outputs><onsuccess>1d937619-473b-4d9b-b9bc-03d10e8e426a</onsuccess><code><![CDATA[Contained = False

Dim bmPartial as Bitmap = ctype(Potential_SubImage, bitmap)
Dim bmCaptured as bitmap = ctype(Main_Image, bitmap)

Dim i As Integer = 0
Dim j As Integer = 0
For i = 0 to bmCaptured.Width - bmPartial.Width 
   For j = 0 to bmCaptured.Height - bmPartial.Height 
      Dim IsSubImage as Boolean = True
      For x as integer = 0 to bmpartial.width -1
         For y as integer = 0 to bmpartial.height -1
            If bmCaptured.GetPixel(i+x,j+y).ToArgb() <> bmPartial.GetPixel(x,y).ToArgb()
               IsSubImage = False
               Goto NextAnchor
            End If
         Next
      Next

NextAnchor:
      If IsSubImage Then
         X_Index = i
         Y_Index = j
         Contained = True
         Exit Sub
      End If

   Next
Next

X_Index = -1
Y_Index = -1
Contained = False]]></code></stage><stage stageid="d6454be3-1f6d-4dd6-94f7-383bb306ffad" name="Contained" type="Data"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><display x="210" y="90" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="514ea927-ab73-447d-87c7-f7647125551e" name="Y Index" type="Data"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><display x="150" y="90" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b055c12d-48c3-493e-8a96-d403e783e2af" name="X Index" type="Data"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><display x="90" y="90" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52799220-2f09-48da-9a90-bec11811733e" name="Potential SubImage" type="Data"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><display x="195" y="-105" w="120" h="30" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="843e698a-2e6a-4acc-bdc0-55f88a76e265" name="Main Image" type="Data"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><display x="105" y="-105" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dfbd8a53-c386-4e12-b484-0f3052db4f61" name="Contains Colour" type="Data"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><display x="105" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fff62d3f-8e87-40c1-92ef-39744dd31d71" name="Find First Pixel From Left" type="SubSheetInfo"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><narrative>Finds the index of the first column of pixels from the left, containing a pixel of the specified colour.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0aa9c991-2445-4945-8be2-1dad98e7048d" name="Start" type="Start"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Colour" narrative="The colour of interest, expressed as AARRGGBB in hex format." stage="Colour" /><input type="image" name="Image" narrative="The image to be examined." stage="Image" /><input type="flag" name="Invert Logic" narrative="When true, the first pixel NOT equal to the specified colour will be matched" stage="Invert Logic" /></inputs><onsuccess>095a4aaf-717c-4e5b-8fd7-6dbd5dc391b4</onsuccess></stage><stage stageid="f4be1535-44d7-41de-b71c-e998382198ac" name="End" type="End"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="number" name="First Pixel Index" narrative="The index of the first pixel from the left of the colour of interest, or -1 if no such exists." stage="First Pixel Index" /></outputs></stage><stage stageid="30a1f8e8-5c67-4cb4-8602-f7782964129d" name="Colour" type="Data"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f8e53b21-c678-4135-85a2-cab7c67da67a" name="Image" type="Data"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><display x="150" y="-105" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="45be70b4-d30a-40ad-a1e1-cd8b0566b289" name="First Pixel Index" type="Data"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><display x="90" y="90" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f8e4bbb-e816-4a9e-a972-3ab769d9239c" name="Invert Logic" type="Data"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><display x="210" y="-105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcdb71aa-15c6-440a-a006-c2a5f32d9343" name="Find First Pixel From Direction" type="SubSheetInfo"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><narrative>Finds the index of the first row or column of pixels from the given direction, containing a pixel of the specified colour.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="44f28f15-0b20-4c21-83f1-cc7f80092cdd" name="Start" type="Start"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="Colour" narrative="The colour of interest, expressed as AARRGGBB in hex format." stage="Colour" /><input type="image" name="Image" narrative="The image to be examined." stage="Image" /><input type="flag" name="Invert Logic" narrative="When true, the first pixel NOT equal to the specified colour will be matched" stage="Invert Logic" /><input type="text" name="Direction" narrative="The direction to search from - Left, Right, Top, Bottom" stage="Direction" /></inputs><onsuccess>4d5132e6-f382-4bd7-97c9-69e7c58f5a7d</onsuccess></stage><stage stageid="b79ccae7-75cc-4bcc-84f4-749e4f82a147" name="Colour" type="Data"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><display x="90" y="-60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f67e7eff-7bcf-4c31-88a5-980e2f495d23" name="Image" type="Data"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><display x="150" y="-60" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9c15ce02-d385-407a-965a-1794ec504bea" name="Invert Logic" type="Data"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><display x="210" y="-60" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d20f9712-8c03-4fb2-a7ea-6d03460bcf03" name="Direction" type="Data"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><display x="270" y="-60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4d5132e6-f382-4bd7-97c9-69e7c58f5a7d" name="Find First Pixel" type="Code"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><display x="15" y="45" w="90" h="30" /><inputs><input type="image" name="Image" expr="[Image]" /><input type="text" name="Test Colour" expr="[Colour]" /><input type="flag" name="Invert Logic" expr="[Invert Logic]" /><input type="text" name="Direction" expr="[Direction]" /></inputs><outputs><output type="number" name="FirstPixelIndex" stage="First Pixel Index" /></outputs><onsuccess>e8fcf813-e125-4a62-aef5-3009e3839408</onsuccess><code><![CDATA['First Validate the input colour
If Test_Colour.Length = 8
  For Each ch as Char In Test_Colour.ToCharArray()
     If Not char.IsNumber(ch) Then
        Dim IsValidChar As Boolean = False
        For Each ValidChar As Char In New Char() {"A", "B", "C", "D", "E", "F"}
           If char.ToUpper(ch).Equals(ValidChar) Then
              IsValidChar = True
              Exit For
           End If
        Next

        If Not IsValidChar Then
           Throw New ArgumentException("The supplied test colour '" & Test_Colour & "' is not valid. Please use a string in the hexadecimal format AARRGGBB (eg 'FF336699')")
        End If
     End If
  Next
End If

Dim c as System.Drawing.Color
FirstPixelIndex = -1

Dim StartXIndex As Integer
Dim EndXIndex As Integer
Dim StartYIndex As Integer
Dim EndYIndex As Integer
Dim XStep As Integer= 1
Dim YStep As Integer= 1
Select Case Direction
   Case "Left"
		StartXIndex = 0
		EndXIndex = Image.Width - 1
		StartYIndex = 0
		EndYIndex = Image.Height - 1
	Case "Right"
		StartXIndex = Image.Width - 1
		EndXIndex = 0
		StartYIndex = 0
		EndYIndex = Image.Height - 1
	Case "Top"
		StartXIndex = 0
		EndXIndex = Image.Width - 1
		StartYIndex = 0
		EndYIndex = Image.Height - 1
	Case "Bottom"
		StartXIndex = 0
		EndXIndex = Image.Width - 1
		StartYIndex = Image.Height - 1
		EndYIndex = 0
	Case Else
		Throw New ApplicationException("Invalid Direction - " & Direction)
End Select

If StartXIndex > EndXIndex Then XStep = -1
If StartYIndex > EndYIndex Then YStep = -1

If Direction = "Left" OrElse Direction = "Right" Then
	For x As Integer = StartXIndex To EndXIndex Step XStep
	 For y As Integer = StartYIndex To EndYIndex Step YStep
	  c = Image.GetPixel(x, y)
	   Dim Match As Boolean = c.Name.ToUpper() = Test_Colour.ToUpper() 
	   If (Match AndAlso Not Invert_Logic) OrElse (Not Match AndAlso Invert_Logic) Then
			FirstPixelIndex = x
			Exit Sub
	   End If
	 Next
	Next
Else
 'Top or Bottom
 For y As Integer = StartYIndex To EndYIndex Step YStep
	For x As Integer = StartXIndex To EndXIndex Step XStep
	  c = Image.GetPixel(x, y)
	   Dim Match As Boolean = c.Name.ToUpper() = Test_Colour.ToUpper() 
	   If (Match AndAlso Not Invert_Logic) OrElse (Not Match AndAlso Invert_Logic) Then
			FirstPixelIndex = y
			Exit Sub
	   End If
	 Next
	Next
End If
]]></code></stage><stage stageid="095a4aaf-717c-4e5b-8fd7-6dbd5dc391b4" name="Find First Pixel From Direction" type="SubSheet"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><display x="15" y="0" w="120" h="90" /><inputs><input type="text" name="Colour" narrative="The colour of interest, expressed as AARRGGBB in hex format." expr="[Colour]" /><input type="image" name="Image" narrative="The image to be examined." expr="[Image]" /><input type="flag" name="Invert Logic" narrative="When true, the first pixel NOT equal to the specified colour will be matched" expr="[Invert Logic]" /><input type="text" name="Direction" narrative="The direction to search from - Left, Right, Top, Bottom" expr="&quot;Left&quot;" /></inputs><outputs><output type="number" name="First Pixel Index" narrative="The index of the first pixel from the left of the colour of interest, or -1 if no such exists." stage="First Pixel Index" /></outputs><onsuccess>f4be1535-44d7-41de-b71c-e998382198ac</onsuccess><processid>260695ce-598a-45da-857b-faaf399998a1</processid></stage><stage stageid="e8fcf813-e125-4a62-aef5-3009e3839408" name="End" type="End"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><loginhibit /><display x="15" y="135" /><outputs><output type="number" name="First Pixel Index" narrative="The index of the first pixel from the left of the colour of interest, or -1 if no such exists." stage="First Pixel Index" /></outputs></stage><stage stageid="8b653267-9f22-4a6c-98a5-1786802aacb3" name="First Pixel Index" type="Data"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><display x="90" y="135" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="abc37893-2948-4e5a-a928-8d3ff9d1caf0" name="Find First Pixel From Bottom" type="SubSheetInfo"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><narrative>Finds the index of the first row of pixels from the bottom, containing a pixel of the specified colour.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="507e6b7e-f58f-4a64-bfa2-0208fb1f4b5b" name="Start" type="Start"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><loginhibit /><display x="105" y="-105" /><inputs><input type="text" name="Colour" narrative="The colour of interest, expressed as AARRGGBB in hex format." stage="Colour" /><input type="image" name="Image" narrative="The image to be examined." stage="Image" /><input type="flag" name="Invert Logic" narrative="When true, the first pixel NOT equal to the specified colour will be matched" stage="Invert Logic" /></inputs><onsuccess>9587f833-3c43-452e-b0fc-44f0b23ee385</onsuccess></stage><stage stageid="5ad5e976-e5ca-431c-af3a-5413c033f7eb" name="End" type="End"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><loginhibit /><display x="105" y="90" /><outputs><output type="number" name="First Pixel Index" narrative="The index of the first pixel from the left of the colour of interest, or -1 if no such exists." stage="First Pixel Index" /></outputs></stage><stage stageid="324d4eab-2e2c-4221-a15d-675362686388" name="Colour" type="Data"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><display x="180" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a4ac85c2-9007-4dfc-85b5-c41fc2651643" name="Image" type="Data"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><display x="240" y="-105" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28a2bbe9-b996-4f50-9391-bf205a1f3d75" name="First Pixel Index" type="Data"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><display x="180" y="90" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e22ee215-2ceb-4749-8cfd-0bc744f8597f" name="Invert Logic" type="Data"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><display x="300" y="-105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9587f833-3c43-452e-b0fc-44f0b23ee385" name="Find First Pixel From Direction" type="SubSheet"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><display x="105" y="0" w="120" h="90" /><inputs><input type="text" name="Colour" narrative="The colour of interest, expressed as AARRGGBB in hex format." expr="[Colour]" /><input type="image" name="Image" narrative="The image to be examined." expr="[Image]" /><input type="flag" name="Invert Logic" narrative="When true, the first pixel NOT equal to the specified colour will be matched" expr="[Invert Logic]" /><input type="text" name="Direction" narrative="The direction to search from - Left, Right, Top, Bottom" expr="&quot;Bottom&quot;" /></inputs><outputs><output type="number" name="First Pixel Index" narrative="The index of the first pixel from the left of the colour of interest, or -1 if no such exists." stage="First Pixel Index" /></outputs><onsuccess>5ad5e976-e5ca-431c-af3a-5413c033f7eb</onsuccess><processid>260695ce-598a-45da-857b-faaf399998a1</processid></stage><stage stageid="fb7b0b1d-6ad3-42ae-abf7-ae9c71c9000e" name="Image Is Uniform Colour" type="SubSheetInfo"><subsheetid>51f754b0-95a4-49ae-8911-4df231659481</subsheetid><narrative>Determines whether the image contains a single colour or not</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="3f18bf6a-8403-4cb1-8086-38e576dcb2a5" name="Start" type="Start"><subsheetid>51f754b0-95a4-49ae-8911-4df231659481</subsheetid><loginhibit /><display x="-45" y="-135" /><inputs><input type="image" name="Image" narrative="The image to test for uniform colour" stage="Image" /></inputs><onsuccess>bec769bc-c01b-43ba-875b-cb97cb2f090a</onsuccess></stage><stage stageid="bd709bcc-53a9-4ff8-abc5-a3b2a5f45b6c" name="End" type="End"><subsheetid>51f754b0-95a4-49ae-8911-4df231659481</subsheetid><loginhibit /><display x="-45" y="-45" /><outputs><output type="flag" name="Uniform" narrative="True if the image contains a single colour (regardless of what that colour is); False if there is any variation" stage="Uniform" /></outputs></stage><stage stageid="bec769bc-c01b-43ba-875b-cb97cb2f090a" name="Is Uniform" type="Code"><subsheetid>51f754b0-95a4-49ae-8911-4df231659481</subsheetid><loginhibit /><display x="-45" y="-90" /><inputs><input type="image" name="Image" expr="[Image]" /></inputs><outputs><output type="flag" name="Uniform" stage="Uniform" /></outputs><onsuccess>bd709bcc-53a9-4ff8-abc5-a3b2a5f45b6c</onsuccess><code><![CDATA[' Assume uniform
Uniform = True

' An empty image is (sort of) uniform
If Image.Size = Size.Empty Then Return

' Get the argb value of the origin
Dim argb as Integer = Image.GetPixel(0,0).ToArgb()

' And check each pixel against that value
For y As Integer = 0 To Image.Height - 1
	For x As Integer = 0 To Image.Width - 1
		If Image.GetPixel(x, y).ToArgb() <> argb Then
			Uniform = False
			Return
		End If
	Next
Next
]]></code></stage><stage stageid="8428e08f-f97f-4e39-880e-9a0b8c32e364" name="Image" type="Data"><subsheetid>51f754b0-95a4-49ae-8911-4df231659481</subsheetid><display x="30" y="-135" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8d1707e3-f291-4617-b0c7-083b8834d748" name="Uniform" type="Data"><subsheetid>51f754b0-95a4-49ae-8911-4df231659481</subsheetid><display x="30" y="-45" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="60ae1f17-f331-4bfd-b6c1-8ab8f92aa89a" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="240" y="-15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="c4d5317f-b096-46d8-9d03-383848f6a0b8" name="Note1" type="Note"><loginhibit /><narrative>Version 10.1.0</narrative><display x="15" y="-150" w="90" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="8c3208c1-7802-40f6-9011-e477eafbc70f" name="Crop Image" type="SubSheetInfo"><subsheetid>d5928a3a-277e-4cb7-9ec6-6fce646a091f</subsheetid><narrative>Crops the given image</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a6466496-2d67-460b-a945-7442c1a3eda0" name="Start" type="Start"><subsheetid>d5928a3a-277e-4cb7-9ec6-6fce646a091f</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="image" name="Image" narrative="Input Image" stage="img" /><input type="number" name="Crop X" narrative="X coordinate to start cropping from" stage="cropX" /><input type="number" name="Crop Y" narrative="Y coordinate to start cropping from" stage="cropY" /><input type="number" name="Crop Width" narrative="Width of the cropped image" stage="cropWidth" /><input type="number" name="Crop Height" narrative="Height of the cropped image" stage="cropHeight" /></inputs><onsuccess>dcd4df73-9b20-447a-981f-89731e07900a</onsuccess></stage><stage stageid="b85336da-a6e8-420c-999a-ec794884c2e0" name="End" type="End"><subsheetid>d5928a3a-277e-4cb7-9ec6-6fce646a091f</subsheetid><loginhibit /><display x="15" y="45" /><outputs><output type="image" name="Cropped Image" narrative="Cropped Image" stage="corppedImg" /></outputs></stage><stage stageid="dcd4df73-9b20-447a-981f-89731e07900a" name="Crop Image" type="Code"><subsheetid>d5928a3a-277e-4cb7-9ec6-6fce646a091f</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="image" name="img" expr="[img]" /><input type="number" name="cropX" expr="[cropX]" /><input type="number" name="cropY" expr="[cropY]" /><input type="number" name="cropWidth" expr="[cropWidth]" /><input type="number" name="cropHeight" expr="[cropHeight]" /></inputs><outputs><output type="image" name="corppedImg" stage="corppedImg" /></outputs><onsuccess>b85336da-a6e8-420c-999a-ec794884c2e0</onsuccess><code><![CDATA[Dim rect As New Rectangle(cropX, cropY, cropWidth, cropHeight)
corppedImg = img.Clone(rect, img.PixelFormat)]]></code></stage><stage stageid="671c0ecf-578b-4f1e-a323-0d419e81c3c3" name="img" type="Data"><subsheetid>d5928a3a-277e-4cb7-9ec6-6fce646a091f</subsheetid><loginhibit /><display x="105" y="-105" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cee667fb-da39-4556-831a-a9ed4343007b" name="cropX" type="Data"><subsheetid>d5928a3a-277e-4cb7-9ec6-6fce646a091f</subsheetid><loginhibit /><display x="165" y="-105" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7db7599-5b01-4264-8064-5fc8ab72b9e3" name="cropY" type="Data"><subsheetid>d5928a3a-277e-4cb7-9ec6-6fce646a091f</subsheetid><loginhibit /><display x="225" y="-105" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6edf5537-ed07-4a35-a230-7091de496c8c" name="cropWidth" type="Data"><subsheetid>d5928a3a-277e-4cb7-9ec6-6fce646a091f</subsheetid><loginhibit /><display x="285" y="-105" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c68bcbe-5ef6-438c-8e14-ce61f6da63c2" name="cropHeight" type="Data"><subsheetid>d5928a3a-277e-4cb7-9ec6-6fce646a091f</subsheetid><loginhibit /><display x="345" y="-105" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="301f96e1-8d14-41f2-8741-d536decce8da" name="corppedImg" type="Data"><subsheetid>d5928a3a-277e-4cb7-9ec6-6fce646a091f</subsheetid><loginhibit /><display x="105" y="45" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b5a81d9-c601-4f30-90a1-365a53cb7364" name="Resize Image" type="SubSheetInfo"><subsheetid>65658da5-49dd-45b2-bb03-d813b0b44612</subsheetid><narrative>Resizes the given image</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="43eee1f2-5232-4c9b-a607-f5d9b7a50da5" name="Start" type="Start"><subsheetid>65658da5-49dd-45b2-bb03-d813b0b44612</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="image" name="Image" narrative="Input Image" stage="img" /><input type="number" name="Width" narrative="Width of the resized image" stage="Width" /><input type="number" name="Height" narrative="Height of the resized image" stage="Height" /></inputs><onsuccess>6ed7f208-b0c2-4bc3-a419-3f0bb866fc94</onsuccess></stage><stage stageid="58c67922-7fe7-4339-953b-0a2466433c2d" name="End" type="End"><subsheetid>65658da5-49dd-45b2-bb03-d813b0b44612</subsheetid><loginhibit /><display x="15" y="45" /><outputs><output type="image" name="Resized Image" narrative="Resized Image" stage="ResizedImage" /></outputs></stage><stage stageid="6ed7f208-b0c2-4bc3-a419-3f0bb866fc94" name="Resize Image" type="Code"><subsheetid>65658da5-49dd-45b2-bb03-d813b0b44612</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="image" name="img" expr="[img]" /><input type="number" name="Width" expr="[Width]" /><input type="number" name="Height" expr="[Height]" /></inputs><outputs><output type="image" name="Resized Image" stage="ResizedImage" /></outputs><onsuccess>58c67922-7fe7-4339-953b-0a2466433c2d</onsuccess><code><![CDATA[Resized_Image=ResizeImage(img,Width,Height)]]></code></stage><stage stageid="a5bc377a-3266-4dff-af46-fbcbd64d3d75" name="img" type="Data"><subsheetid>65658da5-49dd-45b2-bb03-d813b0b44612</subsheetid><loginhibit /><display x="105" y="-105" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b145133-61f2-4800-bf45-b726390feb8a" name="Width" type="Data"><subsheetid>65658da5-49dd-45b2-bb03-d813b0b44612</subsheetid><loginhibit /><display x="180" y="-105" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ecf560c3-fdfc-493c-9ed4-29a3c7330dcb" name="Height" type="Data"><subsheetid>65658da5-49dd-45b2-bb03-d813b0b44612</subsheetid><loginhibit /><display x="240" y="-105" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="01eed69f-1969-4d55-a656-9c52b3ba6b6e" name="ResizedImage" type="Data"><subsheetid>65658da5-49dd-45b2-bb03-d813b0b44612</subsheetid><display x="105" y="45" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ada6bdf3-9165-4139-9823-99263204921d" name="Convert Image Format" type="SubSheetInfo"><subsheetid>171af258-95db-4ca1-bfa1-4ae099ac4b78</subsheetid><narrative>Converts the image format</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="09d8f3b9-9a01-4fb0-96db-0b05f996c2e9" name="Start" type="Start"><subsheetid>171af258-95db-4ca1-bfa1-4ae099ac4b78</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Input Image Path" narrative="Full path of the input image" stage="Input Image Path" /><input type="text" name="Image Format" narrative="Can be one of Jpeg, Bmp, Gif, Png or Tiff" stage="Image Format" /><input type="text" name="Converted Image Path" narrative="Full path where the converted image will be saved. This should include the filename and extension" stage="Converted Image Path" /></inputs><onsuccess>45df9a76-16c6-4edd-be8b-ceb3f594a954</onsuccess></stage><stage stageid="49c6e38a-f390-4812-8244-cc8c47a3e7fd" name="End" type="End"><subsheetid>171af258-95db-4ca1-bfa1-4ae099ac4b78</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="c56a4abe-1b98-4254-80b3-7135d11ceb3c" name="Image Format" type="Data"><subsheetid>171af258-95db-4ca1-bfa1-4ae099ac4b78</subsheetid><loginhibit /><narrative>Can be one of Jpeg, Bmp, Gif, Png or Tiff</narrative><display x="240" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d829e3d8-a00b-45ed-af7f-9c2807368d49" name="Input Image Path" type="Data"><subsheetid>171af258-95db-4ca1-bfa1-4ae099ac4b78</subsheetid><loginhibit /><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2db6f3ab-c938-49d0-aeb4-3016bb39706b" name="Converted Image Path" type="Data"><subsheetid>171af258-95db-4ca1-bfa1-4ae099ac4b78</subsheetid><loginhibit /><display x="165" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="45df9a76-16c6-4edd-be8b-ceb3f594a954" name="Convert Type" type="Code"><subsheetid>171af258-95db-4ca1-bfa1-4ae099ac4b78</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="imagePath" expr="[Input Image Path]" /><input type="text" name="imageFormat" expr="[Image Format]" /><input type="text" name="convertedImagePath" expr="[Converted Image Path]" /></inputs><onsuccess>49c6e38a-f390-4812-8244-cc8c47a3e7fd</onsuccess><code><![CDATA[Select imageFormat.ToUpper()
  Case "JPEG"
	  Image.FromFile(imagePath).Save(convertedImagePath,System.Drawing.Imaging.ImageFormat.Jpeg)
  Case "BMP"
	  Image.FromFile(imagePath).Save(convertedImagePath,System.Drawing.Imaging.ImageFormat.Bmp)
  Case "GIF"
	  Image.FromFile(imagePath).Save(convertedImagePath,System.Drawing.Imaging.ImageFormat.Gif)
  Case "PNG"
	  Image.FromFile(imagePath).Save(convertedImagePath,System.Drawing.Imaging.ImageFormat.Png)
  Case "TIFF"
	  Image.FromFile(imagePath).Save(convertedImagePath,System.Drawing.Imaging.ImageFormat.Tiff)
  Case Else	  
End Select]]></code></stage></process></object>
        <object id="d39ef435-da5c-4e38-a846-b903b2cf3d8e" name="Utility - JSON" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - JSON" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="An object for parsing JSON into a collection and turning a collection into JSON." byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>8f20ac0c-296f-43c3-b0d9-59b5b2b7da1c</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="6a9ccb5a-8cc3-44ac-b343-39680558062f" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="560472b9-cea4-41d5-bc36-c49d6c1b26e6" type="Normal" published="True"><name>Collection to JSON</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5aeb4cb-cd25-4535-b3be-b46681b4e6b6" type="Normal" published="True"><name>JSON to Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e53062c7-68de-4763-b37a-456688d0d607" type="Normal" published="True"><name>JSON to Collection (skipping JArray)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1c04dc1d-81e9-47e9-a8c4-b46dd19b2624" type="Normal" published="True"><name>JsonPath</name><view><camerax>0</camerax><cameray>-9</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cbbe7eb7-53d6-49a6-9f88-cb3a26c334df" type="Normal" published="True"><name>JsonPath - Return Collection</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="222ee4c2-914e-4b2b-8e13-443c1c76b3dd" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>ff6524a3-da73-439c-a4ba-2aabb994009c</onsuccess></stage><stage stageid="ff6524a3-da73-439c-a4ba-2aabb994009c" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="7fd071f3-6769-4dd5-95cf-a911c73c42ff" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Newtonsoft.Json.dll</reference><reference>System.Core.dll</reference><reference>System.dll</reference></references><imports><import>System.Data</import><import>System.Drawing</import><import>Newtonsoft.Json</import><import>System.Collections.Generic</import><import>System.Text</import><import>System.IO</import><import>System</import><import>Newtonsoft.Json.Linq</import><import>System.Collections</import><import>System.Linq</import><import>System.Collections</import></imports><language>csharp</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[//**********************************************************************************************
// NEW CODE
// This code is used by the 'JSON To Collection (Skipping Array)' action. It is based on 
// opensource code developed by Tobias Arnold and released under MIT License. The original 
// source code can be found at the following GitHub link: 
// 
// 		https://github.com/toarnold/Coremoran.BluePrism.Json. 
//
// To contact Tobias, please refer to his LinkedIn profile: 
// 
// 		https://www.linkedin.com/in/tobias-arnold-492368155/  
//**********************************************************************************************
static bool IsSingleRowNew(DataTable table)
{
	return Convert.ToBoolean(table.ExtendedProperties[SpecialValues.SingleRowPropertyName] ?? false);
}

static void SetSingleRow(DataTable table, bool singleRow)
{
	table.ExtendedProperties[SpecialValues.SingleRowPropertyName] = singleRow;
}

public static class BluePrismConverter
{
	public static DataTable ObjectToCollection(object o)
	{
		return JsonToCollection(JsonConvert.SerializeObject(o,
				new DataTableConverter(),
				new GroupingConverter(),
				new DataRowConverter()
		));
	}

	public static DataTable JsonToCollection(string json)
	{
		return (DataTable)JsonConvert.DeserializeObject(json, typeof(DataTable), new JsonSerializerSettings
		{
			Converters = new JsonConverter[]
			{
				new DataTableConverter(),
				new DataRowConverter()
			},
			DateTimeZoneHandling = DateTimeZoneHandling.Unspecified
		});
	}

	public static string CollectionToJson(DataTable table)
	{
		return JsonConvert.SerializeObject(table,
				new DataTableConverter(),
				new DataRowConverter());
	}

	public static JArray CollectionToJArray(DataTable table)
	{
		var serializer = JsonSerializer.Create(new JsonSerializerSettings()
		{
			Converters = new JsonConverter[] {
				new DataTableConverter(),
				new DataRowConverter() }
		});
		return JArray.FromObject(table, serializer);
	}
}

internal class DataRowConverter : JsonConverter
{
	public override bool CanConvert(Type objectType) => objectType == typeof(DataRow);

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		if (reader.TokenType != JsonToken.StartObject)
		{
			throw new Exception("Unsupported JsonToken " + reader.TokenType.ToString());
		}

		var dt = new DataTable();
		SetSingleRow(dt, true);
		dt.Rows.Add();
		string currentColumnName = null;
		while (reader.Read() && reader.TokenType != JsonToken.EndObject)
		{
			switch (reader.TokenType)
			{
				case JsonToken.PropertyName:
					currentColumnName = reader.Value.ToString();
					break;
				default:
					DataTableRowHandler.HandleJsonData(dt, currentColumnName, serializer, reader);
					break;
			}
		}
		return dt.Rows[0];
	}

	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		var dataRow = (DataRow)value;
		var dataTable = dataRow.Table;
		if (dataTable.Columns.Count == 1
			&& dataTable.Columns[0].ColumnName == SpecialValues.JsonUnnamedValue 
			&& (!IsSingleRowNew(dataTable) || writer.Path == string.Empty))
		{
			// First (and single!) element
			serializer.Serialize(writer, dataRow[0]); 
		}
		else
		{
			serializer.Serialize(writer, dataTable.Columns.Cast<DataColumn>().ToDictionary(k => k.ColumnName, v => dataRow[v]));
		}
	}
}

internal class DataTableConverter : JsonConverter
{
	public override bool CanConvert(Type objectType) => objectType == typeof(DataTable);

	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		var dt = (DataTable)value;
		if (IsSingleRowNew(dt))
		{
			serializer.Serialize(writer, dt.Rows[0]);
		}
		else
		{
			serializer.Serialize(writer, dt.Select());
		}
	}

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
	{
		var dt = new DataTable();
		switch (reader.TokenType)
		{
			case JsonToken.StartObject:
				dt = serializer.Deserialize<DataRow>(reader).Table;
				break;
			case JsonToken.StartArray:
				SetSingleRow(dt, false);
				var nullColumns = new HashSet<string>();
				while (reader.Read() && reader.TokenType != JsonToken.EndArray)
				{
					switch (reader.TokenType)
					{
						case JsonToken.Null:
							dt.Rows.Add();
							break;
						case JsonToken.StartObject:
							var tempTable = serializer.Deserialize<DataRow>(reader).Table;
							var nulls = tempTable.Columns.Cast<DataColumn>().Where(w => tempTable.Rows[0].IsNull(w.ColumnName)).Select(s => s.ColumnName).ToList();
							nulls.ForEach(n => tempTable.Columns.Remove(n));
							nullColumns.UnionWith(nulls);
							dt.Merge(tempTable, true, MissingSchemaAction.Add);
							break;
						default:
							DataTableRowHandler.HandleJsonData(dt, null, serializer, reader);
							break;
					}
				}
				// Add not set Null-Columns
				dt.Columns.AddRange(nullColumns.Where(w => !dt.Columns.Contains(w)).Select(s => new DataColumn(s)).ToArray());
				break;
			default: /* Try to append a single value */
				if (reader.TokenType != JsonToken.Null)
				{
					SetSingleRow(dt, true);
					dt.Rows.Add();
					DataTableRowHandler.HandleJsonData(dt, null, serializer, reader);
				}
				break;
		}
		return dt;
	}
}

internal static class DataTableRowHandler
{
	private static void AppendArrayItem(DataTable table, Type colType, string colName, object value)
	{
		if (!table.Columns.Contains(colName))
		{
			var newcolumn = new DataColumn(colName, colType); 
			if (colType == typeof(DateTime))
			{
				newcolumn.DateTimeMode = DataSetDateTime.Utc;
			}
			table.Columns.Add(newcolumn);
		}
		if (IsSingleRowNew(table))
		{
			table.Rows[0][colName] = value;
		}
		else
		{
			var newRow = table.NewRow();
			newRow[colName] = value;
			table.Rows.Add(newRow);
		}
	}

	internal static void HandleJsonData(DataTable table, string currentColumnName, JsonSerializer serializer, JsonReader reader)
	{
		switch (reader.TokenType)
		{
			case JsonToken.String:
			case JsonToken.Null:
				AppendArrayItem(table, typeof(string), currentColumnName ?? SpecialValues.JsonUnnamedValue, reader.Value);
				break;
			case JsonToken.Integer:
			case JsonToken.Float:
				AppendArrayItem(table, typeof(decimal), currentColumnName ?? SpecialValues.JsonUnnamedValue, reader.Value);
				break;
			case JsonToken.Boolean:
				AppendArrayItem(table, typeof(bool), currentColumnName ?? SpecialValues.JsonUnnamedValue, reader.Value);
				break;
			case JsonToken.Date:
				AppendArrayItem(table, typeof(DateTime), currentColumnName ?? SpecialValues.JsonUnnamedValue, reader.Value);
				break;
			case JsonToken.StartObject:
				AppendArrayItem(table, typeof(DataTable), currentColumnName ?? SpecialValues.JsonUnnamedValue, serializer.Deserialize<DataTable>(reader));
				break;
			case JsonToken.StartArray:
				AppendArrayItem(table, typeof(DataTable), currentColumnName ?? SpecialValues.JsonUnnamedValue, serializer.Deserialize<DataTable>(reader));
				break;
			default:
				throw new Exception("Unsupported JsonToken " + reader.TokenType.ToString());
		}
	}
}

internal class GroupingConverter : JsonConverter
{
	public override bool CanRead => false;

	public override bool CanConvert(Type objectType) => objectType.GetInterfaces().Any(a => a.IsGenericType && a.GetGenericTypeDefinition() == typeof(IGrouping<,>));

	public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) => throw new NotImplementedException();

	public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
	{
		// Get key object with reflection
		var keyInfo = value.GetType().GetProperty("Key");
		var key = JToken.FromObject(keyInfo.GetValue(value));

		var data = key is JObject obj ? obj : new JObject { { SpecialValues.GroupingSingleKeyColumnName, key } };
		data.Add(SpecialValues.GroupingGroupColumnName, JArray.FromObject(((IEnumerable<object>)value).Select(x => x), serializer));

		serializer.Serialize(writer, data);
	}
}

public class SpecialValues
{
	public const string JsonUnnamedValue = "JSON_Unnamed_Value";
	public const string SingleRowPropertyName = "SingleRow";
	public const string GroupingSingleKeyColumnName = "Key";
	public const string GroupingGroupColumnName = "Group";
}

//**********************************************************************************************
// LEGACY CODE
// This is the original code of the Utility - JSON VBO. This code is used by the 
// 'JSON To Collection' and 'Collection To JSON' actions.
//**********************************************************************************************
private bool mUseNewParseMethod = false;

private class JSON
{
	public const string Array = "JSON:Array";
	public const string Null = "JSON:Null";
}

public string ConvertToJSON(DataTable dt)
{
	object o = SerialiseGeneric(dt, true);
	return JsonConvert.SerializeObject(o);
}

public object SerialiseGeneric(object o, bool removeArray)
{
	DataTable dt = o as DataTable;
	if (dt != null)
		return SerialiseDataTable(dt);

	DataRow dr = o as DataRow;
	if (dr != null)
		return SerialiseDataRow(dr, removeArray);

	string s = o as string;
	if (s != null && s == JSON.Null)
		return null;

	if (o != null)
		return o;

	return null;
}

public object SerialiseDataTable(DataTable dt)
{
	if (IsSingleRow(dt))
		return SerialiseGeneric(dt.Rows[0], false);
	else
	{
		JArray ja = new JArray();
		foreach (DataRow r in dt.Rows)
			ja.Add(SerialiseGeneric(r, true));
		return ja;
	}
}

public bool IsSingleRow(DataTable dt)
{
	if (dt.ExtendedProperties.Contains("SingleRow"))
		return System.Convert.ToBoolean(dt.ExtendedProperties["SingleRow"]);
	// Fallback for older versions of blueprism
	return dt.Rows.Count == 1;
}

public object SerialiseDataRow(DataRow dr, bool removeArray)
{
	JObject jo = new JObject();
	foreach (DataColumn c in dr.Table.Columns)
	{
		string s = c.ColumnName;
		if (removeArray && s == JSON.Array)
			return SerialiseGeneric(dr[s], true);
		jo[s] = JToken.FromObject(SerialiseGeneric(dr[s], false));
	}
	return jo;
}

public DataTable ConvertToDataTable(string json)
{
	object o = JsonConvert.DeserializeObject(json);
	return (DataTable)DeserialiseGeneric(o, true);
}

private object DeserialiseGeneric(object o, bool populate)
{
	JArray a = o as JArray;
	if (a != null)
		return mUseNewParseMethod ? DeserialiseArrayWithoutJArray(a, populate) : DeserialiseArray(a, populate);

	JObject jo = o as JObject;
	if (jo != null)
		return DeserialiseObject(jo, populate);

	JValue jv = o as JValue;
	if (jv != null)
		return jv.Value;

	return JSON.Null;
}

private string GetKey(KeyValuePair<string, JToken> kv)
{
	if (kv.Key != null)
		return kv.Key.ToString();
	return "";
}


private DataTable DeserialiseObject(JObject o, bool populate)
{
	DataTable dt = new DataTable();

	foreach (KeyValuePair<string, JToken> kv in o)
	{
		Type type = GetTypeOf(DeserialiseGeneric(kv.Value, false));
		dt.Columns.Add(GetKey(kv), type);
	}

	if (populate)
	{
		DataRow dr = dt.NewRow();
		foreach (KeyValuePair<string, JToken> kv in o)
			dr[GetKey(kv)] = DeserialiseGeneric(kv.Value, true);
		dt.Rows.Add(dr);
	}

	return dt;
}

private DataTable DeserialiseArrayWithoutJArray(JArray jarr, bool populate)
{
	DataTable dt = new DataTable();

	Type first = null;
	foreach (object e in jarr)
	{
		if (first == null)
			first = GetTypeOf(DeserialiseGeneric(e, false));
		if (GetTypeOf(DeserialiseGeneric(e, false)) != first)
			throw new Exception("Data Type mismatch in array");
	}

	System.Collections.Specialized.OrderedDictionary columns = new System.Collections.Specialized.OrderedDictionary();
	var allTypesInColumnsMatch = jarr.All(e =>
	{
		if (!(e is JObject))
			return false;
		foreach (KeyValuePair<string, JToken> pair in (JObject)e)
		{
			object val = pair.Value;
			if (val is JValue)
				val = (JValue)(pair.Value);
			var tp = val ?? (object)"".GetType();

			if (columns.Contains(pair.Key))
			{
				if (tp != columns[pair.Key])
					return false;
			}
			else
				columns[pair.Key] = tp;
		}
		return true;
	});

	if (allTypesInColumnsMatch)
	{
		foreach (DictionaryEntry pair in columns)
		{
			string key = System.Convert.ToString(pair.Key);
			Type tp = (Type)pair.Value;
			if (tp == typeof(JObject) || tp == typeof(JArray))
				dt.Columns.Add(key, typeof(DataTable));
			else
				dt.Columns.Add(key, tp);
		}
	}
	else if (first != null)
		dt.Columns.Add(JSON.Array, first);

	if (populate)
	{
		foreach (object e in jarr)
		{
			DataRow dr = dt.NewRow();
			if (allTypesInColumnsMatch)
			{
				foreach (KeyValuePair<string, JToken> pair in (JObject)e)
					dr[pair.Key] = DeserialiseGeneric(pair.Value, true);
			}
			else
				dr[JSON.Array] = DeserialiseGeneric(e, true);

			dt.Rows.Add(dr);
		}
	}

	return dt;
}

private DataTable DeserialiseArray(JArray o, bool populate)
{
	DataTable dt = new DataTable();

	Type first = null;
	foreach (object e in o)
	{
		if (first == null)
			first = GetTypeOf(DeserialiseGeneric(e, false));
		if (GetTypeOf(DeserialiseGeneric(e, false)) != first)
			throw new Exception("Data Type mismatch in array");
	}
	if (first != null)
		dt.Columns.Add(JSON.Array, first);

	if (populate)
	{
		foreach (object e in o)
		{
			DataRow dr = dt.NewRow();
			dr[JSON.Array] = DeserialiseGeneric(e, true);
			dt.Rows.Add(dr);
		}
	}

	return dt;
}

private Type GetTypeOf(object o)
{
	if (o == null)
		return typeof(string);
	return o.GetType();
}

public bool IsNumeric(string value)
{
    return value.All(char.IsNumber);
}]]></code></stage><stage stageid="c290e7f4-b01b-4012-9422-044432a3cc82" name="Clean Up" type="SubSheetInfo"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="662f70f7-7036-462d-b9bf-f35265dd971a" name="Start" type="Start"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>153f4275-2acd-48a5-b6e6-409fcb2441a8</onsuccess></stage><stage stageid="153f4275-2acd-48a5-b6e6-409fcb2441a8" name="End" type="End"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="885aaf30-a216-44c5-975b-ca58ce02f815" name="JSON to Collection" type="SubSheetInfo"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e5625896-d966-4a10-aa39-2e85611f490f" name="Start" type="Start"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="json" stage="json" /></inputs><onsuccess>779de445-0658-4a45-a1ef-a38d6de24429</onsuccess></stage><stage stageid="66526e3e-8b9e-4452-9ca8-f70baa9aec4a" name="End" type="End"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="15" y="45" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="007e04e2-4ed0-4afd-87d3-c06d79f48d86" name="new" type="Note"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="d92fd7fc-b028-457a-a14a-17d66c4b5513" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="779de445-0658-4a45-a1ef-a38d6de24429" name="JSON To Collection" type="Code"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="text" name="json" expr="[json]" /></inputs><outputs><output type="collection" name="result" stage="Result" /></outputs><onsuccess>66526e3e-8b9e-4452-9ca8-f70baa9aec4a</onsuccess><code><![CDATA[result = ConvertToDataTable(json);]]></code></stage><stage stageid="da3984e5-ce52-4649-81c5-a71d452a5ba0" name="json" type="Data"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><display x="-195" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e93e91c-85e1-4c75-b74c-52d08c0724e6" name="Collection to JSON" type="SubSheetInfo"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c10fccbd-439b-447d-908a-58f20a540146" name="Start" type="Start"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="Data" stage="Data" /></inputs><onsuccess>7923115c-5283-4694-b2c1-142afb4d3788</onsuccess></stage><stage stageid="ede1f653-07f1-42eb-8616-8d2d3dfb5244" name="End" type="End"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="text" name="JSON" stage="JSON" /></outputs></stage><stage stageid="8f488472-d2dd-4bbc-a98e-07d6a494ab3f" name="Result" type="Collection"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><display x="-195" y="75" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7923115c-5283-4694-b2c1-142afb4d3788" name="Collection To JSON" type="Code"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="collection" name="data" expr="[Data]" /></inputs><outputs><output type="text" name="json" stage="JSON" /></outputs><onsuccess>ede1f653-07f1-42eb-8616-8d2d3dfb5244</onsuccess><code><![CDATA[json = ConvertToJSON(data);]]></code></stage><stage stageid="dbeac687-55ba-4b1a-9e9b-1a5f1e763886" name="Data" type="Collection"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="-195" y="-15" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="60425486-0e54-4004-afef-6ccb7e96828d" name="JSON" type="Data"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><display x="-195" y="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="68820997-9906-40ef-b5f3-325f6f0a25b9" name="JSON to Collection (skipping JArray)" type="SubSheetInfo"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="14799289-a9b9-4b93-aeb6-f0240547be63" name="Start" type="Start"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-30" y="-120" /><inputs><input type="text" name="json" stage="json" /></inputs><onsuccess>8cb729e4-705c-400b-8d1d-0b54dd51fb94</onsuccess></stage><stage stageid="21187841-67f3-4ed1-a3b0-de763bb1e801" name="End" type="End"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-30" y="30" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="8cb729e4-705c-400b-8d1d-0b54dd51fb94" name="JSON To Collection Without JArray" type="Code"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-30" y="-45" /><inputs><input type="text" name="json" expr="[json]" /></inputs><outputs><output type="collection" name="result" stage="Result" /></outputs><onsuccess>21187841-67f3-4ed1-a3b0-de763bb1e801</onsuccess><code><![CDATA[result = BluePrismConverter.JsonToCollection(json);
]]></code></stage><stage stageid="b3a37b86-f505-4522-80d4-2c9e45ab723c" name="json" type="Data"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><display x="-195" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="98ca8a8f-1ce6-4cb7-85e6-9fff8b1b06f9" name="Result" type="Collection"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><display x="-195" y="75" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f95350a7-9c25-487f-ad74-c7ce70ea37a5" name="Note2" type="Note"><narrative>© 2023 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="240" y="-15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="dfa7d330-e791-49c6-b4fb-6011b4d8d6cc" name="Note1" type="Note"><loginhibit /><narrative>Version 10.0.1</narrative><display x="15" y="-165" w="150" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage><stage stageid="c07d13ef-4200-4377-8cfd-bd38c06ea923" name="JsonPath" type="SubSheetInfo"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ee1a9752-11e4-4a3f-aae8-3e910b966e9c" name="Start" type="Start"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-30" y="-60" /><inputs><input type="text" name="Json" stage="Json" /><input type="text" name="JsonPath" stage="JsonPath" /></inputs><onsuccess>d0ff9ba9-4bf0-4ba4-a9d6-85a5a0935c7e</onsuccess></stage><stage stageid="4b590fe3-4e65-4b28-baa0-8852d218894a" name="End" type="End"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-30" y="60" /><outputs><output type="number" name="NumericResult" stage="NumericResult" /><output type="text" name="TextResult" stage="TextResult" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs></stage><stage stageid="7ae65c44-8e32-406c-ad5b-fa0f802cdabd" name="Json" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6118f7f-6c60-4e0b-9683-f749ae300a06" name="JsonPath" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-195" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d0ff9ba9-4bf0-4ba4-a9d6-85a5a0935c7e" name="Process Json - Single Output" type="Code"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-30" y="0" w="120" h="30" /><inputs><input type="text" name="Json" expr="[Json]" /><input type="text" name="JsonPath" expr="[JsonPath]" /></inputs><outputs><output type="text" name="TextResult" stage="TextResult" /><output type="number" name="NumericResult" stage="NumericResult" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>4b590fe3-4e65-4b28-baa0-8852d218894a</onsuccess><code><![CDATA[// Initialize the output vars as only one will be used.
NumericResult = 0;
TextResult = String.Empty;
ErrorMessage = String.Empty;

String tempResult = string.Empty;

JObject jo;

jo = JObject.Parse(Json);

try
{
	tempResult = (string)jo.SelectToken(JsonPath,true);

	if (IsNumeric(tempResult))
	{
		NumericResult = Decimal.Parse(tempResult);
	}
	else
	{
		TextResult = tempResult;
	}
}
catch (JsonException)
{
	ErrorMessage = "Unable to find value in supplied JSON.";
}






]]></code></stage><stage stageid="8a2694eb-d12b-4cad-87cb-d43651aeb0f2" name="NumericResult" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-165" y="165" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bb1f845-c916-472b-852a-ab9c873bf569" name="TextResult" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><display x="-225" y="165" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1351cf4-399a-4e58-b568-321f0d3196e5" name="ErrorMessage" type="Data"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-195" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94ab4d76-1378-44d7-bfd9-c4a6eaa1e710" name="JsonPath - Return Collection" type="SubSheetInfo"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f48025fa-9b5d-4675-8147-3478db7860c6" name="Start" type="Start"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-15" y="-45" /><inputs><input type="text" name="Json" stage="Json" /><input type="text" name="JsonPath" stage="JsonPath" /></inputs><onsuccess>a0419bd6-afbf-4de4-98ec-5471c207786c</onsuccess></stage><stage stageid="09dc30b8-a6f6-4594-9044-3e15b51f75ef" name="End" type="End"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-15" y="135" /><outputs><output type="collection" name="Result" stage="Result" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs></stage><stage stageid="be0e5e0e-6e93-4633-8c64-c02b0875b278" name="Json" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba7a4062-02e0-4458-8755-f7a521119277" name="JsonPath" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-195" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a0419bd6-afbf-4de4-98ec-5471c207786c" name="JsonPath - Return Object" type="Code"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><narrative>This allows multiple objects to be returned as a Json string.</narrative><display x="-15" y="15" /><inputs><input type="text" name="Json" expr="[Json]" /><input type="text" name="JsonPath" expr="[JsonPath]" /></inputs><outputs><output type="text" name="TextResult" stage="TextResult" /><output type="number" name="NumericResult" stage="NumericResult" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>03bbb947-bcd3-4602-802b-f0444d868a92</onsuccess><code><![CDATA[//Initialize the output vars as only one will be used.
NumericResult = 0;
TextResult = String.Empty;
ErrorMessage=String.Empty;

string tempResult = string.Empty;
JToken token;

JObject jo;

jo = JObject.Parse(Json);

try
{
	token = jo.SelectToken(JsonPath, true);
	tempResult = token.ToString();

	TextResult = tempResult;
}
catch (JsonException)
{
	ErrorMessage = "Unable to find value in supplied JSON.";
}





]]></code></stage><stage stageid="b58dff70-5256-4b01-8e97-ed2efcbcbfcd" name="NumericResult" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-225" y="120" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b226d9b3-eff1-427f-8b2e-eb5da2cefb05" name="TextResult" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-165" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="60b9ffe8-dee6-4b41-b324-21aeca4ac438" name="ErrorMessage" type="Data"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-195" y="210" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="03bbb947-bcd3-4602-802b-f0444d868a92" name="JSON to Collection" type="SubSheet"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-15" y="75" /><inputs><input type="text" name="json" friendlyname="json" expr="[TextResult]" /></inputs><outputs><output type="collection" name="Result" friendlyname="Result" stage="Result" /></outputs><onsuccess>09dc30b8-a6f6-4594-9044-3e15b51f75ef</onsuccess><processid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</processid></stage><stage stageid="66ec6cbe-f703-4076-bcf5-5b0e22e41ba3" name="Result" type="Collection"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><display x="-195" y="255" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="87cac279-7118-48cc-b1d7-3658fc032d77" name="Inputs" type="Block"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="01799449-c645-49c1-8c4f-8986f1b1d742" name="Outputs" type="Block"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="a6c9d22a-d9ca-4915-bc8e-d670af070403" name="Inputs" type="Block"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="382cc03e-2ac0-4ec6-adb9-c3cc75a7ca5e" name="Outputs" type="Block"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="-270" y="45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="7f989a6d-ca7f-4b8e-a295-13d0e8290cf2" name="Inputs" type="Block"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="f366aecb-e6eb-48a8-abe6-7c5815ca65f3" name="Outputs" type="Block"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-270" y="45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="8af65c59-f2d4-4d02-a30a-63b08b35cc7f" name="Inputs" type="Block"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="5d7a75fc-0689-4c1b-b7a8-bcb95fc46ffb" name="Outputs" type="Block"><subsheetid>1c04dc1d-81e9-47e9-a8c4-b46dd19b2624</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="52bedb01-d26a-4421-b30a-af904dfd5f10" name="Inputs" type="Block"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="5e1ed7e6-95cc-4409-9c77-3b4c79d24ac6" name="Outputs" type="Block"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-270" y="165" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="921b8f62-3650-4490-a8f4-c38efa72e580" name="Intermediary Values" type="Block"><subsheetid>cbbe7eb7-53d6-49a6-9f88-cb3a26c334df</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="00FFFF" /></stage></process></object>
        <object id="6a51f403-f4ab-44ee-b4bf-15710f0dc9bb" name="Utility - Locking" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Locking" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="Manages locks on items" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>82d60e0b-a672-4083-9bd7-8e211227ca88</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-122</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="1a46f257-7bd7-4c79-bd2f-45b93d4946c4" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="42312858-7074-4e68-9a5f-062306c0f439" type="Normal" published="False"><name>Sleep</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8528e309-fa4d-4abc-8eb3-26c087288eab" type="Normal" published="False"><name>Add to Dictionary</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="83a1957b-e164-4408-ba12-8b16b686769e" type="Normal" published="False"><name>Item ID from Dictionary</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea" type="Normal" published="False"><name>Remove From Dictionary</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5d65eae-43e9-4bb2-ab20-3b349d092cde" type="Normal" published="True"><name>Set Up Queue Item</name><view><camerax>52</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="39b8267a-c473-4c70-9460-929811e434fa" type="Normal" published="True"><name>Lock Item</name><view><camerax>0</camerax><cameray>105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="36e6ed40-192f-48c3-b17d-75284ac86507" type="Normal" published="True"><name>Release Lock</name><view><camerax>0</camerax><cameray>-12</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="4d026044-83a8-46cc-b296-0c959bc5e5d7" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>3e6bb003-f4c5-4058-b741-5212a895333e</onsuccess></stage><stage stageid="3e6bb003-f4c5-4058-b741-5212a895333e" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="57eff6f3-2ec4-4e8e-85b8-bd6879776adf" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[

]]></globalcode><code><![CDATA[

]]></code></stage><stage stageid="15251a4b-1d73-44b9-8f11-b1c4ec9f66ec" name="Clean Up" type="SubSheetInfo"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="39a54109-be85-4fa0-9277-be774e014636" name="Start" type="Start"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="15" y="-150" /><onsuccess>9e29024a-8bc5-4c26-bfc1-84718bffa45e</onsuccess></stage><stage stageid="87c0b1e6-31ce-4621-828a-34ab36550644" name="End" type="End"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="15" y="150" /></stage><stage stageid="111cac05-9154-4afa-b31d-eb508673a9b0" name="Lock Item" type="SubSheetInfo"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><display x="-285" y="-135" w="150" h="90" /></stage><stage stageid="2521be69-56c7-4ed2-9fb8-22bf8e1648e3" name="Start" type="Start"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Item Key" stage="Item Key" /><input type="timespan" name="Timeout" stage="Timeout" /></inputs><onsuccess>5cbfd3da-5948-4ab5-a12b-edd4e136c358</onsuccess></stage><stage stageid="c160feaa-d779-416d-abf1-9d2bb47e6dbf" name="End" type="End"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="15" y="285" /></stage><stage stageid="16dacabe-90cb-49ec-b92a-d64489365f8b" name="new" type="Note"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="bab68dee-ef0a-4be4-a4d3-9e9da3957066" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="05a8ceb2-ae87-49ef-85fe-ec9536b97075" name="Open Items" type="Collection"><loginhibit /><display x="180" y="-90" w="120" h="60" /><datatype>collection</datatype><alwaysinit /><collectioninfo><field name="Queue Name" type="text" /><field name="Item ID" type="text" /><field name="Item Key" type="text" /></collectioninfo></stage><stage stageid="33af5ea1-b0d3-47ec-b089-13184ebd08e0" name="Item Key" type="Data"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d998e15c-8b94-409a-b6ad-b4dae95bc9df" name="Get Item" type="Action"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="15" y="15" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue" expr="[Queue Name]" /><input type="text" name="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="[Item Key]" /><input type="text" name="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Item ID" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="" /><output type="text" name="Status" narrative="The status of the item." stage="" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="" /></outputs><onsuccess>35d1273e-3be2-4fe6-83be-522926fadc68</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="54e2c328-04e8-4fb6-8548-42c669beb749" name="Item ID" type="Data"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><display x="90" y="15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="35d1273e-3be2-4fe6-83be-522926fadc68" name="Got Item?" type="Decision"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="15" y="75" /><decision expression="[Item ID] &lt;&gt; &quot;&quot;" /><ontrue>e78a5aec-1060-4cdd-a5d0-c2b8395aaba0</ontrue><onfalse>b02e7823-0c34-4fea-8022-2882e82d664d</onfalse></stage><stage stageid="4f49c4f9-1e51-4aa1-8a76-8abc120603d8" name="Timeout" type="Data"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><display x="-60" y="-105" /><datatype>timespan</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5cbfd3da-5948-4ab5-a12b-edd4e136c358" name="Start Time" type="Calculation"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>d998e15c-8b94-409a-b6ad-b4dae95bc9df</onsuccess><calculation expression="Now()" stage="Start Time" /></stage><stage stageid="c70f3cf5-eee8-4003-a131-d5aee4a99d04" name="Start Time" type="Data"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><display x="90" y="-45" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b02e7823-0c34-4fea-8022-2882e82d664d" name="Timeout?" type="Decision"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="-90" y="75" /><decision expression="Now() - [Start Time] &gt; [Timeout]" /><ontrue>db49422e-e45f-4fab-9db2-fb2809324db1</ontrue><onfalse>bf796355-10ec-4a81-9611-e24aaf4b96ad</onfalse></stage><stage stageid="db49422e-e45f-4fab-9db2-fb2809324db1" name="Exception1" type="Exception"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="-210" y="75" /><exception type="Timeout" detail="&quot;Timeout waiting for lock on item &quot; &amp; [Item Key] &amp; &quot; from queue &quot; &amp; [Queue Name]" /></stage><stage stageid="a1dc34be-2e67-4fa5-97e3-d7affd6a57c5" name="Release Lock" type="SubSheetInfo"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1864dc01-a33d-476f-ae3e-9805cbeba629" name="End" type="End"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="15" y="360" /></stage><stage stageid="d37980d2-ef9d-4eba-b19c-132e54820e11" name="Start" type="Start"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="15" y="-75" /><inputs><input type="text" name="Item Key" narrative="The key of the item to be unlocked." stage="Item Key" /><input type="flag" name="Error If Not Locked" narrative="Indicates whether an exception should be thrown if the specified item is not locked" stage="Error If Not Locked" /></inputs><onsuccess>e5483d20-dd67-42ef-818e-d76532b29c78</onsuccess></stage><stage stageid="d2f70992-f51d-48dd-812e-20833826148c" name="Item Key" type="Data"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><display x="150" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd5f7ea8-65cf-4863-86bd-418c6b8829ef" name="Defer" type="Action"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><narrative>Marks the item as deferred. It is unlocked, but it will not be made available for processing again until the specified time.

The attempts count for the item is reset to zero.</narrative><display x="15" y="180" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to defer" expr="[Item ID]" /><input type="datetime" name="Until" narrative="When to resume processing the case" expr="Now()" /></inputs><onsuccess>e1fb1183-a056-464c-ba69-15758a7fcd25</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Defer" /></stage><stage stageid="c3bef86c-67cd-43f8-9aea-b2e4739c05b6" name="Add to Dictionary" type="SubSheetInfo"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="40aa852d-4b23-46bb-9253-1488fb8b354d" name="Start" type="Start"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><loginhibit /><display x="15" y="-225" /><inputs><input type="text" name="Item ID" stage="Item ID" /><input type="text" name="Item Key" stage="Item Key" /></inputs><onsuccess>8f6cd284-a33c-4c26-a7c1-f3bdc8923224</onsuccess></stage><stage stageid="7dda72be-3705-4754-aac7-1f95b4d32748" name="End" type="End"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="714dd282-2b54-40d7-af90-c36297545521" name="Item ID" type="Data"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><display x="90" y="-225" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66ef757e-0135-4bd6-8f21-842b2187a698" name="Item Key" type="Data"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><display x="150" y="-225" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d7494916-850e-4c20-9dbb-85ba3228cc7b" name="New Row" type="Action"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Open Items&quot;" /></inputs><onsuccess>3f280f88-002a-4640-ba99-22bebe7a3eaa</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="3f280f88-002a-4640-ba99-22bebe7a3eaa" name="Values" type="MultipleCalculation"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><loginhibit /><display x="15" y="15" /><onsuccess>7dda72be-3705-4754-aac7-1f95b4d32748</onsuccess><steps><calculation expression="[Queue Name]" stage="Open Items.Queue Name" /><calculation expression="[Item ID]" stage="Open Items.Item ID" /><calculation expression="[Item Key]" stage="Open Items.Item Key" /></steps></stage><stage stageid="8c30cc6c-4a86-454f-a784-e24f0b6ff488" name="Item ID from Dictionary" type="SubSheetInfo"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c8f3da09-c811-4603-ae08-6cfe820fd3e7" name="End" type="End"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><loginhibit /><display x="180" y="165" /><outputs><output type="text" name="Item ID" stage="Item ID" /></outputs></stage><stage stageid="5057e223-f43a-41ed-97ac-20690eebab74" name="Start" type="Start"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><loginhibit /><display x="15" y="-75" /><inputs><input type="text" name="Item Key" stage="Item Key" /></inputs><onsuccess>d64df9a9-78c4-4223-a35b-f118ca59983d</onsuccess></stage><stage stageid="088dfb80-76dd-4b6b-ae66-cf783120ee66" name="Item Key" type="Data"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><display x="150" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d64df9a9-78c4-4223-a35b-f118ca59983d" name="For Each Open Item" type="LoopStart"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><onsuccess>1754c5bb-6679-4128-ad40-755da99d1ec8</onsuccess><groupid>a635c1d6-d740-46dd-b312-be07394f26f8</groupid><looptype>ForEach</looptype><loopdata>Open Items</loopdata></stage><stage stageid="5e528a74-f5b8-47a7-8b2a-3794e087bdc0" name="Next Item" type="LoopEnd"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><loginhibit /><display x="15" y="105" w="150" h="30" /><onsuccess>b2f39e11-2c3a-4768-9d44-e761229f3563</onsuccess><groupid>a635c1d6-d740-46dd-b312-be07394f26f8</groupid></stage><stage stageid="1754c5bb-6679-4128-ad40-755da99d1ec8" name="Match?" type="Decision"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><loginhibit /><display x="15" y="45" /><decision expression="[Queue Name] = [Open Items.Queue Name]&#xA;and&#xA;[Item Key] = [Open Items.Item Key]" /><ontrue>c86a166c-7f6b-4a4b-bd16-7bb0906a20b9</ontrue><onfalse>5e528a74-f5b8-47a7-8b2a-3794e087bdc0</onfalse></stage><stage stageid="c86a166c-7f6b-4a4b-bd16-7bb0906a20b9" name="Item ID" type="Calculation"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><loginhibit /><display x="180" y="45" /><onsuccess>c8f3da09-c811-4603-ae08-6cfe820fd3e7</onsuccess><calculation expression="[Open Items.Item ID]" stage="Item ID" /></stage><stage stageid="5108897d-c72d-4ecb-ae4d-0648f60376a0" name="Item ID" type="Data"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><display x="255" y="165" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b2f39e11-2c3a-4768-9d44-e761229f3563" name="No Item ID" type="Calculation"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><loginhibit /><display x="15" y="165" /><onsuccess>c8f3da09-c811-4603-ae08-6cfe820fd3e7</onsuccess><calculation expression="&quot;&quot;" stage="Item ID" /></stage><stage stageid="8f6cd284-a33c-4c26-a7c1-f3bdc8923224" name="Item ID from Dictionary" type="SubSheet"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><loginhibit /><display x="15" y="-165" w="90" h="60" /><inputs><input type="text" name="Item Key" expr="[Item Key]" /></inputs><outputs><output type="text" name="Item ID" stage="Existing Item ID" /></outputs><onsuccess>95c667e2-8cbd-4291-ae4f-94eb517a9def</onsuccess><processid>83a1957b-e164-4408-ba12-8b16b686769e</processid></stage><stage stageid="95c667e2-8cbd-4291-ae4f-94eb517a9def" name="Found?" type="Decision"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><loginhibit /><display x="15" y="-105" /><decision expression="[Existing Item ID] &lt;&gt; &quot;&quot;" /><ontrue>614ed257-6f55-4089-867c-96421e2b0419</ontrue><onfalse>d7494916-850e-4c20-9dbb-85ba3228cc7b</onfalse></stage><stage stageid="614ed257-6f55-4089-867c-96421e2b0419" name="Exception2" type="Exception"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><display x="180" y="-105" /><exception type="Configuration Exception" detail="&quot;Item already in dictionary&quot;" /></stage><stage stageid="896364b1-4496-4352-aa9c-eac86009ca25" name="Remove From Dictionary" type="SubSheetInfo"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0a3d611e-b91b-4bc2-ad08-6d929bd269ac" name="End" type="End"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><loginhibit /><display x="315" y="15" /></stage><stage stageid="8676ddad-16f2-4cf3-8266-8b63a17f8403" name="Start" type="Start"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><loginhibit /><display x="75" y="-105" /><inputs><input type="text" name="Item ID" stage="Item ID" /></inputs><onsuccess>4b7a0b18-7cda-42eb-bc69-a597134fbfaa</onsuccess></stage><stage stageid="4b7a0b18-7cda-42eb-bc69-a597134fbfaa" name="For Each Open Item" type="LoopStart"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><loginhibit /><display x="75" y="-45" w="150" h="30" /><onsuccess>ee41e21c-e09a-4b4f-b8dd-97033565112d</onsuccess><groupid>82873f9f-1a34-4c5b-bfa5-be57a7b164ca</groupid><looptype>ForEach</looptype><loopdata>Open Items</loopdata></stage><stage stageid="aaa9472f-5e88-4761-a259-9873d005dcdc" name="Next Item" type="LoopEnd"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><loginhibit /><display x="75" y="75" w="150" h="30" /><onsuccess>0fe6e637-f2c6-4abb-b52c-6289220a09c7</onsuccess><groupid>82873f9f-1a34-4c5b-bfa5-be57a7b164ca</groupid></stage><stage stageid="ee41e21c-e09a-4b4f-b8dd-97033565112d" name="Match?" type="Decision"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><loginhibit /><display x="75" y="15" /><decision expression="[Item ID] = [Open Items.Item ID]" /><ontrue>0d0e2595-c251-40c4-b39d-5e9f56059121</ontrue><onfalse>aaa9472f-5e88-4761-a259-9873d005dcdc</onfalse></stage><stage stageid="0d0e2595-c251-40c4-b39d-5e9f56059121" name="Remove" type="Action"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><loginhibit /><display x="210" y="15" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Open Items&quot;" /></inputs><onsuccess>0a3d611e-b91b-4bc2-ad08-6d929bd269ac</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Remove Row" /></stage><stage stageid="0fe6e637-f2c6-4abb-b52c-6289220a09c7" name="Exception3" type="Exception"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><display x="75" y="135" /><exception type="Configuration Exception" detail="&quot;Item not found in dictionary - cannot remove&quot;" /></stage><stage stageid="9e29024a-8bc5-4c26-bfc1-84718bffa45e" name="For Each Open Item" type="LoopStart"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><onsuccess>4b70d5d8-9e1b-4512-82d3-5a0caa734af3</onsuccess><groupid>3bf3236f-3bfa-40fc-9051-944759b72a2e</groupid><looptype>ForEach</looptype><loopdata>Open Items</loopdata></stage><stage stageid="fc58b778-a789-4610-b7a5-708a3c23b94e" name="Next Item" type="LoopEnd"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="15" y="75" w="120" h="30" /><onsuccess>87c0b1e6-31ce-4621-828a-34ab36550644</onsuccess><groupid>3bf3236f-3bfa-40fc-9051-944759b72a2e</groupid></stage><stage stageid="e5483d20-dd67-42ef-818e-d76532b29c78" name="Item ID from Dictionary" type="SubSheet"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="15" y="0" w="90" h="60" /><inputs><input type="text" name="Item Key" expr="[Item Key]" /></inputs><outputs><output type="text" name="Item ID" stage="Item ID" /></outputs><onsuccess>11bd4f89-e683-41b8-b23d-02f8b8118c6e</onsuccess><processid>83a1957b-e164-4408-ba12-8b16b686769e</processid></stage><stage stageid="11bd4f89-e683-41b8-b23d-02f8b8118c6e" name="Found?" type="Decision"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="15" y="60" /><decision expression="[Item ID] &lt;&gt; &quot;&quot;" /><ontrue>829f6373-71f3-4343-96c1-4680faab683d</ontrue><onfalse>25f0a550-b572-4b48-b8e6-bcebfe8f8118</onfalse></stage><stage stageid="829f6373-71f3-4343-96c1-4680faab683d" name="Remove from Dictionary" type="SubSheet"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="15" y="120" w="90" h="60" /><inputs><input type="text" name="Item ID" expr="[Item ID]" /></inputs><onsuccess>cd5f7ea8-65cf-4863-86bd-418c6b8829ef</onsuccess><processid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</processid></stage><stage stageid="5833d13d-bd66-4ad9-940c-c2aad4ddf980" name="Item ID" type="Data"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a4933b59-eaee-453d-b741-0aee31bd074c" name="Exception4" type="Exception"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><display x="315" y="60" /><exception type="Configuration Exception" detail="&quot;Cannot release item - not found in dictionary&quot;" /></stage><stage stageid="e78a5aec-1060-4cdd-a5d0-c2b8395aaba0" name="Add to Dictionary" type="SubSheet"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="15" y="180" w="90" h="60" /><inputs><input type="text" name="Item ID" expr="[Item ID]" /><input type="text" name="Item Key" expr="[Item Key]" /></inputs><onsuccess>c160feaa-d779-416d-abf1-9d2bb47e6dbf</onsuccess><processid>8528e309-fa4d-4abc-8eb3-26c087288eab</processid></stage><stage stageid="4b70d5d8-9e1b-4512-82d3-5a0caa734af3" name="Release Lock" type="SubSheet"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="15" y="0" w="90" h="60" /><inputs><input type="text" name="Item Key" narrative="The key of the item to be unlocked." expr="[Open Items.Item Key]" /><input type="flag" name="Error If Not Locked" narrative="Indicates whether an exception should be thrown if the specified item is not locked" expr="False" /></inputs><onsuccess>fc58b778-a789-4610-b7a5-708a3c23b94e</onsuccess><processid>36e6ed40-192f-48c3-b17d-75284ac86507</processid></stage><stage stageid="b29013ba-5063-4886-bc8e-0fc8fe6fb74e" name="Block1" type="Block"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="-45" y="-45" w="390" h="90" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7ad977a4-0f4b-45fc-a818-b69374095fe3" name="Recover1" type="Recover"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="180" y="0" /><onsuccess>238fd8a4-ff09-4b06-baea-14be9f8fca84</onsuccess></stage><stage stageid="238fd8a4-ff09-4b06-baea-14be9f8fca84" name="Resume1" type="Resume"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="180" y="75" /><onsuccess>fc58b778-a789-4610-b7a5-708a3c23b94e</onsuccess></stage><stage stageid="816c64fd-5a60-47d2-874b-33581ac0543e" name="Item ID" type="Data"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><display x="105" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee098ccb-a35b-4685-bb52-ee13c3660d92" name="Set Up Queue Item" type="SubSheetInfo"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b8994811-1221-4a60-87b2-e56a2756d291" name="Start" type="Start"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="15" y="-165" /><inputs><input type="text" name="Item Key" narrative="The item key of the queue item to be created" stage="Item Key" /><input type="flag" name="Ignore If Exists" narrative="When true, no action will be taken if the item already exists. Otherwise an exception will be thrown." stage="Ignore If Exists" /></inputs><onsuccess>70adba11-0d37-43f4-b072-341e8a9fba5f</onsuccess></stage><stage stageid="3b2b4fff-7d48-432e-ba91-490ab36cca33" name="End" type="End"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="15" y="150" /></stage><stage stageid="47da8e0c-3b3d-42ec-8508-ad5fe754f37b" name="Item Key" type="Data"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="150" y="-165" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">PAS Login</initialvalue><private /><alwaysinit /></stage><stage stageid="68cf6ffe-3681-4cd2-b271-fb898bdd8638" name="Data" type="Collection"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="330" y="135" w="210" h="120" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item Key" type="text" /></collectioninfo></stage><stage stageid="6ee915bc-4ec5-4fc3-b1e6-90c710aa3719" name="New Row" type="Action"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Data&quot;" /></inputs><onsuccess>e4c91440-fe42-4e9b-a593-2d086a254ff6</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="e4c91440-fe42-4e9b-a593-2d086a254ff6" name="Values" type="Calculation"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>418995c9-f69b-4a21-a58a-b5896d8824f2</onsuccess><calculation expression="[Item Key]" stage="Data.Item Key" /></stage><stage stageid="418995c9-f69b-4a21-a58a-b5896d8824f2" name="Add to Queue" type="Action"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><display x="15" y="90" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue to add items to" expr="[Queue Name]" /><input type="collection" name="Data" narrative="A collection containing the data, one row for each item to be added" expr="[Data]" /><input type="datetime" name="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="number" name="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="text" name="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="" /><input type="text" name="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="" /></inputs><outputs><output type="collection" name="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="" /></outputs><onsuccess>3b2b4fff-7d48-432e-ba91-490ab36cca33</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="42913b2d-8e01-4a8a-8e22-65a08fa3cde8" name="Queue Name" type="Data"><loginhibit /><display x="180" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Locking Queue</initialvalue><alwaysinit /></stage><stage stageid="1d5cb36f-7219-4799-8616-7a1f2905ab06" name="Existing Item ID" type="Data"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><display x="105" y="-180" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="201b6cbb-85fe-4228-8233-69fa3127e021" name="Error If Not Locked" type="Data"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><display x="90" y="-75" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="25f0a550-b572-4b48-b8e6-bcebfe8f8118" name="Throw Error?" type="Decision"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="165" y="60" /><decision expression="[Error If Not Locked]" /><ontrue>a4933b59-eaee-453d-b741-0aee31bd074c</ontrue><onfalse>aebe605a-1323-4f23-b798-8c0986a91880</onfalse></stage><stage stageid="aebe605a-1323-4f23-b798-8c0986a91880" name="anchor1" type="Anchor"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="165" y="360" w="10" h="10" /><onsuccess>1864dc01-a33d-476f-ae3e-9805cbeba629</onsuccess></stage><stage stageid="84da6e4e-fce0-49e9-8de3-90d2aaf00f57" name="Ignore If Exists" type="Data"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><display x="270" y="-165" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="70adba11-0d37-43f4-b072-341e8a9fba5f" name="Item Exists" type="Action"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><narrative>Check if an item with the given key is already in the queue</narrative><display x="15" y="-120" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue to check" expr="[Queue Name]" /><input type="text" name="Key" narrative="The key to check." expr="[Item Key]" /><input type="flag" name="Include Pending" narrative="Check any items in the queue which are currently awaiting being worked. This will include any deferred items which have a deferral date in the past and any locked items. Optional - Default is True" expr="True" /><input type="flag" name="Include Deferred" narrative="Check any items in the queue which are currently deferred to a later date. Optional - Default is True" expr="True" /><input type="flag" name="Include Completed" narrative="Check any items in the queue which are completed. Optional - Default is True" expr="True" /><input type="flag" name="Include Terminated" narrative="Check any items in the queue which have been fully terminated. Optional - Default is True" expr="True" /></inputs><outputs><output type="flag" name="Result" narrative="True if an item with the given key is in the queue, False otherwise." stage="Exists" /></outputs><onsuccess>ee1888ef-de98-4e02-ae32-5fdc7a1d159a</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Is Item In Queue" /></stage><stage stageid="160f61b2-1133-436d-827c-13bc186b87a0" name="Exists" type="Data"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><display x="90" y="-120" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1888ef-de98-4e02-ae32-5fdc7a1d159a" name="Exists?" type="Decision"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="[Exists]" /><ontrue>72ac249b-863b-4083-aecd-73f58a6649cc</ontrue><onfalse>6ee915bc-4ec5-4fc3-b1e6-90c710aa3719</onfalse></stage><stage stageid="72ac249b-863b-4083-aecd-73f58a6649cc" name="Throw Error?" type="Decision"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="135" y="-60" /><decision expression="[Ignore If Exists]=False" /><ontrue>70563429-28bc-454f-9bce-35bc9e8d0401</ontrue><onfalse>606571d6-7531-45c5-955c-b42ff7d1cd7a</onfalse></stage><stage stageid="70563429-28bc-454f-9bce-35bc9e8d0401" name="Exception5" type="Exception"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><display x="255" y="-60" /><exception localized="yes" type="Configuration Exception" detail="&quot;Item already exists in queue.&quot;" /></stage><stage stageid="606571d6-7531-45c5-955c-b42ff7d1cd7a" name="anchor2" type="Anchor"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="135" y="150" w="10" h="10" /><onsuccess>3b2b4fff-7d48-432e-ba91-490ab36cca33</onsuccess></stage><stage stageid="5284adfc-f465-421e-96d1-6a19ae8cb304" name="Sleep" type="SubSheetInfo"><subsheetid>42312858-7074-4e68-9a5f-062306c0f439</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="bb56e330-ba06-4d28-ba43-856fc07f20bc" name="Start" type="Start"><subsheetid>42312858-7074-4e68-9a5f-062306c0f439</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Sleep Time (Seconds)" stage="Sleep Time (Seconds)" /></inputs><onsuccess>be2bce45-1333-4555-931f-3133876a773d</onsuccess></stage><stage stageid="ea0e3448-3460-4035-b927-0136da5a1069" name="End" type="End"><subsheetid>42312858-7074-4e68-9a5f-062306c0f439</subsheetid><loginhibit /><display x="15" y="120" /></stage><stage stageid="bc854747-21ab-40cb-bb80-2af3f67d6f1c" name="Time Out1" type="WaitEnd"><subsheetid>42312858-7074-4e68-9a5f-062306c0f439</subsheetid><loginhibit /><display x="15" y="60" w="30" h="30" /><onsuccess>ea0e3448-3460-4035-b927-0136da5a1069</onsuccess><groupid>50c7bdeb-191b-4d6d-9e9f-e222397e2305</groupid></stage><stage stageid="be2bce45-1333-4555-931f-3133876a773d" name="Wait1" type="WaitStart"><subsheetid>42312858-7074-4e68-9a5f-062306c0f439</subsheetid><loginhibit /><display x="15" y="-60" w="30" h="30" /><groupid>50c7bdeb-191b-4d6d-9e9f-e222397e2305</groupid><choices /><timeout>[Sleep Time (Seconds)]</timeout></stage><stage stageid="1a45e14b-1568-4cc6-bed6-65856ddc5735" name="Sleep Time (Seconds)" type="Data"><subsheetid>42312858-7074-4e68-9a5f-062306c0f439</subsheetid><display x="90" y="-105" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1fb1183-a056-464c-ba69-15758a7fcd25" name="Sleep In Case the Caller Requests This Lock Back Quickly - Give Other Clients A Chance to Grab It" type="SubSheet"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="15" y="270" w="150" h="90" /><inputs><input type="number" name="Sleep Time (Seconds)" expr="2 * [Sleep Inteval (Seconds)]" /></inputs><onsuccess>1864dc01-a33d-476f-ae3e-9805cbeba629</onsuccess><processid>42312858-7074-4e68-9a5f-062306c0f439</processid></stage><stage stageid="bf796355-10ec-4a81-9611-e24aaf4b96ad" name="Sleep" type="SubSheet"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="-90" y="15" /><inputs><input type="number" name="Sleep Time (Seconds)" expr="[Sleep Inteval (Seconds)]" /></inputs><onsuccess>d998e15c-8b94-409a-b6ad-b4dae95bc9df</onsuccess><processid>42312858-7074-4e68-9a5f-062306c0f439</processid></stage><stage stageid="af53aed8-4509-4007-b96e-3b7eb07f8570" name="Sleep Inteval (Seconds)" type="Data"><loginhibit /><display x="180" y="45" w="150" h="30" /><datatype>number</datatype><initialvalue>0.25</initialvalue><alwaysinit /></stage><stage stageid="40c6bc6e-80d9-4ee4-b981-28fe81e13c22" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="-435" y="-15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="80c6cec8-de6a-40e2-93ed-1741f8d6d78d" name="Note1" type="Note"><loginhibit /><narrative>Version 10.0</narrative><display x="15" y="-165" w="90" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage></process></object>
        <object id="ba504fda-e81a-4ee6-a672-6200b55c48e0" name="Utility - Network" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Network" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="A utility object with network related actions." byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>cc59863e-92d6-4396-adc1-0f8a2a96af39</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="5f21a6a2-cdb3-4d80-a8f3-b0efc6665b6f" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5e950850-49da-49e3-ba6a-b55a612b4426" type="Normal" published="False"><name>Process Executor</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2e5ddf19-f310-4429-8309-a2377c5851e5" type="Normal" published="True"><name>Ping</name><view><camerax>0</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9226f296-7cd6-4be9-a030-c485125adfae" type="Normal" published="True"><name>nslookup</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b91c37ef-772c-467b-b5a9-4ab34e2a4f3a" type="Normal" published="True"><name>Get IP Addresses</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b903506a-83b2-4f83-b104-e62485baa72f" type="Normal" published="True"><name>Netstat</name><view><camerax>-126</camerax><cameray>-8</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="54caaabb-4afd-42e8-944e-aea53fd44faf" type="Normal" published="True"><name>ARP</name><view><camerax>-206</camerax><cameray>-48</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6d42c1dc-b244-4d85-88c2-b26bd2609afb" type="Normal" published="True"><name>NbtStat</name><view><camerax>0</camerax><cameray>-12</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="78b58da5-cf71-4a3b-b0fe-0a3fd689534f" type="Normal" published="True"><name>Hostname</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7e45a8d7-eda0-4a40-b12b-5ad5b8e35a39" type="Normal" published="True"><name>Tracert</name><view><camerax>-310</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e03585ed-9b57-4111-abef-444bafe6ca43" type="Normal" published="True"><name>IpConfig</name><view><camerax>-310</camerax><cameray>18</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="99909e63-dbe5-443a-88e2-8d5e4ebf9b04" type="Normal" published="True"><name>Route</name><view><camerax>-310</camerax><cameray>-90</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8a91107d-0ee8-459a-bab3-ee14dbb82c08" type="Normal" published="True"><name>PathPing</name><view><camerax>-310</camerax><cameray>33</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="cc386a36-af51-4499-bc43-8a9a5407a881" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>6aae6635-0d2b-458f-9052-1ace6bbfd402</onsuccess></stage><stage stageid="6aae6635-0d2b-458f-9052-1ace6bbfd402" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="5388b9ac-8551-4b68-8c85-b43fdcabcd28" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Net.NetworkInformation</import><import>System.Data</import><import>System.Diagnostics</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="78247cd0-4a8b-4ba9-9606-3a4c6cf51122" name="Clean Up" type="SubSheetInfo"><subsheetid>5f21a6a2-cdb3-4d80-a8f3-b0efc6665b6f</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="80a773f1-2e40-4833-b9be-865fb16ce513" name="Start" type="Start"><subsheetid>5f21a6a2-cdb3-4d80-a8f3-b0efc6665b6f</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>2ba811c0-d8c0-4f72-a5c1-86f4954dc807</onsuccess></stage><stage stageid="2ba811c0-d8c0-4f72-a5c1-86f4954dc807" name="End" type="End"><subsheetid>5f21a6a2-cdb3-4d80-a8f3-b0efc6665b6f</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="f5198681-ab5e-4781-8bdb-4b4cd39e77e1" name="new" type="Note"><subsheetid>5f21a6a2-cdb3-4d80-a8f3-b0efc6665b6f</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="76772e92-3d97-452c-a128-db49a67a65d3" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="63a3a2b4-e879-437e-a3d2-90298c9a24f3" name="Ping" type="SubSheetInfo"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><narrative>Ping is used to test the ability of one network host to communicate with another. Simply enter the Ping command, followed by the name or the IP address of the destination host. Assuming that there are no network problems or firewalls preventing the ping from completing, the remote host will respond to the ping with four packets. Receiving these packets confirms that a valid and functional network path exists between the two hosts.</narrative><display x="-240" y="-120" w="300" h="90" /></stage><stage stageid="adeb690c-9fd3-459a-8a4a-83b624907159" name="Start" type="Start"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="Location" narrative="The computer name or ip address you want to ping" stage="Location" /></inputs><onsuccess>70574e9d-3764-4839-8247-c5df0a5f2f1c</onsuccess></stage><stage stageid="3f976139-c96e-48a5-a84f-b4af0aa75921" name="End" type="End"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="flag" name="Ping Success" stage="Ping Success" /><output type="text" name="Address" stage="Address" /><output type="number" name="Round Trip Time (Milliseconds)" stage="Round Trip Time (Milliseconds)" /><output type="text" name="Ping Exception" stage="Ping Exception" /></outputs></stage><stage stageid="16c0b46b-f799-4e33-8121-5d6d779f4b71" name="Location" type="Data"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><loginhibit /><display x="-165" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="70574e9d-3764-4839-8247-c5df0a5f2f1c" name="Ping" type="Code"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="Location" expr="[Location]" /></inputs><outputs><output type="flag" name="Success" stage="Ping Success" /><output type="text" name="Address" stage="Address" /><output type="number" name="Round Trip Time" stage="Round Trip Time (Milliseconds)" /><output type="text" name="Exception" stage="Ping Exception" /></outputs><onsuccess>3f976139-c96e-48a5-a84f-b4af0aa75921</onsuccess><code><![CDATA[Success = False
Dim pingSender As New Ping
Try
	Dim reply As PingReply = pingSender.Send(Location)

	If (reply.Status = IPStatus.Success) Then
		Success = True
		Address = reply.Address.ToString()
		Round_Trip_Time = reply.RoundtripTime
	End If

Catch ex as Exception
	Exception = ex.ToString()
End Try]]></code></stage><stage stageid="ad81f7a6-de26-45e0-af37-1fcc16c65311" name="Ping Success" type="Data"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><display x="-165" y="225" w="180" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8db99241-b839-49aa-a493-f51f61418185" name="Round Trip Time (Milliseconds)" type="Data"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><display x="-165" y="90" w="180" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="36226432-f5da-4f05-b068-dd8cc8996689" name="Address" type="Data"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><display x="-165" y="180" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43f92e8a-9aea-4905-a868-f8fae4365ccd" name="Ping Exception" type="Data"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><display x="-165" y="135" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="378d243a-b717-4e26-bd8d-de94d7870f6e" name="Note2" type="Note"><narrative>© 2023 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="240" y="-15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="2ba7e2f5-50fd-4c1d-b48d-bd2c649ab549" name="nslookup" type="SubSheetInfo"><subsheetid>9226f296-7cd6-4be9-a030-c485125adfae</subsheetid><narrative>NSLookup is a great utility for diagnosing DNS name resolution problems. Just type the NSLookup command, and Windows will display the name and IP address of the device’s default DNS server. From there, you can type host names in an effort to see if the DNS server is able to resolve the specified host name.

Usage:
   nslookup [-opt ...]             # interactive mode using default server
   nslookup [-opt ...] - server    # interactive mode using 'server'
   nslookup [-opt ...] host        # just look up 'host' using default server
   nslookup [-opt ...] host server # just look up 'host' using 'server'</narrative><display x="-270" y="-135" w="300" h="150" /></stage><stage stageid="4febb086-0e90-4d24-8547-530207269b67" name="Start" type="Start"><subsheetid>9226f296-7cd6-4be9-a030-c485125adfae</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Arguments" narrative="The arguments for nslookup. Use /? for help" stage="Arguments" /></inputs><onsuccess>8746d9eb-923f-4b16-b9a6-2d5160b31c94</onsuccess></stage><stage stageid="7773edb3-f4b9-4e87-bfec-c0d23f0ea0f7" name="End" type="End"><subsheetid>9226f296-7cd6-4be9-a030-c485125adfae</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Output" narrative="The results from the NSLookup call." stage="Output" /></outputs></stage><stage stageid="951a1cf7-71df-4a2a-9825-0c3ab3b47067" name="Get IP Addresses" type="SubSheetInfo"><subsheetid>b91c37ef-772c-467b-b5a9-4ab34e2a4f3a</subsheetid><narrative>Returns a set of IP Addresses for a given hostname. The collection consists of both IPv4 and IPv6 addresses if they exist.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="960c4515-ed8f-4720-949a-acc8a8c86094" name="Start" type="Start"><subsheetid>b91c37ef-772c-467b-b5a9-4ab34e2a4f3a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Hostname" narrative="The hostname to gather the IP addresses for." stage="HostName" /></inputs><onsuccess>836e35fb-cb9e-4bf1-8cdd-0391f766d6ab</onsuccess></stage><stage stageid="67aea469-42ba-466b-841b-93f52b6be839" name="End" type="End"><subsheetid>b91c37ef-772c-467b-b5a9-4ab34e2a4f3a</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Outputs" narrative="The resulting collection of IP Addresses" stage="IPAddresses" /></outputs></stage><stage stageid="836e35fb-cb9e-4bf1-8cdd-0391f766d6ab" name="GetIPAddresses" type="Code"><subsheetid>b91c37ef-772c-467b-b5a9-4ab34e2a4f3a</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Hostname" expr="[HostName]" /></inputs><outputs><output type="collection" name="IPAddresses" stage="IPAddresses" /></outputs><onsuccess>67aea469-42ba-466b-841b-93f52b6be839</onsuccess><code><![CDATA[Dim host As String = System.Net.Dns.GetHostName()
        Dim IPAddrs As New DataTable()
        Dim dr As DataRow
        IPAddrs.Columns.Add("IPAddress")


        For i = 0 To Net.Dns.GetHostEntry(Hostname).AddressList.Length() - 1
            dr = IPAddrs.NewRow
            dr("IPAddress") = Net.Dns.GetHostEntry(Hostname).AddressList(i).ToString()
			IPAddrs.Rows.Add(dr)
        Next

IPAddresses = IPAddrs]]></code></stage><stage stageid="d2968a3d-d03d-4887-a295-e17589aa5347" name="HostName" type="Data"><subsheetid>b91c37ef-772c-467b-b5a9-4ab34e2a4f3a</subsheetid><loginhibit /><display x="-195" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">BPEU342</initialvalue><private /><alwaysinit /></stage><stage stageid="b4e726f8-87ff-4dcd-8255-52a9766c428f" name="IPAddresses" type="Collection"><subsheetid>b91c37ef-772c-467b-b5a9-4ab34e2a4f3a</subsheetid><loginhibit /><display x="-195" y="120" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="IPAddress" type="text" /></collectioninfo></stage><stage stageid="b7100a5d-48ec-4ce9-847b-bc057275b793" name="ProcessName" type="Data"><subsheetid>9226f296-7cd6-4be9-a030-c485125adfae</subsheetid><loginhibit /><display x="-195" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">nslookup</initialvalue><private /><alwaysinit /></stage><stage stageid="6f26eaa6-2e71-42d4-a2ee-84c91d055d62" name="Process Executor" type="SubSheetInfo"><subsheetid>5e950850-49da-49e3-ba6a-b55a612b4426</subsheetid><narrative>Executes a command line process and returns the result to Blue Prism.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ed698791-42f6-4a1b-91cf-4855268114cf" name="Start" type="Start"><subsheetid>5e950850-49da-49e3-ba6a-b55a612b4426</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="ProcessName" narrative="The command to be executed" stage="ProcessName" /><input type="text" name="Arguments" narrative="The arguments to add to the command." stage="Arguments" /></inputs><onsuccess>1c4f3a6b-ea39-4f02-b91c-304c27c2ffb8</onsuccess></stage><stage stageid="2318e10e-eed9-42de-9d17-361940704203" name="End" type="End"><subsheetid>5e950850-49da-49e3-ba6a-b55a612b4426</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Output" narrative="The resulting output" stage="ProcessOutput" /></outputs></stage><stage stageid="1c4f3a6b-ea39-4f02-b91c-304c27c2ffb8" name="Process Execution" type="Code"><subsheetid>5e950850-49da-49e3-ba6a-b55a612b4426</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="ProcessName" expr="[ProcessName]" /><input type="text" name="Arguments" expr="[Arguments]" /></inputs><outputs><output type="text" name="ProcessOutput" stage="ProcessOutput" /></outputs><onsuccess>2318e10e-eed9-42de-9d17-361940704203</onsuccess><code><![CDATA[	Dim output As String = String.Empty

    Try
        Dim p As Process = New Process With {
            .StartInfo = New ProcessStartInfo() With {
                .FileName = ProcessName,
                .WorkingDirectory = String.Empty,
                .Arguments = arguments,
                .RedirectStandardOutput = True,
                .UseShellExecute = False,
                .CreateNoWindow = True
            }
        }
        p.Start()
        output = p.StandardOutput.ReadToEnd()
        p.WaitForExit()
    Catch ex As Exception
        output = ex.Message
    End Try

    ProcessOutput = output
]]></code></stage><stage stageid="f3cfa899-9548-44c1-b8c0-1f05bd50f523" name="ProcessName" type="Data"><subsheetid>5e950850-49da-49e3-ba6a-b55a612b4426</subsheetid><loginhibit /><display x="-195" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="367e5b0e-cff3-4286-a7c6-de981c47c175" name="Arguments" type="Data"><subsheetid>5e950850-49da-49e3-ba6a-b55a612b4426</subsheetid><display x="-195" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c057e7f-f8b1-4b89-941e-1e7a32e1c64e" name="ProcessOutput" type="Data"><subsheetid>5e950850-49da-49e3-ba6a-b55a612b4426</subsheetid><display x="-195" y="120" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="530507fd-fa52-49c9-a86d-852486395eda" name="Netstat" type="SubSheetInfo"><subsheetid>b903506a-83b2-4f83-b104-e62485baa72f</subsheetid><narrative>If you are experiencing problems with network communications, then network statistics can sometimes help point you toward the root cause of the problem. That’s where the aptly named NetStat command comes into play. This command has a number of different functions, but the most useful of these is to display network summary information for the device. To see this type of summary information, just type NetStat -e.

Displays protocol statistics and current TCP/IP network connections.

NETSTAT [-a] [-b] [-e] [-f] [-n] [-o] [-p proto] [-r] [-s] [-x] [-t] [interval]

  -a            Displays all connections and listening ports.
  -b            Displays the executable involved in creating each connection or
                listening port. In some cases well-known executables host
                multiple independent components, and in these cases the
                sequence of components involved in creating the connection
                or listening port is displayed. In this case the executable
                name is in [] at the bottom, on top is the component it called,
                and so forth until TCP/IP was reached. Note that this option
                can be time-consuming and will fail unless you have sufficient
                permissions.
  -e            Displays Ethernet statistics. This may be combined with the -s
                option.
  -f            Displays Fully Qualified Domain Names (FQDN) for foreign
                addresses.
  -n            Displays addresses and port numbers in numerical form.
  -o            Displays the owning process ID associated with each connection.
  -p proto      Shows connections for the protocol specified by proto; proto
                may be any of: TCP, UDP, TCPv6, or UDPv6.  If used with the -s
                option to display per-protocol statistics, proto may be any of:
                IP, IPv6, ICMP, ICMPv6, TCP, TCPv6, UDP, or UDPv6.
  -q            Displays all connections, listening ports, and bound
                nonlistening TCP ports. Bound nonlistening ports may or may not
                be associated with an active connection.
  -r            Displays the routing table.
  -s            Displays per-protocol statistics.  By default, statistics are
                shown for IP, IPv6, ICMP, ICMPv6, TCP, TCPv6, UDP, and UDPv6;
                the -p option may be used to specify a subset of the default.
  -t            Displays the current connection offload state.
  -x            Displays NetworkDirect connections, listeners, and shared
                endpoints.
  -y            Displays the TCP connection template for all connections.
                Cannot be combined with the other options.
  interval      Redisplays selected statistics, pausing interval seconds
                between each display.  Press CTRL+C to stop redisplaying
                statistics.  If omitted, netstat will print the current
                configuration information once.</narrative><display x="-450" y="135" w="300" h="540" /></stage><stage stageid="122f563b-fae3-4e21-9978-5f58763f2c8c" name="Start" type="Start"><subsheetid>b903506a-83b2-4f83-b104-e62485baa72f</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Arguments" stage="Arguments" /></inputs><onsuccess>5bf2dd14-7faa-4889-be70-31373e2bf837</onsuccess></stage><stage stageid="ef43efd2-ca6f-4dbb-ab47-47d3547222b3" name="End" type="End"><subsheetid>b903506a-83b2-4f83-b104-e62485baa72f</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Output" stage="Output" /></outputs></stage><stage stageid="5bf2dd14-7faa-4889-be70-31373e2bf837" name="Process Executor" type="SubSheet"><subsheetid>b903506a-83b2-4f83-b104-e62485baa72f</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="ProcessName" friendlyname="ProcessName" narrative="The command to be executed" expr="[ProcessName]" /><input type="text" name="Arguments" friendlyname="Arguments" narrative="The arguments to add to the command." expr="[Arguments]" /></inputs><outputs><output type="text" name="Output" friendlyname="Output" narrative="The resulting output" stage="Output" /></outputs><onsuccess>ef43efd2-ca6f-4dbb-ab47-47d3547222b3</onsuccess><processid>5e950850-49da-49e3-ba6a-b55a612b4426</processid></stage><stage stageid="6dd35d96-01ef-46a8-8475-da67fa34161c" name="ProcessName" type="Data"><subsheetid>b903506a-83b2-4f83-b104-e62485baa72f</subsheetid><loginhibit /><display x="-195" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">netstat</initialvalue><private /><alwaysinit /></stage><stage stageid="a3f90519-3f99-4426-bb7d-29d904af47b4" name="Arguments" type="Data"><subsheetid>b903506a-83b2-4f83-b104-e62485baa72f</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="74f2cdba-4f43-45ed-b1e5-69a7f929d2d6" name="Output" type="Data"><subsheetid>b903506a-83b2-4f83-b104-e62485baa72f</subsheetid><display x="-195" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa81d496-cfcb-4cb1-b88f-d2b4e3b8fb1d" name="Input Parameters" type="Block"><subsheetid>5e950850-49da-49e3-ba6a-b55a612b4426</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="3f56c6ef-de97-4884-8cc3-5293a2bf231a" name="Output Parameters" type="Block"><subsheetid>5e950850-49da-49e3-ba6a-b55a612b4426</subsheetid><loginhibit /><display x="-270" y="75" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="0bbf036f-4887-4b8d-aa91-03f54fb4e5db" name="Input Parameters" type="Block"><subsheetid>b91c37ef-772c-467b-b5a9-4ab34e2a4f3a</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="ed20bd13-50fc-46e0-9229-1ee5360ae414" name="Output Parameters" type="Block"><subsheetid>b91c37ef-772c-467b-b5a9-4ab34e2a4f3a</subsheetid><loginhibit /><display x="-270" y="75" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="a5aa464e-25f6-4b9d-a143-426165384487" name="Input Parameters" type="Block"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><loginhibit /><display x="-240" y="-60" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="47937892-d6fb-43bc-8b95-319eb519740a" name="Output Parameters" type="Block"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><loginhibit /><display x="-270" y="60" w="210" h="195" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="bef17170-baab-45e4-8d81-c59467531225" name="Input Parameters" type="Block"><subsheetid>9226f296-7cd6-4be9-a030-c485125adfae</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="08933edb-c986-4037-af5f-00ca6b82ae3a" name="Output Parameters" type="Block"><subsheetid>9226f296-7cd6-4be9-a030-c485125adfae</subsheetid><loginhibit /><display x="-270" y="105" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="8746d9eb-923f-4b16-b9a6-2d5160b31c94" name="Process Executor" type="SubSheet"><subsheetid>9226f296-7cd6-4be9-a030-c485125adfae</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /><inputs><input type="text" name="ProcessName" friendlyname="ProcessName" narrative="The command to be executed" expr="[ProcessName]" /><input type="text" name="Arguments" friendlyname="Arguments" narrative="The arguments to add to the command." expr="[Arguments]" /></inputs><outputs><output type="text" name="Output" friendlyname="Output" narrative="The resulting output" stage="Output" /></outputs><onsuccess>7773edb3-f4b9-4e87-bfec-c0d23f0ea0f7</onsuccess><processid>5e950850-49da-49e3-ba6a-b55a612b4426</processid></stage><stage stageid="394993cb-a7c1-4eb0-834b-4359cd934cb5" name="Input Parameters" type="Block"><subsheetid>b903506a-83b2-4f83-b104-e62485baa72f</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="0f79b1f4-1190-4450-b26c-22ff37774735" name="Output Parameters" type="Block"><subsheetid>b903506a-83b2-4f83-b104-e62485baa72f</subsheetid><loginhibit /><display x="-270" y="75" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="5e074f19-b390-4bd6-a921-7ac40048cc30" name="Arguments" type="Data"><subsheetid>9226f296-7cd6-4be9-a030-c485125adfae</subsheetid><loginhibit /><display x="-195" y="45" w="120" h="30" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="287372b5-6233-4a04-a26b-0c2b633f61a4" name="Output" type="Data"><subsheetid>9226f296-7cd6-4be9-a030-c485125adfae</subsheetid><loginhibit /><display x="-195" y="150" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5215beac-881e-4d00-a851-ac26a3804bfa" name="ARP" type="SubSheetInfo"><subsheetid>54caaabb-4afd-42e8-944e-aea53fd44faf</subsheetid><narrative>The ARP command corresponds to the Address Resolution Protocol. Although it is easy to think of network communications in terms of IP addressing, packet delivery is ultimately dependent on the Media Access Control (MAC) address of the device’s network adapter. This is where the Address Resolution Protocol comes into play. Its job is to map IP addresses to MAC addresses.

Windows devices maintain an ARP cache, which contains the results of recent ARP queries. You can see the contents of this cache by using the ARP -A command. If you are having problems communicating with one specific host, you can append the remote host’s IP address to the ARP -A command.

Displays and modifies the IP-to-Physical address translation tables used by
address resolution protocol (ARP).

ARP -s inet_addr eth_addr [if_addr]
ARP -d inet_addr [if_addr]
ARP -a [inet_addr] [-N if_addr] [-v]

  -a            Displays current ARP entries by interrogating the current
                protocol data.  If inet_addr is specified, the IP and Physical
                addresses for only the specified computer are displayed.  If
                more than one network interface uses ARP, entries for each ARP
                table are displayed.
  -g            Same as -a.
  -v            Displays current ARP entries in verbose mode.  All invalid
                entries and entries on the loop-back interface will be shown.
  inet_addr     Specifies an internet address.
  -N if_addr    Displays the ARP entries for the network interface specified
                by if_addr.
  -d            Deletes the host specified by inet_addr. inet_addr may be
                wildcarded with * to delete all hosts.
  -s            Adds the host and associates the Internet address inet_addr
                with the Physical address eth_addr.  The Physical address is
                given as 6 hexadecimal bytes separated by hyphens. The entry
                is permanent.
  eth_addr      Specifies a physical address.
  if_addr       If present, this specifies the Internet address of the
                interface whose address translation table should be modified.
                If not present, the first applicable interface will be used.
Example:
  &gt; arp -s 157.55.85.212   00-aa-00-62-c6-09  .... Adds a static entry.
  &gt; arp -a                                    .... Displays the arp table.</narrative><display x="-465" y="-60" w="360" h="450" /></stage><stage stageid="5b729e4f-3894-4b33-9acb-8d0e7970cad0" name="Start" type="Start"><subsheetid>54caaabb-4afd-42e8-944e-aea53fd44faf</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Arguments" stage="Arguments" /></inputs><onsuccess>f5a2b825-b73b-4c9c-9100-d4410dc0ec41</onsuccess></stage><stage stageid="8e4229e8-3ca9-4824-aa66-d0b84251909c" name="End" type="End"><subsheetid>54caaabb-4afd-42e8-944e-aea53fd44faf</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Output" stage="Output" /></outputs></stage><stage stageid="f5a2b825-b73b-4c9c-9100-d4410dc0ec41" name="Process Executor" type="SubSheet"><subsheetid>54caaabb-4afd-42e8-944e-aea53fd44faf</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="ProcessName" friendlyname="ProcessName" narrative="The command to be executed" expr="[ProcessName]" /><input type="text" name="Arguments" friendlyname="Arguments" narrative="The arguments to add to the command." expr="[Arguments]" /></inputs><outputs><output type="text" name="Output" friendlyname="Output" narrative="The resulting output" stage="Output" /></outputs><onsuccess>8e4229e8-3ca9-4824-aa66-d0b84251909c</onsuccess><processid>5e950850-49da-49e3-ba6a-b55a612b4426</processid></stage><stage stageid="970b8bb7-78be-4aae-816d-f924cf689281" name="ProcessName" type="Data"><subsheetid>54caaabb-4afd-42e8-944e-aea53fd44faf</subsheetid><loginhibit /><display x="-195" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">arp</initialvalue><private /><alwaysinit /></stage><stage stageid="9bc021e5-7f94-4cc9-9f8a-9bd75a780ee4" name="Arguments" type="Data"><subsheetid>54caaabb-4afd-42e8-944e-aea53fd44faf</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7f0dfab-2688-462b-a4c3-c017f563d4e7" name="Output" type="Data"><subsheetid>54caaabb-4afd-42e8-944e-aea53fd44faf</subsheetid><display x="-195" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7b0b88f8-03d2-47cf-ae88-227e70db808c" name="Input Parameters" type="Block"><subsheetid>54caaabb-4afd-42e8-944e-aea53fd44faf</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="60b381d9-f1a0-4c78-a7a1-c67f573fb9c6" name="Output Parameters" type="Block"><subsheetid>54caaabb-4afd-42e8-944e-aea53fd44faf</subsheetid><loginhibit /><display x="-270" y="75" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="853151a1-4af9-476b-b80e-4e5263578a1d" name="NbtStat" type="SubSheetInfo"><subsheetid>6d42c1dc-b244-4d85-88c2-b26bd2609afb</subsheetid><narrative>Computers that are running a Windows operating system are assigned a computer name. Oftentimes, there is a domain name or a workgroup name that is also assigned to the computer. The computer name is sometimes referred to as the NetBIOS name.

Displays protocol statistics and current TCP/IP connections using NBT
(NetBIOS over TCP/IP).

NBTSTAT [ [-a RemoteName] [-A IP address] [-c] [-n]
        [-r] [-R] [-RR] [-s] [-S] [interval] ]

  -a   (adapter status) Lists the remote machine's name table given its name
  -A   (Adapter status) Lists the remote machine's name table given its
                        IP address.
  -c   (cache)          Lists NBT's cache of remote [machine] names and their IP addresses
  -n   (names)          Lists local NetBIOS names.
  -r   (resolved)       Lists names resolved by broadcast and via WINS
  -R   (Reload)         Purges and reloads the remote cache name table
  -S   (Sessions)       Lists sessions table with the destination IP addresses
  -s   (sessions)       Lists sessions table converting destination IP
                        addresses to computer NETBIOS names.
  -RR  (ReleaseRefresh) Sends Name Release packets to WINS and then, starts Refresh

  RemoteName   Remote host machine name.
  IP address   Dotted decimal representation of the IP address.
  interval     Redisplays selected statistics, pausing interval seconds
               between each display. Press Ctrl+C to stop redisplaying
               statistics.

Windows uses several different methods to map NetBIOS names to IP addresses, such as broadcast, LMHost lookup, or even using the nearly extinct method of querying a WINS server.

Of course, NetBIOS over TCP/IP can occasionally break down. The NbtStat command can help you to diagnose and correct such problems. The NbtStat -n command for example, shows the NetBIOS names that are in use by a device. The NbtStat -r command shows how many NetBIOS names the device has been able to resolve recently.</narrative><display x="-420" y="15" w="270" h="450" /></stage><stage stageid="8bc64979-9023-494a-96f4-3d8f855bb76d" name="Start" type="Start"><subsheetid>6d42c1dc-b244-4d85-88c2-b26bd2609afb</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Arguments" stage="Arguments" /></inputs><onsuccess>aae27b0a-5509-4a1e-a12b-fb6e59b968d2</onsuccess></stage><stage stageid="03f0e78e-f1c3-4615-bd10-da1ef1286fb6" name="End" type="End"><subsheetid>6d42c1dc-b244-4d85-88c2-b26bd2609afb</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Output" stage="Output" /></outputs></stage><stage stageid="11c3cb5a-9cb7-467c-aa65-10fb475a06ad" name="ProcessName" type="Data"><subsheetid>6d42c1dc-b244-4d85-88c2-b26bd2609afb</subsheetid><loginhibit /><display x="-195" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\\windows\\system32\\sysnative\\nbtstat.exe</initialvalue><private /><alwaysinit /></stage><stage stageid="e7a08e0f-1358-411b-83a8-80be64dc74f9" name="Arguments" type="Data"><subsheetid>6d42c1dc-b244-4d85-88c2-b26bd2609afb</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f83a8db-6de1-4313-aae2-e671e6badfd5" name="Output" type="Data"><subsheetid>6d42c1dc-b244-4d85-88c2-b26bd2609afb</subsheetid><display x="-195" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04b71d44-e9f7-4157-86a4-ab54206917cf" name="Input Parameters" type="Block"><subsheetid>6d42c1dc-b244-4d85-88c2-b26bd2609afb</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="15be6e26-52ad-4625-bd3c-3f69bb6467f5" name="Output Parameters" type="Block"><subsheetid>6d42c1dc-b244-4d85-88c2-b26bd2609afb</subsheetid><loginhibit /><display x="-270" y="75" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="f1f56feb-d1ae-4325-a709-447e3300bbe8" name="Hostname" type="SubSheetInfo"><subsheetid>78b58da5-cf71-4a3b-b0fe-0a3fd689534f</subsheetid><narrative>The previously discussed NbtStat command can provide you with the host name that has been assigned to a Windows device, if you know which switch to use with the command. However, if you’re just looking for a fast and easy way of verifying a computer’s name, then try using the Hostname command. Typing Hostname at the command prompt returns the local computer name.</narrative><display x="-195" y="-120" w="240" h="90" /></stage><stage stageid="673bfe4b-8168-4d7e-880f-7747e8404072" name="Start" type="Start"><subsheetid>78b58da5-cf71-4a3b-b0fe-0a3fd689534f</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>e30648a0-2830-4be8-aea5-8149277f4578</onsuccess></stage><stage stageid="69d7c261-627f-45b2-804e-90d8c350b6c2" name="End" type="End"><subsheetid>78b58da5-cf71-4a3b-b0fe-0a3fd689534f</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Output" stage="Output" /></outputs></stage><stage stageid="e30648a0-2830-4be8-aea5-8149277f4578" name="Process Executor" type="SubSheet"><subsheetid>78b58da5-cf71-4a3b-b0fe-0a3fd689534f</subsheetid><loginhibit /><display x="15" y="-15" w="60" h="60" /><inputs><input type="text" name="ProcessName" friendlyname="ProcessName" narrative="The command to be executed" expr="[ProcessName]" /><input type="text" name="Arguments" friendlyname="Arguments" narrative="The arguments to add to the command." expr="[Arguments]" /></inputs><outputs><output type="text" name="Output" friendlyname="Output" narrative="The resulting output" stage="Output" /></outputs><onsuccess>69d7c261-627f-45b2-804e-90d8c350b6c2</onsuccess><processid>5e950850-49da-49e3-ba6a-b55a612b4426</processid></stage><stage stageid="72e9a13a-d3f2-43c4-9fe0-2b78115d9cb5" name="ProcessName" type="Data"><subsheetid>78b58da5-cf71-4a3b-b0fe-0a3fd689534f</subsheetid><loginhibit /><display x="-195" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">hostname</initialvalue><private /><alwaysinit /></stage><stage stageid="18000e30-1cf4-46db-a563-f2a8b57a6f48" name="Arguments" type="Data"><subsheetid>78b58da5-cf71-4a3b-b0fe-0a3fd689534f</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56819759-31a3-40c5-b80d-f32404063487" name="Output" type="Data"><subsheetid>78b58da5-cf71-4a3b-b0fe-0a3fd689534f</subsheetid><display x="-195" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="49bb9387-d553-41d5-b9f6-2ce1f04b7ed6" name="Input Parameters" type="Block"><subsheetid>78b58da5-cf71-4a3b-b0fe-0a3fd689534f</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="f04638eb-d5bf-49aa-99ce-46057f1d5751" name="Output Parameters" type="Block"><subsheetid>78b58da5-cf71-4a3b-b0fe-0a3fd689534f</subsheetid><loginhibit /><display x="-270" y="75" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="dfaa2abe-2ef4-40b8-ae7c-2a5689ab2188" name="Tracert" type="SubSheetInfo"><subsheetid>7e45a8d7-eda0-4a40-b12b-5ad5b8e35a39</subsheetid><narrative>Contrary to what a rather infamous YouTube video might lead you to believe, Tracert isn’t pronounced “Tracer T,” nor can it show you how many people are using Google right this second. Instead, Tracert, or “Trace Route,” is a utility for examining the path to a remote host.

Functionally, Tracert works similarly to Ping. The major difference is that Tracert sends a series of ICMP echo requests, and the request’s TTL increased by 1 each time. This allows the utility to display the routers through which packets are passing to be identified. When possible, Windows displays the duration and IP address or fully qualified domain name of each hop.

Usage: tracert [-d] [-h maximum_hops] [-j host-list] [-w timeout]
               [-R] [-S srcaddr] [-4] [-6] target_name

Options:
    -d                 Do not resolve addresses to hostnames.
    -h maximum_hops    Maximum number of hops to search for target.
    -j host-list       Loose source route along host-list (IPv4-only).
    -w timeout         Wait timeout milliseconds for each reply.
    -R                 Trace round-trip path (IPv6-only).
    -S srcaddr         Source address to use (IPv6-only).
    -4                 Force using IPv4.
    -6                 Force using IPv6.</narrative><display x="-435" y="30" w="300" h="270" /></stage><stage stageid="bd908e6b-7b28-4dc5-80d0-bede1be58d92" name="Start" type="Start"><subsheetid>7e45a8d7-eda0-4a40-b12b-5ad5b8e35a39</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Arguments" stage="Arguments" /></inputs><onsuccess>096f6fcd-8bd9-45ca-9947-36d1b6207a5c</onsuccess></stage><stage stageid="ac6d1ca5-7ce8-4568-a638-9f36c083adc0" name="End" type="End"><subsheetid>7e45a8d7-eda0-4a40-b12b-5ad5b8e35a39</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Output" stage="Output" /></outputs></stage><stage stageid="096f6fcd-8bd9-45ca-9947-36d1b6207a5c" name="Process Executor" type="SubSheet"><subsheetid>7e45a8d7-eda0-4a40-b12b-5ad5b8e35a39</subsheetid><loginhibit /><display x="15" y="-15" w="60" h="60" /><inputs><input type="text" name="ProcessName" friendlyname="ProcessName" narrative="The command to be executed" expr="[ProcessName]" /><input type="text" name="Arguments" friendlyname="Arguments" narrative="The arguments to add to the command." expr="[Arguments]" /></inputs><outputs><output type="text" name="Output" friendlyname="Output" narrative="The resulting output" stage="Output" /></outputs><onsuccess>ac6d1ca5-7ce8-4568-a638-9f36c083adc0</onsuccess><processid>5e950850-49da-49e3-ba6a-b55a612b4426</processid></stage><stage stageid="5a758bd5-2fb0-414a-bdde-4189371e749e" name="ProcessName" type="Data"><subsheetid>7e45a8d7-eda0-4a40-b12b-5ad5b8e35a39</subsheetid><loginhibit /><display x="-195" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">tracert</initialvalue><private /><alwaysinit /></stage><stage stageid="20d66fba-e5d1-4bf1-a821-a755c6ce517a" name="Arguments" type="Data"><subsheetid>7e45a8d7-eda0-4a40-b12b-5ad5b8e35a39</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="647f85f6-d1fe-4878-aabc-6b217e6b3d81" name="Output" type="Data"><subsheetid>7e45a8d7-eda0-4a40-b12b-5ad5b8e35a39</subsheetid><display x="-195" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9a676ef-a905-461d-b945-0324fd36f183" name="Input Parameters" type="Block"><subsheetid>7e45a8d7-eda0-4a40-b12b-5ad5b8e35a39</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="42f72721-dd5b-423d-ad2c-6ce790a9aa06" name="Output Parameters" type="Block"><subsheetid>7e45a8d7-eda0-4a40-b12b-5ad5b8e35a39</subsheetid><loginhibit /><display x="-270" y="75" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="609ceeee-2859-4b21-b417-3b79637607c3" name="IpConfig" type="SubSheetInfo"><subsheetid>e03585ed-9b57-4111-abef-444bafe6ca43</subsheetid><narrative>At its simplest, the IPConfig command will display basic IP address configuration information for the device. Simply type IPConfig at the Windows command prompt, and you will be presented with the IP address, subnet mask, and default gateway that the device is currently using.

USAGE:
    ipconfig [/allcompartments] [/? | /all |
                                 /renew [adapter] | /release [adapter] |
                                 /renew6 [adapter] | /release6 [adapter] |
                                 /flushdns | /displaydns | /registerdns |
                                 /showclassid adapter |
                                 /setclassid adapter [classid] |
                                 /showclassid6 adapter |
                                 /setclassid6 adapter [classid] ]

where
    adapter             Connection name
                       (wildcard characters * and ? allowed, see examples)

    Options:
       /?               Display this help message
       /all             Display full configuration information.
       /release         Release the IPv4 address for the specified adapter.
       /release6        Release the IPv6 address for the specified adapter.
       /renew           Renew the IPv4 address for the specified adapter.
       /renew6          Renew the IPv6 address for the specified adapter.
       /flushdns        Purges the DNS Resolver cache.
       /registerdns     Refreshes all DHCP leases and re-registers DNS names
       /displaydns      Display the contents of the DNS Resolver Cache.
       /showclassid     Displays all the dhcp class IDs allowed for adapter.
       /setclassid      Modifies the dhcp class id.
       /showclassid6    Displays all the IPv6 DHCP class IDs allowed for adapter.
       /setclassid6     Modifies the IPv6 DHCP class id.


The default is to display only the IP address, subnet mask and
default gateway for each adapter bound to TCP/IP.

For Release and Renew, if no adapter name is specified, then the IP address
leases for all adapters bound to TCP/IP will be released or renewed.

For Setclassid and Setclassid6, if no ClassId is specified, then the ClassId is removed.

Examples:
    &gt; ipconfig                       ... Show information
    &gt; ipconfig /all                  ... Show detailed information
    &gt; ipconfig /renew                ... renew all adapters
    &gt; ipconfig /renew EL*            ... renew any connection that has its
                                         name starting with EL
    &gt; ipconfig /release *Con*        ... release all matching connections,
                                         eg. "Wired Ethernet Connection 1" or
                                             "Wired Ethernet Connection 2"
    &gt; ipconfig /allcompartments      ... Show information about all
                                         compartments
    &gt; ipconfig /allcompartments /all ... Show detailed information about all
                                         compartments</narrative><display x="-465" y="30" w="360" h="630" /></stage><stage stageid="33861b43-e9d5-4d14-b77b-d0c70b595bc1" name="Start" type="Start"><subsheetid>e03585ed-9b57-4111-abef-444bafe6ca43</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Arguments" stage="Arguments" /></inputs><onsuccess>ec6413ff-e624-4489-b4c2-608a220e26cd</onsuccess></stage><stage stageid="134f6cde-74b1-40c7-81c5-c1797823d116" name="End" type="End"><subsheetid>e03585ed-9b57-4111-abef-444bafe6ca43</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Output" stage="Output" /></outputs></stage><stage stageid="ec6413ff-e624-4489-b4c2-608a220e26cd" name="Process Executor" type="SubSheet"><subsheetid>e03585ed-9b57-4111-abef-444bafe6ca43</subsheetid><loginhibit /><display x="15" y="-15" w="60" h="60" /><inputs><input type="text" name="ProcessName" friendlyname="ProcessName" narrative="The command to be executed" expr="[ProcessName]" /><input type="text" name="Arguments" friendlyname="Arguments" narrative="The arguments to add to the command." expr="[Arguments]" /></inputs><outputs><output type="text" name="Output" friendlyname="Output" narrative="The resulting output" stage="Output" /></outputs><onsuccess>134f6cde-74b1-40c7-81c5-c1797823d116</onsuccess><processid>5e950850-49da-49e3-ba6a-b55a612b4426</processid></stage><stage stageid="9e6224e3-63f7-44df-9d45-08ed776b9f17" name="ProcessName" type="Data"><subsheetid>e03585ed-9b57-4111-abef-444bafe6ca43</subsheetid><loginhibit /><display x="-195" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">ipconfig</initialvalue><private /><alwaysinit /></stage><stage stageid="d2e4562e-d7c3-4e24-9b0d-a6bbb0669d15" name="Arguments" type="Data"><subsheetid>e03585ed-9b57-4111-abef-444bafe6ca43</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4724b71f-5eab-4e21-b97c-058ef1f5f37e" name="Output" type="Data"><subsheetid>e03585ed-9b57-4111-abef-444bafe6ca43</subsheetid><display x="-195" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc4e0a2b-2732-437c-a3d2-77f593d3641d" name="Input Parameters" type="Block"><subsheetid>e03585ed-9b57-4111-abef-444bafe6ca43</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="7e960b7e-e661-4164-b06a-991a82f5d87b" name="Output Parameters" type="Block"><subsheetid>e03585ed-9b57-4111-abef-444bafe6ca43</subsheetid><loginhibit /><display x="-270" y="75" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="352191e7-0848-46dd-90b2-29c8b94de0c0" name="Route" type="SubSheetInfo"><subsheetid>99909e63-dbe5-443a-88e2-8d5e4ebf9b04</subsheetid><narrative>IP networks use routing tables to direct packets from one subnet to another. The Windows Route utility allows you to view the device’s routing tables. To do so, simply type Route Print.

The cool thing about the Route command is that it not only shows you the routing table, it lets you make changes. Commands such as Route Add, Route Delete, and Route Change allow you to make routing table modifications on an as needed basis. The changes that you make can be persistent or nonpersistent, depending on whether you use the -P switch.

ROUTE [-f] [-p] [-4|-6] command [destination]
                  [MASK netmask]  [gateway] [METRIC metric]  [IF interface]

  -f           Clears the routing tables of all gateway entries.  If this is
               used in conjunction with one of the commands, the tables are
               cleared prior to running the command.

  -p           When used with the ADD command, makes a route persistent across
               boots of the system. By default, routes are not preserved
               when the system is restarted. Ignored for all other commands,
               which always affect the appropriate persistent routes.

  -4           Force using IPv4.

  -6           Force using IPv6.

  command      One of these:
                 PRINT     Prints  a route
                 ADD       Adds    a route
                 DELETE    Deletes a route
                 CHANGE    Modifies an existing route
  destination  Specifies the host.
  MASK         Specifies that the next parameter is the 'netmask' value.
  netmask      Specifies a subnet mask value for this route entry.
               If not specified, it defaults to 255.255.255.255.
  gateway      Specifies gateway.
  interface    the interface number for the specified route.
  METRIC       specifies the metric, ie. cost for the destination.

All symbolic names used for destination are looked up in the network database
file NETWORKS. The symbolic names for gateway are looked up in the host name
database file HOSTS.

If the command is PRINT or DELETE. Destination or gateway can be a wildcard,
(wildcard is specified as a star '*'), or the gateway argument may be omitted.

If Dest contains a * or ?, it is treated as a shell pattern, and only
matching destination routes are printed. The '*' matches any string,
and '?' matches any one char. Examples: 157.*.1, 157.*, 127.*, *224*.

Pattern match is only allowed in PRINT command.
Diagnostic Notes:
    Invalid MASK generates an error, that is when (DEST &amp; MASK) != DEST.
    Example&gt; route ADD 157.0.0.0 MASK 155.0.0.0 157.55.80.1 IF 1
             The route addition failed: The specified mask parameter is invalid. (Destination &amp; Mask) != Destination.

Examples:

    &gt; route PRINT
    &gt; route PRINT -4
    &gt; route PRINT -6
    &gt; route PRINT 157*          .... Only prints those matching 157*

    &gt; route ADD 157.0.0.0 MASK 255.0.0.0  157.55.80.1 METRIC 3 IF 2
             destination^      ^mask      ^gateway     metric^    ^
                                                         Interface^
      If IF is not given, it tries to find the best interface for a given
      gateway.
    &gt; route ADD 3ffe::/32 3ffe::1

    &gt; route CHANGE 157.0.0.0 MASK 255.0.0.0 157.55.80.5 METRIC 2 IF 2

      CHANGE is used to modify gateway and/or metric only.

    &gt; route DELETE 157.0.0.0
    &gt; route DELETE 3ffe::/32</narrative><display x="-600" y="-30" w="570" h="810" /></stage><stage stageid="8e5409a5-8fd8-4fbc-8164-33dcb066c886" name="Start" type="Start"><subsheetid>99909e63-dbe5-443a-88e2-8d5e4ebf9b04</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Arguments" stage="Arguments" /></inputs><onsuccess>4c78fb28-64a4-4443-a5d4-1f4dbb8a41f0</onsuccess></stage><stage stageid="1be23b94-37aa-4da4-b810-6be5f463d7a1" name="End" type="End"><subsheetid>99909e63-dbe5-443a-88e2-8d5e4ebf9b04</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Output" stage="Output" /></outputs></stage><stage stageid="4c78fb28-64a4-4443-a5d4-1f4dbb8a41f0" name="Process Executor" type="SubSheet"><subsheetid>99909e63-dbe5-443a-88e2-8d5e4ebf9b04</subsheetid><loginhibit /><display x="15" y="-15" w="60" h="60" /><inputs><input type="text" name="ProcessName" friendlyname="ProcessName" narrative="The command to be executed" expr="[ProcessName]" /><input type="text" name="Arguments" friendlyname="Arguments" narrative="The arguments to add to the command." expr="[Arguments]" /></inputs><outputs><output type="text" name="Output" friendlyname="Output" narrative="The resulting output" stage="Output" /></outputs><onsuccess>1be23b94-37aa-4da4-b810-6be5f463d7a1</onsuccess><processid>5e950850-49da-49e3-ba6a-b55a612b4426</processid></stage><stage stageid="a97656db-e6bb-49d0-b7e5-d8fcb1235a56" name="ProcessName" type="Data"><subsheetid>99909e63-dbe5-443a-88e2-8d5e4ebf9b04</subsheetid><loginhibit /><display x="-195" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">route</initialvalue><private /><alwaysinit /></stage><stage stageid="c1cbd388-9406-471c-8a9f-168dc9abec94" name="Arguments" type="Data"><subsheetid>99909e63-dbe5-443a-88e2-8d5e4ebf9b04</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f768dcfa-72d8-4549-8d91-38fe0d69f708" name="Output" type="Data"><subsheetid>99909e63-dbe5-443a-88e2-8d5e4ebf9b04</subsheetid><display x="-195" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eb8808eb-8ba5-48ea-a1c2-5c3883c7454e" name="Input Parameters" type="Block"><subsheetid>99909e63-dbe5-443a-88e2-8d5e4ebf9b04</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="07a7e355-7e6d-4c59-aa99-7b04214c3371" name="Output Parameters" type="Block"><subsheetid>99909e63-dbe5-443a-88e2-8d5e4ebf9b04</subsheetid><loginhibit /><display x="-270" y="75" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="d8a8e42d-3f3a-4d47-8409-8aef855655f4" name="PathPing" type="SubSheetInfo"><subsheetid>8a91107d-0ee8-459a-bab3-ee14dbb82c08</subsheetid><narrative>Earlier, I talked about the Ping utility and the Tracert utility, and the similarities between them. As you might have guessed, the PathPing tool is a utility that combines the best aspects of Tracert and Ping.

Entering the PathPing command followed by a host name initiates what looks like a somewhat standard Tracert process. Once this process completes however, the tool takes 300 seconds (five minutes) to gather statistics, and then reports latency and packet loss statistics that are more detailed than those provided by Ping or Tracert.

Usage: pathping [-g host-list] [-h maximum_hops] [-i address] [-n]
                [-p period] [-q num_queries] [-w timeout]
                [-4] [-6] target_name

Options:
    -g host-list     Loose source route along host-list.
    -h maximum_hops  Maximum number of hops to search for target.
    -i address       Use the specified source address.
    -n               Do not resolve addresses to hostnames.
    -p period        Wait period milliseconds between pings.
    -q num_queries   Number of queries per hop.
    -w timeout       Wait timeout milliseconds for each reply.
    -4               Force using IPv4.
    -6               Force using IPv6.</narrative><display x="-510" y="45" w="450" h="240" /></stage><stage stageid="4dbfea80-d63b-4389-ae9a-db5bb5f47bb5" name="Start" type="Start"><subsheetid>8a91107d-0ee8-459a-bab3-ee14dbb82c08</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Arguments" stage="Arguments" /></inputs><onsuccess>1f5db1c7-e2d9-4fe0-981a-f54e28c100f4</onsuccess></stage><stage stageid="ee641764-218b-45d8-8d51-2c738417f537" name="End" type="End"><subsheetid>8a91107d-0ee8-459a-bab3-ee14dbb82c08</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Output" stage="Output" /></outputs></stage><stage stageid="1f5db1c7-e2d9-4fe0-981a-f54e28c100f4" name="Process Executor" type="SubSheet"><subsheetid>8a91107d-0ee8-459a-bab3-ee14dbb82c08</subsheetid><loginhibit /><display x="15" y="-15" w="60" h="60" /><inputs><input type="text" name="ProcessName" friendlyname="ProcessName" narrative="The command to be executed" expr="[ProcessName]" /><input type="text" name="Arguments" friendlyname="Arguments" narrative="The arguments to add to the command." expr="[Arguments]" /></inputs><outputs><output type="text" name="Output" friendlyname="Output" narrative="The resulting output" stage="Output" /></outputs><onsuccess>ee641764-218b-45d8-8d51-2c738417f537</onsuccess><processid>5e950850-49da-49e3-ba6a-b55a612b4426</processid></stage><stage stageid="648ea0b5-cb6a-4e04-be0c-4b01d991610b" name="ProcessName" type="Data"><subsheetid>8a91107d-0ee8-459a-bab3-ee14dbb82c08</subsheetid><loginhibit /><display x="-195" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">pathping</initialvalue><private /><alwaysinit /></stage><stage stageid="9ad5f986-50dd-452b-8b0e-d5b5241aa544" name="Arguments" type="Data"><subsheetid>8a91107d-0ee8-459a-bab3-ee14dbb82c08</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43c65326-cfa2-4757-8376-b48f10aa361d" name="Output" type="Data"><subsheetid>8a91107d-0ee8-459a-bab3-ee14dbb82c08</subsheetid><display x="-195" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="17db41f8-0201-44da-9c51-a38cad027d41" name="Input Parameters" type="Block"><subsheetid>8a91107d-0ee8-459a-bab3-ee14dbb82c08</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="c243ff42-5b4f-492f-99ea-b9863be24d5d" name="Output Parameters" type="Block"><subsheetid>8a91107d-0ee8-459a-bab3-ee14dbb82c08</subsheetid><loginhibit /><display x="-270" y="75" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="aae27b0a-5509-4a1e-a12b-fb6e59b968d2" name="NbtStat" type="Code"><subsheetid>6d42c1dc-b244-4d85-88c2-b26bd2609afb</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Arguments" expr="[Arguments]" /></inputs><outputs><output type="text" name="Output" stage="Output" /></outputs><onsuccess>03f0e78e-f1c3-4615-bd10-da1ef1286fb6</onsuccess><code><![CDATA[        Dim processname As String = Environment.GetFolderPath(Environment.SpecialFolder.Windows) & "\\sysnative\\NBTSTAT.exe"
        
        Try
            Dim p As Process = New Process With {
                    .StartInfo = New ProcessStartInfo() With {
                    .FileName = processname,
                    .WorkingDirectory = "",
                    .Arguments = arguments,
                    .RedirectStandardOutput = True,
                    .UseShellExecute = False,
                    .CreateNoWindow = true}
                    }
            p.Start()
            Output = p.StandardOutput.ReadToEnd()
            p.WaitForExit()
        Catch ex As Exception
            Output = ex.Message
        End Try]]></code></stage><stage stageid="f2ab6d5b-bbd4-4982-afbb-9fbd15f72658" name="Note1" type="Note"><loginhibit /><narrative>Version 10.0.1</narrative><display x="15" y="-165" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage></process></object>
        <object id="e290519e-5e15-4865-a384-bfb313c828d3" name="Utility - Numeric Operations" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Numeric Operations" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="Mathematical functions" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>a7f254ce-6c9f-4c50-a9d0-03c2cd24ef07</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="2875d2a6-0236-416e-bf04-c638bbb57806" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="97a91b4e-590f-4fb9-b450-f820d746c260" type="Normal" published="True"><name>Get Absolute Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="de3d40ad-d45c-476b-8cb3-409f48fda754" type="Normal" published="True"><name>Calculate Rolling Average (fixed denominator)</name><view><camerax>112</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d3813186-bbc2-4727-a08a-76df7f3419dc" type="Normal" published="True"><name>Calculate Rolling Average (variable denominator)</name><view><camerax>255</camerax><cameray>375</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="92089dfa-b677-47d9-89dd-d830e0728e56" type="Normal" published="False"><name>Test Rolling Averages</name><view><camerax>0</camerax><cameray>69</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="954f3eee-6816-44ed-890e-338b6fb01349" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>da124292-a510-41de-aa90-d98a7ccc019e</onsuccess></stage><stage stageid="da124292-a510-41de-aa90-d98a7ccc019e" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="dadc5051-89c1-4a2d-bc7f-a9e5fa025ea8" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.VisualBasic.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>Microsoft.VisualBasic</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[

]]></globalcode><code><![CDATA[

]]></code></stage><stage stageid="1c87d27f-f30b-4069-8899-ecf4f5fcbb0a" name="Clean Up" type="SubSheetInfo"><subsheetid>2875d2a6-0236-416e-bf04-c638bbb57806</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="081451dd-39f7-48e2-b47c-21aa18a50082" name="Start" type="Start"><subsheetid>2875d2a6-0236-416e-bf04-c638bbb57806</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>37195e20-c2cc-4dd1-8c80-e0bb35636321</onsuccess></stage><stage stageid="37195e20-c2cc-4dd1-8c80-e0bb35636321" name="End" type="End"><subsheetid>2875d2a6-0236-416e-bf04-c638bbb57806</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="9a0eaf23-df6e-4ffd-bcbe-c9d5f759eb6c" name="new" type="Note"><subsheetid>2875d2a6-0236-416e-bf04-c638bbb57806</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="0820845d-7215-43e2-ae11-3cc74304cc58" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="9260f24a-514b-4e85-b4e0-cb745addf3c2" name="Get Absolute Value" type="SubSheetInfo"><subsheetid>97a91b4e-590f-4fb9-b450-f820d746c260</subsheetid><narrative>Gets the numerical value of a number without regard to its sign.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e6b4592b-5e02-45eb-a791-84678ab35798" name="Start" type="Start"><subsheetid>97a91b4e-590f-4fb9-b450-f820d746c260</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Input" narrative="The number to get the absolute value of " stage="Input" /></inputs><onsuccess>a8066261-2778-4e3d-9cc1-600f96534599</onsuccess></stage><stage stageid="4225cec2-fba0-43f4-ba89-5773dc1199fb" name="End" type="End"><subsheetid>97a91b4e-590f-4fb9-b450-f820d746c260</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="number" name="Absolute Value" stage="Input" /></outputs></stage><stage stageid="ee6ae5e3-485c-44ee-bda3-b95fd0bd5f43" name="Input" type="Data"><subsheetid>97a91b4e-590f-4fb9-b450-f820d746c260</subsheetid><display x="90" y="-105" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a8066261-2778-4e3d-9cc1-600f96534599" name="Negative?" type="Decision"><subsheetid>97a91b4e-590f-4fb9-b450-f820d746c260</subsheetid><loginhibit /><display x="15" y="-45" /><decision expression="[Input] &lt; 0" /><ontrue>443ea222-04fc-476a-905c-c4f0d8e32a3f</ontrue><onfalse>4225cec2-fba0-43f4-ba89-5773dc1199fb</onfalse></stage><stage stageid="443ea222-04fc-476a-905c-c4f0d8e32a3f" name="Negate" type="Calculation"><subsheetid>97a91b4e-590f-4fb9-b450-f820d746c260</subsheetid><loginhibit /><display x="135" y="-45" /><onsuccess>273e7090-384a-4f21-8770-8fd6f06bcf68</onsuccess><calculation expression="[Input] * -1" stage="Input" /></stage><stage stageid="273e7090-384a-4f21-8770-8fd6f06bcf68" name="anchor1" type="Anchor"><subsheetid>97a91b4e-590f-4fb9-b450-f820d746c260</subsheetid><loginhibit /><display x="135" y="90" w="10" h="10" /><onsuccess>4225cec2-fba0-43f4-ba89-5773dc1199fb</onsuccess></stage><stage stageid="f3ffdd20-3c64-40ff-be03-a65ab5edd2a0" name="Calculate Rolling Average (fixed denominator)" type="SubSheetInfo"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><narrative>Finds the rolling average of a set of numbers given a fixed denominator.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b64329c2-4895-4408-889c-5c11491d3d29" name="Calculate Rolling Average (variable denominator)" type="SubSheetInfo"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><narrative>Finds the rolling average of a set of numbers given a variable set denominators.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5b22715c-629e-4a2a-a008-da75c5629116" name="Start" type="Start"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="Numerator Values" narrative="The series of numbers to find the moving average from" stage="Numerator Values" /><input type="collection" name="Denominator Values" narrative="The series of numbers to use as deniminators" stage="Denominator Values" /><input type="flag" name="Break at Zero Points" narrative="Set to true if you wish to break at zero points" stage="Break at Zero Points" /><input type="number" name="Rolling Period Length" narrative="The length of the rolling period" stage="Rolling Period Length" /></inputs><onsuccess>c51a3b69-434e-49bd-aaea-93ccf9175656</onsuccess></stage><stage stageid="ee0a01bc-752f-4e02-8989-1afee7164126" name="End" type="End"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="615" /><outputs><output type="collection" name="Rolling Average Values" stage="Rolling Average Values" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs></stage><stage stageid="1eb6ffaf-3152-45f0-8337-67c995dfca11" name="Numerator Values" type="Collection"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="105" y="-105" w="90" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ede06c50-0c0c-4f56-b8f1-956c680ddc7d" name="Denominator Values" type="Collection"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="195" y="-105" w="90" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="464be8b5-6852-4ef7-8b11-231f833ad4db" name="Validate" type="ChoiceStart"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="165" /><groupid>d45c276b-e502-4042-8914-05d55c58e8ba</groupid><choices><choice expression="[Numerator Row Count] = 0"><name>No Numerator Rows</name><distance>45</distance><ontrue>c6cf5d20-32a0-4947-b4fc-4ac728eb495a</ontrue></choice><choice expression="[Numerator Row Count] &gt; 1"><name>More than one Numerator Row</name><distance>90</distance><ontrue>470fc45a-d040-4792-8860-0220a95f7053</ontrue></choice><choice expression="[Denominator Row Count] = 0"><name>No Denominator Rows</name><distance>135</distance><ontrue>08ff5c35-f0c6-4497-9894-ca17fae3939e</ontrue></choice><choice expression="[Denominator Row Count] &gt; 1"><name>More than one Denominator Row</name><distance>180</distance><ontrue>6d5f06cb-a0ce-4dd8-991c-0d1f3c3589b6</ontrue></choice><choice expression="[Rolling Period Length] &lt; 1"><name>Invalid Rolling Period Length</name><distance>225</distance><ontrue>73d86166-982d-4051-bfd5-ec8bbbc5601b</ontrue></choice></choices></stage><stage stageid="5681a0ac-3314-49d4-acda-e93198c0896a" name="Valid" type="ChoiceEnd"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="435" /><onsuccess>fe626c6a-6f0a-4faf-bcb1-f8fe0dfaf140</onsuccess><groupid>d45c276b-e502-4042-8914-05d55c58e8ba</groupid></stage><stage stageid="c51a3b69-434e-49bd-aaea-93ccf9175656" name="Count Numerator Rows" type="Action"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Numerator Values&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Numerator Row Count" /></outputs><onsuccess>2c1f2db9-8089-48c1-a836-318bc03cad7c</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="f0fbf567-bff1-4043-a546-6088d62da8d0" name="Numerator Row Count" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="105" y="-45" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2c1f2db9-8089-48c1-a836-318bc03cad7c" name="Count Denominator Rows" type="Action"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Denominator Values&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Denominator Row Count" /></outputs><onsuccess>6955ab72-2076-4cb9-8ace-6609890a69a4</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="6955ab72-2076-4cb9-8ace-6609890a69a4" name="Count Numerator Columns" type="Action"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="60" w="90" h="30" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Numerator Values&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of columns counted in the collection" stage="Numerator Column Count" /></outputs><onsuccess>aefdb9e9-ae93-411f-8f7c-9b727c77381e</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Columns" /></stage><stage stageid="4383f084-71ea-4c47-8aad-e3d496dcd480" name="Denominator Row Count" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="105" y="0" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aefdb9e9-ae93-411f-8f7c-9b727c77381e" name="Count Denominator Columns" type="Action"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="105" w="120" h="30" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Denominator Values&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of columns counted in the collection" stage="Denominator Column Count" /></outputs><onsuccess>464be8b5-6852-4ef7-8b11-231f833ad4db</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Columns" /></stage><stage stageid="b27838d3-3c3c-491d-96ab-a5673fc4b7f2" name="Denominator Column Count" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="150" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c6cf5d20-32a0-4947-b4fc-4ac728eb495a" name="Message" type="Calculation"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="195" y="210" /><onsuccess>14fb216c-8e85-4a1e-a5ad-24d92d86feff</onsuccess><calculation expression="&quot;Numerator Values collection must contain precisely one row - &quot; &amp; [Numerator Row Count] &amp; &quot; rows found&quot;" stage="Error Message" /></stage><stage stageid="3ad01cf9-7f88-40ed-b772-4efa5f34ad09" name="Error Message" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="300" y="150" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="470fc45a-d040-4792-8860-0220a95f7053" name="Message" type="Calculation"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="195" y="255" /><onsuccess>b3e6253d-5819-4d11-9227-3e66ddeafb3d</onsuccess><calculation expression="&quot;Numerator Values collection must contain precisely one row - &quot; &amp; [Numerator Row Count] &amp; &quot; rows found&quot;" stage="Error Message" /></stage><stage stageid="08ff5c35-f0c6-4497-9894-ca17fae3939e" name="Message" type="Calculation"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="195" y="300" /><onsuccess>29066db6-f2d8-401d-8679-fe7c2b5f4d94</onsuccess><calculation expression="&quot;Denominator Values collection must contain precisely one row - &quot; &amp; [Denominator Row Count] &amp; &quot; rows found&quot;" stage="Error Message" /></stage><stage stageid="6d5f06cb-a0ce-4dd8-991c-0d1f3c3589b6" name="Message" type="Calculation"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="195" y="345" /><onsuccess>4bbe75da-da48-4671-9554-5715634cac20</onsuccess><calculation expression="&quot;Denominator Values collection must contain precisely one row - &quot; &amp; [Denominator Row Count] &amp; &quot; rows found&quot;" stage="Error Message" /></stage><stage stageid="14fb216c-8e85-4a1e-a5ad-24d92d86feff" name="anchor2" type="Anchor"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="255" y="210" w="10" h="10" /><onsuccess>b3e6253d-5819-4d11-9227-3e66ddeafb3d</onsuccess></stage><stage stageid="b3e6253d-5819-4d11-9227-3e66ddeafb3d" name="anchor3" type="Anchor"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="255" y="255" w="10" h="10" /><onsuccess>29066db6-f2d8-401d-8679-fe7c2b5f4d94</onsuccess></stage><stage stageid="29066db6-f2d8-401d-8679-fe7c2b5f4d94" name="anchor4" type="Anchor"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="255" y="300" w="10" h="10" /><onsuccess>4bbe75da-da48-4671-9554-5715634cac20</onsuccess></stage><stage stageid="4bbe75da-da48-4671-9554-5715634cac20" name="anchor5" type="Anchor"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="255" y="345" w="10" h="10" /><onsuccess>cc3f1a18-65f7-4e46-af57-b9304bfae638</onsuccess></stage><stage stageid="fe626c6a-6f0a-4faf-bcb1-f8fe0dfaf140" name="Calculate Rolling Average" type="Code"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="495" w="90" h="30" /><inputs><input type="collection" name="Numerator Values" expr="[Numerator Values]" /><input type="collection" name="Denominator Values" expr="[Denominator Values]" /><input type="flag" name="Break at Zero Points" expr="[Break at Zero Points]" /><input type="number" name="Rolling Period Length" expr="[Rolling Period Length]" /></inputs><outputs><output type="collection" name="Rolling Average Values" stage="Rolling Average Values" /></outputs><onsuccess>e1b6ddb7-512d-48a4-bb15-23bcbf8b139c</onsuccess><code><![CDATA[Rolling_Average_Values = New DataTable
For Each Col As DataColumn in Numerator_Values.Columns
	Rolling_Average_Values.Columns.Add(Col.ColumnName, Col.DataType)
Next

Dim Values(Numerator_Values.Columns.Count - 1) As Object
Dim LastBreakPoint As Integer = -1 
For I as Integer = 0 to Numerator_Values.Columns.Count - 1

	If Break_At_Zero_Points AndAlso Numerator_Values.Rows(0)(I) = 0 andalso Denominator_Values.Rows(0)(I) = 0 Then
		LastBreakpoint = I
		Values(I) = 0
	Else

		Dim ThisNumeratorTotal As Decimal = 0d
		Dim ThisDenominatorTotal As Decimal = 0d
		For J as Integer = Math.Max(LastBreakPoint + 1, I - Rolling_Period_Length + 1) To I
			Dim Numerator As Decimal = Numerator_Values.Rows(0)(J)
			Dim Denominator As Decimal = Denominator_Values.Rows(0)(J)
			If Denominator = 0 Then
				If Numerator <> 0 Then
					Throw New ApplicationException("Rolling average cannot be computed - denominator is zero for a non-zero numerator in column " & (J+1).ToString)
				Else
					If Break_At_Zero_Points Then
						'Both zero, should never get here - breakpoints are dealt with above
						Throw New ApplicationException("Unexpected breakpoint")
					End If
				End If
			End If

			ThisNumeratorTotal += Numerator
			ThisDenominatorTotal += Denominator
			Values(I) = ThisNumeratorTotal / ThisDenominatorTotal
		Next

	End If

Next

Rolling_Average_Values.Rows.Add(Values)]]></code></stage><stage stageid="b070c1cd-fd3e-4515-97d8-ff2d3dc77a69" name="Rolling Average Values" type="Collection"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="-75" y="615" w="90" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c153f41a-43ab-4dba-8c9b-66c0a542a943" name="Break at Zero Points" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="270" y="-105" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e1b6ddb7-512d-48a4-bb15-23bcbf8b139c" name="Success" type="Calculation"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="540" /><onsuccess>ee0a01bc-752f-4e02-8989-1afee7164126</onsuccess><calculation expression="True" stage="Success" /></stage><stage stageid="56aaf772-78b1-40df-a500-c741c7078f57" name="Success" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="-150" y="630" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8a7cf9ae-3b62-49b9-a353-547203a35db2" name="Fail" type="Calculation"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="255" y="615" /><onsuccess>ee0a01bc-752f-4e02-8989-1afee7164126</onsuccess><calculation expression="False" stage="Success" /></stage><stage stageid="ceaedade-3a4c-4a8b-9a04-4bd83c31ae99" name="Rolling Period Length" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="330" y="-105" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="73d86166-982d-4051-bfd5-ec8bbbc5601b" name="Message" type="Calculation"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="195" y="390" /><onsuccess>cc3f1a18-65f7-4e46-af57-b9304bfae638</onsuccess><calculation expression="&quot;Rolling period length must be at least 1 - the value supplied was &quot; &amp; [Rolling Period Length]" stage="Error Message" /></stage><stage stageid="cc3f1a18-65f7-4e46-af57-b9304bfae638" name="anchor5" type="Anchor"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="255" y="390" w="10" h="10" /><onsuccess>8a7cf9ae-3b62-49b9-a353-547203a35db2</onsuccess></stage><stage stageid="db942bb1-2512-450b-8950-5b70e390a963" name="Start" type="Start"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><loginhibit /><display x="15" y="-75" /><inputs><input type="collection" name="Numerator Values" narrative="The series of numbers to find the moving average from" stage="Numerator Values" /><input type="flag" name="Break at Zero Points" narrative="Set to true if you wish to break at zero points" stage="Break at Zero Points" /><input type="number" name="Denominator Value" narrative="The value of the denominator" stage="Denominator Value" /><input type="number" name="Rolling Period Length" narrative="The length of the rolling period" stage="Rolling Period Length" /></inputs><onsuccess>367b78a9-9ec7-428c-b05f-f110867db44b</onsuccess></stage><stage stageid="572eadfb-2155-477d-9c9e-673e9165b282" name="Numerator Values" type="Collection"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="105" y="-75" w="90" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="62ab1f32-b02f-40bb-8e72-6c276a0c120b" name="Denominator Values" type="Collection"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="195" y="-75" w="90" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f1260d13-d4a4-445a-92ae-0875aee1b5ab" name="Break at Zero Points" type="Data"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="270" y="-75" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="75c9aeb4-a05c-44bf-b27a-1443915f64e9" name="Rolling Period Length" type="Data"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="330" y="-75" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bf7abf49-661d-4dbe-97c7-667eb5625132" name="Denominator Value" type="Data"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="390" y="-75" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="367b78a9-9ec7-428c-b05f-f110867db44b" name="Create Collection of Denominators" type="Code"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><inputs><input type="number" name="Denominator Value" expr="[Denominator Value]" /><input type="collection" name="Numerator Values" expr="[Numerator Values]" /></inputs><outputs><output type="collection" name="Denominator Values" stage="Denominator Values" /></outputs><onsuccess>507e4969-eaa9-43a2-804b-8bf5be4a61a3</onsuccess><code><![CDATA[Denominator_Values = New DataTable
For Each Col As DataColumn In Numerator_Values.Columns
	Denominator_Values.Columns.Add(Col.ColumnName, Col.DataType)
Next

Dim Values(Numerator_Values.Columns.Count - 1) As Object
For I As Integer = 0 to Values.Length - 1
	Values(I) = Denominator_Value
Next

Denominator_Values.Rows.Add(Values)]]></code></stage><stage stageid="507e4969-eaa9-43a2-804b-8bf5be4a61a3" name="Calculate Rolling Average (variable denominator)" type="SubSheet"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><loginhibit /><display x="15" y="60" w="120" h="60" /><inputs><input type="collection" name="Numerator Values" expr="[Numerator Values]" /><input type="collection" name="Denominator Values" expr="[Denominator Values]" /><input type="flag" name="Break at Zero Points" expr="[Break at Zero Points]" /><input type="number" name="Rolling Period Length" expr="[Rolling Period Length]" /></inputs><outputs><output type="collection" name="Rolling Average Values" stage="Rolling Average Values" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>4ce60b03-6f99-47c5-950d-fc05cefe43a1</onsuccess><processid>d3813186-bbc2-4727-a08a-76df7f3419dc</processid></stage><stage stageid="ba3e72a6-040e-4165-8939-03ec2a692985" name="Rolling Average Values" type="Collection"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="135" y="135" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4ce60b03-6f99-47c5-950d-fc05cefe43a1" name="End" type="End"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><loginhibit /><display x="15" y="135" /><outputs><output type="collection" name="Rolling Average Values" narrative="The rolling average results" stage="Rolling Average Values" /><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Error Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="00eb3893-db7d-4d3f-b157-0394bdb87089" name="Success" type="Data"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="-75" y="135" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7c88f089-49d0-4570-92b9-503aa351254f" name="Error Message" type="Data"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="-135" y="135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="40deed37-b05e-4037-b736-bb1740a16c51" name="Numerator Column Count" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="105" y="60" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1e7926d4-4a29-45b7-83aa-d22db8282755" name="Test Rolling Averages" type="SubSheetInfo"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="32577fe1-e27f-4535-ac18-32ff8bca2032" name="Start" type="Start"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>71dc7a66-0c37-40fd-b429-60977d11f142</onsuccess></stage><stage stageid="19417cd9-95e3-4bf4-86f2-c7d56836e454" name="End" type="End"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><loginhibit /><display x="15" y="405" /></stage><stage stageid="20c17df7-c7f5-4432-a281-0557bdc717a8" name="Coll1" type="Collection"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><loginhibit /><display x="-150" y="0" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field1" type="number" /><field name="Field2" type="number" /><field name="Field3" type="number" /><field name="Field4" type="number" /><field name="Field5" type="number" /><field name="Field6" type="number" /></collectioninfo><initialvalue><row><field name="Field1" type="number" value="1" /><field name="Field2" type="number" value="2" /><field name="Field3" type="number" value="3" /><field name="Field4" type="number" value="0" /><field name="Field5" type="number" value="5" /><field name="Field6" type="number" value="6" /></row></initialvalue></stage><stage stageid="16047749-2018-47aa-a0a3-94d25443857a" name="Coll2" type="Collection"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><loginhibit /><display x="-150" y="75" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field1" type="number" /><field name="Field2" type="number" /><field name="Field3" type="number" /><field name="Field4" type="number" /><field name="Field5" type="number" /><field name="Field6" type="number" /></collectioninfo><initialvalue><row><field name="Field1" type="number" value="6" /><field name="Field2" type="number" value="5" /><field name="Field3" type="number" value="4" /><field name="Field4" type="number" value="0" /><field name="Field5" type="number" value="2" /><field name="Field6" type="number" value="1" /></row></initialvalue></stage><stage stageid="71dc7a66-0c37-40fd-b429-60977d11f142" name="Calculate Rolling Average (variable denominator)" type="SubSheet"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><inputs><input type="collection" name="Numerator Values" expr="[Coll1]" /><input type="collection" name="Denominator Values" expr="[Coll2]" /><input type="flag" name="Break at Zero Points" expr="True" /><input type="number" name="Rolling Period Length" expr="2" /></inputs><outputs><output type="collection" name="Rolling Average Values" stage="Rolling Average Values" /><output type="flag" name="Success" /><output type="text" name="Error Message" stage="" /></outputs><onsuccess>6a98671a-73dd-46f1-9df0-16a9ae0e160b</onsuccess><processid>d3813186-bbc2-4727-a08a-76df7f3419dc</processid></stage><stage stageid="1755ffff-dcfe-4188-a6ed-01e4a5a2a8ca" name="Rolling Average Values" type="Collection"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><display x="120" y="-45" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6a98671a-73dd-46f1-9df0-16a9ae0e160b" name="Calculate Rolling Average (variable denominator)" type="SubSheet"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><loginhibit /><display x="15" y="15" w="120" h="30" /><inputs><input type="collection" name="Numerator Values" expr="[Coll1]" /><input type="flag" name="Break at Zero Points" expr="True" /><input type="number" name="Rolling Period Length" expr="2" /><input type="number" name="Denominator Value" expr="5" /></inputs><outputs><output type="collection" name="Rolling Average Values" stage="Rolling Average Values 2" /><output type="flag" name="Success" /><output type="text" name="Error Message" stage="" /></outputs><onsuccess>19417cd9-95e3-4bf4-86f2-c7d56836e454</onsuccess><processid>de3d40ad-d45c-476b-8cb3-409f48fda754</processid></stage><stage stageid="8b1cb360-9652-488d-abfb-d69089a24ce1" name="Rolling Average Values 2" type="Collection"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><display x="120" y="15" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f229099e-9108-4c90-a5b7-ca6e944518db" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="240" y="0" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="914b27a6-fe73-4b33-b4c4-a2a3ac7956bb" name="Note1" type="Note"><loginhibit /><narrative>Version 10.0</narrative><display x="15" y="-180" w="90" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage></process></object>
        <object id="1b13f5b8-01d1-441e-bd7f-54884a24d71f" name="Utility - Strings" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Strings" version="6.5.1.14401" bpversion="7.4.1.15931" narrative="Utility functions for manipulating text." byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>60</camerax><cameray>-35</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="24e065bd-d14b-4880-bfd7-f8f540f7544b" type="Normal" published="True"><name>Calculate Distance</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="527ca986-a03f-4231-880e-5b1c244b035e" type="Normal" published="True"><name>Compare Font Text</name><view><camerax>150</camerax><cameray>13</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e70e8f13-02df-4b14-bb74-6fd5c4c95928" type="Normal" published="True"><name>Delete Characters</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="040cc29a-27ac-402c-8a66-328554dd4bc0" type="Normal" published="True"><name>Escape Sendkeys String</name><view><camerax>0</camerax><cameray>5</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b46f178f-06c1-499f-942f-b92cf0df140c" type="Normal" published="True"><name>Extract Regex All Matches</name><view><camerax>0</camerax><cameray>25</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="06780f7c-9622-4d84-9db3-bb56a2ff9f36" type="Normal" published="True"><name>Extract Regex Values</name><view><camerax>70</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5110b353-010b-4874-97bd-8b7621c24384" type="Normal" published="True"><name>Format Number</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d8fea7a8-24d9-41c8-9397-a3839e6ffdc1" type="Normal" published="True"><name>Generate New GUID</name><view><camerax>0</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f9add4d4-31de-4c0f-a109-0b51fa576a23" type="Normal" published="True"><name>Get Collection as CSV</name><view><camerax>0</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f34fc98d-a02f-4f58-92d4-c4688513439b" type="Normal" published="True"><name>Get Collection as Delimited Text</name><view><camerax>-118</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f5b26213-5463-4b2d-b10f-b188876b436f" type="Normal" published="True"><name>Get CSV As Collection</name><view><camerax>-74</camerax><cameray>14</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b30fe729-3663-4fd9-b97a-505752b1e33f" type="Normal" published="True"><name>Get Delimited Text As Collection</name><view><camerax>-9</camerax><cameray>3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fcddf4bf-83af-4431-88db-cc2c88390cec" type="Normal" published="True"><name>Get Newline Character</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e8af11f7-dfd4-4c86-9935-e83828b9e711" type="Normal" published="True"><name>Get XML Attribute</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="818441a5-ffec-4841-b0ea-00712caf63aa" type="Normal" published="True"><name>Get XML Elements</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0244396a-1d3d-4892-b6cb-461468f4c7e1" type="Normal" published="True"><name>InStr</name><view><camerax>0</camerax><cameray>-2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9ab28c01-86eb-458d-b8d9-74f98926d266" type="Normal" published="True"><name>InStrRev</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a854bb6a-4399-4e51-8fc3-64f9e1d4f896" type="Normal" published="True"><name>Join Lines</name><view><camerax>152</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a2c09338-7850-4daf-a545-8972d333b826" type="Normal" published="True"><name>Join Text</name><view><camerax>65</camerax><cameray>75</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ef8de52d-842b-45f0-8f1b-619bc97d4bbc" type="Normal" published="True"><name>PadLeft</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="85fc5bb4-eee8-4509-8217-26fcb149a291" type="Normal" published="True"><name>Regex Replace</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="65117a41-f7ff-4f3f-abd1-7a3cbe18cfda" type="Normal" published="True"><name>Remove Non-word Characters</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="052cf5ee-03af-4a55-b198-6caa90b8c5ed" type="Normal" published="True"><name>Replace Characters</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e6bab90c-ddfd-48c0-af38-804fe4f770ed" type="Normal" published="True"><name>Split Lines</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6a710d42-8f41-45d0-9e74-1eddf74c0e75" type="Normal" published="True"><name>Split Lines by Length</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a5871062-5ad2-4950-afbc-cb5b1b7a7f0b" type="Normal" published="True"><name>Split Text</name><view><camerax>0</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a6b6398e-c21a-4c4e-9742-65ccad8370d9" type="Normal" published="True"><name>Test Regex Match</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>System.Text</import><import>System.Collections.Generic</import><import>Microsoft.VisualBasic.FileIO</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[


]]></globalcode><code><![CDATA[Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

Private Function SplitStringInto( _
 ByVal fldName As String, _
 ByVal txt As String, _
 ByVal ParamArray splitters() As String) As DataTable
	Dim dt As New DataTable()
	dt.Columns.Add(fldName, GetType(String))

	For Each s As String In txt.Split(splitters, StringSplitOptions.None)
		dt.Rows.Add(New Object() {s})
	Next

	Return dt
End Function

Public Shared Function ParseCsvToList(ByVal csv As String, ByVal delimiter As String) As List(Of String())
	Dim result = New List(Of String())()

	Using sr As New StringReader(csv)
		Using lineParser As New TextFieldParser(sr)
			lineParser.TextFieldType = FieldType.Delimited
			lineParser.SetDelimiters(delimiter)
			While Not lineParser.EndOfData

				Dim fields As String() = lineParser.ReadFields()
				result.Add(fields)
			End While
		End Using
	End Using

	Return result
End Function


''' -----------------------------------------------------------------------------
''' <summary>
''' Serialises a datatable to the supplied stream.
''' </summary>
''' <param name="Writer">The stream writr to which the datatable should
''' be serialised. Eg this may correspond to a file stream.</param>
''' <param name="Table">The datatable to be serialised.</param>
''' <param name="IncludeHeaderRow">When true, the column headers will
''' be wrtten out on the first row.</param>
''' -----------------------------------------------------------------------------
Public Shared Sub WriteDataTable(ByVal Writer As StringBuilder, ByVal Table As DataTable, ByVal IncludeHeaderRow As Boolean, ByVal delimiter As String)
	If (delimiter.Trim().Length = 0)
		delimiter = ","
	End If

	If IncludeHeaderRow Then
		For i As Integer = 0 To Table.Columns.Count - 1
			WriteItem(Writer, Table.Columns(i).ColumnName)
			If i < Table.Columns.Count - 1 Then
				Writer.Append(delimiter)
			Else
				Writer.Append(vbCrLf)
			End If
		Next
	End If

	For Each Row As DataRow In Table.Rows
		For i As Integer = 0 To Table.Columns.Count - 1
			WriteItem(Writer, Row(i).ToString)
			If i < Table.Columns.Count - 1 Then
				Writer.Append(delimiter)
			Else
				Writer.Append(vbCrLf)
			End If
		Next
	Next
End Sub



''' -----------------------------------------------------------------------------
''' <summary>
''' Writes a csv data cell, escaping quotes and new lines where necessary.
''' </summary>
''' <param name="Writer">The writer to which the item should be written.</param>
''' <param name="Value">The value to be written.</param>
''' -----------------------------------------------------------------------------
Private Shared Sub WriteItem(ByVal Writer As StringBuilder, ByVal Value As String)
	If Value.IndexOfAny(("""," & vbCrLf).ToCharArray) > -1 Then
		Writer.Append("""" & Value.Replace("""", """""") & """")
	Else
		Writer.Append(Value)
	End If
End Sub


'Splits text into lines of approximately equal length, looking for
'gaps between words as splitting points in order to avoid ugly
'line splitting in the middle of words. Useful for mainframe memos
'where a long message needs to be broken into lines of up to 80
'characters.
'
Private Shared Function SplitTextByLengthEngine(Texttosplit As String, MaxLineLength As Integer) As List(of String)
	Dim RetVal as New List(Of String)
	MaxLineLength =  Math.Min(MaxLineLength, TexttoSplit.Length)

	'We look for the last space within (MaxLineLength + 1) and then work backwards
	'(always by at least one) to find the last non-space character. We can then
	'chop at this point, assuming such exists. Otherwise we just chop at the
	'requested line length accepting we will be splitting a word.
	Dim LastIndex as integer = TexttoSplit.Substring(0, Math.Min(MaxLineLength + 1, TextToSplit.Length)).LastIndexOf(" ")

	If TextToSplit.Length <= MaxLineLength OrElse LastIndex = -1 Then
		RetVal.Add(TexttoSplit.Substring(0, MaxLineLength))
		Dim RemainingText As String = TexttoSplit.SubString(MaxLineLength,TextToSplit.Length - MaxLineLength).Trim()
		If RemainingText.Length > 0 Then RetVal.AddRange(SplitTextByLengthEngine(RemainingText, MaxLineLength))
	Else
		'Track backwards to find previous non-space character
		Dim Index As Integer = LastIndex - 1
		While Index >= 0 Andalso TextToSplit.SubString(Index, 1) = " "
			Index -=1
		End While
		If Index >= 0 Then
			RetVal.Add(TextToSplit.SubString(0, Index + 1))
			Dim RemainingText As String = TexttoSplit.SubString(Index + 1, TextToSplit.Length - (Index + 1)).Trim()
			If RemainingText.Length > 0 Then RetVal.AddRange(SplitTextByLengthEngine(RemainingText, MaxLineLength))
		Else
			'Must all be spaces. We assume this are to be ignored
		End If
	End If

	Return RetVal
End Function

Private Shared Function CreateRegexOptions(Singleline As Boolean, IgnoreCase As Boolean, IgnoreWhitespace As Boolean, CultureInvariant As Boolean, ExplicitCapture As Boolean, RightToLeft As Boolean, ECMAScript As Boolean) As RegexOptions
        If Singleline Then
            CreateRegexOptions = CreateRegexOptions Or RegexOptions.Singleline
        End If

        If IgnoreCase Then
            CreateRegexOptions = CreateRegexOptions Or RegexOptions.IgnoreCase
        End If

        If IgnoreWhitespace Then
            CreateRegexOptions = CreateRegexOptions Or RegexOptions.IgnorePatternWhitespace
        End If

        If CultureInvariant Then
            CreateRegexOptions = CreateRegexOptions Or RegexOptions.CultureInvariant
        End If

        If ExplicitCapture Then
            CreateRegexOptions = CreateRegexOptions Or RegexOptions.ExplicitCapture
        End If

        If RightToLeft Then
            CreateRegexOptions = CreateRegexOptions Or RegexOptions.RightToLeft
        End If

        If ECMAScript Then
            CreateRegexOptions = CreateRegexOptions Or RegexOptions.ECMAScript
        End If

        Return CreateRegexOptions
    End Function]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b6df3b6c-090d-4126-a16c-8caa889b0646" name="Generate New GUID" type="SubSheetInfo"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><narrative>Generates a new globally unique identifier as text.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="be35a29d-2b71-42e1-9ca7-4534046d5dfc" name="Start" type="Start"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>bd80e756-d12c-4dc7-9d64-bbde733f60b7</onsuccess></stage><stage stageid="bd80e756-d12c-4dc7-9d64-bbde733f60b7" name="Get GUID" type="Code"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><display x="15" y="-45" /><outputs><output type="text" name="id" stage="GUID" /></outputs><onsuccess>4930704e-00c1-456a-8aad-02220fd81c99</onsuccess><code><![CDATA[dim g as new Guid
id = guid.newguid.tostring]]></code></stage><stage stageid="695dad7d-b634-454c-9171-baf489698067" name="GUID" type="Data"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><display x="-60" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4930704e-00c1-456a-8aad-02220fd81c99" name="End1" type="End"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><display x="15" y="15" /><outputs><output type="text" name="GUID" narrative="The new guid" stage="GUID" /></outputs></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /></stage><stage stageid="a130f3e8-fad5-413c-a068-75ac20600244" name="Remove Non-word Characters" type="SubSheetInfo"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><narrative>Trims non word characters from the begining and end of the text. Non word characters are any character that is NOT in the ranges a-z A-Z _ and 0-9</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="dd85470c-e10b-4f0b-b729-c006136517eb" name="Start" type="Start"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Text" narrative="The text to remove the non word characters from" stage="Text" /></inputs><onsuccess>a2426b0a-eab8-4571-a6d9-fa89c49559be</onsuccess></stage><stage stageid="3eae8050-c325-49f6-9e3f-ee12400ca5d4" name="End" type="End"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Trimmed Text" narrative="The text with the non word characters removed" stage="Trimmed Text" /></outputs></stage><stage stageid="a2426b0a-eab8-4571-a6d9-fa89c49559be" name="Trim" type="Code"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="text" name="Trimmed Text" stage="Trimmed Text" /></outputs><onsuccess>3eae8050-c325-49f6-9e3f-ee12400ca5d4</onsuccess><code><![CDATA[
dim r as new regex("^\W*|\W*$")
Trimmed_Text = r.replace(text, "")
]]></code></stage><stage stageid="1f3570bd-8411-4e92-8fd3-1dd418411570" name="Text" type="Data"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue xml:space="preserve">    qwerqwer    </initialvalue><private /><alwaysinit /></stage><stage stageid="0967c44a-1a53-49a7-8bb4-e1f6733a41b0" name="Trimmed Text" type="Data"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><display x="90" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="00a08897-25f2-48e0-aa88-e40bb27b94e7" name="Split Lines" type="SubSheetInfo"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><narrative>Splits multiple line text into a collection text values with a single row per line.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5f6c9d2f-247d-42a7-bc18-8b4283b21c80" name="Start" type="Start"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Text to Split" narrative="The text to split" stage="Text to Split" /></inputs><onsuccess>ee14a8f3-9fd3-4342-abcf-3cbe1d57431a</onsuccess></stage><stage stageid="370a75cf-d54f-438d-b7b1-0f931038d7a2" name="End" type="End"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Split Values" narrative="The resulting collection containing the split values" stage="Split Values" /></outputs></stage><stage stageid="b655e5fa-2cb9-487a-b4e8-8faf44531e8d" name="Text to Split" type="Data"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee14a8f3-9fd3-4342-abcf-3cbe1d57431a" name="Split" type="Code"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /></inputs><outputs><output type="collection" name="Split Values" stage="Split Values" /></outputs><onsuccess>370a75cf-d54f-438d-b7b1-0f931038d7a2</onsuccess><code><![CDATA[Split_Values = SplitStringInto("Value", _
 Text_to_Split, vbCrLf, vbLf, vbCr)]]></code></stage><stage stageid="5c6c7749-e4c1-45ef-9fb7-a7b7ca77214d" name="Split Values" type="Collection"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><display x="120" y="90" w="90" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Value" type="text" /></collectioninfo></stage><stage stageid="99d3d4f8-598b-44be-9744-5142537aff99" name="Split Text" type="SubSheetInfo"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><narrative>Splits text with a given delimiter into a collection of text values.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="97069dc2-f2a1-4f61-a3f6-e26e88d1da58" name="Start" type="Start"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><display x="120" y="-105" /><inputs><input type="text" name="Text to Split" narrative="The text to split" stage="Text to Split" /><input type="text" name="Split Char" narrative="The split delimiter" stage="Split Char" /><input type="text" name="Collection Field Name" narrative="The name of the field for the resulting collection" stage="Collection Field Name" /></inputs><onsuccess>d1694d87-2fff-467b-9a07-5f5dd570bd41</onsuccess></stage><stage stageid="2972f0ee-292a-4bb0-bed5-c9a19f8945f6" name="End" type="End"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><display x="120" y="90" /><outputs><output type="collection" name="Split Values" narrative="The resulting collection containing the split values" stage="Split Values" /></outputs></stage><stage stageid="33bff0c5-22b9-4ab3-ac0a-c352221a4f79" name="Text to Split" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="195" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1694d87-2fff-467b-9a07-5f5dd570bd41" name="Split Text" type="Code"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><display x="120" y="0" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /><input type="text" name="Split Char" expr="[Split Char]" /><input type="text" name="Collection Field Name" expr="[Collection Field Name]" /></inputs><outputs><output type="collection" name="Split Values" stage="Split Values" /></outputs><onsuccess>2972f0ee-292a-4bb0-bed5-c9a19f8945f6</onsuccess><code><![CDATA[Split_Values = SplitStringInto( _
 Collection_Field_Name, _
 Text_to_Split, Split_Char)]]></code></stage><stage stageid="17ffca42-be51-4343-90e3-035d29366b7f" name="Split Values" type="Collection"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="225" y="90" w="90" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="05ba6aed-e91b-4383-9001-69b78a2e474d" name="Split Char" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="255" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20afce2f-59e1-4fc1-896c-ab71d2f871b2" name="Collection Field Name" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="45" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="786d2d47-37c8-4324-8e43-8fc75f0eca95" name="Join Text" type="SubSheetInfo"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><narrative>Joins values from a collection into a single line of text using a given delimiter between values.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ccd8aec8-19c3-4d48-a184-a8895ed1ebbf" name="Start" type="Start"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><inputs><input type="collection" name="Values" narrative="The text values collection to join" stage="Values" /><input type="text" name="Join Character" narrative="The delimeter between text values" stage="Join Character" /><input type="flag" name="Trim Values" narrative="Set true to apply trimming to the values" stage="Trim Values" /></inputs><onsuccess>b05ea94b-f0d1-4047-b854-04877801ef0b</onsuccess></stage><stage stageid="7dbff5b3-7cd4-406a-9650-265fb88988ef" name="End" type="End"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="285" /><outputs><output type="text" name="Joined Text" narrative="The resulting joined text" stage="Joined Text" /></outputs></stage><stage stageid="13059fce-ee5a-4fbc-a76c-efc5db5d1240" name="Values" type="Collection"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="90" y="-105" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item Value" type="text" /></collectioninfo></stage><stage stageid="b0cf2931-5486-4779-b457-e8af03062df8" name="Join Character" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="019a4343-9b5c-4400-8b76-5efbf2156032" name="Join Lines" type="SubSheetInfo"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><narrative>Joins values from a collection into multiline text.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6f376101-4dd4-43b4-85a0-19dd1090df02" name="Start" type="Start"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="-75" /><inputs><input type="collection" name="Values" narrative="The text values collection to join" stage="Values" /><input type="flag" name="Trim Lines" narrative="Set true to apply trimming to the lines" stage="Trim Lines" /></inputs><onsuccess>816591dd-a42d-436b-9fd0-4ca095d78e29</onsuccess></stage><stage stageid="f2d9cbef-9cdb-4daa-bbb6-5d3dc0548c2e" name="Values" type="Collection"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="90" y="-75" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="579d0466-882d-47ce-a2c3-d4a7f25eaa8c" name="Joined Text" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="90" y="285" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="724a0223-71bd-48d0-bcca-f4d554fcf91b" name="End" type="End"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="135" /><outputs><output type="text" name="Joined Text" narrative="The resulting joined text" stage="Joined Text" /></outputs></stage><stage stageid="8bcc24ca-f588-4c3c-b09b-fe08b425b5db" name="Joined Text" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="90" y="135" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e3b84350-20a1-442e-bebb-0232a5b73299" name="Join Text" type="SubSheet"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="60" /><inputs><input type="collection" name="Values" expr="[Values]" /><input type="text" name="Join Character" expr="[Join Character]" /><input type="flag" name="Trim Values" expr="[Trim Lines]" /></inputs><outputs><output type="text" name="Joined Text" stage="Joined Text" /></outputs><onsuccess>724a0223-71bd-48d0-bcca-f4d554fcf91b</onsuccess><processid>a2c09338-7850-4daf-a545-8972d333b826</processid></stage><stage stageid="816591dd-a42d-436b-9fd0-4ca095d78e29" name="Get Carriage Return" type="Code"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><outputs><output type="text" name="Join Character" stage="Join Character" /></outputs><onsuccess>e3b84350-20a1-442e-bebb-0232a5b73299</onsuccess><code><![CDATA[Join_Character = vbcrlf]]></code></stage><stage stageid="9a8e3b40-f136-4397-b62b-4a69cd010c37" name="Join Character" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="105" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13a0e17b-9b82-4dd6-8e3a-313890d8caf3" name="For Each Value" type="LoopStart"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="15" w="90" h="30" /><onsuccess>e4c0da52-0523-4109-b705-3fadd035597b</onsuccess><groupid>fffab271-8052-4aaf-9a1e-1402d77939ea</groupid><looptype>ForEach</looptype><loopdata>Values</loopdata></stage><stage stageid="98f2416b-599a-42d1-a76f-d41ea3e23572" name="Next Value" type="LoopEnd"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="195" w="90" h="30" /><onsuccess>7dbff5b3-7cd4-406a-9650-265fb88988ef</onsuccess><groupid>fffab271-8052-4aaf-9a1e-1402d77939ea</groupid></stage><stage stageid="b05ea94b-f0d1-4047-b854-04877801ef0b" name="Reset Output" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>13a0e17b-9b82-4dd6-8e3a-313890d8caf3</onsuccess><calculation expression="&quot;&quot;" stage="Joined Text" /></stage><stage stageid="49168356-8449-4cb3-9798-0796b15b77a3" name="Append Value" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="150" /><onsuccess>98f2416b-599a-42d1-a76f-d41ea3e23572</onsuccess><calculation expression="[Joined Text] &amp; [Values.Item Value] &amp; [Join Character]" stage="Joined Text" /></stage><stage stageid="54cf1a89-b26c-4916-ab45-8f1e80b9b86f" name="Trim Lines" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="150" y="-75" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6aa04814-e2fd-4630-b391-bfe892ddc8df" name="Trim Values" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="210" y="-105" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e4c0da52-0523-4109-b705-3fadd035597b" name="Trim?" type="Decision"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="75" /><decision expression="[Trim Values]" /><ontrue>91ef5da4-e47e-4442-98ec-d46cbd8d8692</ontrue><onfalse>49168356-8449-4cb3-9798-0796b15b77a3</onfalse></stage><stage stageid="91ef5da4-e47e-4442-98ec-d46cbd8d8692" name="Do Trim" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="105" y="75" /><onsuccess>10ac89cc-d24c-4622-ad92-34ebe2365083</onsuccess><calculation expression="Trim([Values.Item Value])" stage="Values.Item Value" /></stage><stage stageid="10ac89cc-d24c-4622-ad92-34ebe2365083" name="anchor1" type="Anchor"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="105" y="150" w="10" h="10" /><onsuccess>49168356-8449-4cb3-9798-0796b15b77a3</onsuccess></stage><stage stageid="b837f601-57e9-4136-8dee-db8ca9ebf15f" name="Format Number" type="SubSheetInfo"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><narrative>Formats a number into comma-delimited triplets, as appropriate. Eg 123456.789 becomes 123,456.789</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="df1e573a-3e89-43a8-8e6a-61f1840b3869" name="Start" type="Start"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="The number will have been formatted." /></postconditions><display x="15" y="-105" /><inputs><input type="number" name="Input Number" narrative="The number to format" stage="Input Number" /></inputs><onsuccess>df4ce97f-4b9c-4087-a9bf-c6e35eba156b</onsuccess></stage><stage stageid="dd89bdff-2f14-4268-98f4-7ef3747a5233" name="End" type="End"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Formatted Currency Numbers" narrative="The resulting formatted number" stage="Formatted Currency Value" /></outputs></stage><stage stageid="b0f25370-1f87-4edd-b03a-0a3ac16537fb" name="Input Number" type="Data"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><display x="90" y="-105" /><datatype>number</datatype><initialvalue>987654123456.789</initialvalue><private /><alwaysinit /></stage><stage stageid="df4ce97f-4b9c-4087-a9bf-c6e35eba156b" name="Format" type="Code"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="number" name="Input" expr="[Input Number]" /></inputs><outputs><output type="text" name="Output" stage="Formatted Currency Value" /></outputs><onsuccess>dd89bdff-2f14-4268-98f4-7ef3747a5233</onsuccess><code><![CDATA[Output = Input.ToString("N")]]></code></stage><stage stageid="a6d6d631-89c5-4460-9771-6a15a0e1d7d5" name="Formatted Currency Value" type="Data"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><display x="90" y="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3013d63-9017-4dd9-bcf6-5e0d09ab372f" name="PadLeft" type="SubSheetInfo"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><narrative>Ensures that a string (usually a number) is of fixed width, by padding with a special character on the left.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="af05cd75-42db-4c09-875d-3fedfc3ca0a2" name="Start" type="Start"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="The supplied text will have been padded to be at least the number of desired characters." /></postconditions><display x="15" y="-105" /><inputs><input type="text" name="Input String" narrative="The string to pad" stage="Input String" /><input type="number" name="Target Width" narrative="The total number of characters required after padding" stage="Target Width" /><input type="text" name="Padding Character" narrative="The character to pad with" stage="Padding Character" /></inputs><onsuccess>6527cdd9-47d7-4784-bd96-e63afa4ec955</onsuccess></stage><stage stageid="f432b972-ae44-4485-943b-87848fd43487" name="End" type="End"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="165" /><outputs><output type="text" name="Padded String" narrative="The resultant padded string" stage="Input String" /></outputs></stage><stage stageid="888a814c-a03d-43f0-b6d6-30501b8b3250" name="Input String" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue xml:space="preserve">123</initialvalue><private /><alwaysinit /></stage><stage stageid="ea8d90c7-c341-4859-919c-4ecc076162eb" name="Target Width" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><display x="150" y="-105" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="56c037f3-4ff0-4923-974c-e925c84e69c8" name="Padding Character" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><display x="210" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6527cdd9-47d7-4784-bd96-e63afa4ec955" name="Blank Padding Character?" type="Decision"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><decision expression="Len([Padding Character]) = 0" /><ontrue>26f66718-649a-4472-965d-0e1e125e7473</ontrue><onfalse>b6b30eec-0ee3-4316-a9af-d0a55d5ec137</onfalse></stage><stage stageid="26f66718-649a-4472-965d-0e1e125e7473" name="Use Space for Padding" type="Calculation"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="135" y="-45" w="90" h="30" /><onsuccess>6acfdd2b-9298-4841-9111-003fc203edd0</onsuccess><calculation expression="&quot; &quot;" stage="Padding Character" /></stage><stage stageid="6acfdd2b-9298-4841-9111-003fc203edd0" name="anchor2" type="Anchor"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="135" y="0" w="10" h="10" /><onsuccess>b6b30eec-0ee3-4316-a9af-d0a55d5ec137</onsuccess></stage><stage stageid="b6b30eec-0ee3-4316-a9af-d0a55d5ec137" name="anchor3" type="Anchor"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="0" w="10" h="10" /><onsuccess>e13c9c2d-2cbe-4262-828c-6307a805d9c1</onsuccess></stage><stage stageid="e13c9c2d-2cbe-4262-828c-6307a805d9c1" name="Long Enough?" type="Decision"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="60" /><decision expression="Len([Input String]) &gt;= [Target Width]" /><ontrue>f432b972-ae44-4485-943b-87848fd43487</ontrue><onfalse>87af11ea-fa7e-45cf-b02a-fd6edeae0b85</onfalse></stage><stage stageid="87af11ea-fa7e-45cf-b02a-fd6edeae0b85" name="Insert Padding" type="Calculation"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="135" y="60" /><onsuccess>6acfdd2b-9298-4841-9111-003fc203edd0</onsuccess><calculation expression="[Padding Character] &amp; [Input String]" stage="Input String" /></stage><stage stageid="92edef27-4b78-40dd-97bd-e5a4f9169214" name="Get XML Elements" type="SubSheetInfo"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><narrative>Gets a collection of xml elements with a given name from an xml document.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="04bec0f1-e8bb-4c30-a5d1-b7eee243e6f9" name="Start" type="Start"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="-120" /><inputs><input type="text" name="XML" narrative="The xml to get elements from" stage="XML" /><input type="text" name="Element Name" narrative="The name of the xml elements to get" stage="Element Name" /></inputs><onsuccess>17f4a862-c7e3-44c3-a373-5b325fdaab8a</onsuccess></stage><stage stageid="e4b99f55-7171-46d6-992b-db797e99b1ed" name="End" type="End"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="165" /><outputs><output type="collection" name="Elements" narrative="The collection of xml elements that match the given name and for each element its outer xml" stage="Elements" /></outputs></stage><stage stageid="31472749-70ee-477e-a042-fcf5a25a4099" name="XML" type="Data"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><display x="-75" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">&lt;?xml version="1.0" encoding="utf-8" ?&gt; &lt;PotentialGrading&gt;  &lt;ServiceIdentifier&gt;ABC&lt;/ServiceIdentifier&gt;  &lt;Episode ID="a97fe424-0d1f-4e7c-9e9a-9b3c9e03d594"&gt;   &lt;Patient DateOfBirth="18/02/1970" Gender="M" PartPostcode="YO51" EthnicOrigin="W" Country="United Kingdom"    Region="North Yorkshire" RegisteredBlind="0" RegisteredPartiallySighted="1" HealthProvider="PCT"    Insurance="Cheap as Chips Insurance"&gt;The patient ID goes here&lt;/Patient&gt;   &lt;Screening Date="2007/09/06" GradingCodeSet="NGC" ImageCount="4"&gt;    &lt;Item Code="Examiner Classification" Value="1" /&gt;    &lt;Item Code="Eye Screening Urgency" Value="2" /&gt;    &lt;Item Code="Opthalmologist Care" Value="2" /&gt;    &lt;Item Code="Technical Gradability Code" Value="1" /&gt;    &lt;Item Code="01 Visual Acuity Pinhole" Value="0" Laterality="right" /&gt;    &lt;Item Code="01 Visual Acuity Pinhole" Value="0" Laterality="left" /&gt;    &lt;Item Code="02 Visual Acuity Spectacles" Value="0" Laterality="right" /&gt;    &lt;Item Code="02 Visual Acuity Spectacles" Value="0" Laterality="left" /&gt;    &lt;Item Code="03 Visual Acuity Standard" Value="1" Laterality="right" /&gt;    &lt;Item Code="03 Visual Acuity Standard" Value="1" Laterality="left" /&gt;    &lt;Item Code="04 Visual Acuity" Value="" Laterality="right"&gt;Free text entry&lt;/Item&gt;    &lt;Item Code="04 Visual Acuity" Value="" Laterality="left"&gt;Free text entry&lt;/Item&gt;    &lt;Item Code="06 Dilation" Value="1" Laterality="right" /&gt;    &lt;Item Code="06 Dilation" Value="1" Laterality="left" /&gt;    &lt;Image Length="104644" CameraID="Camera1" CameraModelID="CameraModel1" CaptureDateTime="2007/09/06T01:54:59"     Eye="L"&gt;1121017(5)L.jpg&lt;/Image&gt;    &lt;Image Length="107565" CameraID="Camera2" CameraModelID="CameraModel2" CaptureDateTime="2007/09/06T01:54:59"     Eye="L"&gt;1121017(6)L.jpg&lt;/Image&gt;    &lt;Image Length="107441" CameraID="Camera3" CameraModelID="CameraModel3" CaptureDateTime="2007/09/06T01:54:59"     Eye="R"&gt;1121017(5)R.jpg&lt;/Image&gt;    &lt;Image Length="112472" CameraID="Camera4" CameraModelID="CameraModel4" CaptureDateTime="2007/09/06T01:54:59"     Eye="R"&gt;1121017(6)R.jpg&lt;/Image&gt;   &lt;/Screening&gt;   &lt;Notes&gt;Free text notes go here&lt;/Notes&gt;  &lt;/Episode&gt; &lt;/PotentialGrading&gt; </initialvalue><private /><alwaysinit /></stage><stage stageid="68a0eeb2-9377-4b12-8f31-5ae52e7109e4" name="Element Name" type="Data"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><display x="-75" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Image</initialvalue><private /><alwaysinit /></stage><stage stageid="7b46fe82-142a-411b-bf80-b2f0047952da" name="Get Elements" type="Code"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="60" /><inputs><input type="text" name="XML" expr="[XML]" /><input type="text" name="Element" expr="[Element Name]" /></inputs><outputs><output type="collection" name="Elements" stage="Elements" /></outputs><onsuccess>e4b99f55-7171-46d6-992b-db797e99b1ed</onsuccess><code><![CDATA[
dim table as datatable = GetDataTable("XML", "System.String")
dim row as datarow
dim doc as new xmldocument
dim list as xmlnodelist

doc.loadxml(xml)
list = doc.getelementsbytagname(element)

for each n as xmlnode in list
	row = table.newrow()
	row("XML") = n.outerxml
	table.rows.Add(row)
next

Elements = table
]]></code></stage><stage stageid="d693d2fb-a196-4ddc-b2e9-b41cbe618fc3" name="Elements" type="Collection"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><display x="-75" y="165" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="17f4a862-c7e3-44c3-a373-5b325fdaab8a" name="Blank XML?" type="Decision"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="-30" /><decision expression="Len(Trim([XML])) = 0" /><ontrue>6eb4f747-35c0-4e57-acbf-be93ac0a1bbb</ontrue><onfalse>7b46fe82-142a-411b-bf80-b2f0047952da</onfalse></stage><stage stageid="6eb4f747-35c0-4e57-acbf-be93ac0a1bbb" name="anchor1" type="Anchor"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="240" y="-30" w="10" h="10" /><onsuccess>a460ec9b-8afb-4b37-8ae0-7545448b025d</onsuccess></stage><stage stageid="a460ec9b-8afb-4b37-8ae0-7545448b025d" name="anchor2" type="Anchor"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="240" y="165" w="10" h="10" /><onsuccess>e4b99f55-7171-46d6-992b-db797e99b1ed</onsuccess></stage><stage stageid="97b59270-9eda-4994-9fce-24d8b5d856a4" name="Get XML Attribute" type="SubSheetInfo"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><narrative>Gets the value of an xml attribute with a given name from an xml document fragment.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="802dd6e8-6b25-42b9-9af6-931049d4062a" name="Start" type="Start"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><display x="120" y="-105" /><inputs><input type="text" name="XML" narrative="The xml document to get attributes from" stage="XML" /><input type="text" name="Attribute Name" narrative="The name of the xml attribute to get" stage="Attribute Name" /></inputs><onsuccess>76737597-b716-4a52-8cbc-dfe9b5ad1f0c</onsuccess></stage><stage stageid="bc64fcfd-4386-47ec-b799-19c5454d8374" name="End" type="End"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><display x="120" y="90" /><outputs><output type="text" name="Value" narrative="The text value of the requested attribute" stage="Attribute Value" /></outputs></stage><stage stageid="18f2ae57-8ed9-457b-8763-82dedb14a5e0" name="XML" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><display x="-90" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">&lt;iGrading&gt;&lt;Response transactionID="de3dc0b1-6b22-4b67-a13a-d42fff6188b9" status="Success" method="SubmitPotentialGradingWithImages" description="" /&gt;&lt;/iGrading&gt;</initialvalue><private /><alwaysinit /></stage><stage stageid="1941e7f9-164d-4aa2-b06e-cb3a579a30e4" name="Attribute Name" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><display x="-90" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">method</initialvalue><private /><alwaysinit /></stage><stage stageid="c9ec2a39-8f5d-42cc-856f-33bdb2c16477" name="Attribute Value" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><display x="-90" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="76737597-b716-4a52-8cbc-dfe9b5ad1f0c" name="Get Attribute" type="Code"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><display x="120" y="-15" /><inputs><input type="text" name="XML" expr="[XML]" /><input type="text" name="Attribute" expr="[Attribute Name]" /></inputs><outputs><output type="text" name="Value" stage="Attribute Value" /></outputs><onsuccess>bc64fcfd-4386-47ec-b799-19c5454d8374</onsuccess><code><![CDATA[
dim i as integer = XML.indexof(Attribute)

if i > 0 then
	i += Attribute.length + 2
	value = XML.substring(i)
	value = value.substring(0, value.indexof(""""))
else
	value = ""
end if]]></code></stage><stage stageid="ebd306f5-f0a3-46cf-8a04-9bde5bf5cc3d" name="Get Collection as CSV" type="SubSheetInfo"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><narrative>Turns a collection into a list of comma seperated values.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="47ea7760-3b58-442b-8271-c90d3c08f114" name="Split Lines by Length" type="SubSheetInfo"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><narrative>Splits text into lines of a given length using word boundries to find the split point.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="51996cc8-b76e-4de1-899a-66c678dbe1f3" name="Start" type="Start"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="text" name="Text to Split" narrative="The single line of text that needs to be split" stage="Text to Split" /><input type="number" name="Maximum Line Length" narrative="The maximum length of the line" stage="Maximum Line Length" /><input type="flag" name="Split Strictly by Length" narrative="Set true if the line should be split at character boundries instead of words" stage="Split Strictly by Length" /></inputs><onsuccess>0fd3f2cd-7fff-49c7-b4d9-4cfc3476793a</onsuccess></stage><stage stageid="52e75580-936a-4647-a154-e984ab8d199a" name="End" type="End"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><display x="0" y="60" /><outputs><output type="number" name="Line Count" stage="Line Count" /><output type="collection" name="Split Lines" stage="Split Lines" /></outputs></stage><stage stageid="0fd3f2cd-7fff-49c7-b4d9-4cfc3476793a" name="Split Lines By Length" type="Code"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><display x="0" y="-45" w="90" h="60" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /><input type="number" name="Maximum Line Length" expr="[Maximum Line Length]" /><input type="flag" name="Strict Split" expr="[Split Strictly by Length]" /></inputs><outputs><output type="collection" name="Split Lines" stage="Split Lines" /><output type="number" name="Line Count" stage="Line Count" /></outputs><onsuccess>52e75580-936a-4647-a154-e984ab8d199a</onsuccess><code><![CDATA[Dim Values as List(Of String) = Nothing
If Strict_Split Then
      Values = New List(Of String)
      While Text_to_Split.Length > 0
            Dim NewLine As String = Text_to_Split.SubString(0, Math.Min(Maximum_Line_Length, Text_to_Split.Length))
            NewLine = NewLine.Trim()
            Values.Add(NewLine)

            If Text_to_Split.Length > NewLine.Length Then
                  Text_to_Split = Text_to_Split.SubString(NewLine.Length, Text_to_Split.Length - NewLine.Length)
            Else
                  Text_to_Split = ""
            End If
            Text_to_Split = Text_to_Split.Trim()
      End While
Else
      Values = SplitTextByLengthEngine(Text_to_Split, Maximum_Line_length)
End If

Split_Lines = New DataTable()
Split_Lines.Columns.Add("Line Text", GetType(String))
For Each s as String in Values
      Split_Lines.Rows.Add(New Object() {s})
Next

Line_Count = Values.Count]]></code></stage><stage stageid="c20b3e81-de90-46c1-a347-f094034ff28c" name="Text to Split" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="75" y="-135" /><datatype>text</datatype><initialvalue xml:space="preserve">aaaa bbbb cccc dddd eeee ffff gggg hhhh iiii jjjj kkkk llll mmmm nnnn oooo pppp</initialvalue><private /><alwaysinit /></stage><stage stageid="e329d1c6-7a17-4af0-aa33-d6fb517adb68" name="Split Lines" type="Collection"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="135" y="45" w="120" h="90" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Line Text" type="text" /></collectioninfo></stage><stage stageid="50f47d4a-73f4-46d2-93e1-24a2470d2df9" name="Maximum Line Length" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="150" y="-135" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="d1f11813-b465-4a95-9194-630fb1424d37" name="Line Count" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="90" y="-60" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89c59225-5fb8-45a8-9fb8-a102420ddbc5" name="Split Strictly by Length" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="225" y="-135" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8d911bb3-c87f-4748-b226-9d2faaf45c95" name="Get CSV As Collection" type="SubSheetInfo"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><narrative>Turns a list of comma seperated values into a collection.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e1587123-3967-4743-b475-5499f8c41803" name="Get Newline Character" type="SubSheetInfo"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><narrative>Gets the text representing the two newline characters used under windows (Carriage return followed by Line feed)</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b09f1e76-fb7c-4ef1-9a47-db4a1377d056" name="Start" type="Start"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>af411d25-0e83-4e28-b4f3-30f43beb9b88</onsuccess></stage><stage stageid="bee4d44f-957c-415f-be9c-614e97d6f255" name="End" type="End"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Newline Character" narrative="The new line text" stage="Newline Character" /></outputs></stage><stage stageid="af411d25-0e83-4e28-b4f3-30f43beb9b88" name="Get Newline Character" type="Code"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><display x="15" y="0" w="90" h="60" /><outputs><output type="text" name="Newline Character" stage="Newline Character" /></outputs><onsuccess>bee4d44f-957c-415f-be9c-614e97d6f255</onsuccess><code><![CDATA[Newline_Character = VbCrLf]]></code></stage><stage stageid="dde302f4-2b62-45c0-a8f3-190c52116470" name="Newline Character" type="Data"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><display x="90" y="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd7d11e6-2bc7-40ed-ab47-1180482d82ed" name="Delete Characters" type="SubSheetInfo"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><narrative>Removes the given characters from the text.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6e15c3f7-07db-4e3d-a24d-84be7e09b06e" name="Start" type="Start"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" stage="Text Sample" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" stage="Characters to Delete" /></inputs><onsuccess>89bfbefd-b0a3-472a-b72c-75105d0a7895</onsuccess></stage><stage stageid="c7719606-01b9-4626-9a24-4d9cf42d1e75" name="End" type="End"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Amended Sample" /></outputs></stage><stage stageid="78d405b1-aa60-46a6-af38-fb4bba55e752" name="Text Sample" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66318e10-ff11-43c1-9b3c-6ce27546458f" name="Characters to Delete" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89bfbefd-b0a3-472a-b72c-75105d0a7895" name="Delete" type="Code"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Text Sample" expr="[Text Sample]" /><input type="text" name="Characters to Delete" expr="[Characters to Delete]" /></inputs><outputs><output type="text" name="Amended Sample" stage="Amended Sample" /></outputs><onsuccess>c7719606-01b9-4626-9a24-4d9cf42d1e75</onsuccess><code><![CDATA[For Each C as Char in Characters_To_Delete.ToCharArray()
	Text_Sample = Text_Sample.Replace(C, "")
Next

Amended_Sample = Text_Sample]]></code></stage><stage stageid="930e7d0f-68a5-4d40-a291-e2dcfa4918c6" name="Amended Sample" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><display x="90" y="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a0bb945-2946-4e17-8e4a-b8d7eb5e1060" name="Escape Sendkeys String" type="SubSheetInfo"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><narrative>Escapes characters to be sent via the sendkeys method, to ensure that all characters are interpreted literally. If left unescaped, some characters such as % carry a special meaning rather than their literal value.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5bb1d666-6ef6-4371-a0f4-111fdf5ee69e" name="Start" type="Start"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Sendkeys Text" narrative="The text to be escaped" stage="Sendkeys Text" /></inputs><onsuccess>5ea70bdd-732c-4a8e-b5cb-a747f97e1090</onsuccess></stage><stage stageid="7bfda30d-2f75-46ec-b5e2-88a965528b49" name="End" type="End"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Escaped Sendkeys Text" narrative="The escaped sendkeys text, which can be sent via the sendkeys method without fear of misinterpretation" stage="Escaped Sendkeys Text" /></outputs></stage><stage stageid="5ea70bdd-732c-4a8e-b5cb-a747f97e1090" name="Escape Text" type="Code"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="30" /><inputs><input type="text" name="SendKeys Text" expr="[Sendkeys Text]" /></inputs><outputs><output type="text" name="Escaped Sendkeys Text" stage="Escaped Sendkeys Text" /></outputs><onsuccess>7bfda30d-2f75-46ec-b5e2-88a965528b49</onsuccess><code><![CDATA[Escaped_Sendkeys_Text = Regex.Replace(SendKeys_Text, "[\[\]{}+^%~()]", "{$0}")]]></code></stage><stage stageid="c0e80092-2acc-4552-b6ab-9e3fa5abb07a" name="Escaped Sendkeys Text" type="Data"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><display x="150" y="90" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="172f06e8-629e-434a-9bee-084a177606eb" name="Sendkeys Text" type="Data"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e2f3e3d-72e1-4483-b79e-49e9f1387d8a" name="Compare Font Text" type="SubSheetInfo"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><narrative>Compares two items of text read using Font Recognition for equality, where "equality" means that the two text samples match following the removal of conflicting font characters.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1a092a3a-7389-4bd7-8d31-a3ed761ff97c" name="Start" type="Start"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="None" /></postconditions><display x="150" y="-30" /><inputs><input type="text" name="Sample 1" narrative="The first item to be compared" stage="Sample 1" /><input type="text" name="Sample 2" narrative="The second item to be compared" stage="Sample 2" /><input type="collection" name="Conflicting Characters" narrative="A collection of conflicting font characters, as read from a read stage for the font of interest" stage="Conflicting Characters" /></inputs><onsuccess>2aac81fd-1231-450b-94e5-3a5928ddb08b</onsuccess></stage><stage stageid="f07d147e-0807-4996-8746-e6b232b63283" name="End" type="End"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="330" /><outputs><output type="flag" name="Samples Equal" narrative="Indicates whether the samples are equal, once conflicting characters are removed" stage="Samples Equal" /><output type="text" name="Amended Sample 1" narrative="The first sample, with conflicting characters removed" stage="Sample 1" /><output type="text" name="Amended Sample 2" narrative="The second sample, with conflicting characters removed" stage="Sample 2" /></outputs></stage><stage stageid="fbb964d4-b0d6-4729-b88d-04d1cbfd0cb5" name="Sample 1" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="225" y="-30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4187bcbb-ee93-4b01-b7b6-4e4944c8967a" name="Sample 2" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="285" y="-30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="16d61c29-acde-49f1-a0dc-5b93885cb724" name="Conflicting Characters" type="Collection"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="0" y="-15" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2aac81fd-1231-450b-94e5-3a5928ddb08b" name="For Each Character Group" type="LoopStart"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="45" w="120" h="30" /><onsuccess>dde2966f-3ac6-4a0a-9613-7f8c83db2d3a</onsuccess><groupid>d5a546ca-79ce-4ba9-917c-4165b543a787</groupid><looptype>ForEach</looptype><loopdata>Conflicting Characters</loopdata></stage><stage stageid="5f4d2cf9-a6a3-47c1-beed-8c8912b3f81e" name="Next Character Group" type="LoopEnd"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="180" w="120" h="30" /><onsuccess>cd3e8b56-7767-489d-96de-6c9d0740de02</onsuccess><groupid>d5a546ca-79ce-4ba9-917c-4165b543a787</groupid></stage><stage stageid="cd3e8b56-7767-489d-96de-6c9d0740de02" name="Determine Equality" type="Calculation"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="240" /><onsuccess>f07d147e-0807-4996-8746-e6b232b63283</onsuccess><calculation expression="[Sample 1] = [Sample 2]" stage="Samples Equal" /></stage><stage stageid="7c680a7d-326b-4d7b-b298-02df94778092" name="Samples Equal" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="225" y="330" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a589a76f-6d45-4f76-a3d8-a7220c5409ed" name="Extract Regex Values" type="SubSheetInfo"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><narrative>Use this action to extract named capture groups. The group names should specified in the input Collection in the 'Name' column.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e85db034-efea-43db-9f60-c5d086ce0f5a" name="Start" type="Start"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><display x="45" y="-105" /><inputs><input type="text" name="Regex Pattern" narrative="The regex pattern to apply" stage="Regex Pattern" /><input type="text" name="Target String" narrative="The target string to which apply the pattern and extract values" stage="Target String" /><input type="collection" name="Named Values" narrative="A collection of named values to extract from the target string. Note, the Collection should contain two text columns defined as 'Name' and 'Value'." stage="Named Values" /></inputs><onsuccess>526b7aa5-2df6-4a52-a8d5-fef9e3c9e776</onsuccess></stage><stage stageid="78d491bd-ce28-422a-8d1f-334ba9248f4e" name="End" type="End"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><display x="45" y="90" /><outputs><output type="collection" name="Named Values" narrative="Results of the named values extracted from the regex" stage="Named Values" /></outputs></stage><stage stageid="e0d2e8e4-b2f1-4cab-a39c-7252cd042e68" name="Regex Pattern" type="Data"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><display x="240" y="-105" w="300" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">(?&lt;Lower&gt;\d+)\s*(-|to)\s*(?&lt;Upper&gt;\d+)</initialvalue><private /><alwaysinit /></stage><stage stageid="d1344ba9-2a6f-4a88-bc72-0188e2ead8b7" name="Target String" type="Data"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><narrative>100-200
56 to 99
400 - 600</narrative><display x="240" y="-60" w="300" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">100-200</initialvalue><private /><alwaysinit /></stage><stage stageid="70580e44-41d3-40b3-9b12-3460963b2f5f" name="Named Values" type="Collection"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><display x="240" y="30" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Name" type="text" /><field name="Value" type="text" /></collectioninfo><initialvalue><row><field name="Name" type="text" value="Lower" /><field name="Value" type="text" value="" /></row><row><field name="Name" type="text" value="Upper" /><field name="Value" type="text" value="" /></row></initialvalue></stage><stage stageid="526b7aa5-2df6-4a52-a8d5-fef9e3c9e776" name="Extract Values" type="Code"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><display x="45" y="-15" /><inputs><input type="text" name="Regex Pattern" expr="[Regex Pattern]" /><input type="text" name="Target String" expr="[Target String]" /><input type="collection" name="Named Values" expr="[Named Values]" /></inputs><outputs><output type="collection" name="Named Values Out" stage="Named Values" /></outputs><onsuccess>78d491bd-ce28-422a-8d1f-334ba9248f4e</onsuccess><code><![CDATA[For Each Row As DataRow in Named_Values.Rows
	Row("Value") = ""
Next

Dim R as New Regex(Regex_Pattern, RegexOptions.SingleLine)
Dim M as Match = R.Match(Target_String)
If M IsNot Nothing AndAlso M.Success Then
	If M.Groups IsNot Nothing AndAlso M.Groups.Count > 0 Then
		For Each Row As DataRow in Named_Values.Rows
			Dim GroupName As String = CStr(Row("Name"))
			Dim G As Group = M.Groups(GroupName)
			If G.Success Then
				Row("Value") = G.Value
			End If
		Next
	End If
End If

Named_Values_Out = Named_Values]]></code></stage><stage stageid="feb4e385-2919-4066-86ad-53cb6226c867" name="InStr" type="SubSheetInfo"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><narrative>Tests to see if one peice of text contains another peice of sub text.</narrative><display x="-150" y="-180" w="150" h="90" /></stage><stage stageid="353f092b-3d6f-4fda-bdab-cd5798047c44" name="End" type="End"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="number" name="Position" narrative="The index of the sub text within the text or -1 if not found" stage="Position" /></outputs></stage><stage stageid="f594335d-8723-4704-a8ae-e8dbcfe492c7" name="Text" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-180" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1a43e2c2-c8c1-4dfd-b58f-2775e2ea7d0e" name="Search String" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-180" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c9bbb24e-51f9-489f-9944-30d9612c396a" name="Start Byte" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-180" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="65e660c1-4379-4323-9e01-6cd7ae38f150" name="Note1" type="Note"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-180" y="-60" w="150" h="30" /></stage><stage stageid="424c6e04-b000-4dce-8eb7-ba00b0fea671" name="InStr" type="Code"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="InText" expr="[Text]" /><input type="text" name="Search String" expr="[Search String]" /><input type="number" name="Start Byte" expr="[Start Byte]" /><input type="number" name="Compare Method" expr="[Compare Method]" /></inputs><outputs><output type="number" name="Position" stage="Position" /></outputs><onsuccess>353f092b-3d6f-4fda-bdab-cd5798047c44</onsuccess><code><![CDATA[  Position = Microsoft.VisualBasic.InStr(Start_Byte,InText, Search_String, 1)]]></code></stage><stage stageid="7f283fb0-e9fa-4e24-82d1-aae53fd5afe1" name="Position" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-165" y="165" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d00b9153-969d-4db4-b737-b1ac835c7b2a" name="Compare Method" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>1 = text, 0 = binary</narrative><display x="-180" y="60" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="4bbb2261-2d01-49a5-88e8-c8d37745fd60" name="InStrRev" type="SubSheetInfo"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><narrative>Tests to see if one peice of text contains another peice of sub text but matches in reverse.</narrative><display x="-150" y="-135" w="150" h="90" /></stage><stage stageid="3ddcb7e5-570f-430d-8374-ed9066da51c0" name="Start" type="Start"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Text" narrative="Text to search in" stage="Text" /><input type="text" name="Search String" narrative="The text to search for" stage="Search String" /><input type="number" name="Start Byte" narrative="Where in the string to search from" stage="Start Byte" /><input type="number" name="Compare Method" narrative="1=text, 0=binary" stage="Compare Method" /></inputs><onsuccess>4991333f-9a42-4dc3-b73b-a8bc97edab6d</onsuccess></stage><stage stageid="251f9278-c41e-44a0-835b-bfc48910933d" name="Text" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-180" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="393bbd43-ae95-438d-b358-f51cc69d5e5c" name="Search String" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-180" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a898a11a-c6ca-4a70-abcd-42f38192de24" name="Start Byte" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-180" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="73737012-9282-4e33-9d87-c4718367216d" name="Note1" type="Note"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-180" y="-60" w="150" h="30" /></stage><stage stageid="4991333f-9a42-4dc3-b73b-a8bc97edab6d" name="InStrRev" type="Code"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="InText" expr="[Text]" /><input type="text" name="Search String" expr="[Search String]" /><input type="number" name="Start Byte" expr="[Start Byte]" /><input type="number" name="Compare Method" expr="[Compare Method]" /></inputs><outputs><output type="number" name="Position" stage="Position" /></outputs><onsuccess>ba288c3f-ff29-4df2-af77-a2823f65f60c</onsuccess><code><![CDATA[  Position = Microsoft.VisualBasic.InStrRev(InText, Search_String, Start_Byte, 1)]]></code></stage><stage stageid="63d5b70d-b54a-4451-b957-9ea177292994" name="Position" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-165" y="150" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57a39985-6197-4f21-bdff-e46bd897faa6" name="Compare Method" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>1 = text, 0 = binary</narrative><display x="-180" y="60" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="d0bb7b29-fbb3-43cd-ab69-7f76a9c657e5" name="Note1" type="Note"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-165" y="120" w="150" h="30" /></stage><stage stageid="b27c7a93-8e3b-4ed8-b105-e08cd2c96fdf" name="Note1" type="Note"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-165" y="135" w="150" h="30" /></stage><stage stageid="bc4f3574-a096-4b9f-b836-0bc100bf2a18" name="Start" type="Start"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-90" /><inputs><input type="text" name="Text" narrative="Text to search in" stage="Text" /><input type="text" name="Search String" narrative="The text to search for" stage="Search String" /><input type="number" name="Start Byte" narrative="Where in the string to search from" stage="Start Byte" /><input type="number" name="Compare Method" narrative="1=text, 0=binary" stage="Compare Method" /></inputs><onsuccess>424c6e04-b000-4dce-8eb7-ba00b0fea671</onsuccess></stage><stage stageid="ba288c3f-ff29-4df2-af77-a2823f65f60c" name="End" type="End"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="number" name="Position" narrative="The index of the sub text within the text from the end or -1 if not found" stage="Position" /></outputs></stage><stage stageid="73739a66-400b-488a-bd7a-63a2f0d2a4ef" name="Test Regex Match" type="SubSheetInfo"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><narrative>Check if a given Text value matches a regular expression.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="568b67f8-4216-4af4-bea8-1c83bbff7e16" name="Start" type="Start"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><display x="-30" y="-120" /><inputs><input type="text" name="Regex Pattern" narrative="The regex pattern to apply" stage="Regex Pattern" /><input type="text" name="Target String" narrative="The target string to which apply the pattern and extract values" stage="Target String" /></inputs><onsuccess>2ad0c111-6108-4ca5-945b-22aab4b6bb27</onsuccess></stage><stage stageid="46282093-d3a9-4e38-b030-95b332ec5371" name="End" type="End"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><display x="-30" y="75" /><outputs><output type="flag" name="Matched?" narrative="Whether or not the regex match" stage="Regex Match" /></outputs></stage><stage stageid="32d3ef8a-d0b2-4093-afc5-98bad356c881" name="Regex Pattern" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><display x="165" y="-120" w="300" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5747c96e-0ce3-4e78-b446-17b9cef5b655" name="Target String" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><narrative>100-200
56 to 99
400 - 600</narrative><display x="165" y="-75" w="300" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2ad0c111-6108-4ca5-945b-22aab4b6bb27" name="Test Regex Match1" type="Code"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><display x="-30" y="-30" /><inputs><input type="text" name="Regex Pattern" expr="[Regex Pattern]" /><input type="text" name="Target String" expr="[Target String]" /></inputs><outputs><output type="flag" name="Regex Match" stage="Regex Match" /></outputs><onsuccess>46282093-d3a9-4e38-b030-95b332ec5371</onsuccess><code><![CDATA[
Dim R as New Regex(Regex_Pattern, RegexOptions.SingleLine)
Dim M as Match = R.Match(Target_String)
Regex_Match =  M IsNot Nothing AndAlso M.Success]]></code></stage><stage stageid="24d6e567-f121-4d8a-a4ee-1402f8f2832d" name="Regex Match" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><display x="45" y="-30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dde2966f-3ac6-4a0a-9613-7f8c83db2d3a" name="Delete from Sample 1" type="SubSheet"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="90" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" expr="[Sample 1]" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" expr="[Conflicting Characters.Character Group]" /></inputs><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Sample 1" /></outputs><onsuccess>50c19466-f7e4-4066-a4c1-d18f65876de0</onsuccess><processid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</processid></stage><stage stageid="50c19466-f7e4-4066-a4c1-d18f65876de0" name="Delete from Sample 2" type="SubSheet"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="135" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" expr="[Sample 2]" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" expr="[Conflicting Characters.Character Group]" /></inputs><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Sample 2" /></outputs><onsuccess>5f4d2cf9-a6a3-47c1-beed-8c8912b3f81e</onsuccess><processid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</processid></stage><stage stageid="976e1ff6-abbb-41dd-b61c-e5906831327e" name="Start" type="Start"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="collection" name="Input Collection" narrative="The collection to be converted to CSV" stage="Input Collection" /></inputs><onsuccess>c61bbe42-0aa1-44c6-a081-311d65351241</onsuccess></stage><stage stageid="2ab5ecf3-268e-4703-af0b-b628d074a395" name="End" type="End"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="-30" y="15" /><outputs><output type="text" name="Collection CSV" narrative="The CSV representation of the Input Collection" stage="Output CSV" /></outputs></stage><stage stageid="70fca360-60a6-43df-ac14-f2e89132d005" name="Input Collection" type="Collection"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4890c0f6-ccee-4acc-a4fb-991a6de7f430" name="Output CSV" type="Data"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85f97df6-6547-462a-97ec-4dcf85d77897" name="Input Data Items" type="Block"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="d74dee9e-caae-41da-af9b-a81ce7ad09c6" name="Output Data Items" type="Block"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="c61bbe42-0aa1-44c6-a081-311d65351241" name="Get Collection as Delimited Text" type="SubSheet"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="-30" y="-60" w="90" h="60" /><inputs><input type="collection" name="Input Collection" friendlyname="Input Collection" narrative="The collection to be converted to CSV" expr="[Input Collection]" /><input type="text" name="Delimiter Character" friendlyname="Delimiter Character" narrative="The character used for delimiting fields in the string" expr="&quot;,&quot;" /></inputs><outputs><output type="text" name="Output Delimited Text" friendlyname="Output Delimited Text" narrative="The delimited text representation of the Input Collection" stage="Output CSV" /></outputs><onsuccess>2ab5ecf3-268e-4703-af0b-b628d074a395</onsuccess><processid>f34fc98d-a02f-4f58-92d4-c4688513439b</processid></stage><stage stageid="d2485b03-90eb-4e91-b1ef-ff830767650c" name="Get Collection as Delimited Text" type="SubSheetInfo"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><narrative>Turns a collection into a list of values separated by the provided delimiter character.</narrative><display x="-255" y="-75" w="150" h="60" /></stage><stage stageid="026fac81-dc81-4612-8dfd-2e4a86f95ebb" name="Start" type="Start"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><loginhibit /><display x="-60" y="-90" /><inputs><input type="collection" name="Input Collection" narrative="The collection to be converted to CSV" stage="Input Collection" /><input type="text" name="Delimiter Character" narrative="The character used for delimiting fields in the string" stage="Delimiter Character" /></inputs><onsuccess>4e202cad-2b99-4f15-88bc-b9914b0e341b</onsuccess></stage><stage stageid="5a98b789-1c80-4f08-b2bb-e638009f643c" name="End" type="End"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><loginhibit /><display x="-60" y="90" /><outputs><output type="text" name="Output Delimited Text" narrative="The delimited text representation of the Input Collection" stage="Output Delimited Text" /></outputs></stage><stage stageid="225a4930-49aa-428f-b7e3-7dc9c2629c72" name="Input Collection" type="Collection"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><display x="-255" y="0" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4e202cad-2b99-4f15-88bc-b9914b0e341b" name="Serialise to Delimited Text" type="Code"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><loginhibit /><display x="-60" y="0" w="120" h="60" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /><input type="text" name="Delimiter" expr="[Delimiter Character]" /></inputs><outputs><output type="text" name="Output CSV" stage="Output Delimited Text" /></outputs><onsuccess>5a98b789-1c80-4f08-b2bb-e638009f643c</onsuccess><code><![CDATA[
Dim SB As New StringBuilder
WriteDataTable(SB, Input_Collection, True, Delimiter)
Output_CSV = SB.ToString()]]></code></stage><stage stageid="e9fd160f-2e2e-4a5f-88fb-6fc3513e74fe" name="Output Delimited Text" type="Data"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><display x="-255" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4744a27a-9351-4f3e-ad80-149e1689f2fa" name="Input Data Items" type="Block"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><loginhibit /><display x="-330" y="-30" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="928f8f18-5970-4f09-a329-a58be75ce629" name="Output Data Items" type="Block"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><loginhibit /><display x="-330" y="75" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="640470fa-acdf-402e-90e0-9468b23d4f18" name="Delimiter Character" type="Data"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><display x="-255" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7879714e-32e3-4741-8e03-4f6c39f8947d" name="Get Delimited Text As Collection" type="SubSheetInfo"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><narrative>Turns a list of seperated values into a collection.</narrative><display x="-240" y="-105" w="150" h="60" /></stage><stage stageid="a6279d74-31be-4cac-829f-206bcf6ec53c" name="Start" type="Start"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><loginhibit /><display x="-60" y="-120" /><inputs><input type="text" name="Delimited Text" narrative="The delimited text to be converted into a collection" stage="Delimited Text" /><input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" stage="First Row Is Header" /><input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " stage="Schema" /><input type="text" name="Delimiter Character" narrative="The character used for delimiting fields in the string" stage="Delimiter Character" /></inputs><onsuccess>e9ffc61e-59d9-4936-a2ac-ea0e7afa1518</onsuccess></stage><stage stageid="1a304c1f-c3f0-43fc-9d73-a8d6ad98926b" name="End" type="End"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><loginhibit /><display x="-60" y="30" /><outputs><output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" /></outputs></stage><stage stageid="a04b094f-b7c5-4143-a738-23d3cb123fbf" name="Output Collection" type="Collection"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><loginhibit /><display x="-240" y="-30" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e5a32658-f2aa-487f-9520-fbe3ad1d6561" name="First Row Is Header" type="Data"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><loginhibit /><display x="-240" y="0" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="068c2eb9-29cc-4798-8c12-6229866675b4" name="Schema" type="Collection"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><narrative>The columns must appear in the same order as they appear in the CSV file</narrative><display x="-240" y="30" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Column Name" type="text" /></collectioninfo></stage><stage stageid="e9ffc61e-59d9-4936-a2ac-ea0e7afa1518" name="Parse Delimited String" type="Code"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><loginhibit /><display x="-60" y="-45" w="120" h="60" /><inputs><input type="text" name="DelimitedText" expr="[Delimited Text]" /><input type="collection" name="Schema" expr="[Schema]" /><input type="flag" name="FirstRowIsHeader" expr="[First Row Is Header]" /><input type="text" name="Delimiter" expr="[Delimiter Character]" /></inputs><outputs><output type="collection" name="outputCollection" stage="Output Collection" /></outputs><onsuccess>1a304c1f-c3f0-43fc-9d73-a8d6ad98926b</onsuccess><code><![CDATA[Const SchemaColumnName As String = "Column Name"
Const DefaultColumnName As String = "Column "
Const nonSchemaHeadingIndex As Integer = 0

Dim emptySchema As Boolean = Schema Is Nothing OrElse Schema.Rows.Count = 0

Dim csvValuesList = ParseCsvToList(DelimitedText, Delimiter)

' If we want to parse with no schema and want the first row be used as headings 
' we need to know what the headings will be.
Dim nonSchemaHeadings = csvValuesList(nonSchemaHeadingIndex)

' Arrange the column headings into the table first.
If emptySchema Then
	For Each columnHeader As String In nonSchemaHeadings
		Dim colName As String = If(FirstRowIsHeader, columnHeader,
											 DefaultColumnName & outputCollection.Columns.Count)
		outputCollection.Columns.Add(colName, GetType(String))
	Next
Else
	For Each columnHeader As DataRow In Schema.Rows
		Dim colName As String = columnHeader(SchemaColumnName).ToString
		outputCollection.Columns.Add(colName, GetType(String))
	Next
End If

' If the first row is being used for headings then skip those headings / values in csvValuesList.
Dim startListIndex As Integer = If(FirstRowIsHeader, nonSchemaHeadingIndex + 1, nonSchemaHeadingIndex)

' Insert the csv values into the table row by row.
For i As Integer = startListIndex To csvValuesList.Count - 1
	Dim currentRow As Datarow = outputCollection.NewRow
	outputCollection.Rows.Add(currentRow)

	Dim csvArray = csvValuesList(i)
	For columnIndex As Integer = 0 To csvArray.Length - 1
		currentRow.Item(columnIndex) = csvArray(columnIndex)
	Next
Next]]></code></stage><stage stageid="53421100-ece2-4711-bfa9-afeeffad4baf" name="Delimiter Character" type="Data"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><display x="-240" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0cf95689-6df0-4e1c-a167-4cc146a2c016" name="Input Data Items" type="Block"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><loginhibit /><display x="-315" y="-60" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="776cb146-9f13-4f86-99c1-6eed378a8f28" name="Output Data Items" type="Block"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><loginhibit /><display x="-315" y="105" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="fe70d981-5190-4495-a46c-fc979a57b76b" name="Delimited Text" type="Data"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><display x="-240" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="71b888d4-11ad-46d2-ad4e-fba499f6cab1" name="Start" type="Start"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="text" name="CSV" narrative="The CSV to be converted into a collection" stage="CSV" /><input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" stage="First Row Is Header" /><input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " stage="Schema" /></inputs><onsuccess>d57edb5e-14a5-441c-9c36-cccd9d53e9e8</onsuccess></stage><stage stageid="ad1bb716-336e-4089-9c65-9459b70b494b" name="End" type="End"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-30" y="15" /><outputs><output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" /></outputs></stage><stage stageid="b666475d-1b3c-4983-ad7c-38413df6ad58" name="CSV" type="Data"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5d236cf6-5519-4fb4-a438-8cbf13c17669" name="Output Collection" type="Collection"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-195" y="120" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3dfd39ce-9b05-4260-b1b6-055ab6c40716" name="First Row Is Header" type="Data"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-195" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c5fe44d4-2102-4105-b452-9727d21c254f" name="Schema" type="Collection"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><narrative>The columns must appear in the same order as they appear in the CSV file</narrative><display x="-195" y="45" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Column Name" type="text" /></collectioninfo></stage><stage stageid="d57edb5e-14a5-441c-9c36-cccd9d53e9e8" name="Get Delimited Text As Collection" type="SubSheet"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-30" y="-60" w="90" h="60" /><inputs><input type="flag" name="First Row Is Header" friendlyname="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" expr="[First Row Is Header]" /><input type="collection" name="Schema" friendlyname="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " expr="[Schema]" /><input type="text" name="Delimiter Character" friendlyname="Delimiter Character" narrative="The character used for delimiting fields in the string" expr="&quot;,&quot;" /><input type="text" name="Delimited Text" friendlyname="Delimited Text" narrative="The delimited text to be converted into a collection" expr="[CSV]" /></inputs><outputs><output type="collection" name="Output Collection" friendlyname="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" /></outputs><onsuccess>ad1bb716-336e-4089-9c65-9459b70b494b</onsuccess><processid>b30fe729-3663-4fd9-b97a-505752b1e33f</processid></stage><stage stageid="5b594ddf-1941-4657-a34a-2bab652e2f21" name="Input Data Items" type="Block"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="15a87913-2a1d-4d77-ab02-550d80a81f30" name="Output Data Items" type="Block"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="9ffb8a8f-cd64-4b57-b80c-e9fea69ce920" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="240" y="0" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="1c60e3fa-014e-4fae-a0ea-93947f6d427f" name="Replace Characters" type="SubSheetInfo"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><narrative>Replaces the specified existing characters in the text with the new characetrs.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="45580f5a-07b0-486d-91ab-d186c0c9fa27" name="Start" type="Start"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" stage="Text Sample" /><input type="text" name="Characters to Replace" narrative="A string of characters to be replaced in the Text Sample" stage="Characters to Replace" /><input type="text" name="Replacement Characters" narrative="The new characters to add to the Text Sample in place the original characters." stage="Replacement Characters" /></inputs><onsuccess>b2559855-53c1-4d69-896c-b181d4b35c9a</onsuccess></stage><stage stageid="7def3868-a40b-4dda-8817-cd2d1e491957" name="End" type="End"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters replaced" stage="Amended Sample" /></outputs></stage><stage stageid="86751a91-07a2-41b7-b4c8-fed2fa2fa2de" name="Text Sample" type="Data"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7241ca56-c2de-415d-893b-85ee41a8c112" name="Characters to Replace" type="Data"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><display x="-195" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b2559855-53c1-4d69-896c-b181d4b35c9a" name="Replace" type="Code"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Text Sample" expr="[Text Sample]" /><input type="text" name="Characters to Replace" expr="[Characters to Replace]" /><input type="text" name="Replacement Characters" expr="[Replacement Characters]" /></inputs><outputs><output type="text" name="Amended Sample" stage="Amended Sample" /></outputs><onsuccess>7def3868-a40b-4dda-8817-cd2d1e491957</onsuccess><code><![CDATA[For Each C as Char in Characters_To_Replace.ToCharArray()
	Text_Sample = Text_Sample.Replace(C, Replacement_Characters)
Next

Amended_Sample = Text_Sample]]></code></stage><stage stageid="1d83c1a6-688b-4ebb-bfcd-41f050ea7072" name="Amended Sample" type="Data"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c8ef4699-c724-47ab-bb80-c1aa55f260a8" name="Replacement Characters" type="Data"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd079b46-d2c2-42c3-b9e0-ea6228ce4a29" name="Extract Regex All Matches" type="SubSheetInfo"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><narrative>Returns a collection with groups as columns and matches as rows.</narrative><display x="-195" y="-105" w="270" h="90" /></stage><stage stageid="d84801e6-49a7-41e9-bf9b-b798a824043f" name="End" type="End"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><loginhibit /><display x="45" y="90" /><outputs><output type="collection" name="Regex Matches" narrative="A collection of regex search results." stage="Regex Matches" /><output type="flag" name="Success" narrative="True if there was a match. False if not." stage="Success" /></outputs></stage><stage stageid="2fe5469c-2b07-492a-9133-f9a8048040f4" name="Regex Pattern" type="Data"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><display x="-210" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c97452e5-4981-40dc-a818-0e04845b2c34" name="Text To Perform Search On" type="Data"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09291fc1-b6d1-491a-b567-323804f123d0" name="Extract All Matches" type="Code"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><loginhibit /><display x="45" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex Pattern" expr="[Regex Pattern]" /><input type="text" name="Text To Perform Search On" expr="[Text To Perform Search On]" /><input type="flag" name="Singleline" expr="[Singleline]" /><input type="flag" name="Ignore Case" expr="[Ignore Case]" /><input type="flag" name="Explicit Capture" expr="[Explicit Capture]" /></inputs><outputs><output type="collection" name="Regex Matches" stage="Regex Matches" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>d84801e6-49a7-41e9-bf9b-b798a824043f</onsuccess><code><![CDATA[Dim fullMatchColumnName As String = "Full Match"

Regex_Matches = New DataTable()
Regex_Matches.Columns.Add(fullMatchColumnName, GetType(String))

Dim regexOptionConfiguration As RegexOptions = CreateRegexOptions(Singleline, Ignore_Case, False, False, Explicit_Capture, False, False)
Dim regexObject As New Regex(Regex_Pattern, regexOptionConfiguration)
Dim regexMatches As MatchCollection = regexObject.Matches(Text_To_Perform_Search_On)

Success = regexMatches IsNot Nothing AndAlso regexMatches.Count > 0
If Success Then

	Dim groupNames() As String = regexObject.GetGroupNames()
	groupNames(0) = fullMatchColumnName

	For groupIndex As Integer = 1 To groupNames.GetUpperBound(0)
		Regex_Matches.Columns.Add(groupNames(groupIndex), GetType(String))
	Next

	For Each regexMatch As Match In regexMatches

		Dim resultRow As DataRow = Regex_Matches.NewRow()
		Dim groupIndex As Integer = 0

		For Each regexGroup As Group In regexMatch.Groups
				resultRow(groupNames(groupIndex)) = regexGroup.Value			
			groupIndex += 1
		Next
		Regex_Matches.Rows.Add(resultRow)
	Next
End If]]></code></stage><stage stageid="593d8dea-ec8a-4440-82f2-094489196f1b" name="Regex Matches" type="Collection"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><display x="300" y="-15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6a697699-5893-4417-8e1f-ec768b580204" name="Singleline" type="Data"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><display x="-210" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="59961a59-2948-456e-930f-8b963c57022b" name="Ignore Case" type="Data"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><display x="-210" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f28c22c8-b2dc-4656-87bc-a8781885fa50" name="Explicit Capture" type="Data"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><display x="-210" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4e4c7d0c-ab56-4a3c-9f4e-12eb5da2942a" name="Start" type="Start"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><loginhibit /><display x="45" y="-105" /><inputs><input type="text" name="Regex Pattern" narrative="The regex pattern you want to search with." stage="Regex Pattern" /><input type="text" name="Text To Perform Search On" narrative="The text you want to perform the regex search on." stage="Text To Perform Search On" /><input type="flag" name="Singleline" narrative="OPTIONAL: (Default False) Perform search in “Singleline” mode?" stage="Singleline" /><input type="flag" name="Ignore Case" narrative="OPTIONAL: (Default False) Perform search in “Ignore Case” mode?" stage="Ignore Case" /><input type="flag" name="Explicit Capture" narrative="OPTIONAL: (Default False) Perform search in “Explicit Capture” mode?" stage="Explicit Capture" /></inputs><onsuccess>09291fc1-b6d1-491a-b567-323804f123d0</onsuccess></stage><stage stageid="095ae743-add8-43a0-ace2-cb7de737b1d5" name="Success" type="Data"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><display x="300" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="986ddde8-876c-47e1-a219-e883b60988ca" name="Input Data Items" type="Block"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><loginhibit /><display x="-285" y="-45" w="165" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="a4549ed5-92d5-4dc9-9b5c-5f8eef0e3db4" name="Output Data Items" type="Block"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><loginhibit /><display x="225" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="b6c539a3-a875-47c9-80f8-56fb6ba8532b" name="Regex Replace" type="SubSheetInfo"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><narrative>Use this action to replace a sub string(s) within another string using a Regular Expression.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="bc5e73a5-0f83-4f73-b78f-4176fded5a7d" name="Start" type="Start"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Pattern" narrative="The regular expression to use to match for replacement." stage="Pattern" /><input type="text" name="Input Data" narrative="The string to perform the replacement pattern match on." stage="Input Data" /><input type="text" name="Replacement Data" narrative="The string to use as the replacement data." stage="Replacement Data" /><input type="number" name="Max Count" narrative="OPTIONAL: The maximum number of replacements to perform. Default value is unlimited (-1)." stage="Max Count" /><input type="number" name="Start Position" narrative="OPTIONAL: The starting position with the input data to start the replacement match. Default value is position 0." stage="Start Position" /></inputs><onsuccess>604442f0-1e00-4636-a429-44bad3435f7f</onsuccess></stage><stage stageid="a36f09fc-0570-4324-9867-4ce4350b4e54" name="End" type="End"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Output Data" narrative="The new string data after the replacement has been performed." stage="Output Data" /></outputs></stage><stage stageid="92025e0d-8f23-4ba1-b4d6-c9ffdcd19236" name="Pattern" type="Data"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b2313715-a1d8-47ad-bd75-fc39b6d77f68" name="Input Data" type="Data"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6603cd7c-b19d-4995-be45-181432c3adac" name="Replacement Data" type="Data"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="500fe4fd-5905-44ae-961a-0eb23fceaf21" name="Max Count" type="Data"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="4f3f3deb-c24c-4adb-a5f0-8d1850d40d79" name="Start Position" type="Data"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="9b3d4f06-e783-4784-9a62-a752d2491d78" name="Input" type="Block"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="604442f0-1e00-4636-a429-44bad3435f7f" name="Check Max Count" type="Decision"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="[Max Count] &gt;= -1" /><ontrue>47c7d896-c1c6-400a-9142-6504228eeb85</ontrue><onfalse>ff25f887-6321-4b60-9c77-baa1a7f62a6d</onfalse></stage><stage stageid="47c7d896-c1c6-400a-9142-6504228eeb85" name="Check Start Pos" type="Decision"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><loginhibit /><display x="15" y="-15" /><decision expression="[Start Position] &gt;= 0" /><ontrue>65e76cd9-cb01-4faa-8684-4504512f1125</ontrue><onfalse>ff25f887-6321-4b60-9c77-baa1a7f62a6d</onfalse></stage><stage stageid="ff25f887-6321-4b60-9c77-baa1a7f62a6d" name="Invalid Input Data" type="Exception"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><display x="120" y="-60" /><exception localized="yes" type="Invalid Input Parameter" detail="&quot;Please verify your input data.&quot;" /></stage><stage stageid="65e76cd9-cb01-4faa-8684-4504512f1125" name="Perform Replace" type="Code"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><loginhibit /><display x="15" y="30" /><inputs><input type="text" name="pattern" expr="[Pattern]" /><input type="text" name="input" expr="[Input Data]" /><input type="text" name="replacement" expr="[Replacement Data]" /><input type="number" name="max" expr="[Max Count]" /><input type="number" name="start" expr="[Start Position]" /></inputs><outputs><output type="text" name="output" stage="Output Data" /></outputs><onsuccess>a36f09fc-0570-4324-9867-4ce4350b4e54</onsuccess><code><![CDATA[Dim rgx As New Regex(pattern)

If (max > 0) And (start > 0) Then
	output = rgx.Replace(input, replacement, CInt(max), CInt(start))
ElseIf (max > 0) Then
	output = rgx.Replace(input, replacement, CInt(max))
Else
	output = rgx.Replace(input, replacement)
End If
]]></code></stage><stage stageid="853278cd-9f9e-4cf3-8435-6adfe121838f" name="Output Data" type="Data"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><display x="-195" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6533cd51-5783-4c0c-9c48-5c5f622e2a9f" name="Output" type="Block"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><loginhibit /><display x="-270" y="150" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="f94fff3d-8659-43e7-9d35-d06596042a40" name="Calculate Distance" type="SubSheetInfo"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><narrative>An implementation of the Levenshtein distance algorithm. This is used to calculate the distance between two strings. In this case, distance refers to the number of edits needed to make one string match another. 

Example: The distance between "Sam" and "Samantha" would be 5. That means 5 edits would be necessary to make either of these strings match the other. You could remove 5 characters from "Samantha" or add 5 characters to "Sam". 

This is based on the Microsoft TechNet article: https://social.technet.microsoft.com/wiki/contents/articles/26805.c-calculating-percentage-similarity-of-2-strings.aspx</narrative><display x="-195" y="-120" w="240" h="120" /></stage><stage stageid="0cb8e1ca-4671-4be4-9fe1-f291485d3884" name="Start" type="Start"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Source" narrative="The string to compare against the Target string." stage="Source" /><input type="text" name="Target" narrative="The string that is being compared against." stage="Target" /><input type="flag" name="Case Sensitive" narrative="A flag indicating whether the comparison should take the case (i.e. Upper vs Lower) into account. Default value is True." stage="Case Sensitive" /></inputs><onsuccess>d636827f-825d-400b-a5b5-322a2031c867</onsuccess></stage><stage stageid="ba097ab2-cced-4eef-a2ca-1fe84ffbaae7" name="End" type="End"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="number" name="Distance" narrative="The distance between the two strings." stage="Distance" /><output type="number" name="Similarity" narrative="The percentage similarity of the two input strings." stage="Similarity" /></outputs></stage><stage stageid="d7dd5ca2-6f35-4efd-8c9a-b4aeb549cee6" name="Source" type="Data"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="84278e10-e173-4cbd-b620-a8bee7ec5b41" name="Target" type="Data"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="165e05f7-97e7-457a-8728-9c8ba9ada978" name="Input" type="Block"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="e4ea6b45-26eb-45bc-8492-46ed760abe6b" name="Output" type="Block"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="7249670a-28bc-4fb7-9b27-d9a528ce0263" name="Similarity" type="Data"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><loginhibit /><display x="-195" y="150" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="76309d2d-4557-4204-84f0-8fb210066e37" name="Calculate Levenshtein Distance" type="Code"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="source" expr="[Source]" /><input type="text" name="target" expr="[Target]" /><input type="flag" name="caseSensitive" expr="[Case Sensitive]" /></inputs><outputs><output type="number" name="distance" stage="Distance" /><output type="number" name="similarity" stage="Similarity" /></outputs><onsuccess>ba097ab2-cced-4eef-a2ca-1fe84ffbaae7</onsuccess><code><![CDATA['*****************************************************
' Yes, GoTo statements are generally frowned upon, but
' in this case they work well.
'*****************************************************
Dim sourceCharCount As Integer = source.Length
Dim targetCharCount As Integer = target.Length
Dim numOfEdits As Integer(,) = New Integer(sourceCharCount + 1 - 1, targetCharCount + 1 - 1) {}
Dim i As Integer = 0
Dim j As Integer = 0

If (caseSensitive = False) Then
	source = source.ToLower()
	target = target.ToLower()
End If

' There are various checks that we would normally perform on the input strings, but which aren't required here because
' of the Decision stage check to ensure input was actually provied.
'
' Are the string identical? If they are, there's no reason to calculate a distance becauase we already no it's 0 (zero).
If source = target Then
	distance = 0
	Goto JumpPoint
End If

While i <= sourceCharCount
	numOfEdits(i, 0) = Math.Min(System.Threading.Interlocked.Increment(i), i - 1)
End While

While j <= targetCharCount
	numOfEdits(0, j) = Math.Min(System.Threading.Interlocked.Increment(j), j - 1)
End While

For i = 1 To sourceCharCount
	For j = 1 To targetCharCount
		Dim cost As Integer = If((target(j - 1) = source(i - 1)), 0, 1)
		numOfEdits(i, j) = Math.Min(Math.Min(numOfEdits(i - 1, j) + 1, numOfEdits(i, j - 1) + 1), numOfEdits(i - 1, j - 1) + cost)
	Next
Next

distance = numOfEdits(sourceCharCount, targetCharCount)

JumpPoint:

similarity = Math.Round(1.0 - (distance / CDec(Math.Max(source.Length, target.Length))),4)
]]></code></stage><stage stageid="414e8122-bef8-44b8-8811-eccc0d0d683b" name="Distance" type="Data"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><display x="-195" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d636827f-825d-400b-a5b5-322a2031c867" name="Check Input" type="Decision"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><loginhibit /><narrative>Was input provided?</narrative><display x="15" y="-60" /><decision expression="(Len(Trim([Source])) &gt; 0) AND (Len(Trim([Target])) &gt; 0)" /><ontrue>76309d2d-4557-4204-84f0-8fb210066e37</ontrue><onfalse>581b0dad-54f8-4c90-9999-f2165f63abda</onfalse></stage><stage stageid="581b0dad-54f8-4c90-9999-f2165f63abda" name="Invalid Input" type="Exception"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><display x="120" y="-60" w="90" h="30" /><exception localized="yes" type="Invalid Input Parameter" detail="&quot;Please review and correct your input. Values must be provided for both Source and Target.&quot;" /></stage><stage stageid="0ba1c79d-9a2c-442e-9cb4-0939c6d0ed7b" name="Case Sensitive" type="Data"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="baeb5b9f-ad8a-4ac0-ba61-1c107d40763f" name="Note3" type="Note"><loginhibit /><narrative>Version 10.0</narrative><display x="15" y="-180" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage></process></object>
        <object id="b71e99c3-94a3-4c4a-a1b6-a8f013fcb96b" name="Utility - Windows Compressed File" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Windows Compressed File" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="The VBO utility to manage Windows Compressed files" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>a2f9b8bd-885a-454f-8920-1bfb80d1e30d</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>46</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="The object uses the following system dll: System.IO.Compression.dll, System.IO.Compression.FileSystem.dll" /></preconditions><endpoint narrative="" /><subsheet subsheetid="a8c54015-2025-4723-aefa-2bb6f3b3c82e" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cba14fb2-1425-4834-b382-ac9cea30c23e" type="Normal" published="True"><name>Create Zip from Folder</name><view><camerax>13</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ae2b448f-a968-4bda-a664-20a9149cb9dc" type="Normal" published="True"><name>Add File to Zip</name><view><camerax>0</camerax><cameray>9</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4b8d01fc-6c2f-4fd8-b898-ae83af14c4e6" type="Normal" published="True"><name>Extract All from Zip</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9f52e71b-02ee-46c3-be9e-aabc3292fcee" type="Normal" published="True"><name>Extract File from Zip</name><view><camerax>-4</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="384cbfc3-88e8-41ab-8878-b2bac7146be0" type="Normal" published="True"><name>Delete File from Zip</name><view><camerax>159</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4ae23c8c-54a6-4a86-a148-2175c86923b8" type="Normal" published="True"><name>Get Zip Contents</name><view><camerax>-17</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e" type="Normal" published="True"><name>Find File in Zip</name><view><camerax>-324</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="de2a9469-aaff-47a3-b6ab-a3f9655ba178" name="Start" type="Start"><loginhibit onsuccess="true" /><display x="15" y="-105" /><onsuccess>5038e902-5abf-4672-a1eb-db05a9a64573</onsuccess></stage><stage stageid="5038e902-5abf-4672-a1eb-db05a9a64573" name="End" type="End"><loginhibit onsuccess="true" /><display x="15" y="90" /></stage><stage stageid="b923ffc0-d01c-4d44-8de1-d6e7ce0fa1bd" name="Stage1" type="ProcessInfo"><loginhibit onsuccess="true" /><display x="-180" y="-105" w="180" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.IO.Compression.dll</reference><reference>System.IO.Compression.FileSystem.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO.Compression</import><import>System.IO</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="311e15cd-3b4f-4437-882d-c780422f4eba" name="Clean Up" type="SubSheetInfo"><subsheetid>a8c54015-2025-4723-aefa-2bb6f3b3c82e</subsheetid><loginhibit onsuccess="true" /><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b1151e12-bd2b-4313-9510-a7e7e23270ab" name="Start" type="Start"><subsheetid>a8c54015-2025-4723-aefa-2bb6f3b3c82e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><onsuccess>974309d2-4236-40ed-8fb3-d5022f214e75</onsuccess></stage><stage stageid="974309d2-4236-40ed-8fb3-d5022f214e75" name="End" type="End"><subsheetid>a8c54015-2025-4723-aefa-2bb6f3b3c82e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="90" /></stage><stage stageid="f3bb5c44-9e21-44b3-87bb-2c13e43d4ee4" name="Create Zip from Folder" type="SubSheetInfo"><subsheetid>cba14fb2-1425-4834-b382-ac9cea30c23e</subsheetid><loginhibit onsuccess="true" /><narrative>Creates a zip archive that contains the files and directories from the specified directory and optionally includes the base directory.
The directory structure from the file system is preserved in the archive. If the directory is empty, an empty archive is created.
If the archive already exists, an exception is thrown. If an entry with the specified name already exists in the archive, a second entry is created with an identical name.
If a file in the directory cannot be added to the archive, the archive is left incomplete and invalid, and the method throws an exception.</narrative><display x="-195" y="-105" w="210" h="150" /></stage><stage stageid="2b33354e-4b3c-45fc-983b-469e5f4c1112" name="Start" type="Start"><subsheetid>cba14fb2-1425-4834-b382-ac9cea30c23e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Source Folder Name" narrative="Mandatory: The path to the directory to be archived, specified as an absolute path" stage="Source Folder Name" /><input type="text" name="Destination Zip File Name" narrative="Mandatory: The path and name of the archive to be created, specified as an absolute path" stage="Destination Zip File Name" /><input type="flag" name="Include Base Folder" narrative="Optional: True to include the directory name from [Source Folder Name] at the root of the archive; False to include only the contents of the directory. Default False" stage="Include Base Folder" /></inputs><onsuccess>ab1ebb75-538f-4b88-86db-cbc9ec59ec7f</onsuccess></stage><stage stageid="d85e5bc8-34f9-47f4-a90b-1c121cade800" name="End" type="End"><subsheetid>cba14fb2-1425-4834-b382-ac9cea30c23e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /></stage><stage stageid="d3bbabee-48ed-4a02-8ba2-ea6f26120dd3" name="Note1" type="Note"><subsheetid>a8c54015-2025-4723-aefa-2bb6f3b3c82e</subsheetid><loginhibit onsuccess="true" /><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="a691fffd-16c4-45d9-8857-19c63fc3df21" name="Note2" type="Note"><loginhibit onsuccess="true" /><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="ab1ebb75-538f-4b88-86db-cbc9ec59ec7f" name="CreateFromDirectory" type="Code"><subsheetid>cba14fb2-1425-4834-b382-ac9cea30c23e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="sourcePath" expr="[Source Folder Name]" /><input type="text" name="destinationPath" expr="[Destination Zip File Name]" /><input type="flag" name="includeFolder" expr="[Include Base Folder]" /></inputs><onsuccess>d85e5bc8-34f9-47f4-a90b-1c121cade800</onsuccess><code><![CDATA[ZipFile.CreateFromDirectory(sourcePath, destinationPath, CompressionLevel.Fastest, includeFolder)]]></code></stage><stage stageid="c2a2fa27-6dfb-48ed-a0ac-093c908df743" name="Source Folder Name" type="Data"><subsheetid>cba14fb2-1425-4834-b382-ac9cea30c23e</subsheetid><loginhibit onsuccess="true" /><narrative>The path to the directory to be archived, specified as an absolute path</narrative><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="801f9184-f52a-4658-9f7a-651ee0500101" name="Destination Zip File Name" type="Data"><subsheetid>cba14fb2-1425-4834-b382-ac9cea30c23e</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the archive to be created, specified as an absolute path</narrative><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6440cb36-2e97-4c3c-b42d-8f77984a6253" name="Add File to Zip" type="SubSheetInfo"><subsheetid>ae2b448f-a968-4bda-a664-20a9149cb9dc</subsheetid><loginhibit onsuccess="true" /><narrative>Archives a file by compressing it and adding it to the zip archive. If an entry with the specified name already exists in the archive, a second entry is created with an identical name.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9654be57-b0eb-490b-bd0f-2cef3d08368c" name="End" type="End"><subsheetid>ae2b448f-a968-4bda-a664-20a9149cb9dc</subsheetid><loginhibit onsuccess="true" /><display x="15" y="30" /></stage><stage stageid="25f35431-4b28-4c14-b45e-48b3844f6baa" name="CreateEntryFromFile" type="Code"><subsheetid>ae2b448f-a968-4bda-a664-20a9149cb9dc</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="sourcePath" expr="[Source File Name]" /><input type="text" name="destinationPath" expr="[Destination Zip File Name]" /><input type="text" name="destinationName" expr="[Destination File Name]" /></inputs><onsuccess>9654be57-b0eb-490b-bd0f-2cef3d08368c</onsuccess><code><![CDATA[Dim f As New FileInfo(sourcePath)
Using archive As ZipArchive = ZipFile.Open(destinationPath, ZipArchiveMode.Update)
If destinationName <> "" Then
	destinationName = destinationName.Replace("\", "/")
	archive.CreateEntryFromFile(sourcePath, destinationName, CompressionLevel.Fastest)
Else
	archive.CreateEntryFromFile(sourcePath, f.Name, CompressionLevel.Fastest)
End If
End Using]]></code></stage><stage stageid="1e5d5703-3998-4708-beab-7e74b905098a" name="Source File Name" type="Data"><subsheetid>ae2b448f-a968-4bda-a664-20a9149cb9dc</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the file to be archived, specify as an absolute path</narrative><display x="-195" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c8d36df-3d94-49c9-b7b2-c8a5b4931cf5" name="Destination Zip File Name" type="Data"><subsheetid>ae2b448f-a968-4bda-a664-20a9149cb9dc</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the zip archive to add the file to, specified as an absolute path</narrative><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="24dbb76c-b80e-4bc1-a91b-1edff6d414e8" name="Start" type="Start"><subsheetid>ae2b448f-a968-4bda-a664-20a9149cb9dc</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Source File Name" narrative="Mandatory: The path and name of the file to be archived, specified as an absolute path" stage="Source File Name" /><input type="text" name="Destination Zip File Name" narrative="Mandatory: The path and name of the zip archive to add the file to, specified as an absolute path" stage="Destination Zip File Name" /><input type="text" name="Destination File Name" narrative="Optional: The path and name of the added file as it will be stored in the zip file. Path can be specified a relative or absolute path. If not specified, the file will be stored in the root folder of the zip archive file with its original name" stage="Destination File Name" /></inputs><onsuccess>25f35431-4b28-4c14-b45e-48b3844f6baa</onsuccess></stage><stage stageid="69b3f3a6-22d9-4434-82c8-91267d1f8e5f" name="Include Base Folder" type="Data"><subsheetid>cba14fb2-1425-4834-b382-ac9cea30c23e</subsheetid><loginhibit onsuccess="true" /><narrative>-true- to include the directory name from [Source Folder Name] at the root of the archive; -false- to include only the contents of the directory.</narrative><display x="-195" y="90" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f6393684-039c-4cb4-9d15-bef3fccfabe0" name="Extract All from Zip" type="SubSheetInfo"><subsheetid>4b8d01fc-6c2f-4fd8-b898-ae83af14c4e6</subsheetid><loginhibit onsuccess="true" /><narrative>Extracts all the files in the specified zip archive to a directory on the file system</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f353f740-6721-4910-b393-5bf8c85f4890" name="End" type="End"><subsheetid>4b8d01fc-6c2f-4fd8-b898-ae83af14c4e6</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /></stage><stage stageid="a11db9ca-5780-4400-8e14-26d0e638e2a7" name="ExtractToDirectory" type="Code"><subsheetid>4b8d01fc-6c2f-4fd8-b898-ae83af14c4e6</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="sourcePath" expr="[Source Zip File Name]" /><input type="text" name="destinationPath" expr="[Destination Folder Name]" /></inputs><onsuccess>f353f740-6721-4910-b393-5bf8c85f4890</onsuccess><code><![CDATA[ZipFile.ExtractToDirectory(sourcePath, destinationPath)]]></code></stage><stage stageid="8b916105-3bcc-47d7-ac6c-3c5f499b5a29" name="Source Zip File Name" type="Data"><subsheetid>4b8d01fc-6c2f-4fd8-b898-ae83af14c4e6</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the zip archive to open, specified as an absolute path</narrative><display x="-195" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32f81ae0-9a03-45df-8dfe-a72db5269d07" name="Destination Folder Name" type="Data"><subsheetid>4b8d01fc-6c2f-4fd8-b898-ae83af14c4e6</subsheetid><loginhibit onsuccess="true" /><narrative>The path to the directory in which to place the extracted files, specified as a absolute path</narrative><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8e8ed20c-ca5d-4447-96cc-8a40bad4d590" name="Start" type="Start"><subsheetid>4b8d01fc-6c2f-4fd8-b898-ae83af14c4e6</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Source Zip File Name" narrative="Mandatory: The path and name of the zip archive to open, specified as an absolute path" stage="Source Zip File Name" /><input type="text" name="Destination Folder Name" narrative="Mandatory: The path to the directory in which to place the extracted files, specified as a absolute path" stage="Destination Folder Name" /></inputs><onsuccess>a11db9ca-5780-4400-8e14-26d0e638e2a7</onsuccess></stage><stage stageid="8a5997b0-2204-4cdc-a5b9-232ef9e8d580" name="Get Zip Contents" type="SubSheetInfo"><subsheetid>4ae23c8c-54a6-4a86-a148-2175c86923b8</subsheetid><loginhibit onsuccess="true" /><narrative>Reads the details of the entries of a zip file into a collection</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="14faa9d4-8ced-4d2b-b6ad-3fa355ce0f41" name="Start" type="Start"><subsheetid>4ae23c8c-54a6-4a86-a148-2175c86923b8</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Zip File Name" narrative="Mandatory: The path and name of the zip archive to open, specified as an absolute path" stage="Zip File Name" /></inputs><onsuccess>1107bae2-b326-4987-852a-63accf822f46</onsuccess></stage><stage stageid="166051b1-a675-4188-a195-b225947d8cbd" name="End" type="End"><subsheetid>4ae23c8c-54a6-4a86-a148-2175c86923b8</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /><outputs><output type="collection" name="Contents" narrative="The files in the zip archive" stage="Contents" /></outputs></stage><stage stageid="1107bae2-b326-4987-852a-63accf822f46" name="GetZipContents" type="Code"><subsheetid>4ae23c8c-54a6-4a86-a148-2175c86923b8</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="path" expr="[Zip File Name]" /></inputs><outputs><output type="collection" name="Contents" stage="Contents" /></outputs><onsuccess>166051b1-a675-4188-a195-b225947d8cbd</onsuccess><code><![CDATA[Dim dt As New DataTable
With dt.Columns
    .Add("Name", GetType(String))
    .Add("Path", GetType(String))
    .Add("Length", GetType(Long))
    .Add("CompressedLength", GetType(Long))
End With

Using archive As ZipArchive = ZipFile.OpenRead(path)
	For Each entry As ZipArchiveEntry In archive.Entries
		Dim dr As Data.DataRow = dt.NewRow
		dr(0) = entry.Name
		dr(1) = entry.FullName
		dr(2) = entry.Length
		dr(3) = entry.CompressedLength
		dt.Rows.Add(dr)
	Next
End Using

Contents = dt]]></code></stage><stage stageid="f577fc93-b8cc-4ed8-8de6-ceac00a1a0bf" name="Contents" type="Collection"><subsheetid>4ae23c8c-54a6-4a86-a148-2175c86923b8</subsheetid><loginhibit onsuccess="true" /><narrative>The list of files contained in the zip archive</narrative><display x="-195" y="30" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Name" type="text" description="The file name" /><field name="Path" type="text" description="The file path within the zip archive" /><field name="Length" type="number" description="The original file size" /><field name="CompressedLength" type="number" description="The compressed file size" /></collectioninfo></stage><stage stageid="0fcbe61b-7770-4f5f-b1bc-67bee177e610" name="Extract File from Zip" type="SubSheetInfo"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><narrative>Extracts an entry in the zip archive to a file, and optionally overwrites an existing file that has the same name</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5ce56c02-f357-4f04-93b1-e8807172f3a6" name="End" type="End"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /></stage><stage stageid="63d43b33-8fc2-426f-a51a-79b181c5d39e" name="Start" type="Start"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Source File Name" narrative="Mandatory: The path and name of the zip archive to open, specified as an absolute path" stage="Source File Name" /><input type="text" name="Source Zip File Name" narrative="Mandatory: The file name (and its path within the zip archive if necessary) to extract" stage="Source Zip File Name" /><input type="text" name="Destination File Path" narrative="Mandatory: The path and name of the file to create from the contents of the entry (absolute path)" stage="Destination File Name" /><input type="flag" name="Overwrite Destination File" narrative="Optional: True to overwrite an existing file that has the same name as the destination file; otherwise, False. Default True" stage="Overwrite Destination File" /></inputs><onsuccess>355ff556-1f34-4d39-b0c9-e20c6d46a1cb</onsuccess></stage><stage stageid="db77b30a-f8d6-4bc4-9f16-b0d979a56d0d" name="Destination File Name" type="Data"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the file to create from the contents of the entry (absolute path)</narrative><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e146c445-49ef-430f-b415-89c1e4044de4" name="Source File Name" type="Data"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><narrative>The file name (and its path within the zip archive if necessary) to extract</narrative><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="493af76c-d917-47cf-9ca1-95f580d8fd82" name="Source Zip File Name" type="Data"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the zip archive to open, specified as an absolute path</narrative><display x="-195" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="355ff556-1f34-4d39-b0c9-e20c6d46a1cb" name="GetFile" type="Code"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="zipPath" expr="[Source Zip File Name]" /><input type="text" name="sourcePath" expr="[Source File Name]" /><input type="text" name="destinationPath" expr="[Destination File Name]" /><input type="flag" name="overwrite" expr="[Overwrite Destination File]" /></inputs><onsuccess>5ce56c02-f357-4f04-93b1-e8807172f3a6</onsuccess><code><![CDATA[sourcePath = sourcePath.Replace("\", "/")

' Normalizes the path.
destinationPath = Path.GetFullPath(destinationPath)

' Ensures that the last character on the extraction path
' is the directory separator char. 
' Without this, a malicious zip file could try to traverse outside of the expected
' extraction path.
If Not destinationPath.EndsWith(Path.DirectorySeparatorChar.ToString(), StringComparison.Ordinal) Then
	destinationPath += Path.DirectorySeparatorChar
End If

Using archive As ZipArchive = ZipFile.OpenRead(zipPath)
	For Each entry As ZipArchiveEntry In archive.Entries
		If String.Equals(entry.FullName, sourcePath, StringComparison.OrdinalIgnoreCase) Then
			' Gets the full path to ensure that relative segments are removed.
			destinationPath = Path.GetFullPath(Path.Combine(destinationPath, entry.Name))
			entry.ExtractToFile(destinationPath, overwrite)
			Exit Sub
		End If
	Next
End Using

' If we get here, none of the files in the archive matched the users input.
Throw New Exception("File not found in archive: " + sourcePath)
]]></code></stage><stage stageid="7dedd1d6-152c-4e65-8f1b-9436749da135" name="Overwrite Destination File" type="Data"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><narrative>True to overwrite an existing file that has the same name as the destination file; otherwise, False</narrative><display x="-195" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="ea5ce3ca-0ce0-49e0-a8bf-421fa853d4c5" name="Extract File from Zip" type="SubSheetInfo"><subsheetid>384cbfc3-88e8-41ab-8878-b2bac7146be0</subsheetid><loginhibit onsuccess="true" /><narrative>Deletes the entry from the zip archive</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b2567083-5ffa-4ee6-81f3-743d2ff807d5" name="End" type="End"><subsheetid>384cbfc3-88e8-41ab-8878-b2bac7146be0</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /></stage><stage stageid="643b1483-c5c2-433c-936e-77ac1af120d9" name="Start" type="Start"><subsheetid>384cbfc3-88e8-41ab-8878-b2bac7146be0</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Zip File Name" narrative="Mandatory: The path and name of the zip archive to open, specified as an absolute path" stage="Zip File Name" /><input type="text" name="File Name" narrative="Mandatory: The file name (and its path within the zip archive if necessary) to delete" stage="File Name" /></inputs><onsuccess>a88b5869-dd86-4665-b65d-a978a09487d2</onsuccess></stage><stage stageid="a88b5869-dd86-4665-b65d-a978a09487d2" name="DeleteFile" type="Code"><subsheetid>384cbfc3-88e8-41ab-8878-b2bac7146be0</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="zipPath" expr="[Zip File Name]" /><input type="text" name="sourcePath" expr="[File Name]" /></inputs><onsuccess>b2567083-5ffa-4ee6-81f3-743d2ff807d5</onsuccess><code><![CDATA[sourcePath = sourcePath.Replace("\", "/")

Using archive As ZipArchive = ZipFile.Open(zipPath, ZipArchiveMode.Update)
	For Each entry As ZipArchiveEntry In archive.Entries
		If String.Equals(entry.FullName, sourcePath, StringComparison.OrdinalIgnoreCase) Then
			entry.Delete
			Exit Sub
		End If
	Next
End Using
Throw New Exception("File not found in archive: " + sourcePath)]]></code></stage><stage stageid="6f9ade2f-5c0d-4d45-a78b-fdaa04fe961d" name="File Name" type="Data"><subsheetid>384cbfc3-88e8-41ab-8878-b2bac7146be0</subsheetid><loginhibit onsuccess="true" /><narrative>The file name (and its path within the zip archive if necessary) to delete</narrative><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20021330-607d-4145-b42f-fa0d5931e080" name="Zip File Name" type="Data"><subsheetid>384cbfc3-88e8-41ab-8878-b2bac7146be0</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the zip archive to open, specified as an absolute path</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4c62b494-7f4e-4444-993d-bb5717e49cd2" name="Zip File Name" type="Data"><subsheetid>4ae23c8c-54a6-4a86-a148-2175c86923b8</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the zip archive to open, specified as an absolute path</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e93650ad-a9f2-4a38-b5fc-0d3dc1daf818" name="Find File in Zip" type="SubSheetInfo"><subsheetid>09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e</subsheetid><loginhibit onsuccess="true" /><narrative>Check if a file exists in the Zip Archive</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4de67c14-ac7c-44c0-86b9-376b76499209" name="End" type="End"><subsheetid>09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /><outputs><output type="flag" name="Found" narrative="True if the file exists in the Zip Archive file, otherwise False" stage="Found" /></outputs></stage><stage stageid="0418a4c1-99c5-45b7-bb82-cfce74f10de8" name="FindFile" type="Code"><subsheetid>09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="path" expr="[Zip File Name]" /><input type="text" name="file" expr="[File Name]" /></inputs><outputs><output type="flag" name="Found" stage="Found" /></outputs><onsuccess>4de67c14-ac7c-44c0-86b9-376b76499209</onsuccess><code><![CDATA[file = file.Replace("\", "/")

Dim dt As New DataTable
dt.Columns.Add("Path", Type.GetType("System.String"))
found = false

Using archive As ZipArchive = ZipFile.OpenRead(path)
	For Each entry As ZipArchiveEntry In archive.Entries
		If entry.FullName = file Then
			found = true
			Exit For
		End If
	Next
End Using]]></code></stage><stage stageid="8aa98f62-8978-41ea-9630-8db70ace9246" name="Zip File Name" type="Data"><subsheetid>09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the zip archive to open, specified as an absolute path</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1141bb0a-b624-4b18-aff8-c9811f614f30" name="File Name" type="Data"><subsheetid>09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e</subsheetid><loginhibit onsuccess="true" /><narrative>The file name (and its path within the zip archive if necessary) to delete</narrative><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0cd0782c-3296-4f6e-b34c-fc338a3936c3" name="Found" type="Data"><subsheetid>09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e</subsheetid><loginhibit onsuccess="true" /><narrative>True if the file exists in the Zip Archive file, otherwise False</narrative><display x="-195" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5445aaf9-872d-4e36-917e-236f24830f33" name="Start" type="Start"><subsheetid>09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Zip File Name" narrative="Mandatory: The path and name of the zip archive to open, specified as an absolute path" stage="Zip File Name" /><input type="text" name="File Name" narrative="Mandatory: The file name (and its path within the zip archive if necessary) to delete" stage="File Name" /></inputs><onsuccess>0418a4c1-99c5-45b7-bb82-cfce74f10de8</onsuccess></stage><stage stageid="3e0fb337-31e8-4c10-be19-ace7fc440e8a" name="Destination File Name" type="Data"><subsheetid>ae2b448f-a968-4bda-a664-20a9149cb9dc</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the added file as it will be stored in the zip file. Path can be specified a relative or absolute path. If not specified, the file will be stored in the root folder of the zip archive file with its original name.</narrative><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d33a39d-a331-4652-b4d2-a0bcf6201bfa" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="240" y="-15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="05e81a9c-a0e9-4b42-bb8d-432c189211d0" name="Note3" type="Note"><loginhibit /><narrative>Version: 10.0</narrative><display x="15" y="-180" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage></process></object>
        <object id="9cd0a967-eb01-4e38-bc91-31ace18db7eb" name="Webservices - OAuth2.0" xmlns="http://www.blueprism.co.uk/product/process"><process name="Webservices - OAuth2.0" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="Business Object for authorization using OAuth2.0" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>0309f0b3-8c71-468a-b6e2-ce934f4511bf</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="daf2aeae-ccbf-47e7-be80-d7f9f7cda452" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67318fea-06de-4ab4-b24e-c296aa10321f" type="Normal" published="True"><name>Request</name><view><camerax>260</camerax><cameray>69</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7652b71d-b844-4e53-b2af-59d9ec31a0ac" type="Normal" published="False"><name>Request Token</name><view><camerax>0</camerax><cameray>-7</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1cfc2c33-3381-4972-abb6-b529f18cfa44" type="Normal" published="False"><name>Request Resource</name><view><camerax>320</camerax><cameray>193</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="28c240f1-b990-40b4-95fc-035aea399ac1" type="Normal" published="False"><name>Refresh Token</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ae9fd1e-48b3-41c1-9b9d-a822c0f60126" type="Normal" published="True"><name>Load Certificate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="45775d87-040d-40a6-b73b-5971c041501c" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>8a5639e4-7770-49e5-961e-6e539e072fe3</onsuccess></stage><stage stageid="8a5639e4-7770-49e5-961e-6e539e072fe3" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="c3627a11-b60c-467d-b514-2a81e17d44d5" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>Microsoft.VisualBasic</import><import>System.Text</import><import>System.Security.Cryptography</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[Private Shared ReadOnly Jan1st1970 As New DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)

Public Shared Function currentTimeMillis() As Long
	Return CLng((DateTime.UtcNow - Jan1st1970).TotalMilliseconds)
End Function]]></code></stage><stage stageid="16647fe3-8725-4eb4-ac44-7f2a3d396da2" name="Clean Up" type="SubSheetInfo"><subsheetid>daf2aeae-ccbf-47e7-be80-d7f9f7cda452</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d6b6c2e2-5fe2-4ce9-9c12-3ca7d86e4172" name="Start" type="Start"><subsheetid>daf2aeae-ccbf-47e7-be80-d7f9f7cda452</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>bf7a5e90-a6ba-48df-bc5f-f87e6dd329e9</onsuccess></stage><stage stageid="bf7a5e90-a6ba-48df-bc5f-f87e6dd329e9" name="End" type="End"><subsheetid>daf2aeae-ccbf-47e7-be80-d7f9f7cda452</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="1358dda6-d7a9-42b3-a857-9cee53b075a1" name="Request" type="SubSheetInfo"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><narrative>Request a token and then use it immediately to request the resource</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="49eac0fa-75de-4797-ae9d-1793392b2cc5" name="Start" type="Start"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Token URL" narrative="The url for the token request" stage="Token URL" /><input type="text" name="Resource URL" narrative="The url for the resource" stage="Resource URL" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" stage="Username" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" stage="Password" /><input type="collection" name="Token" narrative="Token data in a collection" stage="Token" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" stage="Certificate ID" /><input type="text" name="Method" narrative="HTTP Method" stage="Method" /><input type="text" name="Content Type" narrative="HTTP Content Type" stage="Content Type" /><input type="text" name="Body" narrative="HTTP Body" stage="Body" /></inputs><onsuccess>f8f33cad-f70a-4f0f-a3af-e78ddb123389</onsuccess></stage><stage stageid="f29a7d05-311f-4d69-bb79-a295ed678ee7" name="new" type="Note"><subsheetid>daf2aeae-ccbf-47e7-be80-d7f9f7cda452</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="8f9725ca-938f-4127-a1b7-abacdad87e9d" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="3fb70227-b46b-4284-9d51-1cf18d58d84a" name="Token URL" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><display x="105" y="-105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9c05a019-4565-449b-a509-0526e280254e" name="Resource URL" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><display x="195" y="-105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="019eb6f8-4781-4098-aee7-11fa57c63a63" name="Username" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><display x="270" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="02a7084c-766b-462e-8696-feca3622186b" name="Password" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><display x="330" y="-105" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="d4e3bc71-0a4e-4e05-a931-979d5e4b87ed" name="Request Token" type="SubSheetInfo"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2cd4ceab-8e1d-41d0-ba80-1c33daf765f9" name="End" type="End"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="collection" name="Token" narrative="The resulting token as a collection" stage="Token" /></outputs></stage><stage stageid="14735bd9-9b52-4305-83b9-050508831c0a" name="Request Token" type="Action"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><display x="15" y="-45" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Request URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="&quot;grant_type=client_credentials&quot;" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/x-www-form-urlencoded&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;POST&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="&quot;application/json&quot;" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="[Username]" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="[Password]" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="[Certificate ID]" /><input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the authorization headers" expr="True" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /></outputs><onsuccess>ca7a6451-d288-4763-9b1c-24b9399ad05e</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="1683c17c-6c04-4bb6-b020-4715f06f7c08" name="Result" type="Data"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><display x="90" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ca7a6451-d288-4763-9b1c-24b9399ad05e" name="Parse JSON" type="Action"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><display x="15" y="0" /><inputs><input type="text" name="json" expr="[Result]" /></inputs><outputs><output type="collection" name="Result" stage="Token" /></outputs><onsuccess>2cd4ceab-8e1d-41d0-ba80-1c33daf765f9</onsuccess><resource object="Utility - JSON" action="JSON to Collection" /></stage><stage stageid="d0931d2f-5f90-42c5-b30a-420eb0e53315" name="Token" type="Collection"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><display x="90" y="0" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6f7bca05-6f56-44bc-b1bc-a6650093c669" name="Request URL" type="Data"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a017716c-2c9e-4970-9e12-0001d03a8612" name="Start" type="Start"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Request URL" narrative="The url for the token request" stage="Request URL" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" stage="Username" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" stage="Password" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" stage="Certificate ID" /></inputs><onsuccess>14735bd9-9b52-4305-83b9-050508831c0a</onsuccess></stage><stage stageid="7c8fcfbe-eba5-406d-8704-0c95499a43a3" name="Username" type="Data"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4d1983e3-95b7-44d5-82fb-affade540f80" name="Password" type="Data"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><display x="210" y="-105" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="a9ebba89-880f-4f91-9b86-6b60d3b593f1" name="Request Token" type="SubSheet"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><loginhibit /><display x="120" y="30" /><inputs><input type="text" name="Request URL" narrative="The url for the token request" expr="[Token URL]" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" expr="[Username]" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" expr="[Password]" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" expr="[Certificate ID]" /></inputs><outputs><output type="collection" name="Token" narrative="The resulting token as a collection" stage="Token" /></outputs><onsuccess>4fb0385d-aa21-497c-b051-d7180524f54b</onsuccess><processid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</processid></stage><stage stageid="ded9724a-ffe3-4375-88b2-0149c26055cb" name="Request Resource" type="SubSheetInfo"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2f9ca3d9-381d-435c-81a9-50c40b3d7f80" name="End" type="End"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><display x="150" y="240" /><outputs><output type="text" name="Result" stage="Result" /></outputs></stage><stage stageid="ffaaa3bd-1c38-401f-9078-52a6c4cd59b2" name="Get Access Token" type="Calculation"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="150" y="15" /><onsuccess>894804c9-f098-42f0-a061-70e59c75bc6d</onsuccess><calculation expression="[ResultData.access_token]" stage="Access Token" /></stage><stage stageid="0dfeedf9-28ff-4299-ab83-e162c09bb214" name="Access Token" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="225" y="15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1120a7e2-3a7b-47db-bb24-00dc8f53e672" name="Request Resource" type="Action"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="150" y="195" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Resource URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="[Body]" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="[Content Type]" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="[Method]" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="[Headers]" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="[Certificate ID]" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /></outputs><onsuccess>2f9ca3d9-381d-435c-81a9-50c40b3d7f80</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="894804c9-f098-42f0-a061-70e59c75bc6d" name="Add Row" type="Action"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="150" y="105" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Headers&quot;" /></inputs><onsuccess>488dfdc4-eed9-4fe0-ac8b-ee3428d07149</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="c6b185a9-11b7-4975-a383-baf0304e4fca" name="Headers" type="Collection"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="225" y="105" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Authorization" type="text" /></collectioninfo></stage><stage stageid="488dfdc4-eed9-4fe0-ac8b-ee3428d07149" name="Set Auth" type="Calculation"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="150" y="150" /><onsuccess>1120a7e2-3a7b-47db-bb24-00dc8f53e672</onsuccess><calculation expression="&quot;Bearer &quot; &amp; [Access Token]" stage="Headers.Authorization" /></stage><stage stageid="33d3eda7-7c80-4dd9-96c3-f810a377efea" name="Token Type" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="225" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7572632-0116-49be-862c-ebda9ae96b3b" name="Token Type" type="ChoiceStart"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><display x="15" y="-45" /><groupid>4e1cfb66-0bef-4124-a7b9-c8805be5ee9c</groupid><choices><choice expression="Lower([Token Type]) = &quot;bearer&quot;"><name>Bearer</name><distance>60</distance><ontrue>ffaaa3bd-1c38-401f-9078-52a6c4cd59b2</ontrue></choice><choice expression="Lower([Token Type]) = &quot;mac&quot;"><name>MAC</name><distance>105</distance><ontrue>c838ffd2-6697-474c-bcf5-245a8bd5f149</ontrue></choice></choices></stage><stage stageid="7682a7be-bcb9-4249-a237-7d6ca90f1eba" name="Otherwise1" type="ChoiceEnd"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><display x="15" y="135" /><onsuccess>55e01eb9-1362-4f39-928b-676accdf1759</onsuccess><groupid>4e1cfb66-0bef-4124-a7b9-c8805be5ee9c</groupid></stage><stage stageid="c838ffd2-6697-474c-bcf5-245a8bd5f149" name="Get MAC Header" type="Code"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><display x="-105" y="60" /><inputs><input type="text" name="macKey" expr="[MAC Key]" /><input type="text" name="macID" expr="[MAC ID]" /><input type="text" name="domainName" expr="[Domain]" /></inputs><outputs><output type="text" name="accessToken" stage="Access Token" /></outputs><onsuccess>d87bdfbf-df9a-4c03-a3d5-b919507debee</onsuccess><code><![CDATA[Dim key As Byte() = Encoding.UTF8.GetBytes(macKey)
Dim mac As New HMACSHA1(key)

Dim epoch As Long = currentTimeMillis()
Dim timestamp As Long = epoch \ 1000

Dim ts As String = timestamp.ToString()

'notifications.e2.app.aexp.com is hardcoded here but will change depending on the environment.
'Each of the environments (Dev, Test and Prod) will have their own host name
Dim baseString As String = _
	  ts & vbLf _
    & ts & vbLf _
	& "POST" & vbLf _
	& "%2Faaa%2F" & vbLf _
	& domainName & vbLf _
	& "443" & vbLf _
	& vbLf

Dim baseBytes As Byte() = Encoding.UTF8.GetBytes(baseString)
Dim rawHmac As Byte() = mac.ComputeHash(baseBytes)
Dim macValue As String = Convert.ToBase64String(rawHmac)

Dim sb As New StringBuilder()
sb.Append("id=""")
sb.Append(macID)
sb.Append(""",ts=""")
sb.Append(ts)
sb.Append(""",nonce=""")
sb.Append(ts)
sb.Append(""",mac=""")
sb.Append(macValue)
sb.Append("""")

accessToken = sb.ToString()
]]></code></stage><stage stageid="14c6d072-a68c-4004-b6af-a2b8bea0d8d8" name="End" type="End"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><display x="-105" y="240" /><outputs><output type="text" name="Result" stage="Result" /></outputs></stage><stage stageid="7890b5bd-d874-4614-867b-fbe8d908ed1a" name="Request Resource" type="Action"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="-105" y="195" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Resource URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/json&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;GET&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="[Headers]" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="[Certificate ID]" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /></outputs><onsuccess>14c6d072-a68c-4004-b6af-a2b8bea0d8d8</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="d87bdfbf-df9a-4c03-a3d5-b919507debee" name="Add Row" type="Action"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="-105" y="105" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Headers&quot;" /></inputs><onsuccess>416074df-5112-4888-ad6c-991fb3b3474c</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="416074df-5112-4888-ad6c-991fb3b3474c" name="Set Auth" type="Calculation"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="-105" y="150" /><onsuccess>7890b5bd-d874-4614-867b-fbe8d908ed1a</onsuccess><calculation expression="&quot;MAC &quot; &amp; [Access Token]" stage="Headers.Authorization" /></stage><stage stageid="55e01eb9-1362-4f39-928b-676accdf1759" name="Exception1" type="Exception"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="15" y="195" /><exception type="" detail="&quot;Unknown Token Type&quot;" /></stage><stage stageid="121d6fb5-4e5a-47bb-8058-b9f1b72d0f86" name="Get Token Type" type="Calculation"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="150" y="-45" /><onsuccess>a7572632-0116-49be-862c-ebda9ae96b3b</onsuccess><calculation expression="[ResultData.token_type]" stage="Token Type" /></stage><stage stageid="dbb0e412-52d3-4384-aed3-264bf402b427" name="Resource URL" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="225" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="af874112-9010-423a-ae9e-17007d17f62c" name="Start" type="Start"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><display x="150" y="-105" /><inputs><input type="text" name="Resource URL" narrative="The url for the resource" stage="Resource URL" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" stage="Username" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" stage="Password" /><input type="collection" name="Token" narrative="Token data in a collection" stage="ResultData" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" stage="Certificate ID" /><input type="text" name="Method" narrative="HTTP Method" stage="Method" /><input type="text" name="Content Type" narrative="HTTP Content Type" stage="Content Type" /><input type="text" name="Body" narrative="HTTP Body" stage="Body" /></inputs><onsuccess>121d6fb5-4e5a-47bb-8058-b9f1b72d0f86</onsuccess></stage><stage stageid="ad15b1d1-b73c-4186-a115-2b62679dfce3" name="Username" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="285" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7535c438-0949-449e-83bd-c1df3bd1ae59" name="Password" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="345" y="-105" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="09684205-735c-4e93-9335-22224e1567a5" name="ResultData" type="Collection"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="405" y="-105" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4fb0385d-aa21-497c-b051-d7180524f54b" name="Request Resource" type="SubSheet"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><loginhibit /><display x="120" y="135" /><inputs><input type="text" name="Resource URL" narrative="The url for the resource" expr="[Resource URL]" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" expr="[Username]" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" expr="[Password]" /><input type="collection" name="Token" narrative="Token data in a collection" expr="[Token]" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" expr="[Certificate ID]" /><input type="text" name="Method" narrative="HTTP Method" expr="[Method]" /><input type="text" name="Content Type" narrative="HTTP Content Type" expr="[Content Type]" /><input type="text" name="Body" narrative="HTTP Body" expr="[Body]" /></inputs><outputs><output type="text" name="Result" stage="Result" /></outputs><onsuccess>8f6bf73c-8f61-4f3b-9be7-0c3e9569315b</onsuccess><processid>1cfc2c33-3381-4972-abb6-b529f18cfa44</processid></stage><stage stageid="8f6bf73c-8f61-4f3b-9be7-0c3e9569315b" name="End1" type="End"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><loginhibit /><display x="120" y="270" /><outputs><output type="collection" name="Token" narrative="Token data in a collection" stage="Token" /><output type="text" name="Result" narrative="The result of the request" stage="Result" /></outputs></stage><stage stageid="66542415-bebb-40cc-bd9e-5cdb486a1d14" name="Result" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="225" y="195" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="95a72b66-67a3-40c4-aa7a-5c95dcd11b29" name="Result" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><display x="195" y="270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fed22b00-60a7-461a-84bf-1cc1e2c20ed0" name="Refresh Token" type="SubSheetInfo"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5b768c95-9372-4316-ac26-e4f86459ad89" name="End" type="End"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><loginhibit /><display x="15" y="45" /></stage><stage stageid="f5677136-b1ec-4657-94b7-36376cc9f13d" name="Start" type="Start"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Request URL" narrative="The url for the token request" stage="Request URL" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" stage="Username" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" stage="Password" /><input type="collection" name="Token" narrative="Token data in a collection" stage="Token" /></inputs><onsuccess>c176a1c4-7f84-4fc9-a276-727b91852d79</onsuccess></stage><stage stageid="c176a1c4-7f84-4fc9-a276-727b91852d79" name="Refresh Token" type="Action"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><display x="15" y="-30" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Request URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="&quot;grant_type=refresh_token&amp;refresh_token=&quot; &amp; [Token.refresh_token]" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/x-www-form-urlencoded&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;POST&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="&quot;application/json&quot;" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="[Username]" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="[Password]" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /></outputs><onsuccess>5b768c95-9372-4316-ac26-e4f86459ad89</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="e20dcd70-ebf1-416a-a3c2-1468f525809a" name="Request URL" type="Data"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="61b9983f-e15b-4496-bcec-49f4faf1070b" name="Username" type="Data"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6eedacbc-6f3c-409a-bbc6-de3dcce2b593" name="Password" type="Data"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><display x="210" y="-105" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="2e2c47b8-ffab-4216-9657-51a9b74960b2" name="Token" type="Collection"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><display x="105" y="-30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="721bd85c-0f81-4a98-9c95-2a4fd7799ff5" name="Result" type="Data"><subsheetid>28c240f1-b990-40b4-95fc-035aea399ac1</subsheetid><display x="-60" y="-30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09e72fd2-38b2-48e7-944b-6c507d4d00bf" name="MAC Key" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><display x="-195" y="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fec9423c-6e89-4396-bfd3-111d790478fa" name="MAC ID" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><display x="-195" y="105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="129d13ec-0ee1-4b67-82a5-fbff307d203c" name="Domain" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><display x="-195" y="150" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc9eee36-8f24-42d9-8138-a82a978bdb44" name="NON WORKING - Under development" type="Block"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><loginhibit /><display x="-255" y="0" w="210" h="270" /><font family="Tahoma" size="10" style="Regular" color="FF0000" /></stage><stage stageid="c0de3cf8-6c50-42b9-aacf-c2327acf9356" name="Token" type="Collection"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><display x="390" y="-105" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f8f33cad-f70a-4f0f-a3af-e78ddb123389" name="Token Row Count" type="Action"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Token&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Count" /></outputs><onsuccess>f5ab79a6-f113-44f5-83aa-0fa96a1ef7d7</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="77fed05c-6b21-488a-bfcc-d76320b583c1" name="Count" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><display x="-60" y="-30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f5ab79a6-f113-44f5-83aa-0fa96a1ef7d7" name="Token Empty" type="Decision"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><loginhibit /><display x="15" y="30" /><decision expression="[Count]=0" /><ontrue>a9ebba89-880f-4f91-9b86-6b60d3b593f1</ontrue><onfalse>a19404db-3052-4350-8fd8-9b2ca20b304d</onfalse></stage><stage stageid="a19404db-3052-4350-8fd8-9b2ca20b304d" name="anchor1" type="Anchor"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><loginhibit /><display x="15" y="135" w="10" h="10" /><onsuccess>4fb0385d-aa21-497c-b051-d7180524f54b</onsuccess></stage><stage stageid="490b22f5-ccb6-4798-b1da-86b9e0216db7" name="Load Certificate" type="SubSheetInfo"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="da16d9e4-7e4a-4967-994c-b342aa89736e" name="End" type="End"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Certificate ID" stage="Certificate ID" /></outputs></stage><stage stageid="54d1754a-7e02-4b40-855d-3fe5d945202b" name="Load" type="Action"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="text" name="Filename" narrative="OPTIONAL: The full path to a file containing the certificate" expr="[Filename]" /><input type="text" name="Subject" narrative="OPTIONAL: The subject of the certificate if loading from the store" expr="[Subject]" /><input type="password" name="Password" narrative="OPTIONAL: The password to load the certificate if needed" expr="[Password]" /></inputs><outputs><output type="text" name="Certificate ID" narrative="The ID of the certificate" stage="Certificate ID" /></outputs><onsuccess>da16d9e4-7e4a-4967-994c-b342aa89736e</onsuccess><resource object="Utility - HTTP" action="Load Certificate" /></stage><stage stageid="d5f5cd2d-3aa4-4310-b403-6efd0ce446c0" name="Certificate ID" type="Data"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><display x="90" y="-30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1019723-a7e7-431c-a168-1503598e04e2" name="Start" type="Start"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filename" narrative="OPTIONAL: The full path to a file containing the certificate" stage="Filename" /><input type="text" name="Subject" narrative="OPTIONAL: The subject of the certificate if loading from the store" stage="Subject" /><input type="password" name="Password" narrative="OPTIONAL: The password to load the certificate if needed" stage="Password" /></inputs><onsuccess>54d1754a-7e02-4b40-855d-3fe5d945202b</onsuccess></stage><stage stageid="c31cc48e-ec21-4038-91b9-1682bae939af" name="Password" type="Data"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><display x="210" y="-105" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="f6df3764-dcc7-4043-8421-f34731b2df9c" name="Subject" type="Data"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20146d7e-e545-4e86-bc22-69ce3c23fff5" name="Filename" type="Data"><subsheetid>7ae9fd1e-48b3-41c1-9b9d-a822c0f60126</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18cff729-a04a-4d34-91c9-80e1428679ad" name="Certificate ID" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><display x="450" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f1c0ddf2-dd2f-440a-973e-a5a235079020" name="Certificate ID" type="Data"><subsheetid>7652b71d-b844-4e53-b2af-59d9ec31a0ac</subsheetid><display x="-60" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="968061dc-e7ea-4d0e-8476-6a41cbbe9970" name="Certificate ID" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="525" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="48562cbe-1f7f-4334-b7c2-f4c7409f2ac3" name="Method" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="465" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27a2c2f2-d405-4f86-ad60-bbc346beb763" name="Method" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><display x="510" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0a010495-6036-41e9-8142-3f4050ceeba8" name="Content Type" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="585" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a4e8f78-0708-40cc-afae-5adc724e9ff2" name="Body" type="Data"><subsheetid>1cfc2c33-3381-4972-abb6-b529f18cfa44</subsheetid><display x="645" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1ef8820a-31cf-4ad0-82c0-61cf077afe8d" name="Content Type" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><display x="570" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="99cdc666-eea1-4822-8131-b19f910b1e97" name="Body" type="Data"><subsheetid>67318fea-06de-4ab4-b24e-c296aa10321f</subsheetid><display x="630" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d6b23c0-1724-4bfe-9d06-6a43d270ce2b" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="240" y="-15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="598b1c23-d75d-4add-80ce-a43a8a93d59d" name="Note1" type="Note"><loginhibit /><narrative>Version 10.0</narrative><display x="15" y="-195" w="90" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage></process></object>
        <object id="7ba7c602-a272-4b92-a90b-229ea298a38b" name="Webservices - REST" xmlns="http://www.blueprism.co.uk/product/process"><process name="Webservices - REST" version="6.9.0.26970" bpversion="7.4.1.15931" narrative="Connects to REST based webservice API's" byrefcollection="true" processrunningmessage="" disableversioning="false" type="object" runmode="Background"><appdef><element name="Application Root"><id>5ac23e07-b8e0-406f-b697-05f5f5bad2f1</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="206bb6ee-e6ba-4f39-b20c-e23f5f307a8b" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="45072ac5-d810-496f-9529-1bd859241e0b" type="Normal" published="True"><name>Get</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63" type="Normal" published="True"><name>Post</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4cc8c263-9485-48a7-9d85-cb0d25683a40" type="Normal" published="True"><name>Put</name><view><camerax>0</camerax><cameray>47</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5" type="Normal" published="True"><name>Delete</name><view><camerax>15</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1" type="Normal" published="True"><name>Setup OAuth</name><view><camerax>0</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="574ad120-65a9-4c4d-bd85-69a98d3f6c61" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>d92cee9e-a6ed-4df3-8411-6e16b8669483</onsuccess></stage><stage stageid="d92cee9e-a6ed-4df3-8411-6e16b8669483" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="97ead676-4140-4289-ad6b-5294ffc6ebbf" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import></imports><language>visualbasic</language><pythondllpath></pythondllpath><pythonenvpath></pythonenvpath><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="15ee3686-616c-411c-ab56-476c349e4113" name="Clean Up" type="SubSheetInfo"><subsheetid>206bb6ee-e6ba-4f39-b20c-e23f5f307a8b</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="02146cc7-4928-4bae-a02c-42908b228c73" name="Start" type="Start"><subsheetid>206bb6ee-e6ba-4f39-b20c-e23f5f307a8b</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>a4e10117-0b86-421d-b7bb-bd691e357b00</onsuccess></stage><stage stageid="a4e10117-0b86-421d-b7bb-bd691e357b00" name="End" type="End"><subsheetid>206bb6ee-e6ba-4f39-b20c-e23f5f307a8b</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="2f55b486-845c-473d-be09-c045226877f3" name="Get" type="SubSheetInfo"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><narrative>Action to get a resource via the REST API using the GET method.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2d82fb63-67ec-47d5-8b6f-3e49ab4880c0" name="Start" type="Start"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Address URL" narrative="The adress of the API method." stage="Address URL" /></inputs><onsuccess>4acd6a3b-907c-4493-86ac-2413a56b7f66</onsuccess></stage><stage stageid="8056afa2-f43c-48aa-817b-13af7a4d9337" name="End" type="End"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><loginhibit /><display x="15" y="135" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="143989eb-07ed-46cd-8fb2-b014ffb10808" name="new" type="Note"><subsheetid>206bb6ee-e6ba-4f39-b20c-e23f5f307a8b</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="6c018dde-6e5a-424b-bbd2-4488261debe3" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="2f58aa91-f860-4ca4-9acb-5f02e2b5a380" name="Post" type="SubSheetInfo"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><narrative>Action to create a resource via the REST API using the POST method.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e2611545-18f9-4b7c-9dfe-a5d008d9c98b" name="Put" type="SubSheetInfo"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><narrative>Action to update a resource via the REST API using the PUT method.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="161e5dad-bace-4b18-86ce-e2377c8b8c41" name="Delete" type="SubSheetInfo"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><narrative>Action to delete a resource via the REST API using the DELETE method.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="bf05bd02-fa23-405e-8eef-2ea744b7d8a4" name="Address URL" type="Data"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><display x="105" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="00768fb3-354f-4cff-94bc-d41768d53b61" name="Start" type="Start"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Address URL" narrative="The adress of the API method." stage="Address URL" /><input type="collection" name="Data" narrative="The data to be passed to the REST API." stage="Data" /></inputs><onsuccess>f061dcb0-b584-432b-b496-6d5e84add45c</onsuccess></stage><stage stageid="19956b49-eba1-4835-b630-7509ba4094a2" name="Address URL" type="Data"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><display x="105" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9dc76b2-6396-4047-b20d-204b41ae3ccc" name="Data" type="Collection"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><display x="165" y="-105" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f061dcb0-b584-432b-b496-6d5e84add45c" name="Convert data to JSON" type="Action"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="collection" name="Data" expr="[Data]" /></inputs><outputs><output type="text" name="JSON" stage="JSON" /></outputs><onsuccess>0ac97749-8120-423f-aa8c-239ad0626af4</onsuccess><resource object="Utility - JSON" action="Collection to JSON" /></stage><stage stageid="47cc4d30-bd02-4d73-b45e-a1b6bac28573" name="JSON" type="Data"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><display x="105" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="be274dda-1caf-4fc4-b1b2-6b8cbc98750a" name="Convert response" type="Action"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><loginhibit /><display x="15" y="75" w="90" h="30" /><inputs><input type="text" name="json" expr="[Response]" /></inputs><outputs><output type="collection" name="Result" stage="Result" /></outputs><onsuccess>8056afa2-f43c-48aa-817b-13af7a4d9337</onsuccess><resource object="Utility - JSON" action="JSON to Collection" /></stage><stage stageid="056e289e-9189-4e09-a287-b964b5b48190" name="Response" type="Data"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><display x="165" y="15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c2b90464-c4a1-4e85-aec0-6ad3c1b502b2" name="Result" type="Collection"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><display x="105" y="135" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="282d0cca-3226-437b-86a6-c979d7136b8c" name="End" type="End"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><loginhibit /><display x="15" y="165" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="0c69da42-34d9-404a-bb46-c54757f9db29" name="Convert response" type="Action"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><loginhibit /><display x="15" y="105" w="90" h="30" /><inputs><input type="text" name="json" expr="[Response]" /></inputs><outputs><output type="collection" name="Result" stage="Result" /></outputs><onsuccess>282d0cca-3226-437b-86a6-c979d7136b8c</onsuccess><resource object="Utility - JSON" action="JSON to Collection" /></stage><stage stageid="399911e4-9c13-4a67-8104-17b68d48fc02" name="Result" type="Collection"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><display x="105" y="165" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="76c5f166-5779-49c3-9690-4812a8702ddf" name="Response" type="Data"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><display x="165" y="45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5a8b5eac-b144-432a-afcc-b21152724dc1" name="Start" type="Start"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Address URL" narrative="The adress of the API method." stage="Address URL" /><input type="collection" name="Data" narrative="The data to be passed to the REST API." stage="Data" /></inputs><onsuccess>f791f896-d073-4ac4-9b21-30c6cfab2213</onsuccess></stage><stage stageid="44394618-c159-40b5-a235-016c41c2235d" name="Address URL" type="Data"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><display x="105" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28c4adf5-d8a5-492f-b2d9-3022551bf1e0" name="Data" type="Collection"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><display x="165" y="-105" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f791f896-d073-4ac4-9b21-30c6cfab2213" name="Convert data to JSON" type="Action"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><inputs><input type="collection" name="Data" expr="[Data]" /></inputs><outputs><output type="text" name="JSON" stage="JSON" /></outputs><onsuccess>c5f2c977-d290-4c31-a8fb-a43704d69c5a</onsuccess><resource object="Utility - JSON" action="Collection to JSON" /></stage><stage stageid="42441cfc-0902-4db6-9424-d196b2dde4ef" name="JSON" type="Data"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><display x="105" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6e208d83-fe82-46f4-b024-60df20f67f1f" name="End" type="End"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><display x="15" y="195" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="fee30318-0209-47aa-84ec-b3a5ee03c836" name="Convert response" type="Action"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><display x="15" y="135" w="90" h="30" /><inputs><input type="text" name="json" expr="[Response]" /></inputs><outputs><output type="collection" name="Result" stage="Result" /></outputs><onsuccess>6e208d83-fe82-46f4-b024-60df20f67f1f</onsuccess><resource object="Utility - JSON" action="JSON to Collection" /></stage><stage stageid="383d320f-6cfe-42a8-9a63-a52457c1da9c" name="Result" type="Collection"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><display x="105" y="195" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0655c33e-a13e-4640-ad4f-cb72effed093" name="Response" type="Data"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><display x="165" y="75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="92cf8979-c738-4567-8f12-78c2bf98bacb" name="Start" type="Start"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Address URL" narrative="The adress of the API method." stage="Address URL" /></inputs><onsuccess>4fb8a80f-165f-42f0-bcef-f66982f1732a</onsuccess></stage><stage stageid="49d72e7b-d71f-4ab6-91e3-4ce578f6cecd" name="End" type="End"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><loginhibit /><display x="15" y="75" /></stage><stage stageid="b4271315-10ce-41cd-928a-a6c9378b17ab" name="Address URL" type="Data"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><display x="105" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ceef9616-c8c6-4ff8-8323-13424e66ecc3" name="Response" type="Data"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><display x="165" y="15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="605fc049-f65b-46e5-9c3d-2a394303823f" name="Make OAuth Request" type="Action"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><loginhibit /><display x="75" y="60" w="90" h="30" /><inputs><input type="text" name="Token URL" narrative="The url for the token request" expr="[Token URL]" /><input type="text" name="Resource URL" narrative="The url for the resource" expr="[Address URL]" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" expr="[Username]" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" expr="[Password]" /><input type="collection" name="Token" narrative="Token data in a collection" expr="[Token]" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" expr="[Certificate ID]" /><input type="text" name="Method" narrative="HTTP Method" expr="&quot;POST&quot;" /><input type="text" name="Content Type" narrative="HTTP Content Type" expr="&quot;application/json&quot;" /><input type="text" name="Body" narrative="HTTP Body" expr="[JSON]" /></inputs><outputs><output type="collection" name="Token" narrative="Token data in a collection" stage="Token" /><output type="text" name="Result" narrative="The result of the request" stage="Response" /></outputs><onsuccess>0c69da42-34d9-404a-bb46-c54757f9db29</onsuccess><resource object="Webservices - OAuth2.0" action="Request" /></stage><stage stageid="987c8693-c16a-4631-aab8-421d93c08418" name="Setup OAuth" type="SubSheetInfo"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><narrative>Sets the REST VBO up for use with OAuth2.0 </narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9b8fb7f1-1fa8-445f-9a21-dc7774a82d0a" name="Start" type="Start"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><loginhibit /><display x="-60" y="-135" /><inputs><input type="text" name="Token URL" narrative="The url for the token request" stage="Token URL" /><input type="text" name="Username" narrative="Username for HTTP Basic authentication" stage="Username" /><input type="password" name="Password" narrative="Password for HTTP Basic authentication" stage="Password" /><input type="text" name="Certificate Filename" narrative="OPTIONAL: Filename for the Client Authentication certificate" stage="Filename" /><input type="text" name="Certificate Subject" narrative="OPTIONAL: Subject for the Client Authentication Certificate" stage="Subject" /><input type="password" name="Certificate Password" narrative="The password for the Client Authentication certificate if needed" stage="Certificate Password" /></inputs><onsuccess>b212f6ab-4161-464c-aae8-38faf80f2d6c</onsuccess></stage><stage stageid="82ee50b6-75c1-4faf-a8e9-14462321cc00" name="End" type="End"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><loginhibit /><display x="-60" y="15" /></stage><stage stageid="c2090365-b827-4309-b71c-9a2cb81ad4a2" name="Token URL" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><display x="30" y="-60" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="1b69fdb8-6b39-4ef9-b6c5-211340c0153d" name="Username" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><display x="90" y="-60" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="e24691b5-efa4-424d-b1f1-dc3f612e53e8" name="Password" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><display x="30" y="-15" /><datatype>password</datatype><initialvalueenc></initialvalueenc><alwaysinit /></stage><stage stageid="f2d94949-6633-4f28-810b-7ec1dd9287af" name="Certificate ID" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><display x="90" y="-15" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="064a27f7-8011-436d-91ef-f20087d099e2" name="Token" type="Collection"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><loginhibit /><display x="150" y="-60" /><datatype>collection</datatype><alwaysinit /></stage><stage stageid="f5fc7485-f181-4f31-8a27-f703118ff4b6" name="Make OAuth Request" type="Action"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><loginhibit /><display x="75" y="15" w="90" h="30" /><inputs><input type="text" name="Token URL" narrative="The url for the token request" expr="[Token URL]" /><input type="text" name="Resource URL" narrative="The url for the resource" expr="[Address URL]" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" expr="[Username]" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" expr="[Password]" /><input type="collection" name="Token" narrative="Token data in a collection" expr="[Token]" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" expr="[Certificate ID]" /><input type="text" name="Method" narrative="HTTP Method" expr="&quot;GET&quot;" /><input type="text" name="Content Type" narrative="HTTP Content Type" expr="&quot;application/json&quot;" /><input type="text" name="Body" narrative="HTTP Body" expr="" /></inputs><outputs><output type="collection" name="Token" narrative="Token data in a collection" stage="Token" /><output type="text" name="Result" narrative="The result of the request" stage="Response" /></outputs><onsuccess>be274dda-1caf-4fc4-b1b2-6b8cbc98750a</onsuccess><resource object="Webservices - OAuth2.0" action="Request" /></stage><stage stageid="6a94567e-9f64-4f00-ac7b-1b6ab6c81f6e" name="Make OAuth Request" type="Action"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><display x="75" y="75" w="90" h="30" /><inputs><input type="text" name="Token URL" narrative="The url for the token request" expr="[Token URL]" /><input type="text" name="Resource URL" narrative="The url for the resource" expr="[Address URL]" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" expr="[Username]" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" expr="[Password]" /><input type="collection" name="Token" narrative="Token data in a collection" expr="[Token]" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" expr="[Certificate ID]" /><input type="text" name="Method" narrative="HTTP Method" expr="&quot;PUT&quot;" /><input type="text" name="Content Type" narrative="HTTP Content Type" expr="&quot;application/json&quot;" /><input type="text" name="Body" narrative="HTTP Body" expr="[JSON]" /></inputs><outputs><output type="collection" name="Token" narrative="Token data in a collection" stage="Token" /><output type="text" name="Result" narrative="The result of the request" stage="Response" /></outputs><onsuccess>fee30318-0209-47aa-84ec-b3a5ee03c836</onsuccess><resource object="Webservices - OAuth2.0" action="Request" /></stage><stage stageid="b7ad19e2-aa95-4b53-9231-fa19db9c6801" name="Make OAuth Request" type="Action"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><loginhibit /><display x="75" y="15" w="90" h="30" /><inputs><input type="text" name="Token URL" narrative="The url for the token request" expr="[Token URL]" /><input type="text" name="Resource URL" narrative="The url for the resource" expr="[Address URL]" /><input type="text" name="Username" narrative="Username for HTTP Basic auth" expr="[Username]" /><input type="password" name="Password" narrative="Password for HTTP Basic auth" expr="[Password]" /><input type="collection" name="Token" narrative="Token data in a collection" expr="[Token]" /><input type="text" name="Certificate ID" narrative="The id of the client authentication certificate" expr="[Certificate ID]" /><input type="text" name="Method" narrative="HTTP Method" expr="&quot;DELETE&quot;" /><input type="text" name="Content Type" narrative="HTTP Content Type" expr="&quot;application/json&quot;" /><input type="text" name="Body" narrative="HTTP Body" expr="" /></inputs><outputs><output type="collection" name="Token" narrative="Token data in a collection" stage="Token" /><output type="text" name="Result" narrative="The result of the request" stage="Response" /></outputs><onsuccess>49d72e7b-d71f-4ab6-91e3-4ce578f6cecd</onsuccess><resource object="Webservices - OAuth2.0" action="Request" /></stage><stage stageid="b212f6ab-4161-464c-aae8-38faf80f2d6c" name="Load Certificate" type="Action"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><loginhibit /><display x="-60" y="-90" /><inputs><input type="text" name="Filename" narrative="OPTIONAL: The full path to a file containing the certificate" expr="[Filename]" /><input type="text" name="Subject" narrative="OPTIONAL: The subject of the certificate if loading from the store" expr="[Subject]" /><input type="password" name="Password" narrative="OPTIONAL: The password to load the certificate if needed" expr="[Password]" /></inputs><outputs><output type="text" name="Certificate ID" stage="Certificate ID" /></outputs><onsuccess>ccd8a634-c1bf-40fc-996a-d5b21538f517</onsuccess><resource object="Webservices - OAuth2.0" action="Load Certificate" /></stage><stage stageid="e459aef7-c93c-461a-b95c-9eb523e3d241" name="Filename" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><display x="90" y="-135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="567a6615-4d89-428b-9bed-648f364e256a" name="Subject" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><display x="30" y="-135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c6f1fc08-8438-4dbe-8d4b-7fc5cdaaa29c" name="Global" type="Block"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><loginhibit /><display x="-15" y="-105" w="270" h="135" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="330afb7e-2be0-46c4-b413-ccdc811039e4" name="Certificate Password" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><display x="150" y="-135" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="94f965cd-a8e4-4392-a4fe-4cf2cb4685d8" name="Use OAuth" type="Data"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><loginhibit /><display x="150" y="-15" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="ccd8a634-c1bf-40fc-996a-d5b21538f517" name="Set Use OAuth" type="Calculation"><subsheetid>bc6c3590-2b1f-42ed-a8ca-c65bf7bc2cd1</subsheetid><loginhibit /><display x="-60" y="-45" /><onsuccess>82ee50b6-75c1-4faf-a8e9-14462321cc00</onsuccess><calculation expression="True" stage="Use OAuth" /></stage><stage stageid="2970ec68-c495-466e-8a7a-8d36da8d39e3" name="Make HTTP request" type="Action"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><loginhibit /><display x="-45" y="60" w="90" h="30" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="[JSON]" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/json&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;POST&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Response" /></outputs><onsuccess>0c69da42-34d9-404a-bb46-c54757f9db29</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="0ac97749-8120-423f-aa8c-239ad0626af4" name="Use OAuth" type="Decision"><subsheetid>1ccb73b7-08a9-4dc0-9614-fad8e1b3ee63</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><decision expression="[Use OAuth]" /><ontrue>605fc049-f65b-46e5-9c3d-2a394303823f</ontrue><onfalse>2970ec68-c495-466e-8a7a-8d36da8d39e3</onfalse></stage><stage stageid="2e08d7d3-68d0-4afb-837f-51fed8e5208b" name="Make HTTP request" type="Action"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><display x="-45" y="75" w="90" h="30" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="[JSON]" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/json&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;PUT&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Response" /></outputs><onsuccess>fee30318-0209-47aa-84ec-b3a5ee03c836</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="c5f2c977-d290-4c31-a8fb-a43704d69c5a" name="Use OAuth" type="Decision"><subsheetid>4cc8c263-9485-48a7-9d85-cb0d25683a40</subsheetid><loginhibit /><display x="15" y="15" w="90" h="30" /><decision expression="[Use OAuth]" /><ontrue>6a94567e-9f64-4f00-ac7b-1b6ab6c81f6e</ontrue><onfalse>2e08d7d3-68d0-4afb-837f-51fed8e5208b</onfalse></stage><stage stageid="0ed81f3d-606c-4360-be7b-7db023c451e9" name="Make HTTP request" type="Action"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><loginhibit /><display x="-45" y="15" w="90" h="30" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/json&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;GET&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Response" /></outputs><onsuccess>be274dda-1caf-4fc4-b1b2-6b8cbc98750a</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="4acd6a3b-907c-4493-86ac-2413a56b7f66" name="Use OAuth" type="Decision"><subsheetid>45072ac5-d810-496f-9529-1bd859241e0b</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><decision expression="[Use OAuth]" /><ontrue>f5fc7485-f181-4f31-8a27-f703118ff4b6</ontrue><onfalse>0ed81f3d-606c-4360-be7b-7db023c451e9</onfalse></stage><stage stageid="2c78a3d5-e864-477c-af30-dcd775c2de6a" name="Make HTTP request" type="Action"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><loginhibit /><display x="-45" y="15" w="90" h="30" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/json&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;DELETE&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Response" /></outputs><onsuccess>49d72e7b-d71f-4ab6-91e3-4ce578f6cecd</onsuccess><resource object="Utility - HTTP" action="HTTP Request" /></stage><stage stageid="4fb8a80f-165f-42f0-bcef-f66982f1732a" name="Use OAuth" type="Decision"><subsheetid>7b2abd9b-49a0-4828-9bd8-4ab7a0a713a5</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><decision expression="[Use OAuth]" /><ontrue>b7ad19e2-aa95-4b53-9231-fa19db9c6801</ontrue><onfalse>2c78a3d5-e864-477c-af30-dcd775c2de6a</onfalse></stage><stage stageid="dccf9afa-dabe-4434-b85a-d9efd6b15461" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="225" y="-15" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="b7f0427b-f676-462d-a040-9b3a71de42b5" name="Note1" type="Note"><loginhibit /><narrative>Version 10.0</narrative><display x="15" y="-165" w="90" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage></process></object>
        <process-group id="46c7893c-2b36-4ef6-9cf6-0c775bce05f0" name="Practice" isDefaultGroup="False" xmlns="http://www.blueprism.co.uk/product/process-group">
            <members>
                <process id="a6c9106c-1964-4745-96c1-cb745ce0799b" />
                <process id="6a8584b2-d33f-4fae-b772-ebe266911c92" />
                <process id="dbb95f2d-6dad-4718-bf92-d1a24348ba72" />
            </members>
        </process-group>
        <object-group id="e4b804bf-a8fa-44e7-9b47-d84d979c4746" name="Default" isDefaultGroup="True" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="9fc19dda-3610-454f-8713-a55af212d309" />
                <object id="29192c0f-d13c-4769-bed3-9c51217efab4" />
                <object id="b99d5b9f-f5b7-45a4-b7b2-17a2cce2ac4c" />
                <object id="a0908033-2718-415a-b0fa-d93248553c69" />
                <object id="8d364ed0-afcd-4fa9-96f6-d51eec328c43" />
                <object id="3d28aa56-ae5c-4236-b745-885fa6cfa1cc" />
                <object id="66085a0f-6bf6-45e2-b5ed-6345f014f05b" />
                <object id="c28cdbe1-9417-4ded-80c1-19fc3f6ab7f0" />
                <object id="e559fb86-9b63-4e0b-9399-972227189995" />
                <object id="f1b099e3-d6f3-4a5d-82a0-8e55b7d04d77" />
                <object id="da53ac89-1fa5-4b10-b36d-3163ee14255e" />
                <object id="cc0807f5-b419-486a-8e09-3d6216ebb8a4" />
                <object id="b6ed4f80-ee0f-40e5-9dcb-af385109ddba" />
                <object id="6f9680f1-616c-4884-b58c-42ed51446377" />
                <object id="92564613-f444-48c5-8ff7-abb4f7ea7548" />
                <object id="f32ab518-c4ab-46ad-afd3-af58dfd14a0a" />
                <object id="1755dccf-ee8a-456b-86d6-6d83220f12de" />
                <object id="3a5f7760-1621-4a03-bd1e-c7477b5a6de4" />
                <object id="88d28317-a894-42e7-b45c-abe265af61ce" />
                <object id="bf926e5b-5a53-4629-bf02-31a58a120117" />
                <object id="6efb1579-126a-4563-b2e9-3d9e432c1a79" />
                <object id="35ff84bb-c65a-4d40-b776-e77f90e721d2" />
                <object id="d39ef435-da5c-4e38-a846-b903b2cf3d8e" />
                <object id="6a51f403-f4ab-44ee-b4bf-15710f0dc9bb" />
                <object id="ba504fda-e81a-4ee6-a672-6200b55c48e0" />
                <object id="e290519e-5e15-4865-a384-bfb313c828d3" />
                <object id="1b13f5b8-01d1-441e-bd7f-54884a24d71f" />
                <object id="b71e99c3-94a3-4c4a-a1b6-a8f013fcb96b" />
                <object id="9cd0a967-eb01-4e38-bc91-31ace18db7eb" />
                <object id="7ba7c602-a272-4b92-a90b-229ea298a38b" />
            </members>
        </object-group>
    </bpr:contents>
</bpr:release>